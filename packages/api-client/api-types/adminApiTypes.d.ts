type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = T | U extends object
  ? (Without<T, U> & U) | (Without<U, T> & T)
  : T | U;
type OneOf<T extends unknown[]> = T extends [infer Only]
  ? Only
  : T extends [infer A, infer B, ...infer Rest]
    ? OneOf<[XOR<A, B>, ...Rest]>
    : never;
type GenericRecord =
  | never
  | null
  | string
  | string[]
  | number
  | { [key: string]: GenericRecord };
export type components = {
  schemas: Schemas;
};
export type Schemas = {
  AclRole: {
    app?: components["schemas"]["App"];
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    deletedAt?: string;
    description?: string;
    id: string;
    integrations?: components["schemas"]["Integration"][];
    name: string;
    privileges: Record<string, never>[];
    /** Format: date-time */
    updatedAt?: string;
    users?: components["schemas"]["User"][];
  };
  AclRoleJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    deletedAt?: string;
    description?: string;
    id: string;
    name: string;
    privileges: Record<string, never>[];
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /acl-role/87857e66337bf79fa25f363fefba38a1/app
           */
          related?: string;
        };
      };
      integrations?: {
        data?: {
          /** @example 415320131958c70f4f250ca4d7e63bbd */
          id?: string;
          /** @example integration */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /acl-role/87857e66337bf79fa25f363fefba38a1/integrations
           */
          related?: string;
        };
      };
      users?: {
        data?: {
          /** @example 9bc65c2abec141778ffaa729489f3e87 */
          id?: string;
          /** @example user */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /acl-role/87857e66337bf79fa25f363fefba38a1/users
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  AclUserRole: {
    aclRole?: components["schemas"]["AclRole"];
    aclRoleId: string;
    /** Format: date-time */
    createdAt: string;
    id?: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
  };
  AdvancedSearchAction: {
    active?: boolean;
    config?: components["schemas"]["AdvancedSearchConfig"];
    configId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    name: string;
    searchTerms?: components["schemas"]["AdvancedSearchActionSearchTerm"][];
    type: string;
    typeConfig?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    validFrom?: string;
    /** Format: date-time */
    validTo?: string;
  };
  AdvancedSearchActionJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    configId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    name: string;
    relationships?: {
      config?: {
        data?: {
          /** @example 2245023265ae4cf87d02c8b6ba991139 */
          id?: string;
          /** @example advanced_search_config */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-action/2a6023897ca55437c49e4a41b8f76f77/config
           */
          related?: string;
        };
      };
      searchTerms?: {
        data?: {
          /** @example 952c07f523c564f09844ca7f880c2467 */
          id?: string;
          /** @example advanced_search_action_search_term */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-action/2a6023897ca55437c49e4a41b8f76f77/searchTerms
           */
          related?: string;
        };
      };
    };
    type: string;
    typeConfig?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    validFrom?: string;
    /** Format: date-time */
    validTo?: string;
  };
  AdvancedSearchActionSearchTerm: {
    action?: components["schemas"]["AdvancedSearchAction"];
    actionId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    term: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchActionSearchTermJsonApi: components["schemas"]["resource"] & {
    actionId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    relationships?: {
      action?: {
        data?: {
          /** @example 418c5509e2171d55b0aee5c2ea4442b5 */
          id?: string;
          /** @example advanced_search_action */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-action-search-term/a7e591b2d328bc4e62fbd4fd300da858/action
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-action-search-term/a7e591b2d328bc4e62fbd4fd300da858/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    term: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchBoosting: {
    active?: boolean;
    /** Format: float */
    boost: number;
    config?: components["schemas"]["AdvancedSearchConfig"];
    configId: string;
    /** Format: date-time */
    createdAt: string;
    entityStream?: components["schemas"]["AdvancedSearchEntityStream"];
    entityStreamId?: string;
    id: string;
    name: string;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId?: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    validFrom?: string;
    /** Format: date-time */
    validTo?: string;
  };
  AdvancedSearchBoostingJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    /** Format: float */
    boost: number;
    configId: string;
    /** Format: date-time */
    createdAt: string;
    entityStreamId?: string;
    id: string;
    name: string;
    productStreamId?: string;
    relationships?: {
      config?: {
        data?: {
          /** @example 2245023265ae4cf87d02c8b6ba991139 */
          id?: string;
          /** @example advanced_search_config */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-boosting/594f5cafa4dccca1634893a5a0a86ec9/config
           */
          related?: string;
        };
      };
      entityStream?: {
        data?: {
          /** @example 62acf68da615789a0175ef827f74acbb */
          id?: string;
          /** @example advanced_search_entity_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-boosting/594f5cafa4dccca1634893a5a0a86ec9/entityStream
           */
          related?: string;
        };
      };
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-boosting/594f5cafa4dccca1634893a5a0a86ec9/productStream
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    validFrom?: string;
    /** Format: date-time */
    validTo?: string;
  };
  AdvancedSearchConfig: {
    andLogic: boolean;
    boostings?: components["schemas"]["AdvancedSearchBoosting"][];
    /** Format: date-time */
    createdAt: string;
    esEnabled: boolean;
    fields?: components["schemas"]["AdvancedSearchConfigField"][];
    hitCount?: {
      category?: {
        /** Format: int64 */
        maxSearchCount?: number;
        /** Format: int64 */
        maxSuggestCount?: number;
      };
      product?: {
        /** Format: int64 */
        maxSearchCount?: number;
        /** Format: int64 */
        maxSuggestCount?: number;
      };
      product_manufacturer?: {
        /** Format: int64 */
        maxSearchCount?: number;
        /** Format: int64 */
        maxSuggestCount?: number;
      };
    };
    id: string;
    /** Format: int64 */
    minSearchLength: number;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchConfigField: {
    config?: components["schemas"]["AdvancedSearchConfig"];
    configId: string;
    /** Format: date-time */
    createdAt: string;
    customField?: components["schemas"]["CustomField"];
    customFieldId?: string;
    entity: string;
    field: string;
    id: string;
    /** Format: int64 */
    ranking: number;
    searchable: boolean;
    tokenize: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchConfigFieldJsonApi: components["schemas"]["resource"] & {
    configId: string;
    /** Format: date-time */
    createdAt: string;
    customFieldId?: string;
    entity: string;
    field: string;
    id: string;
    /** Format: int64 */
    ranking: number;
    relationships?: {
      config?: {
        data?: {
          /** @example 2245023265ae4cf87d02c8b6ba991139 */
          id?: string;
          /** @example advanced_search_config */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-config-field/34ed84349128fa95e8aa7d3a69bd99c9/config
           */
          related?: string;
        };
      };
      customField?: {
        data?: {
          /** @example ed2028a1c479c7e0065da597452d9c11 */
          id?: string;
          /** @example custom_field */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-config-field/34ed84349128fa95e8aa7d3a69bd99c9/customField
           */
          related?: string;
        };
      };
    };
    searchable: boolean;
    tokenize: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchConfigJsonApi: components["schemas"]["resource"] & {
    andLogic: boolean;
    /** Format: date-time */
    createdAt: string;
    esEnabled: boolean;
    hitCount?: {
      category?: {
        /** Format: int64 */
        maxSearchCount?: number;
        /** Format: int64 */
        maxSuggestCount?: number;
      };
      product?: {
        /** Format: int64 */
        maxSearchCount?: number;
        /** Format: int64 */
        maxSuggestCount?: number;
      };
      product_manufacturer?: {
        /** Format: int64 */
        maxSearchCount?: number;
        /** Format: int64 */
        maxSuggestCount?: number;
      };
    };
    id: string;
    /** Format: int64 */
    minSearchLength: number;
    relationships?: {
      boostings?: {
        data?: {
          /** @example 8e571802e4ea39b214104ca60e13b5a6 */
          id?: string;
          /** @example advanced_search_boosting */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-config/63246bc46dc5b3716c6f5f92044238e4/boostings
           */
          related?: string;
        };
      };
      fields?: {
        data?: {
          /** @example d05b6ed7d2345020440df396d6da7f73 */
          id?: string;
          /** @example advanced_search_config_field */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-config/63246bc46dc5b3716c6f5f92044238e4/fields
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-config/63246bc46dc5b3716c6f5f92044238e4/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchEntityStream: {
    apiFilter?: Record<string, never>;
    boosting?: components["schemas"]["AdvancedSearchBoosting"];
    /** Format: date-time */
    createdAt: string;
    filters?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
    id: string;
    invalid?: boolean;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchEntityStreamFilter: {
    /** Format: date-time */
    createdAt: string;
    entityStream?: components["schemas"]["AdvancedSearchEntityStream"];
    entityStreamId: string;
    field?: string;
    id: string;
    operator?: string;
    parameters?: Record<string, never>;
    parent?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
    parentId?: string;
    /** Format: int64 */
    position?: number;
    queries?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    value?: string;
  };
  AdvancedSearchEntityStreamFilterJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    entityStreamId: string;
    field?: string;
    id: string;
    operator?: string;
    parameters?: Record<string, never>;
    parentId?: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      entityStream?: {
        data?: {
          /** @example 62acf68da615789a0175ef827f74acbb */
          id?: string;
          /** @example advanced_search_entity_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-entity-stream-filter/910af2160df3a00f3843e6e06940790f/entityStream
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example advanced_search_entity_stream_filter */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-entity-stream-filter/910af2160df3a00f3843e6e06940790f/parent
           */
          related?: string;
        };
      };
      queries?: {
        data?: {
          /** @example 5da7eb4247add5dbd5776c9c0b38460a */
          id?: string;
          /** @example advanced_search_entity_stream_filter */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-entity-stream-filter/910af2160df3a00f3843e6e06940790f/queries
           */
          related?: string;
        };
      };
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    value?: string;
  };
  AdvancedSearchEntityStreamJsonApi: components["schemas"]["resource"] & {
    apiFilter?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    invalid?: boolean;
    relationships?: {
      boosting?: {
        data?: {
          /** @example 6ab105abdd48ced24ce7b0e516ca0970 */
          id?: string;
          /** @example advanced_search_boosting */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-entity-stream/8bc027ef6b979dafaf6e1691bf314134/boosting
           */
          related?: string;
        };
      };
      filters?: {
        data?: {
          /** @example 2c9885d2b0c7e26971f60a90f33cf718 */
          id?: string;
          /** @example advanced_search_entity_stream_filter */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-entity-stream/8bc027ef6b979dafaf6e1691bf314134/filters
           */
          related?: string;
        };
      };
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchSynonym: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    language?: components["schemas"]["Language"];
    languageId?: string;
    left: string[];
    right?: string[];
    /** Format: date-time */
    updatedAt?: string;
  };
  AdvancedSearchSynonymJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    languageId?: string;
    left: string[];
    relationships?: {
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /advanced-search-synonym/f8fe978e49caae961d38f793b4901801/language
           */
          related?: string;
        };
      };
    };
    right?: string[];
    /** Format: date-time */
    updatedAt?: string;
  };
  App: {
    aclRole?: components["schemas"]["AclRole"];
    aclRoleId: string;
    actionButtons?: components["schemas"]["AppActionButton"][];
    active: boolean;
    allowDisable: boolean;
    allowedHosts?: string[];
    appShippingMethods?: components["schemas"]["AppShippingMethod"][];
    author?: string;
    baseAppUrl?: string;
    cmsBlocks?: components["schemas"]["AppCmsBlock"][];
    configurable: boolean;
    cookies?: Record<string, never>[];
    copyright?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    customFieldSets?: components["schemas"]["CustomFieldSet"][];
    description?: string;
    extensions?: {
      storefrontConfig?: {
        data?: {
          /** @example bd1f4963443684177aac2b302cded7ac */
          id?: string;
          /** @example saas_app_storefront_config */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/storefrontConfig
           */
          related?: string;
        };
      };
    };
    flowActions?: components["schemas"]["AppFlowAction"][];
    flowEvents?: components["schemas"]["AppFlowEvent"][];
    /** Runtime field, cannot be used as part of the criteria. */
    icon?: string;
    id: string;
    integration?: components["schemas"]["Integration"];
    integrationId: string;
    label: string;
    license?: string;
    mainModule?: Record<string, never>;
    modules?: Record<string, never>[];
    name: string;
    path: string;
    paymentMethods?: components["schemas"]["AppPaymentMethod"][];
    privacy?: string;
    privacyPolicyExtensions?: string;
    taxProviders?: components["schemas"]["TaxProvider"][];
    /** Format: int64 */
    templateLoadPriority?: number;
    templates?: components["schemas"]["AppTemplate"][];
    translated?: {
      aclRoleId?: string;
      author?: string;
      baseAppUrl?: string;
      copyright?: string;
      description?: string;
      icon?: string;
      integrationId?: string;
      label?: string;
      license?: string;
      name?: string;
      path?: string;
      privacy?: string;
      privacyPolicyExtensions?: string;
      version?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    version: string;
    webhooks?: components["schemas"]["Webhook"][];
  };
  AppActionButton: {
    action: string;
    app?: components["schemas"]["App"];
    appId: string;
    /** Format: date-time */
    createdAt: string;
    entity: string;
    id: string;
    label: string;
    translated?: {
      action?: string;
      appId?: string;
      entity?: string;
      label?: string;
      url?: string;
      view?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
    view: string;
  };
  AppActionButtonJsonApi: components["schemas"]["resource"] & {
    action: string;
    appId: string;
    /** Format: date-time */
    createdAt: string;
    entity: string;
    id: string;
    label: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-action-button/5c44158189757c2cf5f047ce1fe3e634/app
           */
          related?: string;
        };
      };
    };
    translated?: {
      action?: string;
      appId?: string;
      entity?: string;
      label?: string;
      url?: string;
      view?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
    view: string;
  };
  AppAdministrationSnippet: {
    appId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    localeId: string;
    /** Format: date-time */
    updatedAt?: string;
    value: string;
  };
  AppAdministrationSnippetJsonApi: components["schemas"]["resource"] & {
    appId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    localeId: string;
    /** Format: date-time */
    updatedAt?: string;
    value: string;
  };
  AppCmsBlock: {
    app?: components["schemas"]["App"];
    appId: string;
    block: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    label: string;
    name: string;
    styles: string;
    template: string;
    translated?: {
      appId?: string;
      label?: string;
      name?: string;
      styles?: string;
      template?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  AppCmsBlockJsonApi: components["schemas"]["resource"] & {
    appId: string;
    block: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    label: string;
    name: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-cms-block/954814c609e0fd182bf61e99769a25f7/app
           */
          related?: string;
        };
      };
    };
    styles: string;
    template: string;
    translated?: {
      appId?: string;
      label?: string;
      name?: string;
      styles?: string;
      template?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  AppFlowAction: {
    app?: components["schemas"]["App"];
    appId: string;
    badge?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    delayable?: boolean;
    description?: string;
    flowSequences?: components["schemas"]["FlowSequence"][];
    headers?: Record<string, never>;
    headline?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    icon?: string;
    iconRaw?: string;
    id: string;
    label: string;
    name: string;
    parameters?: Record<string, never>;
    requirements?: string[];
    swIcon?: string;
    translated?: {
      appId?: string;
      badge?: string;
      description?: string;
      headline?: string;
      icon?: string;
      iconRaw?: string;
      label?: string;
      name?: string;
      swIcon?: string;
      url?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
  };
  AppFlowActionJsonApi: components["schemas"]["resource"] & {
    appId: string;
    badge?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    delayable?: boolean;
    description?: string;
    headers?: Record<string, never>;
    headline?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    icon?: string;
    iconRaw?: string;
    id: string;
    label: string;
    name: string;
    parameters?: Record<string, never>;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-flow-action/d976e1ecc9f1084ec17f507c84f92278/app
           */
          related?: string;
        };
      };
      flowSequences?: {
        data?: {
          /** @example 3a0d70b6dd3624074e5e15cd07e7fa90 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app-flow-action/d976e1ecc9f1084ec17f507c84f92278/flowSequences
           */
          related?: string;
        };
      };
    };
    requirements?: string[];
    swIcon?: string;
    translated?: {
      appId?: string;
      badge?: string;
      description?: string;
      headline?: string;
      icon?: string;
      iconRaw?: string;
      label?: string;
      name?: string;
      swIcon?: string;
      url?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
  };
  AppFlowEvent: {
    app?: components["schemas"]["App"];
    appId: string;
    aware: string[];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    flows?: components["schemas"]["Flow"][];
    id: string;
    name: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AppFlowEventJsonApi: components["schemas"]["resource"] & {
    appId: string;
    aware: string[];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    name: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-flow-event/ee419db2bca734414b0df87b3a919831/app
           */
          related?: string;
        };
      };
      flows?: {
        data?: {
          /** @example 0db2dd944f9ee9a131f44b79d331d371 */
          id?: string;
          /** @example flow */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app-flow-event/ee419db2bca734414b0df87b3a919831/flows
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  AppJsonApi: components["schemas"]["resource"] & {
    aclRoleId: string;
    active: boolean;
    allowDisable: boolean;
    allowedHosts?: string[];
    author?: string;
    baseAppUrl?: string;
    configurable: boolean;
    cookies?: Record<string, never>[];
    copyright?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      storefrontConfig?: {
        data?: {
          /** @example bd1f4963443684177aac2b302cded7ac */
          id?: string;
          /** @example saas_app_storefront_config */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/storefrontConfig
           */
          related?: string;
        };
      };
    };
    /** Runtime field, cannot be used as part of the criteria. */
    icon?: string;
    id: string;
    integrationId: string;
    label: string;
    license?: string;
    mainModule?: Record<string, never>;
    modules?: Record<string, never>[];
    name: string;
    path: string;
    privacy?: string;
    privacyPolicyExtensions?: string;
    relationships?: {
      aclRole?: {
        data?: {
          /** @example 250aa1c64b973365fd6fd489eefbdefc */
          id?: string;
          /** @example acl_role */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/aclRole
           */
          related?: string;
        };
      };
      actionButtons?: {
        data?: {
          /** @example 2c7967427ed432e546ef1c0cb8d5da9e */
          id?: string;
          /** @example app_action_button */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/actionButtons
           */
          related?: string;
        };
      };
      appShippingMethods?: {
        data?: {
          /** @example 1ad05ee47064647ee5b2dc8c12b1041c */
          id?: string;
          /** @example app_shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/appShippingMethods
           */
          related?: string;
        };
      };
      cmsBlocks?: {
        data?: {
          /** @example 3636c4901eab836dfb837e1a9a37d3c0 */
          id?: string;
          /** @example app_cms_block */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/cmsBlocks
           */
          related?: string;
        };
      };
      customFieldSets?: {
        data?: {
          /** @example 9b29ba872ce510f033b31364c8602760 */
          id?: string;
          /** @example custom_field_set */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/customFieldSets
           */
          related?: string;
        };
      };
      flowActions?: {
        data?: {
          /** @example 8d83a8af9d1b8b85dae9bdb76b7dbe7f */
          id?: string;
          /** @example app_flow_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/flowActions
           */
          related?: string;
        };
      };
      flowEvents?: {
        data?: {
          /** @example 045e9ec14eafd26d17854fb4fe7c9cae */
          id?: string;
          /** @example app_flow_event */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/flowEvents
           */
          related?: string;
        };
      };
      integration?: {
        data?: {
          /** @example 776ea3bf11df5829827f7afb43c37174 */
          id?: string;
          /** @example integration */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/integration
           */
          related?: string;
        };
      };
      paymentMethods?: {
        data?: {
          /** @example b631b1ab565525e892f9cdc1242cca14 */
          id?: string;
          /** @example app_payment_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/paymentMethods
           */
          related?: string;
        };
      };
      taxProviders?: {
        data?: {
          /** @example 01a1a9d428b6402dc8255d99c787a00e */
          id?: string;
          /** @example tax_provider */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/taxProviders
           */
          related?: string;
        };
      };
      templates?: {
        data?: {
          /** @example fed36e93a0509e20f2dc96cbbd85b678 */
          id?: string;
          /** @example app_template */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/templates
           */
          related?: string;
        };
      };
      webhooks?: {
        data?: {
          /** @example c10f40999b74c408263f790b30e70efe */
          id?: string;
          /** @example webhook */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app/ac863f346e618f9a959b5c95d5d28941/webhooks
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    templateLoadPriority?: number;
    translated?: {
      aclRoleId?: string;
      author?: string;
      baseAppUrl?: string;
      copyright?: string;
      description?: string;
      icon?: string;
      integrationId?: string;
      label?: string;
      license?: string;
      name?: string;
      path?: string;
      privacy?: string;
      privacyPolicyExtensions?: string;
      version?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    version: string;
  };
  AppPaymentMethod: {
    app?: components["schemas"]["App"];
    appId?: string;
    appName: string;
    captureUrl?: string;
    /** Format: date-time */
    createdAt: string;
    finalizeUrl?: string;
    id: string;
    identifier: string;
    originalMedia?: components["schemas"]["Media"];
    originalMediaId?: string;
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    payUrl?: string;
    recurringUrl?: string;
    refundUrl?: string;
    /** Format: date-time */
    updatedAt?: string;
    validateUrl?: string;
  };
  AppPaymentMethodJsonApi: components["schemas"]["resource"] & {
    appId?: string;
    appName: string;
    captureUrl?: string;
    /** Format: date-time */
    createdAt: string;
    finalizeUrl?: string;
    id: string;
    identifier: string;
    originalMediaId?: string;
    paymentMethodId: string;
    payUrl?: string;
    recurringUrl?: string;
    refundUrl?: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-payment-method/84f7c932de07ae9a57398d64828a7eae/app
           */
          related?: string;
        };
      };
      originalMedia?: {
        data?: {
          /** @example 56386c66f82d9cd5639a5a7447971ead */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-payment-method/84f7c932de07ae9a57398d64828a7eae/originalMedia
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-payment-method/84f7c932de07ae9a57398d64828a7eae/paymentMethod
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    validateUrl?: string;
  };
  AppScriptCondition: {
    active: boolean;
    app?: components["schemas"]["App"];
    appId: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    group?: string;
    id: string;
    identifier: string;
    name: string;
    ruleConditions?: components["schemas"]["RuleCondition"][];
    script?: string;
    translated?: {
      appId?: string;
      group?: string;
      identifier?: string;
      name?: string;
      script?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  AppScriptConditionJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    appId: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    group?: string;
    id: string;
    identifier: string;
    name: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-script-condition/145c18275de1a9701ba31357e0bce9b5/app
           */
          related?: string;
        };
      };
      ruleConditions?: {
        data?: {
          /** @example 24bfabce4195894c9aed9b8bcfb0b748 */
          id?: string;
          /** @example rule_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /app-script-condition/145c18275de1a9701ba31357e0bce9b5/ruleConditions
           */
          related?: string;
        };
      };
    };
    script?: string;
    translated?: {
      appId?: string;
      group?: string;
      identifier?: string;
      name?: string;
      script?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  AppShippingMethod: {
    app?: components["schemas"]["App"];
    appId?: string;
    appName: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    identifier: string;
    originalMedia?: components["schemas"]["Media"];
    originalMediaId?: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AppShippingMethodJsonApi: components["schemas"]["resource"] & {
    appId?: string;
    appName: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    identifier: string;
    originalMediaId?: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-shipping-method/de94cc387f2598e321fc402da2abda66/app
           */
          related?: string;
        };
      };
      originalMedia?: {
        data?: {
          /** @example 56386c66f82d9cd5639a5a7447971ead */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-shipping-method/de94cc387f2598e321fc402da2abda66/originalMedia
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-shipping-method/de94cc387f2598e321fc402da2abda66/shippingMethod
           */
          related?: string;
        };
      };
    };
    shippingMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AppTemplate: {
    active: boolean;
    app?: components["schemas"]["App"];
    appId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    path: string;
    template: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  AppTemplateJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    appId: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    path: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /app-template/ca9106b8b82ff55b6fdce530ccb952a7/app
           */
          related?: string;
        };
      };
    };
    template: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bBusinessPartner: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId?: string;
    customFields?: Record<string, never>;
    defaultRole?: components["schemas"]["B2bComponentsRole"];
    defaultRoleId?: string;
    id: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bBusinessPartnerJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId?: string;
    customFields?: Record<string, never>;
    defaultRoleId?: string;
    id: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-business-partner/7ba58cf5989d881e8226f193613ed414/customer
           */
          related?: string;
        };
      };
      defaultRole?: {
        data?: {
          /** @example 2944ea414640901d532eba5106eb706b */
          id?: string;
          /** @example b2b_components_role */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-business-partner/7ba58cf5989d881e8226f193613ed414/defaultRole
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsApprovalRule: {
    active: boolean;
    affectedRole?: components["schemas"]["B2bComponentsRole"];
    affectedRoleId?: string;
    businessPartnerCustomer?: components["schemas"]["Customer"];
    businessPartnerCustomerId?: string;
    conditions: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    description?: string;
    id: string;
    name: string;
    /** Format: int64 */
    priority: number;
    reviewerRole?: components["schemas"]["B2bComponentsRole"];
    reviewerRoleId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsApprovalRuleJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    affectedRoleId?: string;
    businessPartnerCustomerId?: string;
    conditions: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    description?: string;
    id: string;
    name: string;
    /** Format: int64 */
    priority: number;
    relationships?: {
      affectedRole?: {
        data?: {
          /** @example 33237c6057eedd7b8c978f77270af3b1 */
          id?: string;
          /** @example b2b_components_role */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-approval-rule/7181d2e3f46190b96b7cb8242c761a03/affectedRole
           */
          related?: string;
        };
      };
      businessPartnerCustomer?: {
        data?: {
          /** @example 798b3bbcdcbca2ce67fe2ef0d7d28cbf */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-approval-rule/7181d2e3f46190b96b7cb8242c761a03/businessPartnerCustomer
           */
          related?: string;
        };
      };
      reviewerRole?: {
        data?: {
          /** @example 06ec286ee4d03afb4028caa32c0ef40b */
          id?: string;
          /** @example b2b_components_role */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-approval-rule/7181d2e3f46190b96b7cb8242c761a03/reviewerRole
           */
          related?: string;
        };
      };
    };
    reviewerRoleId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsPendingOrder: {
    addresses?: components["schemas"]["B2bComponentsPendingOrderAddress"][];
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    approvalRule?: components["schemas"]["B2bComponentsApprovalRule"];
    approvalRuleId?: string;
    /** Format: int64 */
    autoIncrement?: number;
    billingAddress?: components["schemas"]["B2bComponentsPendingOrderAddress"];
    billingAddressId: string;
    cartPayload: string;
    country?: components["schemas"]["Country"];
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    customFields?: Record<string, never>;
    decidedBy?: components["schemas"]["B2bEmployee"];
    decidedById?: string;
    designatedPayerIds?: string[];
    employee?: components["schemas"]["B2bEmployee"];
    employeeId: string;
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    language?: components["schemas"]["Language"];
    languageId: string;
    /** Format: int64 */
    lineItemCount: number;
    number: string;
    /** Format: float */
    originalPrice?: number;
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    reason?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    taxStatus?: string;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsPendingOrderAddress: {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    country?: components["schemas"]["Country"];
    countryId: string;
    countryState?: components["schemas"]["CountryState"];
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    pendingOrder?: components["schemas"]["B2bComponentsPendingOrder"];
    pendingOrderId: string;
    phoneNumber?: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    street: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatId?: string;
    zipcode?: string;
  };
  B2bComponentsPendingOrderAddressJsonApi: components["schemas"]["resource"] & {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    countryId: string;
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    pendingOrderId: string;
    phoneNumber?: string;
    relationships?: {
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order-address/4fce37927007500103484410b28f4b34/country
           */
          related?: string;
        };
      };
      countryState?: {
        data?: {
          /** @example cb6a9764567191fb74fe28d8d6a4819d */
          id?: string;
          /** @example country_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order-address/4fce37927007500103484410b28f4b34/countryState
           */
          related?: string;
        };
      };
      pendingOrder?: {
        data?: {
          /** @example 1fd94955ea55110a2cf95eeb6fb1679f */
          id?: string;
          /** @example b2b_components_pending_order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order-address/4fce37927007500103484410b28f4b34/pendingOrder
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order-address/4fce37927007500103484410b28f4b34/salutation
           */
          related?: string;
        };
      };
    };
    salutationId?: string;
    street: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatId?: string;
    zipcode?: string;
  };
  B2bComponentsPendingOrderJsonApi: components["schemas"]["resource"] & {
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    approvalRuleId?: string;
    /** Format: int64 */
    autoIncrement?: number;
    billingAddressId: string;
    cartPayload: string;
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    currencyId: string;
    customerId: string;
    customFields?: Record<string, never>;
    decidedById?: string;
    designatedPayerIds?: string[];
    employeeId: string;
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    languageId: string;
    /** Format: int64 */
    lineItemCount: number;
    number: string;
    /** Format: float */
    originalPrice?: number;
    paymentMethodId: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    reason?: string;
    relationships?: {
      addresses?: {
        data?: {
          /** @example 963e3a2fe559e393bad631f3dc686f69 */
          id?: string;
          /** @example b2b_components_pending_order_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/addresses
           */
          related?: string;
        };
      };
      approvalRule?: {
        data?: {
          /** @example 2beeb3d6f9f7be5fb67d4cd9d9f9ba25 */
          id?: string;
          /** @example b2b_components_approval_rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/approvalRule
           */
          related?: string;
        };
      };
      billingAddress?: {
        data?: {
          /** @example 7fee8ff88b768662dd8fc06e1b6997d2 */
          id?: string;
          /** @example b2b_components_pending_order_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/billingAddress
           */
          related?: string;
        };
      };
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/country
           */
          related?: string;
        };
      };
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/currency
           */
          related?: string;
        };
      };
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/customer
           */
          related?: string;
        };
      };
      decidedBy?: {
        data?: {
          /** @example b293e6616bcffea8e393a4066a4a4230 */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/decidedBy
           */
          related?: string;
        };
      };
      employee?: {
        data?: {
          /** @example fa5473530e4d1a5a1e1eb53d2fedb10c */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/employee
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/language
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/paymentMethod
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/salesChannel
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/shippingMethod
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-pending-order/e87c4279c6f83e4de2543a63bf59b373/stateMachineState
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    shippingMethodId: string;
    stateId: string;
    taxStatus?: string;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsRole: {
    businessPartnerCustomer?: components["schemas"]["Customer"];
    businessPartnerCustomerId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    employees?: components["schemas"]["B2bEmployee"][];
    id: string;
    name: string;
    permissions?: Record<string, never>[];
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsRoleJsonApi: components["schemas"]["resource"] & {
    businessPartnerCustomerId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    name: string;
    permissions?: Record<string, never>[];
    relationships?: {
      businessPartnerCustomer?: {
        data?: {
          /** @example 798b3bbcdcbca2ce67fe2ef0d7d28cbf */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-role/a2f4fa227c09d6222701f670a01bb0b0/businessPartnerCustomer
           */
          related?: string;
        };
      };
      employees?: {
        data?: {
          /** @example 582ca3f7cbaf4edcc1b445f8ea90b503 */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-role/a2f4fa227c09d6222701f670a01bb0b0/employees
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsShoppingList: {
    active?: boolean;
    /** Format: date-time */
    createdAt: string;
    createdBy?: components["schemas"]["User"];
    createdById?: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    customFields?: Record<string, never>;
    employee?: components["schemas"]["B2bEmployee"];
    employeeId?: string;
    id: string;
    lineItems?: components["schemas"]["B2bComponentsShoppingListLineItem"][];
    name?: string;
    price?: Record<string, never>;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedBy?: components["schemas"]["User"];
    updatedById?: string;
  };
  B2bComponentsShoppingListJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    /** Format: date-time */
    createdAt: string;
    createdById?: string;
    customerId: string;
    customFields?: Record<string, never>;
    employeeId?: string;
    id: string;
    name?: string;
    price?: Record<string, never>;
    relationships?: {
      createdBy?: {
        data?: {
          /** @example 34998857f537140306898d54d4b970dc */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/createdBy
           */
          related?: string;
        };
      };
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/customer
           */
          related?: string;
        };
      };
      employee?: {
        data?: {
          /** @example fa5473530e4d1a5a1e1eb53d2fedb10c */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/employee
           */
          related?: string;
        };
      };
      lineItems?: {
        data?: {
          /** @example a042af1aa9f3853fe3cd7dabc065568f */
          id?: string;
          /** @example b2b_components_shopping_list_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/lineItems
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/salesChannel
           */
          related?: string;
        };
      };
      updatedBy?: {
        data?: {
          /** @example 7ced3d0067ad61702af7db8ae260aa76 */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/updatedBy
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedById?: string;
  };
  B2bComponentsShoppingListLineItem: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    price?: Record<string, never>;
    product?: components["schemas"]["Product"];
    productId?: string;
    productVersionId?: string;
    /** Format: int64 */
    quantity: number;
    shoppingList?: components["schemas"]["B2bComponentsShoppingList"];
    shoppingListId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bComponentsShoppingListLineItemJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    price?: Record<string, never>;
    productId?: string;
    productVersionId?: string;
    /** Format: int64 */
    quantity: number;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list-line-item/30d48c8d92682de24e11d3f72c5dd1ea/product
           */
          related?: string;
        };
      };
      shoppingList?: {
        data?: {
          /** @example 75cf6f56c85d6cbfe36939709500418b */
          id?: string;
          /** @example b2b_components_shopping_list */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-components-shopping-list-line-item/30d48c8d92682de24e11d3f72c5dd1ea/shoppingList
           */
          related?: string;
        };
      };
    };
    shoppingListId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bEmployee: {
    active?: boolean;
    businessPartnerCustomer?: components["schemas"]["Customer"];
    businessPartnerCustomerId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    email: string;
    extensions?: {
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-employee/1131eb0b1859b37129289fe3bcc9e70b/quotes
           */
          related?: string;
        };
      };
    };
    firstName: string;
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    lastName: string;
    /** Format: date-time */
    recoveryTime?: string;
    role?: components["schemas"]["B2bComponentsRole"];
    roleId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bEmployeeJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    businessPartnerCustomerId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    email: string;
    extensions?: {
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-employee/1131eb0b1859b37129289fe3bcc9e70b/quotes
           */
          related?: string;
        };
      };
    };
    firstName: string;
    id: string;
    languageId: string;
    lastName: string;
    /** Format: date-time */
    recoveryTime?: string;
    relationships?: {
      businessPartnerCustomer?: {
        data?: {
          /** @example 798b3bbcdcbca2ce67fe2ef0d7d28cbf */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-employee/1131eb0b1859b37129289fe3bcc9e70b/businessPartnerCustomer
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-employee/1131eb0b1859b37129289fe3bcc9e70b/language
           */
          related?: string;
        };
      };
      role?: {
        data?: {
          /** @example 29a7e96467b69a9f5a93332e29e9b0de */
          id?: string;
          /** @example b2b_components_role */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-employee/1131eb0b1859b37129289fe3bcc9e70b/role
           */
          related?: string;
        };
      };
    };
    roleId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bOrderEmployee: {
    /** Format: date-time */
    createdAt: string;
    employee?: components["schemas"]["B2bEmployee"];
    employeeId: string;
    firstName: string;
    id: string;
    lastName: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  B2bOrderEmployeeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    employeeId: string;
    firstName: string;
    id: string;
    lastName: string;
    orderId: string;
    orderVersionId?: string;
    relationships?: {
      employee?: {
        data?: {
          /** @example fa5473530e4d1a5a1e1eb53d2fedb10c */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-order-employee/5e062ee52486b822aad4eb0918cff56d/employee
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /b2b-order-employee/5e062ee52486b822aad4eb0918cff56d/order
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  B2bPermission: {
    /** Format: date-time */
    createdAt: string;
    dependencies?: string[];
    group: string;
    id: string;
    name: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  B2bPermissionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    dependencies?: string[];
    group: string;
    id: string;
    name: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Category: {
    active?: boolean;
    afterCategoryId?: string;
    afterCategoryVersionId?: string;
    /** Format: int64 */
    autoIncrement?: number;
    breadcrumb?: readonly Record<string, never>[];
    /** Format: int64 */
    childCount?: number;
    children?: components["schemas"]["Category"][];
    cmsPage?: components["schemas"]["CmsPage"];
    cmsPageId?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    cmsPageIdSwitched?: boolean;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    customEntityTypeId?: string;
    customFields?: Record<string, never>;
    description?: string;
    displayNestedProducts: boolean;
    extensions?: {
      search?: Record<string, never>;
      swagDynamicAccessRules?: {
        data?: {
          /** @example 05b9d828254c957dfa5224c581439c92 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/swagDynamicAccessRules
           */
          related?: string;
        };
      };
    };
    externalLink?: string;
    footerSalesChannels?: components["schemas"]["SalesChannel"][];
    id: string;
    internalLink?: string;
    keywords?: string;
    /** Format: int64 */
    level?: number;
    linkNewTab?: boolean;
    linkType?: string;
    mainCategories?: components["schemas"]["MainCategory"][];
    media?: components["schemas"]["Media"];
    mediaId?: string;
    metaDescription?: string;
    metaTitle?: string;
    name: string;
    navigationSalesChannels?: components["schemas"]["SalesChannel"][];
    nestedProducts?: components["schemas"]["Product"][];
    parent?: components["schemas"]["Category"];
    parentId?: string;
    parentVersionId?: string;
    path?: string;
    productAssignmentType: string;
    products?: components["schemas"]["Product"][];
    productStream?: components["schemas"]["ProductStream"];
    productStreamId?: string;
    seoUrls?: components["schemas"]["SeoUrl"][];
    serviceSalesChannels?: components["schemas"]["SalesChannel"][];
    slotConfig?: Record<string, never>;
    tags?: components["schemas"]["Tag"][];
    translated?: {
      afterCategoryId?: string;
      afterCategoryVersionId?: string;
      cmsPageId?: string;
      cmsPageVersionId?: string;
      customEntityTypeId?: string;
      description?: string;
      externalLink?: string;
      internalLink?: string;
      keywords?: string;
      linkType?: string;
      mediaId?: string;
      metaDescription?: string;
      metaTitle?: string;
      name?: string;
      parentId?: string;
      parentVersionId?: string;
      path?: string;
      productAssignmentType?: string;
      productStreamId?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    visible?: boolean;
    /**
     * Format: int64
     * Runtime field, cannot be used as part of the criteria.
     */
    visibleChildCount?: number;
  };
  CategoryJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    afterCategoryId?: string;
    afterCategoryVersionId?: string;
    /** Format: int64 */
    autoIncrement?: number;
    breadcrumb?: readonly Record<string, never>[];
    /** Format: int64 */
    childCount?: number;
    cmsPageId?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    cmsPageIdSwitched?: boolean;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    customEntityTypeId?: string;
    customFields?: Record<string, never>;
    description?: string;
    displayNestedProducts: boolean;
    extensions?: {
      search?: Record<string, never>;
      swagDynamicAccessRules?: {
        data?: {
          /** @example 05b9d828254c957dfa5224c581439c92 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/swagDynamicAccessRules
           */
          related?: string;
        };
      };
    };
    externalLink?: string;
    id: string;
    internalLink?: string;
    keywords?: string;
    /** Format: int64 */
    level?: number;
    linkNewTab?: boolean;
    linkType?: string;
    mediaId?: string;
    metaDescription?: string;
    metaTitle?: string;
    name: string;
    parentId?: string;
    parentVersionId?: string;
    path?: string;
    productAssignmentType: string;
    productStreamId?: string;
    relationships?: {
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/children
           */
          related?: string;
        };
      };
      cmsPage?: {
        data?: {
          /** @example 7b1460918b1abb93311108f3dc021c9b */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/cmsPage
           */
          related?: string;
        };
      };
      footerSalesChannels?: {
        data?: {
          /** @example 57944aba1f6dea7ca9dacf66776e1755 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/footerSalesChannels
           */
          related?: string;
        };
      };
      mainCategories?: {
        data?: {
          /** @example 1fb731fc4139cbb575429e28846f0c39 */
          id?: string;
          /** @example main_category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/mainCategories
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/media
           */
          related?: string;
        };
      };
      navigationSalesChannels?: {
        data?: {
          /** @example 04db458d860e0a4b455ae14b384a5e8a */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/navigationSalesChannels
           */
          related?: string;
        };
      };
      nestedProducts?: {
        data?: {
          /** @example cf73cebf9ade7f94deba94ec71e66e43 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/nestedProducts
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example category */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/parent
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/products
           */
          related?: string;
        };
      };
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/productStream
           */
          related?: string;
        };
      };
      seoUrls?: {
        data?: {
          /** @example 5321b5a71127b8b98cdd4b068ad56c4c */
          id?: string;
          /** @example seo_url */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/seoUrls
           */
          related?: string;
        };
      };
      serviceSalesChannels?: {
        data?: {
          /** @example 1a79932fadba3b20baf6369181e45602 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/serviceSalesChannels
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /category/3adbdb3ac060038aa0e6e6c138ef9873/tags
           */
          related?: string;
        };
      };
    };
    slotConfig?: Record<string, never>;
    translated?: {
      afterCategoryId?: string;
      afterCategoryVersionId?: string;
      cmsPageId?: string;
      cmsPageVersionId?: string;
      customEntityTypeId?: string;
      description?: string;
      externalLink?: string;
      internalLink?: string;
      keywords?: string;
      linkType?: string;
      mediaId?: string;
      metaDescription?: string;
      metaTitle?: string;
      name?: string;
      parentId?: string;
      parentVersionId?: string;
      path?: string;
      productAssignmentType?: string;
      productStreamId?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    visible?: boolean;
    /**
     * Format: int64
     * Runtime field, cannot be used as part of the criteria.
     */
    visibleChildCount?: number;
  };
  CategoryTag: {
    category?: components["schemas"]["Category"];
    categoryId: string;
    categoryVersionId?: string;
    id?: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  CmsBlock: {
    backgroundColor?: string;
    backgroundMedia?: components["schemas"]["Media"];
    backgroundMediaId?: string;
    backgroundMediaMode?: string;
    cmsSectionVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    cssClass?: string;
    customFields?: Record<string, never>;
    extensions?: {
      swagCmsExtensionsBlockRule?: {
        data?: {
          /** @example c426e9e5d9031b933f89682d49bb02b1 */
          id?: string;
          /** @example swag_cms_extensions_block_rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/swagCmsExtensionsBlockRule
           */
          related?: string;
        };
      };
      swagCmsExtensionsQuickview?: {
        data?: {
          /** @example fae098a43df8714eda5249176ffcf26c */
          id?: string;
          /** @example swag_cms_extensions_quickview */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/swagCmsExtensionsQuickview
           */
          related?: string;
        };
      };
    };
    id: string;
    locked?: boolean;
    marginBottom?: string;
    marginLeft?: string;
    marginRight?: string;
    marginTop?: string;
    name?: string;
    /** Format: int64 */
    position: number;
    section?: components["schemas"]["CmsSection"];
    sectionId: string;
    sectionPosition?: string;
    slots?: components["schemas"]["CmsSlot"][];
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    visibility?: {
      desktop?: boolean;
      mobile?: boolean;
      tablet?: boolean;
    };
  };
  CmsBlockJsonApi: components["schemas"]["resource"] & {
    backgroundColor?: string;
    backgroundMediaId?: string;
    backgroundMediaMode?: string;
    cmsSectionVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    cssClass?: string;
    customFields?: Record<string, never>;
    extensions?: {
      swagCmsExtensionsBlockRule?: {
        data?: {
          /** @example c426e9e5d9031b933f89682d49bb02b1 */
          id?: string;
          /** @example swag_cms_extensions_block_rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/swagCmsExtensionsBlockRule
           */
          related?: string;
        };
      };
      swagCmsExtensionsQuickview?: {
        data?: {
          /** @example fae098a43df8714eda5249176ffcf26c */
          id?: string;
          /** @example swag_cms_extensions_quickview */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/swagCmsExtensionsQuickview
           */
          related?: string;
        };
      };
    };
    id: string;
    locked?: boolean;
    marginBottom?: string;
    marginLeft?: string;
    marginRight?: string;
    marginTop?: string;
    name?: string;
    /** Format: int64 */
    position: number;
    relationships?: {
      backgroundMedia?: {
        data?: {
          /** @example 9f63714a30b4d0292695bd4d27235a0b */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/backgroundMedia
           */
          related?: string;
        };
      };
      section?: {
        data?: {
          /** @example 73d5342eba070f636ac3246f319bf77f */
          id?: string;
          /** @example cms_section */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/section
           */
          related?: string;
        };
      };
      slots?: {
        data?: {
          /** @example a8b72798beb911ae98c8c8907d45950a */
          id?: string;
          /** @example cms_slot */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-block/9c16ffe823ddccc710bfb336c2ef30b6/slots
           */
          related?: string;
        };
      };
    };
    sectionId: string;
    sectionPosition?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    visibility?: {
      desktop?: boolean;
      mobile?: boolean;
      tablet?: boolean;
    };
  };
  CmsPage: {
    categories?: components["schemas"]["Category"][];
    config?: {
      backgroundColor?: string;
    };
    /** Format: date-time */
    createdAt: string;
    cssClass?: string;
    customFields?: Record<string, never>;
    entity?: string;
    extensions?: {
      activities?: {
        data?: {
          /** @example 609f88983635a66fe4c8570afee066e0 */
          id?: string;
          /** @example cms_page_activity */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/activities
           */
          related?: string;
        };
      };
      drafts?: {
        data?: {
          /** @example 4a25fb4d024699c2d82bbd0a651eb766 */
          id?: string;
          /** @example cms_page_draft */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/drafts
           */
          related?: string;
        };
      };
      swagCmsExtensionsScrollNavigationPageSettings?: {
        data?: {
          /** @example 8b835206d09f3dec1b733f6a78c7ba33 */
          id?: string;
          /** @example swag_cms_extensions_scroll_navigation_page_settings */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/swagCmsExtensionsScrollNavigationPageSettings
           */
          related?: string;
        };
      };
    };
    homeSalesChannels?: components["schemas"]["SalesChannel"][];
    id: string;
    landingPages?: components["schemas"]["LandingPage"][];
    locked?: boolean;
    name?: string;
    previewMedia?: components["schemas"]["Media"];
    previewMediaId?: string;
    products?: components["schemas"]["Product"][];
    sections?: components["schemas"]["CmsSection"][];
    translated?: {
      cssClass?: string;
      entity?: string;
      name?: string;
      previewMediaId?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  CmsPageActivity: {
    cmsPage?: components["schemas"]["CmsPage"];
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    details?: Record<string, never>;
    draftVersion?: string;
    id: string;
    isDiscarded?: boolean;
    isMerged?: boolean;
    isReleasedAsNew?: boolean;
    name?: string;
    pageId: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId?: string;
  };
  CmsPageActivityJsonApi: components["schemas"]["resource"] & {
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    details?: Record<string, never>;
    draftVersion?: string;
    id: string;
    isDiscarded?: boolean;
    isMerged?: boolean;
    isReleasedAsNew?: boolean;
    name?: string;
    pageId: string;
    relationships?: {
      cmsPage?: {
        data?: {
          /** @example 7b1460918b1abb93311108f3dc021c9b */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page-activity/83bfa4f502ca5ead8a54e16782b24f8d/cmsPage
           */
          related?: string;
        };
      };
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page-activity/83bfa4f502ca5ead8a54e16782b24f8d/user
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    userId?: string;
  };
  CmsPageDraft: {
    cmsPage?: components["schemas"]["CmsPage"];
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    deepLinkCode: string;
    draftVersion: string;
    id: string;
    name: string;
    ownerId?: string;
    pageId: string;
    previewMedia?: components["schemas"]["Media"];
    previewMediaId?: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
  };
  CmsPageDraftJsonApi: components["schemas"]["resource"] & {
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    deepLinkCode: string;
    draftVersion: string;
    id: string;
    name: string;
    ownerId?: string;
    pageId: string;
    previewMediaId?: string;
    relationships?: {
      cmsPage?: {
        data?: {
          /** @example 7b1460918b1abb93311108f3dc021c9b */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page-draft/0478c327bbb2cd5c6f896c55a12e9961/cmsPage
           */
          related?: string;
        };
      };
      previewMedia?: {
        data?: {
          /** @example a7a817fb0e422cff87e878b8ff7ca914 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page-draft/0478c327bbb2cd5c6f896c55a12e9961/previewMedia
           */
          related?: string;
        };
      };
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page-draft/0478c327bbb2cd5c6f896c55a12e9961/user
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CmsPageJsonApi: components["schemas"]["resource"] & {
    config?: {
      backgroundColor?: string;
    };
    /** Format: date-time */
    createdAt: string;
    cssClass?: string;
    customFields?: Record<string, never>;
    entity?: string;
    extensions?: {
      activities?: {
        data?: {
          /** @example 609f88983635a66fe4c8570afee066e0 */
          id?: string;
          /** @example cms_page_activity */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/activities
           */
          related?: string;
        };
      };
      drafts?: {
        data?: {
          /** @example 4a25fb4d024699c2d82bbd0a651eb766 */
          id?: string;
          /** @example cms_page_draft */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/drafts
           */
          related?: string;
        };
      };
      swagCmsExtensionsScrollNavigationPageSettings?: {
        data?: {
          /** @example 8b835206d09f3dec1b733f6a78c7ba33 */
          id?: string;
          /** @example swag_cms_extensions_scroll_navigation_page_settings */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/swagCmsExtensionsScrollNavigationPageSettings
           */
          related?: string;
        };
      };
    };
    id: string;
    locked?: boolean;
    name?: string;
    previewMediaId?: string;
    relationships?: {
      categories?: {
        data?: {
          /** @example b0b5ccb4a195a07fd3eed14affb8695f */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/categories
           */
          related?: string;
        };
      };
      homeSalesChannels?: {
        data?: {
          /** @example 9aed0c38161f67f2d40a4a872cae045f */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/homeSalesChannels
           */
          related?: string;
        };
      };
      landingPages?: {
        data?: {
          /** @example d60b77f2b3bd69591e3d5e3100926b4d */
          id?: string;
          /** @example landing_page */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/landingPages
           */
          related?: string;
        };
      };
      previewMedia?: {
        data?: {
          /** @example a7a817fb0e422cff87e878b8ff7ca914 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/previewMedia
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/products
           */
          related?: string;
        };
      };
      sections?: {
        data?: {
          /** @example ff4dee88db82e98f0e0d524d965b9aa7 */
          id?: string;
          /** @example cms_section */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-page/64bf107168bcd03626208c1764ce6890/sections
           */
          related?: string;
        };
      };
    };
    translated?: {
      cssClass?: string;
      entity?: string;
      name?: string;
      previewMediaId?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  CmsSection: {
    backgroundColor?: string;
    backgroundMedia?: components["schemas"]["Media"];
    backgroundMediaId?: string;
    backgroundMediaMode?: string;
    blocks?: components["schemas"]["CmsBlock"][];
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    cssClass?: string;
    customFields?: Record<string, never>;
    extensions?: {
      swagCmsExtensionsScrollNavigation?: {
        data?: {
          /** @example 425b8d6ec722d74191c6d39370af19dc */
          id?: string;
          /** @example swag_cms_extensions_scroll_navigation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-section/d08def49fa8924d6f4a32bdb448d5fba/swagCmsExtensionsScrollNavigation
           */
          related?: string;
        };
      };
    };
    id: string;
    locked?: boolean;
    mobileBehavior?: string;
    name?: string;
    page?: components["schemas"]["CmsPage"];
    pageId: string;
    /** Format: int64 */
    position: number;
    sizingMode?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    visibility?: {
      desktop?: boolean;
      mobile?: boolean;
      tablet?: boolean;
    };
  };
  CmsSectionJsonApi: components["schemas"]["resource"] & {
    backgroundColor?: string;
    backgroundMediaId?: string;
    backgroundMediaMode?: string;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    cssClass?: string;
    customFields?: Record<string, never>;
    extensions?: {
      swagCmsExtensionsScrollNavigation?: {
        data?: {
          /** @example 425b8d6ec722d74191c6d39370af19dc */
          id?: string;
          /** @example swag_cms_extensions_scroll_navigation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-section/d08def49fa8924d6f4a32bdb448d5fba/swagCmsExtensionsScrollNavigation
           */
          related?: string;
        };
      };
    };
    id: string;
    locked?: boolean;
    mobileBehavior?: string;
    name?: string;
    pageId: string;
    /** Format: int64 */
    position: number;
    relationships?: {
      backgroundMedia?: {
        data?: {
          /** @example 9f63714a30b4d0292695bd4d27235a0b */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-section/d08def49fa8924d6f4a32bdb448d5fba/backgroundMedia
           */
          related?: string;
        };
      };
      blocks?: {
        data?: {
          /** @example e734964953f880e5164e32827950ff92 */
          id?: string;
          /** @example cms_block */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-section/d08def49fa8924d6f4a32bdb448d5fba/blocks
           */
          related?: string;
        };
      };
      page?: {
        data?: {
          /** @example 71860c77c6745379b0d44304d66b6a13 */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-section/d08def49fa8924d6f4a32bdb448d5fba/page
           */
          related?: string;
        };
      };
    };
    sizingMode?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    visibility?: {
      desktop?: boolean;
      mobile?: boolean;
      tablet?: boolean;
    };
  };
  CmsSlot: {
    block?: components["schemas"]["CmsBlock"];
    blockId: string;
    cmsBlockVersionId?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    data?: Record<string, never>;
    extensions?: {
      swagCmsExtensionsForm?: {
        data?: {
          /** @example 0654ad514da002e9d77fa24ee33acd95 */
          id?: string;
          /** @example swag_cms_extensions_form */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-slot/ac5ca6960137c6b8a97c90c11b71d4bb/swagCmsExtensionsForm
           */
          related?: string;
        };
      };
    };
    fieldConfig?: Record<string, never>;
    id: string;
    locked?: boolean;
    slot: string;
    translated?: {
      blockId?: string;
      cmsBlockVersionId?: string;
      slot?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  CmsSlotJsonApi: components["schemas"]["resource"] & {
    blockId: string;
    cmsBlockVersionId?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    data?: Record<string, never>;
    extensions?: {
      swagCmsExtensionsForm?: {
        data?: {
          /** @example 0654ad514da002e9d77fa24ee33acd95 */
          id?: string;
          /** @example swag_cms_extensions_form */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-slot/ac5ca6960137c6b8a97c90c11b71d4bb/swagCmsExtensionsForm
           */
          related?: string;
        };
      };
    };
    fieldConfig?: Record<string, never>;
    id: string;
    locked?: boolean;
    relationships?: {
      block?: {
        data?: {
          /** @example 14511f2f5564650d129ca7cabc333278 */
          id?: string;
          /** @example cms_block */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /cms-slot/ac5ca6960137c6b8a97c90c11b71d4bb/block
           */
          related?: string;
        };
      };
    };
    slot: string;
    translated?: {
      blockId?: string;
      cmsBlockVersionId?: string;
      slot?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  Country: {
    active?: boolean;
    addressFormat: Record<string, never>;
    advancedPostalCodePattern?: string;
    checkAdvancedPostalCodePattern?: boolean;
    checkPostalCodePattern?: boolean;
    checkVatIdPattern?: boolean;
    companyTax?: {
      /** Format: float */
      amount: number;
      currencyId: string;
      enabled: boolean;
    };
    /** Format: date-time */
    createdAt: string;
    currencyCountryRoundings?: components["schemas"]["CurrencyCountryRounding"][];
    customerAddresses?: components["schemas"]["CustomerAddress"][];
    customerTax?: {
      /** Format: float */
      amount: number;
      currencyId: string;
      enabled: boolean;
    };
    customFields?: Record<string, never>;
    defaultPostalCodePattern?: string;
    displayStateInRegistration?: boolean;
    extensions?: {
      subscriptionCustomerAddresses?: {
        data?: {
          /** @example 8951627da0210d39cc55d1a91ae21b8d */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/subscriptionCustomerAddresses
           */
          related?: string;
        };
      };
    };
    forceStateInRegistration?: boolean;
    id: string;
    iso?: string;
    iso3?: string;
    name: string;
    orderAddresses?: components["schemas"]["OrderAddress"][];
    /** Format: int64 */
    position?: number;
    postalCodeRequired?: boolean;
    salesChannelDefaultAssignments?: components["schemas"]["SalesChannel"][];
    salesChannels?: components["schemas"]["SalesChannel"][];
    shippingAvailable?: boolean;
    states?: components["schemas"]["CountryState"][];
    taxRules?: components["schemas"]["TaxRule"][];
    translated?: {
      advancedPostalCodePattern?: string;
      defaultPostalCodePattern?: string;
      iso?: string;
      iso3?: string;
      name?: string;
      vatIdPattern?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    vatIdPattern?: string;
    vatIdRequired?: boolean;
  };
  CountryJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    addressFormat: Record<string, never>;
    advancedPostalCodePattern?: string;
    checkAdvancedPostalCodePattern?: boolean;
    checkPostalCodePattern?: boolean;
    checkVatIdPattern?: boolean;
    companyTax?: {
      /** Format: float */
      amount: number;
      currencyId: string;
      enabled: boolean;
    };
    /** Format: date-time */
    createdAt: string;
    customerTax?: {
      /** Format: float */
      amount: number;
      currencyId: string;
      enabled: boolean;
    };
    customFields?: Record<string, never>;
    defaultPostalCodePattern?: string;
    displayStateInRegistration?: boolean;
    extensions?: {
      subscriptionCustomerAddresses?: {
        data?: {
          /** @example 8951627da0210d39cc55d1a91ae21b8d */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/subscriptionCustomerAddresses
           */
          related?: string;
        };
      };
    };
    forceStateInRegistration?: boolean;
    id: string;
    iso?: string;
    iso3?: string;
    name: string;
    /** Format: int64 */
    position?: number;
    postalCodeRequired?: boolean;
    relationships?: {
      currencyCountryRoundings?: {
        data?: {
          /** @example 35ef8dd5459bf5f08d44cb278bf07cd4 */
          id?: string;
          /** @example currency_country_rounding */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/currencyCountryRoundings
           */
          related?: string;
        };
      };
      customerAddresses?: {
        data?: {
          /** @example 84ed5cbc10cd9f665a8c9f05e49095af */
          id?: string;
          /** @example customer_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/customerAddresses
           */
          related?: string;
        };
      };
      orderAddresses?: {
        data?: {
          /** @example c3182f0dc0cc20b4982616d3e0221747 */
          id?: string;
          /** @example order_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/orderAddresses
           */
          related?: string;
        };
      };
      salesChannelDefaultAssignments?: {
        data?: {
          /** @example b23663b2abc0909be9a8027a3fbff74b */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/salesChannelDefaultAssignments
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/salesChannels
           */
          related?: string;
        };
      };
      states?: {
        data?: {
          /** @example 34d955a0df5f7af9c9b4e4dccb3c3564 */
          id?: string;
          /** @example country_state */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/states
           */
          related?: string;
        };
      };
      taxRules?: {
        data?: {
          /** @example 1b93ada511aac379c19d3afcba4e4041 */
          id?: string;
          /** @example tax_rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country/59716c97497eb9694541f7c3d37b1a4d/taxRules
           */
          related?: string;
        };
      };
    };
    shippingAvailable?: boolean;
    translated?: {
      advancedPostalCodePattern?: string;
      defaultPostalCodePattern?: string;
      iso?: string;
      iso3?: string;
      name?: string;
      vatIdPattern?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    vatIdPattern?: string;
    vatIdRequired?: boolean;
  };
  CountryState: {
    active?: boolean;
    country?: components["schemas"]["Country"];
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    customerAddresses?: components["schemas"]["CustomerAddress"][];
    customFields?: Record<string, never>;
    extensions?: {
      subscriptionCustomerAddresses?: {
        data?: {
          /** @example 8951627da0210d39cc55d1a91ae21b8d */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country-state/e65d972da07a4e37b3d1f8c2f32d9c99/subscriptionCustomerAddresses
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    orderAddresses?: components["schemas"]["OrderAddress"][];
    /** Format: int64 */
    position?: number;
    shortCode: string;
    translated?: {
      countryId?: string;
      name?: string;
      shortCode?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CountryStateJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      subscriptionCustomerAddresses?: {
        data?: {
          /** @example 8951627da0210d39cc55d1a91ae21b8d */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country-state/e65d972da07a4e37b3d1f8c2f32d9c99/subscriptionCustomerAddresses
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /country-state/e65d972da07a4e37b3d1f8c2f32d9c99/country
           */
          related?: string;
        };
      };
      customerAddresses?: {
        data?: {
          /** @example 84ed5cbc10cd9f665a8c9f05e49095af */
          id?: string;
          /** @example customer_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country-state/e65d972da07a4e37b3d1f8c2f32d9c99/customerAddresses
           */
          related?: string;
        };
      };
      orderAddresses?: {
        data?: {
          /** @example c3182f0dc0cc20b4982616d3e0221747 */
          id?: string;
          /** @example order_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /country-state/e65d972da07a4e37b3d1f8c2f32d9c99/orderAddresses
           */
          related?: string;
        };
      };
    };
    shortCode: string;
    translated?: {
      countryId?: string;
      name?: string;
      shortCode?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Criteria: {
    /** Used to perform aggregations on the search result. For more information, see [Search Queries > Aggregations](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#aggregations) */
    aggregations?: {
      /** The field you want to aggregate over. */
      field: string;
      /** Give your aggregation an identifier, so you can find it easier */
      name: string;
      /** The type of aggregation */
      type: string;
    }[];
    /** Used to fetch associations which are not fetched by default. */
    associations?: Record<string, never>;
    /** Fields which should be returned in the search result. */
    fields?: string[];
    /** List of filters to restrict the search result. For more information, see [Search Queries > Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#filter) */
    filter?: {
      field: string;
      type: string;
      value: string;
    }[];
    /** Perform groupings over certain fields */
    grouping?: string[];
    /** Number of items per result page */
    limit?: number;
    /** Search result page */
    page?: number;
    /** Filters that applied without affecting aggregations. For more information, see [Search Queries > Post Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#post-filter) */
    "post-filter"?: {
      field: string;
      type: string;
      value: string;
    }[];
    /** Sorting in the search result. */
    sort?: {
      field: string;
      naturalSorting?: boolean;
      order?: string;
    }[];
    /**
     * Whether the total for the total number of hits should be determined for the search query. none = disabled total count, exact = calculate exact total amount (slow), next-pages = calculate only for next page (fast)
     * @default none
     * @enum {string}
     */
    "total-count-mode"?: "none" | "exact" | "next-pages";
  };
  Currency: {
    countryRoundings?: components["schemas"]["CurrencyCountryRounding"][];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/quotes
           */
          related?: string;
        };
      };
      socialShoppingSalesChannels?: {
        data?: {
          /** @example e581067f817be66449a3f4350dc327af */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/socialShoppingSalesChannels
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/subscriptions
           */
          related?: string;
        };
      };
    };
    /** Format: float */
    factor: number;
    id: string;
    isoCode: string;
    /** Runtime field, cannot be used as part of the criteria. */
    isSystemDefault?: boolean;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    name: string;
    orders?: components["schemas"]["Order"][];
    /** Format: int64 */
    position?: number;
    productExports?: components["schemas"]["ProductExport"][];
    promotionDiscountPrices?: components["schemas"]["PromotionDiscountPrices"][];
    salesChannelDefaultAssignments?: components["schemas"]["SalesChannel"][];
    salesChannelDomains?: components["schemas"]["SalesChannelDomain"][];
    salesChannels?: components["schemas"]["SalesChannel"][];
    shortName: string;
    symbol: string;
    /** Format: float */
    taxFreeFrom?: number;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    translated?: {
      isoCode?: string;
      name?: string;
      shortName?: string;
      symbol?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CurrencyCountryRounding: {
    country?: components["schemas"]["Country"];
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CurrencyCountryRoundingJsonApi: components["schemas"]["resource"] & {
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    currencyId: string;
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    relationships?: {
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /currency-country-rounding/1d1957074c6776cfcf655c28fc42dc64/country
           */
          related?: string;
        };
      };
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /currency-country-rounding/1d1957074c6776cfcf655c28fc42dc64/currency
           */
          related?: string;
        };
      };
    };
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CurrencyJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/quotes
           */
          related?: string;
        };
      };
      socialShoppingSalesChannels?: {
        data?: {
          /** @example e581067f817be66449a3f4350dc327af */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/socialShoppingSalesChannels
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/subscriptions
           */
          related?: string;
        };
      };
    };
    /** Format: float */
    factor: number;
    id: string;
    isoCode: string;
    /** Runtime field, cannot be used as part of the criteria. */
    isSystemDefault?: boolean;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    name: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      countryRoundings?: {
        data?: {
          /** @example 3de4aa80c8c8822ea10d156a6f58d6f7 */
          id?: string;
          /** @example currency_country_rounding */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/countryRoundings
           */
          related?: string;
        };
      };
      orders?: {
        data?: {
          /** @example 12c500ed0b7879105fb46af0f246be87 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/orders
           */
          related?: string;
        };
      };
      productExports?: {
        data?: {
          /** @example 2cd8793787cda582174c0fc329fbc377 */
          id?: string;
          /** @example product_export */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/productExports
           */
          related?: string;
        };
      };
      promotionDiscountPrices?: {
        data?: {
          /** @example 325723473ecab76b0f45e1554513f779 */
          id?: string;
          /** @example promotion_discount_prices */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/promotionDiscountPrices
           */
          related?: string;
        };
      };
      salesChannelDefaultAssignments?: {
        data?: {
          /** @example b23663b2abc0909be9a8027a3fbff74b */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/salesChannelDefaultAssignments
           */
          related?: string;
        };
      };
      salesChannelDomains?: {
        data?: {
          /** @example b60ab8d110194bfe34ef9928ba48ab6d */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/salesChannelDomains
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /currency/386c339d37e737a436499d423a77df0c/salesChannels
           */
          related?: string;
        };
      };
    };
    shortName: string;
    symbol: string;
    /** Format: float */
    taxFreeFrom?: number;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    translated?: {
      isoCode?: string;
      name?: string;
      shortName?: string;
      symbol?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomEntity: {
    appId?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    cmsAware?: boolean;
    /** Format: date-time */
    createdAt: string;
    customFieldsAware?: boolean;
    /** Format: date-time */
    deletedAt?: string;
    fields: Record<string, never>;
    flags?: Record<string, never>;
    id: string;
    labelProperty?: string;
    name: string;
    pluginId?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    storeApiAware?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomEntityJsonApi: components["schemas"]["resource"] & {
    appId?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    cmsAware?: boolean;
    /** Format: date-time */
    createdAt: string;
    customFieldsAware?: boolean;
    /** Format: date-time */
    deletedAt?: string;
    fields: Record<string, never>;
    flags?: Record<string, never>;
    id: string;
    labelProperty?: string;
    name: string;
    pluginId?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    storeApiAware?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomField: {
    active?: boolean;
    allowCartExpose?: boolean;
    allowCustomerWrite?: boolean;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFieldSet?: components["schemas"]["CustomFieldSet"];
    customFieldSetId?: string;
    id: string;
    name: string;
    productSearchConfigFields?: components["schemas"]["ProductSearchConfigField"][];
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomFieldJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    allowCartExpose?: boolean;
    allowCustomerWrite?: boolean;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFieldSetId?: string;
    id: string;
    name: string;
    relationships?: {
      customFieldSet?: {
        data?: {
          /** @example df17e58b74fa5cb09c5e84f3b37141e1 */
          id?: string;
          /** @example custom_field_set */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field/8c9d2c73a2f564420ef091ee69b564b9/customFieldSet
           */
          related?: string;
        };
      };
      productSearchConfigFields?: {
        data?: {
          /** @example ae6a70432f71d6905502769f184399b1 */
          id?: string;
          /** @example product_search_config_field */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field/8c9d2c73a2f564420ef091ee69b564b9/productSearchConfigFields
           */
          related?: string;
        };
      };
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomFieldSet: {
    active?: boolean;
    app?: components["schemas"]["App"];
    appId?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: components["schemas"]["CustomField"][];
    global?: boolean;
    id: string;
    name: string;
    /** Format: int64 */
    position?: number;
    products?: components["schemas"]["Product"][];
    relations?: components["schemas"]["CustomFieldSetRelation"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomFieldSetJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    appId?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    global?: boolean;
    id: string;
    name: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field-set/9f7fdf62a1b51e5a8e6f99cb5e5e86b1/app
           */
          related?: string;
        };
      };
      customFields?: {
        data?: {
          /** @example 4e252ff73243c27b4df9002e452fc6a7 */
          id?: string;
          /** @example custom_field */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field-set/9f7fdf62a1b51e5a8e6f99cb5e5e86b1/customFields
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field-set/9f7fdf62a1b51e5a8e6f99cb5e5e86b1/products
           */
          related?: string;
        };
      };
      relations?: {
        data?: {
          /** @example 06c5b10273a69992d8c6933e294909fa */
          id?: string;
          /** @example custom_field_set_relation */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field-set/9f7fdf62a1b51e5a8e6f99cb5e5e86b1/relations
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomFieldSetRelation: {
    /** Format: date-time */
    createdAt: string;
    customFieldSet?: components["schemas"]["CustomFieldSet"];
    customFieldSetId: string;
    entityName: string;
    id: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomFieldSetRelationJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFieldSetId: string;
    entityName: string;
    id: string;
    relationships?: {
      customFieldSet?: {
        data?: {
          /** @example df17e58b74fa5cb09c5e84f3b37141e1 */
          id?: string;
          /** @example custom_field_set */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-field-set-relation/9686e510825802f328b6a861ccaa977e/customFieldSet
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomPrice: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerGroup?: components["schemas"]["CustomerGroup"];
    customerGroupId?: string;
    customerId?: string;
    id: string;
    price: Record<string, never>;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomPriceJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerGroupId?: string;
    customerId?: string;
    id: string;
    price: Record<string, never>;
    productId: string;
    productVersionId?: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-price/15ffcf0a24168224e50e7fa559015d05/customer
           */
          related?: string;
        };
      };
      customerGroup?: {
        data?: {
          /** @example 115091b01a7299f28a5ce7e1b712a222 */
          id?: string;
          /** @example customer_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-price/15ffcf0a24168224e50e7fa559015d05/customerGroup
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /custom-price/15ffcf0a24168224e50e7fa559015d05/product
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomPricingDeleteOperation: {
    /**
     * A specific verb defining what operation should be actioned for a specific data record
     * @enum {string}
     */
    action: "delete";
    /**
     * Contains a list of changesets for an entity. If the action type is `delete`,
     *     a list of identifiers can be provided.
     */
    payload: string[][];
  };
  CustomPricingPrice: {
    price: {
      currencyId: string;
      gross: number;
      linked: boolean;
      listPrice?: {
        gross?: number;
        linked?: boolean;
        net?: number;
      };
      net: number;
      regulationPrice?: {
        gross?: number;
        linked?: boolean;
        net?: number;
      };
    }[];
    /** Format: int64 */
    quantityEnd?: number;
    /** Format: int64 */
    quantityStart: number;
  };
  CustomPricingResponse: {
    data: {
      extensions?: Record<string, never>[];
      result?: {
        entities: [] | [string];
        /** A detailed error list addressing specific points in which sync payload does not meet system expectations (data types, structure etc.) */
        errors: string[];
      }[];
    }[];
    success: boolean;
  };
  CustomPricingUpsertOperation: {
    /**
     * A specific verb defining what operation should be actioned for a specific data record
     * @enum {string}
     */
    action: "upsert";
    /**
     * Contains a list of changesets for an entity. If the action type is `delete`,
     *     a list of identifiers can be provided.
     */
    payload: {
      /** This parameter should be specified, or 'customerId', not both */
      customerGroupId?: string;
      /** This parameter should be specified, or 'customerGroupId', not both */
      customerId?: string;
      id?: string;
      price?: components["schemas"]["CustomPricingPrice"][];
      productId: string;
      productVersionId?: string;
    }[];
  };
  Customer: {
    accountType: string;
    active?: boolean;
    addresses?: components["schemas"]["CustomerAddress"][];
    affiliateCode?: string;
    /** Format: int64 */
    autoIncrement?: number;
    birthday?: string;
    boundSalesChannel?: components["schemas"]["SalesChannel"];
    boundSalesChannelId?: string;
    campaignCode?: string;
    company?: string;
    /** Format: date-time */
    createdAt: string;
    createdBy?: components["schemas"]["User"];
    createdById?: string;
    customerNumber: string;
    customFields?: Record<string, never>;
    defaultBillingAddress?: components["schemas"]["CustomerAddress"];
    defaultBillingAddressId: string;
    defaultPaymentMethod?: components["schemas"]["PaymentMethod"];
    defaultPaymentMethodId: string;
    defaultShippingAddress?: components["schemas"]["CustomerAddress"];
    defaultShippingAddressId: string;
    /** Format: date-time */
    doubleOptInConfirmDate?: string;
    /** Format: date-time */
    doubleOptInEmailSentDate?: string;
    doubleOptInRegistration?: boolean;
    email: string;
    extensions?: {
      b2bBusinessPartner?: {
        data?: {
          /** @example c1736d678c9ca2f952db2f7894193bf3 */
          id?: string;
          /** @example b2b_business_partner */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/b2bBusinessPartner
           */
          related?: string;
        };
      };
      customPrice?: {
        data?: {
          /** @example 35ed8bfa9c73171a7b417f13ab07d57a */
          id?: string;
          /** @example custom_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/customPrice
           */
          related?: string;
        };
      };
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/delayActions
           */
          related?: string;
        };
      };
      employees?: {
        data?: {
          /** @example 582ca3f7cbaf4edcc1b445f8ea90b503 */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/employees
           */
          related?: string;
        };
      };
      paypalVaultTokenMappings?: {
        data?: {
          /** @example 75fb7d13a771c74947402295ed591499 */
          id?: string;
          /** @example swag_paypal_vault_token_mapping */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/paypalVaultTokenMappings
           */
          related?: string;
        };
      };
      paypalVaultTokens?: {
        data?: {
          /** @example 7e423eeb595163d20591951433de150c */
          id?: string;
          /** @example swag_paypal_vault_token */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/paypalVaultTokens
           */
          related?: string;
        };
      };
      quoteComments?: {
        data?: {
          /** @example 98dec49a83119c512f84645e81ea52d8 */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/quoteComments
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/quotes
           */
          related?: string;
        };
      };
      roles?: {
        data?: {
          /** @example 4295e8065f2f640103f566df3329e17f */
          id?: string;
          /** @example b2b_components_role */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/roles
           */
          related?: string;
        };
      };
      specificFeatures?: {
        data?: {
          /** @example 5cfb6fcb7542e25892e1a35cd6a06c54 */
          id?: string;
          /** @example customer_specific_features */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/specificFeatures
           */
          related?: string;
        };
      };
      ssoProviderCustomers?: {
        data?: {
          /** @example 6f2bd941c85a0835cd1889fd0a2c835a */
          id?: string;
          /** @example sso_provider_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/ssoProviderCustomers
           */
          related?: string;
        };
      };
      subscriptionCustomers?: {
        data?: {
          /** @example ee8811605866488e8f21308857e1e5a8 */
          id?: string;
          /** @example subscription_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/subscriptionCustomers
           */
          related?: string;
        };
      };
      swagSocialShoppingCustomer?: {
        data?: {
          /** @example 70825a5dfabd078bce265301ba7d9cca */
          id?: string;
          /** @example swag_social_shopping_customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/swagSocialShoppingCustomer
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    firstLogin?: string;
    firstName: string;
    group?: components["schemas"]["CustomerGroup"];
    groupId: string;
    guest?: boolean;
    hash?: string;
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    /** Format: date-time */
    lastLogin?: string;
    lastName: string;
    /** Format: date-time */
    lastOrderDate?: string;
    lastPaymentMethod?: components["schemas"]["PaymentMethod"];
    lastPaymentMethodId?: string;
    /** Format: int64 */
    orderCount?: number;
    orderCustomers?: components["schemas"]["OrderCustomer"][];
    /** Format: float */
    orderTotalAmount?: number;
    productReviews?: components["schemas"]["ProductReview"][];
    promotions?: components["schemas"]["Promotion"][];
    recoveryCustomer?: components["schemas"]["CustomerRecovery"];
    remoteAddress?: string;
    requestedGroup?: components["schemas"]["CustomerGroup"];
    requestedGroupId?: string;
    /** Format: int64 */
    reviewCount?: number;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    tagIds?: readonly string[];
    tags?: components["schemas"]["Tag"][];
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedBy?: components["schemas"]["User"];
    updatedById?: string;
    vatIds?: string[];
    wishlists?: components["schemas"]["CustomerWishlist"][];
  };
  CustomerAddress: {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    country?: components["schemas"]["Country"];
    countryId: string;
    countryState?: components["schemas"]["CountryState"];
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    phoneNumber?: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    street: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    zipcode?: string;
  };
  CustomerAddressJsonApi: components["schemas"]["resource"] & {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    countryId: string;
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    phoneNumber?: string;
    relationships?: {
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-address/1b4b031005f93d02d887e7d66efb653b/country
           */
          related?: string;
        };
      };
      countryState?: {
        data?: {
          /** @example cb6a9764567191fb74fe28d8d6a4819d */
          id?: string;
          /** @example country_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-address/1b4b031005f93d02d887e7d66efb653b/countryState
           */
          related?: string;
        };
      };
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-address/1b4b031005f93d02d887e7d66efb653b/customer
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-address/1b4b031005f93d02d887e7d66efb653b/salutation
           */
          related?: string;
        };
      };
    };
    salutationId?: string;
    street: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    zipcode?: string;
  };
  CustomerGroup: {
    /** Format: date-time */
    createdAt: string;
    customers?: components["schemas"]["Customer"][];
    customFields?: Record<string, never>;
    displayGross?: boolean;
    extensions?: {
      customPrice?: {
        data?: {
          /** @example 35ed8bfa9c73171a7b417f13ab07d57a */
          id?: string;
          /** @example custom_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-group/2c5176146d938e15c9f0e3d5203c19bf/customPrice
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    registrationActive?: boolean;
    registrationIntroduction?: string;
    registrationOnlyCompanyRegistration?: boolean;
    registrationSalesChannels?: components["schemas"]["SalesChannel"][];
    registrationSeoMetaDescription?: string;
    registrationTitle?: string;
    salesChannels?: components["schemas"]["SalesChannel"][];
    translated?: {
      name?: string;
      registrationIntroduction?: string;
      registrationSeoMetaDescription?: string;
      registrationTitle?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerGroupJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    displayGross?: boolean;
    extensions?: {
      customPrice?: {
        data?: {
          /** @example 35ed8bfa9c73171a7b417f13ab07d57a */
          id?: string;
          /** @example custom_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-group/2c5176146d938e15c9f0e3d5203c19bf/customPrice
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    registrationActive?: boolean;
    registrationIntroduction?: string;
    registrationOnlyCompanyRegistration?: boolean;
    registrationSeoMetaDescription?: string;
    registrationTitle?: string;
    relationships?: {
      customers?: {
        data?: {
          /** @example 4b6f7d34a58ba399f077685951d06738 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-group/2c5176146d938e15c9f0e3d5203c19bf/customers
           */
          related?: string;
        };
      };
      registrationSalesChannels?: {
        data?: {
          /** @example ffc8e76c1fe257d563b9d0024a50620b */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-group/2c5176146d938e15c9f0e3d5203c19bf/registrationSalesChannels
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-group/2c5176146d938e15c9f0e3d5203c19bf/salesChannels
           */
          related?: string;
        };
      };
    };
    translated?: {
      name?: string;
      registrationIntroduction?: string;
      registrationSeoMetaDescription?: string;
      registrationTitle?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerGroupRegistrationSalesChannels: {
    /** Format: date-time */
    createdAt: string;
    customerGroup?: components["schemas"]["CustomerGroup"];
    customerGroupId: string;
    id?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
  };
  CustomerJsonApi: components["schemas"]["resource"] & {
    accountType: string;
    active?: boolean;
    affiliateCode?: string;
    /** Format: int64 */
    autoIncrement?: number;
    birthday?: string;
    boundSalesChannelId?: string;
    campaignCode?: string;
    company?: string;
    /** Format: date-time */
    createdAt: string;
    createdById?: string;
    customerNumber: string;
    customFields?: Record<string, never>;
    defaultBillingAddressId: string;
    defaultPaymentMethodId: string;
    defaultShippingAddressId: string;
    /** Format: date-time */
    doubleOptInConfirmDate?: string;
    /** Format: date-time */
    doubleOptInEmailSentDate?: string;
    doubleOptInRegistration?: boolean;
    email: string;
    extensions?: {
      b2bBusinessPartner?: {
        data?: {
          /** @example c1736d678c9ca2f952db2f7894193bf3 */
          id?: string;
          /** @example b2b_business_partner */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/b2bBusinessPartner
           */
          related?: string;
        };
      };
      customPrice?: {
        data?: {
          /** @example 35ed8bfa9c73171a7b417f13ab07d57a */
          id?: string;
          /** @example custom_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/customPrice
           */
          related?: string;
        };
      };
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/delayActions
           */
          related?: string;
        };
      };
      employees?: {
        data?: {
          /** @example 582ca3f7cbaf4edcc1b445f8ea90b503 */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/employees
           */
          related?: string;
        };
      };
      paypalVaultTokenMappings?: {
        data?: {
          /** @example 75fb7d13a771c74947402295ed591499 */
          id?: string;
          /** @example swag_paypal_vault_token_mapping */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/paypalVaultTokenMappings
           */
          related?: string;
        };
      };
      paypalVaultTokens?: {
        data?: {
          /** @example 7e423eeb595163d20591951433de150c */
          id?: string;
          /** @example swag_paypal_vault_token */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/paypalVaultTokens
           */
          related?: string;
        };
      };
      quoteComments?: {
        data?: {
          /** @example 98dec49a83119c512f84645e81ea52d8 */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/quoteComments
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/quotes
           */
          related?: string;
        };
      };
      roles?: {
        data?: {
          /** @example 4295e8065f2f640103f566df3329e17f */
          id?: string;
          /** @example b2b_components_role */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/roles
           */
          related?: string;
        };
      };
      specificFeatures?: {
        data?: {
          /** @example 5cfb6fcb7542e25892e1a35cd6a06c54 */
          id?: string;
          /** @example customer_specific_features */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/specificFeatures
           */
          related?: string;
        };
      };
      ssoProviderCustomers?: {
        data?: {
          /** @example 6f2bd941c85a0835cd1889fd0a2c835a */
          id?: string;
          /** @example sso_provider_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/ssoProviderCustomers
           */
          related?: string;
        };
      };
      subscriptionCustomers?: {
        data?: {
          /** @example ee8811605866488e8f21308857e1e5a8 */
          id?: string;
          /** @example subscription_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/subscriptionCustomers
           */
          related?: string;
        };
      };
      swagSocialShoppingCustomer?: {
        data?: {
          /** @example 70825a5dfabd078bce265301ba7d9cca */
          id?: string;
          /** @example swag_social_shopping_customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/swagSocialShoppingCustomer
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    firstLogin?: string;
    firstName: string;
    groupId: string;
    guest?: boolean;
    hash?: string;
    id: string;
    languageId: string;
    /** Format: date-time */
    lastLogin?: string;
    lastName: string;
    /** Format: date-time */
    lastOrderDate?: string;
    lastPaymentMethodId?: string;
    /** Format: int64 */
    orderCount?: number;
    /** Format: float */
    orderTotalAmount?: number;
    relationships?: {
      addresses?: {
        data?: {
          /** @example 963e3a2fe559e393bad631f3dc686f69 */
          id?: string;
          /** @example customer_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/addresses
           */
          related?: string;
        };
      };
      boundSalesChannel?: {
        data?: {
          /** @example dfe8aec35136b1f62669b388a291a4c7 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/boundSalesChannel
           */
          related?: string;
        };
      };
      createdBy?: {
        data?: {
          /** @example 34998857f537140306898d54d4b970dc */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/createdBy
           */
          related?: string;
        };
      };
      defaultBillingAddress?: {
        data?: {
          /** @example 263d0f6e5d8d71fc4c288736f7c90990 */
          id?: string;
          /** @example customer_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/defaultBillingAddress
           */
          related?: string;
        };
      };
      defaultPaymentMethod?: {
        data?: {
          /** @example 8f35e31802b72bf010a333999b26f3a6 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/defaultPaymentMethod
           */
          related?: string;
        };
      };
      defaultShippingAddress?: {
        data?: {
          /** @example 8218c377171d06883caea7e2baf67f31 */
          id?: string;
          /** @example customer_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/defaultShippingAddress
           */
          related?: string;
        };
      };
      group?: {
        data?: {
          /** @example db0f6f37ebeb6ea09489124345af2a45 */
          id?: string;
          /** @example customer_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/group
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/language
           */
          related?: string;
        };
      };
      lastPaymentMethod?: {
        data?: {
          /** @example bb083200005a374b86f6f5fbbff6f0e0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/lastPaymentMethod
           */
          related?: string;
        };
      };
      orderCustomers?: {
        data?: {
          /** @example 1e7dbe7e3bcb48d233fd80588f54c980 */
          id?: string;
          /** @example order_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/orderCustomers
           */
          related?: string;
        };
      };
      productReviews?: {
        data?: {
          /** @example 01e78541ea343ed72424a5222796a4cd */
          id?: string;
          /** @example product_review */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/productReviews
           */
          related?: string;
        };
      };
      promotions?: {
        data?: {
          /** @example ea6aeb050f871384f25fba9c869cfe21 */
          id?: string;
          /** @example promotion */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/promotions
           */
          related?: string;
        };
      };
      recoveryCustomer?: {
        data?: {
          /** @example ce9d8d13e51bf43bc70a4be38950823b */
          id?: string;
          /** @example customer_recovery */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/recoveryCustomer
           */
          related?: string;
        };
      };
      requestedGroup?: {
        data?: {
          /** @example 46cf25a3f20102ff5e1e17526fb73b62 */
          id?: string;
          /** @example customer_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/requestedGroup
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/salesChannel
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/salutation
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/tags
           */
          related?: string;
        };
      };
      updatedBy?: {
        data?: {
          /** @example 7ced3d0067ad61702af7db8ae260aa76 */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/updatedBy
           */
          related?: string;
        };
      };
      wishlists?: {
        data?: {
          /** @example 4ec38c6b2208529c1fadccc7d55d7947 */
          id?: string;
          /** @example customer_wishlist */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer/ce26601dac0dea138b7295f02b7620a7/wishlists
           */
          related?: string;
        };
      };
    };
    remoteAddress?: string;
    requestedGroupId?: string;
    /** Format: int64 */
    reviewCount?: number;
    salesChannelId: string;
    salutationId?: string;
    tagIds?: readonly string[];
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedById?: string;
    vatIds?: string[];
  };
  CustomerRecovery: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    hash: string;
    id: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerRecoveryJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    hash: string;
    id: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-recovery/5c91cd3c845f51250c566f72e5fec3bf/customer
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerSpecificFeatures: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    features: Record<string, never>;
    id: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerSpecificFeaturesJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    features: Record<string, never>;
    id: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-specific-features/e56b0d78d82e9de6aa5c6e3d37b4a360/customer
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerTag: {
    customer?: components["schemas"]["Customer"];
    customerId: string;
    id?: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  CustomerWishlist: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    customFields?: Record<string, never>;
    id: string;
    products?: components["schemas"]["CustomerWishlistProduct"][];
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerWishlistJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    customFields?: Record<string, never>;
    id: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-wishlist/cae717e5aef3f7f9a2356eff6cb7fad1/customer
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example customer_wishlist_product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-wishlist/cae717e5aef3f7f9a2356eff6cb7fad1/products
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-wishlist/cae717e5aef3f7f9a2356eff6cb7fad1/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  CustomerWishlistProduct: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    wishlist?: components["schemas"]["CustomerWishlist"];
    wishlistId: string;
  };
  CustomerWishlistProductJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    productId: string;
    productVersionId?: string;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-wishlist-product/d6e178a98d861482131b9e2356460d16/product
           */
          related?: string;
        };
      };
      wishlist?: {
        data?: {
          /** @example 723edf7c24638ed18d2fa831e647a5cc */
          id?: string;
          /** @example customer_wishlist */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /customer-wishlist-product/d6e178a98d861482131b9e2356460d16/wishlist
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    wishlistId: string;
  };
  DeliveryTime: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    /** Format: int64 */
    max: number;
    /** Format: int64 */
    min: number;
    name: string;
    products?: components["schemas"]["Product"][];
    shippingMethods?: components["schemas"]["ShippingMethod"][];
    translated?: {
      name?: string;
      unit?: string;
    };
    unit: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  DeliveryTimeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    /** Format: int64 */
    max: number;
    /** Format: int64 */
    min: number;
    name: string;
    relationships?: {
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /delivery-time/23679aa2a9d2aa429662de0be1213305/products
           */
          related?: string;
        };
      };
      shippingMethods?: {
        data?: {
          /** @example 8268b0a6c902fbde485094c2f627b854 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /delivery-time/23679aa2a9d2aa429662de0be1213305/shippingMethods
           */
          related?: string;
        };
      };
    };
    translated?: {
      name?: string;
      unit?: string;
    };
    unit: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Document: {
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deepLinkCode: string;
    dependentDocuments?: components["schemas"]["Document"][];
    documentMediaFile?: components["schemas"]["Media"];
    documentMediaFileId?: string;
    documentNumber?: string;
    documentType?: components["schemas"]["DocumentType"];
    documentTypeId: string;
    fileType: string;
    id: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    referencedDocument?: components["schemas"]["Document"];
    referencedDocumentId?: string;
    sent?: boolean;
    static?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentBaseConfig: {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    documentNumber?: string;
    documentType?: components["schemas"]["DocumentType"];
    documentTypeId: string;
    filenamePrefix?: string;
    filenameSuffix?: string;
    global: boolean;
    id: string;
    logo?: components["schemas"]["Media"];
    logoId?: string;
    name: string;
    salesChannels?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentBaseConfigJsonApi: components["schemas"]["resource"] & {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    documentNumber?: string;
    documentTypeId: string;
    filenamePrefix?: string;
    filenameSuffix?: string;
    global: boolean;
    id: string;
    logoId?: string;
    name: string;
    relationships?: {
      documentType?: {
        data?: {
          /** @example 2e45fec65781ec559e2aea39372a55cd */
          id?: string;
          /** @example document_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document-base-config/4f8577ec262a1e35dfd795dc6bbde573/documentType
           */
          related?: string;
        };
      };
      logo?: {
        data?: {
          /** @example 96d6f2e7e1f705ab5e59c84a6dc009b2 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document-base-config/4f8577ec262a1e35dfd795dc6bbde573/logo
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example document_base_config_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document-base-config/4f8577ec262a1e35dfd795dc6bbde573/salesChannels
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentBaseConfigSalesChannel: {
    /** Format: date-time */
    createdAt: string;
    documentBaseConfig?: components["schemas"]["DocumentBaseConfig"];
    documentBaseConfigId: string;
    documentType?: components["schemas"]["DocumentType"];
    documentTypeId?: string;
    id: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentBaseConfigSalesChannelJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    documentBaseConfigId: string;
    documentTypeId?: string;
    id: string;
    relationships?: {
      documentBaseConfig?: {
        data?: {
          /** @example 56e59df02965ebf8eadea49fa0aadd47 */
          id?: string;
          /** @example document_base_config */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document-base-config-sales-channel/02a1d1c4385bb5549fa51f219bb79824/documentBaseConfig
           */
          related?: string;
        };
      };
      documentType?: {
        data?: {
          /** @example 2e45fec65781ec559e2aea39372a55cd */
          id?: string;
          /** @example document_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document-base-config-sales-channel/02a1d1c4385bb5549fa51f219bb79824/documentType
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document-base-config-sales-channel/02a1d1c4385bb5549fa51f219bb79824/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentJsonApi: components["schemas"]["resource"] & {
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deepLinkCode: string;
    documentMediaFileId?: string;
    documentNumber?: string;
    documentTypeId: string;
    fileType: string;
    id: string;
    orderId: string;
    orderVersionId?: string;
    referencedDocumentId?: string;
    relationships?: {
      dependentDocuments?: {
        data?: {
          /** @example e74b269b7d5f269051463569677da2a0 */
          id?: string;
          /** @example document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document/0945359809dad1fbf3dea1c95a0da951/dependentDocuments
           */
          related?: string;
        };
      };
      documentMediaFile?: {
        data?: {
          /** @example ac7db1e6be481d6422fc63700e08279d */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document/0945359809dad1fbf3dea1c95a0da951/documentMediaFile
           */
          related?: string;
        };
      };
      documentType?: {
        data?: {
          /** @example 2e45fec65781ec559e2aea39372a55cd */
          id?: string;
          /** @example document_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document/0945359809dad1fbf3dea1c95a0da951/documentType
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document/0945359809dad1fbf3dea1c95a0da951/order
           */
          related?: string;
        };
      };
      referencedDocument?: {
        data?: {
          /** @example 75c3c346b0ef4f319e71925ce164a9ae */
          id?: string;
          /** @example document */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /document/0945359809dad1fbf3dea1c95a0da951/referencedDocument
           */
          related?: string;
        };
      };
    };
    sent?: boolean;
    static?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentType: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    documentBaseConfigs?: components["schemas"]["DocumentBaseConfig"][];
    documentBaseConfigSalesChannels?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
    documents?: components["schemas"]["Document"][];
    extensions?: {
      quoteDocuments?: {
        data?: {
          /** @example 5f9aa016c99bbfdc16be8c44d885e7e4 */
          id?: string;
          /** @example quote_document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document-type/a3e4a918932e72ec84ec065eb5100c22/quoteDocuments
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    technicalName: string;
    translated?: {
      name?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  DocumentTypeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      quoteDocuments?: {
        data?: {
          /** @example 5f9aa016c99bbfdc16be8c44d885e7e4 */
          id?: string;
          /** @example quote_document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document-type/a3e4a918932e72ec84ec065eb5100c22/quoteDocuments
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    relationships?: {
      documentBaseConfigs?: {
        data?: {
          /** @example 0e128fa41e6afdcd85baa8ee7b07b0e3 */
          id?: string;
          /** @example document_base_config */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document-type/a3e4a918932e72ec84ec065eb5100c22/documentBaseConfigs
           */
          related?: string;
        };
      };
      documentBaseConfigSalesChannels?: {
        data?: {
          /** @example 9c990fde5b38ff70fc1a07bf84c12a17 */
          id?: string;
          /** @example document_base_config_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document-type/a3e4a918932e72ec84ec065eb5100c22/documentBaseConfigSalesChannels
           */
          related?: string;
        };
      };
      documents?: {
        data?: {
          /** @example 21f64da1e5792c8295b964d159a14491 */
          id?: string;
          /** @example document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /document-type/a3e4a918932e72ec84ec065eb5100c22/documents
           */
          related?: string;
        };
      };
    };
    technicalName: string;
    translated?: {
      name?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Flow: {
    active?: boolean;
    appFlowEvent?: components["schemas"]["AppFlowEvent"];
    appFlowEventId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    eventName: string;
    extensions?: {
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow/f1a76f66cca677c6e628d9ca58a6c8fc/delayActions
           */
          related?: string;
        };
      };
    };
    id: string;
    invalid?: boolean;
    name: string;
    /** Format: int64 */
    priority?: number;
    sequences?: components["schemas"]["FlowSequence"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  FlowJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    appFlowEventId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    eventName: string;
    extensions?: {
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow/f1a76f66cca677c6e628d9ca58a6c8fc/delayActions
           */
          related?: string;
        };
      };
    };
    id: string;
    invalid?: boolean;
    name: string;
    /** Format: int64 */
    priority?: number;
    relationships?: {
      appFlowEvent?: {
        data?: {
          /** @example d92d404135abc21e31337d9509cbe62f */
          id?: string;
          /** @example app_flow_event */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /flow/f1a76f66cca677c6e628d9ca58a6c8fc/appFlowEvent
           */
          related?: string;
        };
      };
      sequences?: {
        data?: {
          /** @example eb6710ddc89dae357ae94ca3974b1e38 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow/f1a76f66cca677c6e628d9ca58a6c8fc/sequences
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  FlowSequence: {
    actionName?: string;
    appFlowAction?: components["schemas"]["AppFlowAction"];
    appFlowActionId?: string;
    children?: components["schemas"]["FlowSequence"][];
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: int64 */
    displayGroup?: number;
    extensions?: {
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/delayActions
           */
          related?: string;
        };
      };
      webhookEventLogs?: {
        data?: {
          /** @example 82557f6f51ca956bee524cede1375331 */
          id?: string;
          /** @example webhook_event_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/webhookEventLogs
           */
          related?: string;
        };
      };
    };
    flow?: components["schemas"]["Flow"];
    flowId: string;
    id: string;
    parent?: components["schemas"]["FlowSequence"];
    parentId?: string;
    /** Format: int64 */
    position?: number;
    rule?: components["schemas"]["Rule"];
    ruleId?: string;
    trueCase?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  FlowSequenceJsonApi: components["schemas"]["resource"] & {
    actionName?: string;
    appFlowActionId?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: int64 */
    displayGroup?: number;
    extensions?: {
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/delayActions
           */
          related?: string;
        };
      };
      webhookEventLogs?: {
        data?: {
          /** @example 82557f6f51ca956bee524cede1375331 */
          id?: string;
          /** @example webhook_event_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/webhookEventLogs
           */
          related?: string;
        };
      };
    };
    flowId: string;
    id: string;
    parentId?: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      appFlowAction?: {
        data?: {
          /** @example 8ba9ae8a60ecf9be421e333b95703a68 */
          id?: string;
          /** @example app_flow_action */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/appFlowAction
           */
          related?: string;
        };
      };
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/children
           */
          related?: string;
        };
      };
      flow?: {
        data?: {
          /** @example cff5497121104c2b8e0cb41ed2083a9b */
          id?: string;
          /** @example flow */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/flow
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/parent
           */
          related?: string;
        };
      };
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /flow-sequence/983754f96cad338b500181a31b737d47/rule
           */
          related?: string;
        };
      };
    };
    ruleId?: string;
    trueCase?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  FlowTemplate: {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    name: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  FlowTemplateJsonApi: components["schemas"]["resource"] & {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    name: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ImportExportFile: {
    accessToken?: string;
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    expireDate: string;
    id: string;
    log?: components["schemas"]["ImportExportLog"];
    originalName: string;
    path: string;
    /** Format: int64 */
    size?: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  ImportExportFileJsonApi: components["schemas"]["resource"] & {
    accessToken?: string;
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    expireDate: string;
    id: string;
    originalName: string;
    path: string;
    relationships?: {
      log?: {
        data?: {
          /** @example dc1d71bbb5c4d2a5e936db79ef10c19f */
          id?: string;
          /** @example import_export_log */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-file/1e0a4283354a721dbed68499ce2db333/log
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    size?: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  ImportExportLog: {
    activity: string;
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    failedImportLog?: components["schemas"]["ImportExportLog"];
    file?: components["schemas"]["ImportExportFile"];
    fileId?: string;
    id: string;
    invalidRecordsLog?: components["schemas"]["ImportExportLog"];
    invalidRecordsLogId?: string;
    profile?: components["schemas"]["ImportExportProfile"];
    profileId?: string;
    profileName?: string;
    /** Format: int64 */
    records: number;
    result?: Record<string, never>;
    state: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId?: string;
    username?: string;
  };
  ImportExportLogJsonApi: components["schemas"]["resource"] & {
    activity: string;
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    fileId?: string;
    id: string;
    invalidRecordsLogId?: string;
    profileId?: string;
    profileName?: string;
    /** Format: int64 */
    records: number;
    relationships?: {
      failedImportLog?: {
        data?: {
          /** @example 1d6996fa1560fc40e5faad086b07ad18 */
          id?: string;
          /** @example import_export_log */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-log/4996be2318bb0b26fe9a5c57459062fa/failedImportLog
           */
          related?: string;
        };
      };
      file?: {
        data?: {
          /** @example 8c7dd922ad47494fc02c388e12c00eac */
          id?: string;
          /** @example import_export_file */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-log/4996be2318bb0b26fe9a5c57459062fa/file
           */
          related?: string;
        };
      };
      invalidRecordsLog?: {
        data?: {
          /** @example 46eeeb74b58b97a6a05494fa0024c998 */
          id?: string;
          /** @example import_export_log */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-log/4996be2318bb0b26fe9a5c57459062fa/invalidRecordsLog
           */
          related?: string;
        };
      };
      profile?: {
        data?: {
          /** @example 7d97481b1fe66f4b51db90da7e794d9f */
          id?: string;
          /** @example import_export_profile */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-log/4996be2318bb0b26fe9a5c57459062fa/profile
           */
          related?: string;
        };
      };
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-log/4996be2318bb0b26fe9a5c57459062fa/user
           */
          related?: string;
        };
      };
    };
    result?: Record<string, never>;
    state: string;
    /** Format: date-time */
    updatedAt?: string;
    userId?: string;
    username?: string;
  };
  ImportExportProfile: {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    delimiter: string;
    enclosure: string;
    fileType: string;
    id: string;
    importExportLogs?: components["schemas"]["ImportExportLog"][];
    label: string;
    mapping?: Record<string, never>;
    name?: string;
    sourceEntity: string;
    systemDefault?: boolean;
    translated?: {
      delimiter?: string;
      enclosure?: string;
      fileType?: string;
      label?: string;
      name?: string;
      sourceEntity?: string;
      type?: string;
    };
    type?: string;
    updateBy?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
  };
  ImportExportProfileJsonApi: components["schemas"]["resource"] & {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    delimiter: string;
    enclosure: string;
    fileType: string;
    id: string;
    label: string;
    mapping?: Record<string, never>;
    name?: string;
    relationships?: {
      importExportLogs?: {
        data?: {
          /** @example e4ca733e3c1da4bff4cd4b6078f2237a */
          id?: string;
          /** @example import_export_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /import-export-profile/59e9b5cef4e569ce1af9aaa1d37135fc/importExportLogs
           */
          related?: string;
        };
      };
    };
    sourceEntity: string;
    systemDefault?: boolean;
    translated?: {
      delimiter?: string;
      enclosure?: string;
      fileType?: string;
      label?: string;
      name?: string;
      sourceEntity?: string;
      type?: string;
    };
    type?: string;
    updateBy?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
  };
  Integration: {
    accessKey: string;
    aclRoles?: components["schemas"]["AclRole"][];
    admin?: boolean;
    app?: components["schemas"]["App"];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: date-time */
    deletedAt?: string;
    extensions?: {
      createdNotifications?: {
        data?: {
          /** @example 04f88ea12127fe03b65beffbc2c96954 */
          id?: string;
          /** @example notification */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /integration/1115b855bb2a508bc2ca0609cc2d0f65/createdNotifications
           */
          related?: string;
        };
      };
    };
    id: string;
    label: string;
    /** Format: date-time */
    lastUsageAt?: string;
    secretAccessKey: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  IntegrationJsonApi: components["schemas"]["resource"] & {
    accessKey: string;
    admin?: boolean;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: date-time */
    deletedAt?: string;
    extensions?: {
      createdNotifications?: {
        data?: {
          /** @example 04f88ea12127fe03b65beffbc2c96954 */
          id?: string;
          /** @example notification */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /integration/1115b855bb2a508bc2ca0609cc2d0f65/createdNotifications
           */
          related?: string;
        };
      };
    };
    id: string;
    label: string;
    /** Format: date-time */
    lastUsageAt?: string;
    relationships?: {
      aclRoles?: {
        data?: {
          /** @example e050a8081a3eb1d193c23cf0ef761183 */
          id?: string;
          /** @example acl_role */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /integration/1115b855bb2a508bc2ca0609cc2d0f65/aclRoles
           */
          related?: string;
        };
      };
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /integration/1115b855bb2a508bc2ca0609cc2d0f65/app
           */
          related?: string;
        };
      };
    };
    secretAccessKey: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  IntegrationRole: {
    aclRoleId: string;
    id?: string;
    integration?: components["schemas"]["Integration"];
    integrationId: string;
    role?: components["schemas"]["AclRole"];
  };
  LandingPage: {
    active?: boolean;
    cmsPage?: components["schemas"]["CmsPage"];
    cmsPageId?: string;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      swagDynamicAccessRules?: {
        data?: {
          /** @example 05b9d828254c957dfa5224c581439c92 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /landing-page/815c27537bec3b60c50a2ae4d2ce875d/swagDynamicAccessRules
           */
          related?: string;
        };
      };
    };
    id: string;
    keywords?: string;
    metaDescription?: string;
    metaTitle?: string;
    name: string;
    salesChannels?: components["schemas"]["SalesChannel"][];
    seoUrls?: components["schemas"]["SeoUrl"][];
    slotConfig?: Record<string, never>;
    tags?: components["schemas"]["Tag"][];
    translated?: {
      cmsPageId?: string;
      cmsPageVersionId?: string;
      keywords?: string;
      metaDescription?: string;
      metaTitle?: string;
      name?: string;
      url?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
    versionId?: string;
  };
  LandingPageJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    cmsPageId?: string;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      swagDynamicAccessRules?: {
        data?: {
          /** @example 05b9d828254c957dfa5224c581439c92 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /landing-page/815c27537bec3b60c50a2ae4d2ce875d/swagDynamicAccessRules
           */
          related?: string;
        };
      };
    };
    id: string;
    keywords?: string;
    metaDescription?: string;
    metaTitle?: string;
    name: string;
    relationships?: {
      cmsPage?: {
        data?: {
          /** @example 7b1460918b1abb93311108f3dc021c9b */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /landing-page/815c27537bec3b60c50a2ae4d2ce875d/cmsPage
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /landing-page/815c27537bec3b60c50a2ae4d2ce875d/salesChannels
           */
          related?: string;
        };
      };
      seoUrls?: {
        data?: {
          /** @example 5321b5a71127b8b98cdd4b068ad56c4c */
          id?: string;
          /** @example seo_url */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /landing-page/815c27537bec3b60c50a2ae4d2ce875d/seoUrls
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /landing-page/815c27537bec3b60c50a2ae4d2ce875d/tags
           */
          related?: string;
        };
      };
    };
    slotConfig?: Record<string, never>;
    translated?: {
      cmsPageId?: string;
      cmsPageVersionId?: string;
      keywords?: string;
      metaDescription?: string;
      metaTitle?: string;
      name?: string;
      url?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
    versionId?: string;
  };
  LandingPageSalesChannel: {
    id?: string;
    landingPage?: components["schemas"]["LandingPage"];
    landingPageId: string;
    landingPageVersionId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
  };
  LandingPageTag: {
    id?: string;
    landingPage?: components["schemas"]["LandingPage"];
    landingPageId: string;
    landingPageVersionId?: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  Language: {
    children?: components["schemas"]["Language"][];
    /** Format: date-time */
    createdAt: string;
    customers?: components["schemas"]["Customer"][];
    customFields?: Record<string, never>;
    extensions?: {
      mediaAiTagTranslation?: {
        data?: {
          /** @example e78da60cc3106508ef465909fa4cb138 */
          id?: string;
          /** @example media_ai_tag_translation */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/mediaAiTagTranslation
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/quotes
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/subscriptions
           */
          related?: string;
        };
      };
      swagLanguagePackLanguage?: {
        data?: {
          /** @example b0e2ae26691394a06d0fd87b9f97605b */
          id?: string;
          /** @example swag_language_pack_language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/swagLanguagePackLanguage
           */
          related?: string;
        };
      };
    };
    id: string;
    locale?: components["schemas"]["Locale"];
    localeId: string;
    name: string;
    newsletterRecipients?: components["schemas"]["NewsletterRecipient"][];
    orders?: components["schemas"]["Order"][];
    parent?: components["schemas"]["Language"];
    parentId?: string;
    productKeywordDictionaries?: components["schemas"]["ProductKeywordDictionary"][];
    productReviews?: components["schemas"]["ProductReview"][];
    productSearchConfig?: components["schemas"]["ProductSearchConfig"];
    productSearchKeywords?: components["schemas"]["ProductSearchKeyword"][];
    salesChannelDefaultAssignments?: components["schemas"]["SalesChannel"][];
    salesChannelDomains?: components["schemas"]["SalesChannelDomain"][];
    salesChannels?: components["schemas"]["SalesChannel"][];
    translationCode?: components["schemas"]["Locale"];
    translationCodeId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  LanguageJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      mediaAiTagTranslation?: {
        data?: {
          /** @example e78da60cc3106508ef465909fa4cb138 */
          id?: string;
          /** @example media_ai_tag_translation */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/mediaAiTagTranslation
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/quotes
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/subscriptions
           */
          related?: string;
        };
      };
      swagLanguagePackLanguage?: {
        data?: {
          /** @example b0e2ae26691394a06d0fd87b9f97605b */
          id?: string;
          /** @example swag_language_pack_language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/swagLanguagePackLanguage
           */
          related?: string;
        };
      };
    };
    id: string;
    localeId: string;
    name: string;
    parentId?: string;
    relationships?: {
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example language */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/children
           */
          related?: string;
        };
      };
      customers?: {
        data?: {
          /** @example 4b6f7d34a58ba399f077685951d06738 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/customers
           */
          related?: string;
        };
      };
      locale?: {
        data?: {
          /** @example fb216d9e8791e63c8d12bdc420956839 */
          id?: string;
          /** @example locale */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/locale
           */
          related?: string;
        };
      };
      newsletterRecipients?: {
        data?: {
          /** @example 2217f01dc5cddfd5b60387c39867f58e */
          id?: string;
          /** @example newsletter_recipient */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/newsletterRecipients
           */
          related?: string;
        };
      };
      orders?: {
        data?: {
          /** @example 12c500ed0b7879105fb46af0f246be87 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/orders
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/parent
           */
          related?: string;
        };
      };
      productKeywordDictionaries?: {
        data?: {
          /** @example 660e189a383ca4eb148e25eb0df85988 */
          id?: string;
          /** @example product_keyword_dictionary */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/productKeywordDictionaries
           */
          related?: string;
        };
      };
      productReviews?: {
        data?: {
          /** @example 01e78541ea343ed72424a5222796a4cd */
          id?: string;
          /** @example product_review */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/productReviews
           */
          related?: string;
        };
      };
      productSearchConfig?: {
        data?: {
          /** @example 8d4fbbaa71409309d308e57678de7d7a */
          id?: string;
          /** @example product_search_config */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/productSearchConfig
           */
          related?: string;
        };
      };
      productSearchKeywords?: {
        data?: {
          /** @example ea9cb6522f347c9212c9459d63c645f4 */
          id?: string;
          /** @example product_search_keyword */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/productSearchKeywords
           */
          related?: string;
        };
      };
      salesChannelDefaultAssignments?: {
        data?: {
          /** @example b23663b2abc0909be9a8027a3fbff74b */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/salesChannelDefaultAssignments
           */
          related?: string;
        };
      };
      salesChannelDomains?: {
        data?: {
          /** @example b60ab8d110194bfe34ef9928ba48ab6d */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/salesChannelDomains
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/salesChannels
           */
          related?: string;
        };
      };
      translationCode?: {
        data?: {
          /** @example 6ef2035242b8fcb7b61c3a41850e60b3 */
          id?: string;
          /** @example locale */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /language/4994a8ffeba4ac3140beb89e8d41f174/translationCode
           */
          related?: string;
        };
      };
    };
    translationCodeId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Locale: {
    code: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    languages?: components["schemas"]["Language"][];
    name: string;
    territory: string;
    translated?: {
      code?: string;
      name?: string;
      territory?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    users?: components["schemas"]["User"][];
  };
  LocaleJsonApi: components["schemas"]["resource"] & {
    code: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    name: string;
    relationships?: {
      languages?: {
        data?: {
          /** @example f3e334d42863e8250c7d03efefbfd387 */
          id?: string;
          /** @example language */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /locale/911f0f24bdce6808f4614d6a263b143b/languages
           */
          related?: string;
        };
      };
      users?: {
        data?: {
          /** @example 9bc65c2abec141778ffaa729489f3e87 */
          id?: string;
          /** @example user */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /locale/911f0f24bdce6808f4614d6a263b143b/users
           */
          related?: string;
        };
      };
    };
    territory: string;
    translated?: {
      code?: string;
      name?: string;
      territory?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  LogEntry: {
    channel?: string;
    context?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    extra?: Record<string, never>;
    id: string;
    /** Format: int64 */
    level?: number;
    message?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  LogEntryJsonApi: components["schemas"]["resource"] & {
    channel?: string;
    context?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    extra?: Record<string, never>;
    id: string;
    /** Format: int64 */
    level?: number;
    message?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  MailHeaderFooter: {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    footerHtml?: string;
    footerPlain?: string;
    headerHtml?: string;
    headerPlain?: string;
    id: string;
    name: string;
    salesChannels?: components["schemas"]["SalesChannel"][];
    systemDefault?: boolean;
    translated?: {
      description?: string;
      footerHtml?: string;
      footerPlain?: string;
      headerHtml?: string;
      headerPlain?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MailHeaderFooterJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    footerHtml?: string;
    footerPlain?: string;
    headerHtml?: string;
    headerPlain?: string;
    id: string;
    name: string;
    relationships?: {
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /mail-header-footer/d4e12da612e348a322edb9e721a365ef/salesChannels
           */
          related?: string;
        };
      };
    };
    systemDefault?: boolean;
    translated?: {
      description?: string;
      footerHtml?: string;
      footerPlain?: string;
      headerHtml?: string;
      headerPlain?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MailTemplate: {
    contentHtml: string;
    contentPlain: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      swagCmsExtensionsForms?: {
        data?: {
          /** @example a08561237fe1e2a012502c820a08405d */
          id?: string;
          /** @example swag_cms_extensions_form */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /mail-template/901aa1bf1715ad482f037eaa8b9cdc3a/swagCmsExtensionsForms
           */
          related?: string;
        };
      };
    };
    id: string;
    mailTemplateType?: components["schemas"]["MailTemplateType"];
    mailTemplateTypeId: string;
    media?: components["schemas"]["MailTemplateMedia"][];
    senderName?: string;
    subject: string;
    systemDefault?: boolean;
    translated?: {
      contentHtml?: string;
      contentPlain?: string;
      description?: string;
      mailTemplateTypeId?: string;
      senderName?: string;
      subject?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MailTemplateJsonApi: components["schemas"]["resource"] & {
    contentHtml: string;
    contentPlain: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      swagCmsExtensionsForms?: {
        data?: {
          /** @example a08561237fe1e2a012502c820a08405d */
          id?: string;
          /** @example swag_cms_extensions_form */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /mail-template/901aa1bf1715ad482f037eaa8b9cdc3a/swagCmsExtensionsForms
           */
          related?: string;
        };
      };
    };
    id: string;
    mailTemplateTypeId: string;
    relationships?: {
      mailTemplateType?: {
        data?: {
          /** @example f4e3707ad46065609def210a855620cd */
          id?: string;
          /** @example mail_template_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /mail-template/901aa1bf1715ad482f037eaa8b9cdc3a/mailTemplateType
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example mail_template_media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /mail-template/901aa1bf1715ad482f037eaa8b9cdc3a/media
           */
          related?: string;
        };
      };
    };
    senderName?: string;
    subject: string;
    systemDefault?: boolean;
    translated?: {
      contentHtml?: string;
      contentPlain?: string;
      description?: string;
      mailTemplateTypeId?: string;
      senderName?: string;
      subject?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MailTemplateMedia: {
    id: string;
    languageId: string;
    mailTemplate?: components["schemas"]["MailTemplate"];
    mailTemplateId: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    /** Format: int64 */
    position?: number;
  };
  MailTemplateType: {
    availableEntities?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    mailTemplates?: components["schemas"]["MailTemplate"][];
    name: string;
    technicalName: string;
    templateData?: Record<string, never>;
    translated?: {
      name?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MailTemplateTypeJsonApi: components["schemas"]["resource"] & {
    availableEntities?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    name: string;
    relationships?: {
      mailTemplates?: {
        data?: {
          /** @example e6f502f7d88de75db45325d22998cf6d */
          id?: string;
          /** @example mail_template */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /mail-template-type/e0107df21530abfba881ccec2728ac79/mailTemplates
           */
          related?: string;
        };
      };
    };
    technicalName: string;
    templateData?: Record<string, never>;
    translated?: {
      name?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MainCategory: {
    category?: components["schemas"]["Category"];
    categoryId: string;
    categoryVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  MainCategoryJsonApi: components["schemas"]["resource"] & {
    categoryId: string;
    categoryVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    productId: string;
    productVersionId?: string;
    relationships?: {
      category?: {
        data?: {
          /** @example c4ef352f74e502ef5e7bc98e6f4e493d */
          id?: string;
          /** @example category */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /main-category/ea5e6ad409757a2bf4b9f4c597fadc53/category
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /main-category/ea5e6ad409757a2bf4b9f4c597fadc53/product
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /main-category/ea5e6ad409757a2bf4b9f4c597fadc53/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Media: {
    alt?: string;
    appPaymentMethods?: components["schemas"]["AppPaymentMethod"][];
    appShippingMethods?: components["schemas"]["AppShippingMethod"][];
    avatarUsers?: components["schemas"]["User"][];
    categories?: components["schemas"]["Category"][];
    cmsBlocks?: components["schemas"]["CmsBlock"][];
    cmsPages?: components["schemas"]["CmsPage"][];
    cmsSections?: components["schemas"]["CmsSection"][];
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    documentBaseConfigs?: components["schemas"]["DocumentBaseConfig"][];
    documents?: components["schemas"]["Document"][];
    extensions?: {
      cmsPageDrafts?: {
        data?: {
          /** @example 93c0df75844858f2b2a9359abc152f5d */
          id?: string;
          /** @example cms_page_draft */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/cmsPageDrafts
           */
          related?: string;
        };
      };
      mediaAiTag?: {
        data?: {
          /** @example 3c88197809d464216a8c40a8db191b38 */
          id?: string;
          /** @example media_ai_tag */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/mediaAiTag
           */
          related?: string;
        };
      };
      quoteDocuments?: {
        data?: {
          /** @example 5f9aa016c99bbfdc16be8c44d885e7e4 */
          id?: string;
          /** @example quote_document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/quoteDocuments
           */
          related?: string;
        };
      };
      ssoProviders?: {
        data?: {
          /** @example 520b66891556bf9309da72937c4f1f98 */
          id?: string;
          /** @example sso_provider */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/ssoProviders
           */
          related?: string;
        };
      };
      swagCustomizedProductsTemplate?: {
        data?: {
          /** @example 6e9fad30dd3cb84748a01bb8152f4769 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/swagCustomizedProductsTemplate
           */
          related?: string;
        };
      };
      themeMedia?: {
        data?: {
          /** @example 260be9ecb281c4ff04e7189bb18a35bd */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/themeMedia
           */
          related?: string;
        };
      };
      themes?: {
        data?: {
          /** @example fe021943dcda87150f590b3475afaded */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/themes
           */
          related?: string;
        };
      };
    };
    fileExtension?: string;
    fileName?: string;
    /** Format: int64 */
    fileSize?: number;
    /** Runtime field, cannot be used as part of the criteria. */
    hasFile?: boolean;
    id: string;
    mailTemplateMedia?: components["schemas"]["MailTemplateMedia"][];
    mediaFolder?: components["schemas"]["MediaFolder"];
    mediaFolderId?: string;
    mediaType?: Record<string, never>;
    metaData?: Record<string, never>;
    mimeType?: string;
    orderLineItemDownloads?: components["schemas"]["OrderLineItemDownload"][];
    orderLineItems?: components["schemas"]["OrderLineItem"][];
    path?: string;
    paymentMethods?: components["schemas"]["PaymentMethod"][];
    private?: boolean;
    productConfiguratorSettings?: components["schemas"]["ProductConfiguratorSetting"][];
    productDownloads?: components["schemas"]["ProductDownload"][];
    productManufacturers?: components["schemas"]["ProductManufacturer"][];
    productMedia?: components["schemas"]["ProductMedia"][];
    propertyGroupOptions?: components["schemas"]["PropertyGroupOption"][];
    shippingMethods?: components["schemas"]["ShippingMethod"][];
    tags?: components["schemas"]["Tag"][];
    thumbnails?: components["schemas"]["MediaThumbnail"][];
    title?: string;
    translated?: {
      alt?: string;
      fileExtension?: string;
      fileName?: string;
      mediaFolderId?: string;
      mimeType?: string;
      path?: string;
      title?: string;
      uploadedAt?: string;
      url?: string;
      userId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    uploadedAt?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    url?: string;
    user?: components["schemas"]["User"];
    userId?: string;
  };
  MediaAiTag: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    needsAnalysis?: boolean;
    tags?: Record<string, never>[];
    translated?: {
      mediaId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MediaAiTagJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    mediaId: string;
    needsAnalysis?: boolean;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media-ai-tag/569e3d7be3a3ea0397be0e81cac3235d/media
           */
          related?: string;
        };
      };
    };
    tags?: Record<string, never>[];
    translated?: {
      mediaId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MediaDefaultFolder: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    entity: string;
    folder?: components["schemas"]["MediaFolder"];
    id: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  MediaDefaultFolderJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    entity: string;
    id: string;
    relationships?: {
      folder?: {
        data?: {
          /** @example 851148b4fd8fd7ae74bd9100c5c0c898 */
          id?: string;
          /** @example media_folder */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media-default-folder/8a4b9e9331eadf522da72638577cd527/folder
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  MediaFolder: {
    /** Format: int64 */
    childCount?: number;
    children?: components["schemas"]["MediaFolder"][];
    configuration?: components["schemas"]["MediaFolderConfiguration"];
    configurationId: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    defaultFolder?: components["schemas"]["MediaDefaultFolder"];
    defaultFolderId?: string;
    id: string;
    media?: components["schemas"]["Media"][];
    name: string;
    parent?: components["schemas"]["MediaFolder"];
    parentId?: string;
    path?: string;
    /** Format: date-time */
    updatedAt?: string;
    useParentConfiguration?: boolean;
  };
  MediaFolderConfiguration: {
    /** Format: date-time */
    createdAt: string;
    createThumbnails?: boolean;
    customFields?: Record<string, never>;
    id: string;
    keepAspectRatio?: boolean;
    mediaFolders?: components["schemas"]["MediaFolder"][];
    mediaThumbnailSizes?: components["schemas"]["MediaThumbnailSize"][];
    noAssociation?: boolean;
    private?: boolean;
    /** Format: int64 */
    thumbnailQuality?: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  MediaFolderConfigurationJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    createThumbnails?: boolean;
    customFields?: Record<string, never>;
    id: string;
    keepAspectRatio?: boolean;
    noAssociation?: boolean;
    private?: boolean;
    relationships?: {
      mediaFolders?: {
        data?: {
          /** @example 6e8238687513bde2e85821c839c597c6 */
          id?: string;
          /** @example media_folder */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder-configuration/97dfbba6a3d961140a22cc5473030850/mediaFolders
           */
          related?: string;
        };
      };
      mediaThumbnailSizes?: {
        data?: {
          /** @example 44dee48a0006e8db2fcec2a5e1456449 */
          id?: string;
          /** @example media_thumbnail_size */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder-configuration/97dfbba6a3d961140a22cc5473030850/mediaThumbnailSizes
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    thumbnailQuality?: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  MediaFolderConfigurationMediaThumbnailSize: {
    id?: string;
    mediaFolderConfiguration?: components["schemas"]["MediaFolderConfiguration"];
    mediaFolderConfigurationId: string;
    mediaThumbnailSize?: components["schemas"]["MediaThumbnailSize"];
    mediaThumbnailSizeId: string;
  };
  MediaFolderJsonApi: components["schemas"]["resource"] & {
    /** Format: int64 */
    childCount?: number;
    configurationId: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    defaultFolderId?: string;
    id: string;
    name: string;
    parentId?: string;
    path?: string;
    relationships?: {
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example media_folder */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder/8e24b126f2d2bd4373ca2681b47a405d/children
           */
          related?: string;
        };
      };
      configuration?: {
        data?: {
          /** @example ccd1066343c95877b75b79d47c36bebe */
          id?: string;
          /** @example media_folder_configuration */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder/8e24b126f2d2bd4373ca2681b47a405d/configuration
           */
          related?: string;
        };
      };
      defaultFolder?: {
        data?: {
          /** @example 251dcc9b1621d34e6b01ee14c26b3027 */
          id?: string;
          /** @example media_default_folder */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder/8e24b126f2d2bd4373ca2681b47a405d/defaultFolder
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder/8e24b126f2d2bd4373ca2681b47a405d/media
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example media_folder */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media-folder/8e24b126f2d2bd4373ca2681b47a405d/parent
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    useParentConfiguration?: boolean;
  };
  MediaJsonApi: components["schemas"]["resource"] & {
    alt?: string;
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      cmsPageDrafts?: {
        data?: {
          /** @example 93c0df75844858f2b2a9359abc152f5d */
          id?: string;
          /** @example cms_page_draft */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/cmsPageDrafts
           */
          related?: string;
        };
      };
      mediaAiTag?: {
        data?: {
          /** @example 3c88197809d464216a8c40a8db191b38 */
          id?: string;
          /** @example media_ai_tag */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/mediaAiTag
           */
          related?: string;
        };
      };
      quoteDocuments?: {
        data?: {
          /** @example 5f9aa016c99bbfdc16be8c44d885e7e4 */
          id?: string;
          /** @example quote_document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/quoteDocuments
           */
          related?: string;
        };
      };
      ssoProviders?: {
        data?: {
          /** @example 520b66891556bf9309da72937c4f1f98 */
          id?: string;
          /** @example sso_provider */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/ssoProviders
           */
          related?: string;
        };
      };
      swagCustomizedProductsTemplate?: {
        data?: {
          /** @example 6e9fad30dd3cb84748a01bb8152f4769 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/swagCustomizedProductsTemplate
           */
          related?: string;
        };
      };
      themeMedia?: {
        data?: {
          /** @example 260be9ecb281c4ff04e7189bb18a35bd */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/themeMedia
           */
          related?: string;
        };
      };
      themes?: {
        data?: {
          /** @example fe021943dcda87150f590b3475afaded */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/themes
           */
          related?: string;
        };
      };
    };
    fileExtension?: string;
    fileName?: string;
    /** Format: int64 */
    fileSize?: number;
    /** Runtime field, cannot be used as part of the criteria. */
    hasFile?: boolean;
    id: string;
    mediaFolderId?: string;
    mediaType?: Record<string, never>;
    metaData?: Record<string, never>;
    mimeType?: string;
    path?: string;
    private?: boolean;
    relationships?: {
      appPaymentMethods?: {
        data?: {
          /** @example e53c737d351047e64a02b7a2a4caffe3 */
          id?: string;
          /** @example app_payment_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/appPaymentMethods
           */
          related?: string;
        };
      };
      appShippingMethods?: {
        data?: {
          /** @example 1ad05ee47064647ee5b2dc8c12b1041c */
          id?: string;
          /** @example app_shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/appShippingMethods
           */
          related?: string;
        };
      };
      avatarUsers?: {
        data?: {
          /** @example 1fc09529f6c95370eb20b81318ff601f */
          id?: string;
          /** @example user */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/avatarUsers
           */
          related?: string;
        };
      };
      categories?: {
        data?: {
          /** @example b0b5ccb4a195a07fd3eed14affb8695f */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/categories
           */
          related?: string;
        };
      };
      cmsBlocks?: {
        data?: {
          /** @example 3636c4901eab836dfb837e1a9a37d3c0 */
          id?: string;
          /** @example cms_block */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/cmsBlocks
           */
          related?: string;
        };
      };
      cmsPages?: {
        data?: {
          /** @example e676148cc6ffb82b89b3903ecaed2d16 */
          id?: string;
          /** @example cms_page */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/cmsPages
           */
          related?: string;
        };
      };
      cmsSections?: {
        data?: {
          /** @example 53be3cc1c4a8f41af67a90cf9fd09194 */
          id?: string;
          /** @example cms_section */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/cmsSections
           */
          related?: string;
        };
      };
      documentBaseConfigs?: {
        data?: {
          /** @example 0e128fa41e6afdcd85baa8ee7b07b0e3 */
          id?: string;
          /** @example document_base_config */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/documentBaseConfigs
           */
          related?: string;
        };
      };
      documents?: {
        data?: {
          /** @example 21f64da1e5792c8295b964d159a14491 */
          id?: string;
          /** @example document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/documents
           */
          related?: string;
        };
      };
      mailTemplateMedia?: {
        data?: {
          /** @example 9970132c8439a2e630b655812b031459 */
          id?: string;
          /** @example mail_template_media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/mailTemplateMedia
           */
          related?: string;
        };
      };
      mediaFolder?: {
        data?: {
          /** @example 70605921a592ee735964394f7948773b */
          id?: string;
          /** @example media_folder */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/mediaFolder
           */
          related?: string;
        };
      };
      orderLineItemDownloads?: {
        data?: {
          /** @example 8c0a5ecd281c97a912c27c0237b3848f */
          id?: string;
          /** @example order_line_item_download */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/orderLineItemDownloads
           */
          related?: string;
        };
      };
      orderLineItems?: {
        data?: {
          /** @example 6bd56ce4562ca1be86bf5b8d92c3c1ee */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/orderLineItems
           */
          related?: string;
        };
      };
      paymentMethods?: {
        data?: {
          /** @example b631b1ab565525e892f9cdc1242cca14 */
          id?: string;
          /** @example payment_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/paymentMethods
           */
          related?: string;
        };
      };
      productConfiguratorSettings?: {
        data?: {
          /** @example 4d46eb45eaf392b26bd46f0ea8cb93e0 */
          id?: string;
          /** @example product_configurator_setting */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/productConfiguratorSettings
           */
          related?: string;
        };
      };
      productDownloads?: {
        data?: {
          /** @example 86db490c1f4f52d155dbdb978b1f45d3 */
          id?: string;
          /** @example product_download */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/productDownloads
           */
          related?: string;
        };
      };
      productManufacturers?: {
        data?: {
          /** @example 30e3a0f8868364c06aa4be63426c1c79 */
          id?: string;
          /** @example product_manufacturer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/productManufacturers
           */
          related?: string;
        };
      };
      productMedia?: {
        data?: {
          /** @example 2b5e079404830806ea36b6c17438cffd */
          id?: string;
          /** @example product_media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/productMedia
           */
          related?: string;
        };
      };
      propertyGroupOptions?: {
        data?: {
          /** @example 789104e3568fde835b6239b251d4aa07 */
          id?: string;
          /** @example property_group_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/propertyGroupOptions
           */
          related?: string;
        };
      };
      shippingMethods?: {
        data?: {
          /** @example 8268b0a6c902fbde485094c2f627b854 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/shippingMethods
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/tags
           */
          related?: string;
        };
      };
      thumbnails?: {
        data?: {
          /** @example 3b8779ba05b8f0aed49650f3ff8beb4b */
          id?: string;
          /** @example media_thumbnail */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/thumbnails
           */
          related?: string;
        };
      };
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media/3b563524fdb17b4a86590470d40bef74/user
           */
          related?: string;
        };
      };
    };
    title?: string;
    translated?: {
      alt?: string;
      fileExtension?: string;
      fileName?: string;
      mediaFolderId?: string;
      mimeType?: string;
      path?: string;
      title?: string;
      uploadedAt?: string;
      url?: string;
      userId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    uploadedAt?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    url?: string;
    userId?: string;
  };
  MediaTag: {
    id?: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  MediaThumbnail: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: int64 */
    height: number;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    path?: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    url?: string;
    /** Format: int64 */
    width: number;
  };
  MediaThumbnailJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: int64 */
    height: number;
    id: string;
    mediaId: string;
    path?: string;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /media-thumbnail/3863c110ff436b51dbc09a6ea14c56e0/media
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    url?: string;
    /** Format: int64 */
    width: number;
  };
  MediaThumbnailSize: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: int64 */
    height: number;
    id: string;
    mediaFolderConfigurations?: components["schemas"]["MediaFolderConfiguration"][];
    /** Format: date-time */
    updatedAt?: string;
    /** Format: int64 */
    width: number;
  };
  MediaThumbnailSizeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Format: int64 */
    height: number;
    id: string;
    relationships?: {
      mediaFolderConfigurations?: {
        data?: {
          /** @example 056df7a700173d83ebb685b1a890f09b */
          id?: string;
          /** @example media_folder_configuration */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /media-thumbnail-size/122652279edf3cc398ca024851b6f53f/mediaFolderConfigurations
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Format: int64 */
    width: number;
  };
  NewsletterRecipient: {
    city?: string;
    /** Format: date-time */
    confirmedAt?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    email: string;
    firstName?: string;
    hash: string;
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    lastName?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    status: string;
    street?: string;
    tags?: components["schemas"]["Tag"][];
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    zipCode?: string;
  };
  NewsletterRecipientJsonApi: components["schemas"]["resource"] & {
    city?: string;
    /** Format: date-time */
    confirmedAt?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    email: string;
    firstName?: string;
    hash: string;
    id: string;
    languageId: string;
    lastName?: string;
    relationships?: {
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /newsletter-recipient/65cb0ac7d520ba60552fa3304e8a28c7/language
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /newsletter-recipient/65cb0ac7d520ba60552fa3304e8a28c7/salesChannel
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /newsletter-recipient/65cb0ac7d520ba60552fa3304e8a28c7/salutation
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /newsletter-recipient/65cb0ac7d520ba60552fa3304e8a28c7/tags
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    salutationId?: string;
    status: string;
    street?: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    zipCode?: string;
  };
  NewsletterRecipientTag: {
    id?: string;
    newsletterRecipient?: components["schemas"]["NewsletterRecipient"];
    newsletterRecipientId: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  Notification: {
    adminOnly?: boolean;
    /** Format: date-time */
    createdAt: string;
    createdByIntegration?: components["schemas"]["Integration"];
    createdByIntegrationId?: string;
    createdByUser?: components["schemas"]["User"];
    createdByUserId?: string;
    id: string;
    message: string;
    requiredPrivileges?: Record<string, never>[];
    status: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NotificationJsonApi: components["schemas"]["resource"] & {
    adminOnly?: boolean;
    /** Format: date-time */
    createdAt: string;
    createdByIntegrationId?: string;
    createdByUserId?: string;
    id: string;
    message: string;
    relationships?: {
      createdByIntegration?: {
        data?: {
          /** @example 4698501400b26be8a41def09646e1b59 */
          id?: string;
          /** @example integration */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /notification/96d008db67fc0b5551a926842bbb6a71/createdByIntegration
           */
          related?: string;
        };
      };
      createdByUser?: {
        data?: {
          /** @example 8a66af2fd5b68899934d19e078c9c111 */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /notification/96d008db67fc0b5551a926842bbb6a71/createdByUser
           */
          related?: string;
        };
      };
    };
    requiredPrivileges?: Record<string, never>[];
    status: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRange: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    global: boolean;
    id: string;
    name: string;
    numberRangeSalesChannels?: components["schemas"]["NumberRangeSalesChannel"][];
    pattern: string;
    /** Format: int64 */
    start: number;
    state?: components["schemas"]["NumberRangeState"];
    translated?: {
      description?: string;
      name?: string;
      pattern?: string;
      typeId?: string;
    };
    type?: components["schemas"]["NumberRangeType"];
    typeId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    global: boolean;
    id: string;
    name: string;
    pattern: string;
    relationships?: {
      numberRangeSalesChannels?: {
        data?: {
          /** @example 62db021f1d56ae4688775365be68a04f */
          id?: string;
          /** @example number_range_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range/5f5cfdaae1821fd1390bb63cf30cb1f2/numberRangeSalesChannels
           */
          related?: string;
        };
      };
      state?: {
        data?: {
          /** @example 9ed39e2ea931586b6a985a6942ef573e */
          id?: string;
          /** @example number_range_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range/5f5cfdaae1821fd1390bb63cf30cb1f2/state
           */
          related?: string;
        };
      };
      type?: {
        data?: {
          /** @example 599dcce2998a6b40b1e38e8c6006cb0a */
          id?: string;
          /** @example number_range_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range/5f5cfdaae1821fd1390bb63cf30cb1f2/type
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    start: number;
    translated?: {
      description?: string;
      name?: string;
      pattern?: string;
      typeId?: string;
    };
    typeId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeSalesChannel: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    numberRange?: components["schemas"]["NumberRange"];
    numberRangeId: string;
    numberRangeType?: components["schemas"]["NumberRangeType"];
    numberRangeTypeId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeSalesChannelJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    numberRangeId: string;
    numberRangeTypeId?: string;
    relationships?: {
      numberRange?: {
        data?: {
          /** @example 0345281f3553d43436c3f0cb4796f3c9 */
          id?: string;
          /** @example number_range */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range-sales-channel/3ec3f602bd7f6198b92698a1ed8770ed/numberRange
           */
          related?: string;
        };
      };
      numberRangeType?: {
        data?: {
          /** @example 3d771a402fc5aa3349c2c15637058e8c */
          id?: string;
          /** @example number_range_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range-sales-channel/3ec3f602bd7f6198b92698a1ed8770ed/numberRangeType
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range-sales-channel/3ec3f602bd7f6198b92698a1ed8770ed/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeState: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    lastValue: number;
    numberRange?: components["schemas"]["NumberRange"];
    numberRangeId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeStateJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    lastValue: number;
    numberRangeId: string;
    relationships?: {
      numberRange?: {
        data?: {
          /** @example 0345281f3553d43436c3f0cb4796f3c9 */
          id?: string;
          /** @example number_range */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range-state/152af4426362939471d98054e285f66d/numberRange
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeType: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    global: boolean;
    id: string;
    numberRanges?: components["schemas"]["NumberRange"][];
    numberRangeSalesChannels?: components["schemas"]["NumberRangeSalesChannel"][];
    technicalName?: string;
    translated?: {
      technicalName?: string;
      typeName?: string;
    };
    typeName: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  NumberRangeTypeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    global: boolean;
    id: string;
    relationships?: {
      numberRanges?: {
        data?: {
          /** @example d28d88efea70a67487116019cff39002 */
          id?: string;
          /** @example number_range */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range-type/1c05c24712e2a7f0a609a9f728a41a33/numberRanges
           */
          related?: string;
        };
      };
      numberRangeSalesChannels?: {
        data?: {
          /** @example 62db021f1d56ae4688775365be68a04f */
          id?: string;
          /** @example number_range_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /number-range-type/1c05c24712e2a7f0a609a9f728a41a33/numberRangeSalesChannels
           */
          related?: string;
        };
      };
    };
    technicalName?: string;
    translated?: {
      technicalName?: string;
      typeName?: string;
    };
    typeName: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  OAuthClientCredentialsGrant: {
    grant_type: "client_credentials";
  } & Omit<components["schemas"]["OAuthGrant"], "grant_type"> & {
      /** OAuth client id. */
      client_id: string;
      /** Password of the client that should be authenticated. */
      client_secret: string;
    };
  OAuthGrant: {
    /** OAuth grant type that should be requested. See [OAuth 2.0 grant](https://oauth2.thephpleague.com/authorization-server/which-grant/) for more information. */
    grant_type: string;
  };
  OAuthPasswordGrant: {
    grant_type: "password";
  } & Omit<components["schemas"]["OAuthGrant"], "grant_type"> & {
      /**
       * OAuth client id.
       * @enum {string}
       */
      client_id: "administration";
      /** Password of the user that should be authenticated. */
      password: string;
      scopes: components["schemas"]["OAuthScopes"];
      /** Username of the user that should be authenticated. */
      username: string;
    };
  OAuthRefreshTokenGrant: {
    grant_type: "refresh_token";
  } & Omit<components["schemas"]["OAuthGrant"], "grant_type"> & {
      /**
       * OAuth client id.
       * @enum {string}
       */
      client_id: "administration";
      /** The refresh token that should be used to refresh the access token. */
      refresh_token: string;
      scopes: components["schemas"]["OAuthScopes"];
    };
  OAuthScopes:
    | "write"
    | "user-verified"
    | "admin"
    | "write user-verified"
    | "write admin"
    | "user-verified admin"
    | "write user-verified admin";
  Order: {
    addresses?: components["schemas"]["OrderAddress"][];
    affiliateCode?: string;
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    /** Format: int64 */
    autoIncrement?: number;
    billingAddress?: components["schemas"]["OrderAddress"];
    billingAddressId: string;
    billingAddressVersionId?: string;
    campaignCode?: string;
    /** Format: date-time */
    createdAt: string;
    createdBy?: components["schemas"]["User"];
    createdById?: string;
    currency?: components["schemas"]["Currency"];
    /** Format: float */
    currencyFactor: number;
    currencyId: string;
    customerComment?: string;
    customFields?: Record<string, never>;
    deepLinkCode?: string;
    deliveries?: components["schemas"]["OrderDelivery"][];
    documents?: components["schemas"]["Document"][];
    extensions?: {
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/delayActions
           */
          related?: string;
        };
      };
      orderEmployee?: {
        data?: {
          /** @example 5ea451c08a87db806089c4031601c29a */
          id?: string;
          /** @example b2b_order_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/orderEmployee
           */
          related?: string;
        };
      };
      returns?: {
        data?: {
          /** @example 7fff84525c6516919851a9005373f87e */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/returns
           */
          related?: string;
        };
      };
      subscription?: {
        data?: {
          /** @example b48b13e73a6ac2a86dc54425dd24d9ff */
          id?: string;
          /** @example subscription */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/subscription
           */
          related?: string;
        };
      };
      swagSocialShoppingOrder?: {
        data?: {
          /** @example 829fa9441f5dea1e7ada99a9ae4a867f */
          id?: string;
          /** @example swag_social_shopping_order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/swagSocialShoppingOrder
           */
          related?: string;
        };
      };
      warehouseGroups?: {
        data?: {
          /** @example 21191f2f6f4c30cd4ccc4714fa74ffea */
          id?: string;
          /** @example order_warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/warehouseGroups
           */
          related?: string;
        };
      };
      warehouseProducts?: {
        data?: {
          /** @example 702258c6879958a41dfc328ad5c00325 */
          id?: string;
          /** @example order_product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/warehouseProducts
           */
          related?: string;
        };
      };
    };
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    language?: components["schemas"]["Language"];
    languageId: string;
    lineItems?: components["schemas"]["OrderLineItem"][];
    orderCustomer?: components["schemas"]["OrderCustomer"];
    orderDate?: string;
    /** Format: date-time */
    orderDateTime: string;
    orderNumber?: string;
    /** Format: float */
    positionPrice?: number;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    ruleIds?: string[];
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: float */
    shippingTotal?: number;
    source?: string;
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    tags?: components["schemas"]["Tag"][];
    taxStatus?: string;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    transactions?: components["schemas"]["OrderTransaction"][];
    /** Format: date-time */
    updatedAt?: string;
    updatedBy?: components["schemas"]["User"];
    updatedById?: string;
    versionId?: string;
  };
  OrderAddress: {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    country?: components["schemas"]["Country"];
    countryId: string;
    countryState?: components["schemas"]["CountryState"];
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    order?: components["schemas"]["Order"];
    orderDeliveries?: components["schemas"]["OrderDelivery"][];
    orderId: string;
    orderVersionId?: string;
    phoneNumber?: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    street: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatId?: string;
    versionId?: string;
    zipcode?: string;
  };
  OrderAddressJsonApi: components["schemas"]["resource"] & {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    countryId: string;
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    orderId: string;
    orderVersionId?: string;
    phoneNumber?: string;
    relationships?: {
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-address/4751eee0d88e6475a9a766bb7a37ae43/country
           */
          related?: string;
        };
      };
      countryState?: {
        data?: {
          /** @example cb6a9764567191fb74fe28d8d6a4819d */
          id?: string;
          /** @example country_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-address/4751eee0d88e6475a9a766bb7a37ae43/countryState
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-address/4751eee0d88e6475a9a766bb7a37ae43/order
           */
          related?: string;
        };
      };
      orderDeliveries?: {
        data?: {
          /** @example 0ba472de56dd7ba2e7bb878434321e26 */
          id?: string;
          /** @example order_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-address/4751eee0d88e6475a9a766bb7a37ae43/orderDeliveries
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-address/4751eee0d88e6475a9a766bb7a37ae43/salutation
           */
          related?: string;
        };
      };
    };
    salutationId?: string;
    street: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatId?: string;
    versionId?: string;
    zipcode?: string;
  };
  OrderCustomer: {
    company?: string;
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId?: string;
    customerNumber?: string;
    customFields?: Record<string, never>;
    email: string;
    firstName: string;
    id: string;
    lastName: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    remoteAddress?: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatIds?: string[];
    versionId?: string;
  };
  OrderCustomerJsonApi: components["schemas"]["resource"] & {
    company?: string;
    /** Format: date-time */
    createdAt: string;
    customerId?: string;
    customerNumber?: string;
    customFields?: Record<string, never>;
    email: string;
    firstName: string;
    id: string;
    lastName: string;
    orderId: string;
    orderVersionId?: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-customer/b7d3ba78e0695759b84a7f20a6f0c907/customer
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-customer/b7d3ba78e0695759b84a7f20a6f0c907/order
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-customer/b7d3ba78e0695759b84a7f20a6f0c907/salutation
           */
          related?: string;
        };
      };
    };
    remoteAddress?: string;
    salutationId?: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatIds?: string[];
    versionId?: string;
  };
  OrderDelivery: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    positions?: components["schemas"]["OrderDeliveryPosition"][];
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    shippingDateEarliest: string;
    /** Format: date-time */
    shippingDateLatest: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    shippingOrderAddress?: components["schemas"]["OrderAddress"];
    shippingOrderAddressId: string;
    shippingOrderAddressVersionId?: string;
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    trackingCodes: string[];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderDeliveryJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    orderId: string;
    orderVersionId?: string;
    relationships?: {
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery/ec47a00e89a14dee454b699af8831df4/order
           */
          related?: string;
        };
      };
      positions?: {
        data?: {
          /** @example 365a4a972db646c76d115b3897f2d4de */
          id?: string;
          /** @example order_delivery_position */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery/ec47a00e89a14dee454b699af8831df4/positions
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery/ec47a00e89a14dee454b699af8831df4/shippingMethod
           */
          related?: string;
        };
      };
      shippingOrderAddress?: {
        data?: {
          /** @example 39a8592767b8b6a5d6b1dbc47e4058ca */
          id?: string;
          /** @example order_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery/ec47a00e89a14dee454b699af8831df4/shippingOrderAddress
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery/ec47a00e89a14dee454b699af8831df4/stateMachineState
           */
          related?: string;
        };
      };
    };
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    shippingDateEarliest: string;
    /** Format: date-time */
    shippingDateLatest: string;
    shippingMethodId: string;
    shippingOrderAddressId: string;
    shippingOrderAddressVersionId?: string;
    stateId: string;
    trackingCodes: string[];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderDeliveryPosition: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    orderDelivery?: components["schemas"]["OrderDelivery"];
    orderDeliveryId: string;
    orderDeliveryVersionId?: string;
    orderLineItem?: components["schemas"]["OrderLineItem"];
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: int64 */
    quantity?: number;
    /** Format: float */
    totalPrice?: number;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderDeliveryPositionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    orderDeliveryId: string;
    orderDeliveryVersionId?: string;
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: int64 */
    quantity?: number;
    relationships?: {
      orderDelivery?: {
        data?: {
          /** @example 473c50bdac32ac0dc66364d121260dce */
          id?: string;
          /** @example order_delivery */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery-position/e09b06c69231a14a01e186482e70f7b7/orderDelivery
           */
          related?: string;
        };
      };
      orderLineItem?: {
        data?: {
          /** @example 72c0cccf44b384eb8f91e0f7074252f8 */
          id?: string;
          /** @example order_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-delivery-position/e09b06c69231a14a01e186482e70f7b7/orderLineItem
           */
          related?: string;
        };
      };
    };
    /** Format: float */
    totalPrice?: number;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderJsonApi: components["schemas"]["resource"] & {
    affiliateCode?: string;
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    /** Format: int64 */
    autoIncrement?: number;
    billingAddressId: string;
    billingAddressVersionId?: string;
    campaignCode?: string;
    /** Format: date-time */
    createdAt: string;
    createdById?: string;
    /** Format: float */
    currencyFactor: number;
    currencyId: string;
    customerComment?: string;
    customFields?: Record<string, never>;
    deepLinkCode?: string;
    extensions?: {
      delayActions?: {
        data?: {
          /** @example edfed55799054673006c4b5a643489ac */
          id?: string;
          /** @example swag_delay_action */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/delayActions
           */
          related?: string;
        };
      };
      orderEmployee?: {
        data?: {
          /** @example 5ea451c08a87db806089c4031601c29a */
          id?: string;
          /** @example b2b_order_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/orderEmployee
           */
          related?: string;
        };
      };
      returns?: {
        data?: {
          /** @example 7fff84525c6516919851a9005373f87e */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/returns
           */
          related?: string;
        };
      };
      subscription?: {
        data?: {
          /** @example b48b13e73a6ac2a86dc54425dd24d9ff */
          id?: string;
          /** @example subscription */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/subscription
           */
          related?: string;
        };
      };
      swagSocialShoppingOrder?: {
        data?: {
          /** @example 829fa9441f5dea1e7ada99a9ae4a867f */
          id?: string;
          /** @example swag_social_shopping_order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/swagSocialShoppingOrder
           */
          related?: string;
        };
      };
      warehouseGroups?: {
        data?: {
          /** @example 21191f2f6f4c30cd4ccc4714fa74ffea */
          id?: string;
          /** @example order_warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/warehouseGroups
           */
          related?: string;
        };
      };
      warehouseProducts?: {
        data?: {
          /** @example 702258c6879958a41dfc328ad5c00325 */
          id?: string;
          /** @example order_product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/warehouseProducts
           */
          related?: string;
        };
      };
    };
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    languageId: string;
    orderDate?: string;
    /** Format: date-time */
    orderDateTime: string;
    orderNumber?: string;
    /** Format: float */
    positionPrice?: number;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    relationships?: {
      addresses?: {
        data?: {
          /** @example 963e3a2fe559e393bad631f3dc686f69 */
          id?: string;
          /** @example order_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/addresses
           */
          related?: string;
        };
      };
      billingAddress?: {
        data?: {
          /** @example 7fee8ff88b768662dd8fc06e1b6997d2 */
          id?: string;
          /** @example order_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/billingAddress
           */
          related?: string;
        };
      };
      createdBy?: {
        data?: {
          /** @example 34998857f537140306898d54d4b970dc */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/createdBy
           */
          related?: string;
        };
      };
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/currency
           */
          related?: string;
        };
      };
      deliveries?: {
        data?: {
          /** @example 6fc31b6b9cd717cc0dcb81152308f8af */
          id?: string;
          /** @example order_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/deliveries
           */
          related?: string;
        };
      };
      documents?: {
        data?: {
          /** @example 21f64da1e5792c8295b964d159a14491 */
          id?: string;
          /** @example document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/documents
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/language
           */
          related?: string;
        };
      };
      lineItems?: {
        data?: {
          /** @example a042af1aa9f3853fe3cd7dabc065568f */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/lineItems
           */
          related?: string;
        };
      };
      orderCustomer?: {
        data?: {
          /** @example e90c9c228c1510f5a25902f7a1e8426a */
          id?: string;
          /** @example order_customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/orderCustomer
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/salesChannel
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/stateMachineState
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/tags
           */
          related?: string;
        };
      };
      transactions?: {
        data?: {
          /** @example c15b977dd99332ca8623fbdfb86827e8 */
          id?: string;
          /** @example order_transaction */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/transactions
           */
          related?: string;
        };
      };
      updatedBy?: {
        data?: {
          /** @example 7ced3d0067ad61702af7db8ae260aa76 */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order/a240fa27925a635b08dc28c9e4f9216d/updatedBy
           */
          related?: string;
        };
      };
    };
    ruleIds?: string[];
    salesChannelId: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: float */
    shippingTotal?: number;
    source?: string;
    stateId: string;
    taxStatus?: string;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
    updatedById?: string;
    versionId?: string;
  };
  OrderLineItem: {
    children: components["schemas"]["OrderLineItem"][];
    cover?: components["schemas"]["Media"];
    coverId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    downloads?: components["schemas"]["OrderLineItemDownload"][];
    extensions?: {
      returns?: {
        data?: {
          /** @example 7fff84525c6516919851a9005373f87e */
          id?: string;
          /** @example order_return_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/returns
           */
          related?: string;
        };
      };
      state?: {
        data?: {
          /** @example 9ed39e2ea931586b6a985a6942ef573e */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/state
           */
          related?: string;
        };
      };
    };
    good?: boolean;
    id: string;
    identifier: string;
    label: string;
    order?: components["schemas"]["Order"];
    orderDeliveryPositions?: components["schemas"]["OrderDeliveryPosition"][];
    orderId: string;
    orderTransactionCaptureRefundPositions?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
    orderVersionId?: string;
    parent?: components["schemas"]["OrderLineItem"];
    parentId?: string;
    parentVersionId?: string;
    payload?: Record<string, never>;
    /** Format: int64 */
    position: number;
    price: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    priceDefinition?: Record<string, never>;
    product?: components["schemas"]["Product"];
    productId?: string;
    productVersionId?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId?: string;
    /** Format: int64 */
    quantity: number;
    referencedId?: string;
    removable?: boolean;
    stackable?: boolean;
    states: string[];
    /** Format: float */
    totalPrice?: number;
    type?: string;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderLineItemDownload: {
    accessGranted: boolean;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    orderLineItem?: components["schemas"]["OrderLineItem"];
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    /** Format: int64 */
    position: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderLineItemDownloadJsonApi: components["schemas"]["resource"] & {
    accessGranted: boolean;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    mediaId: string;
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    /** Format: int64 */
    position: number;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item-download/583247f605cf67a4124e4eb17a66094e/media
           */
          related?: string;
        };
      };
      orderLineItem?: {
        data?: {
          /** @example 72c0cccf44b384eb8f91e0f7074252f8 */
          id?: string;
          /** @example order_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item-download/583247f605cf67a4124e4eb17a66094e/orderLineItem
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderLineItemJsonApi: components["schemas"]["resource"] & {
    coverId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      returns?: {
        data?: {
          /** @example 7fff84525c6516919851a9005373f87e */
          id?: string;
          /** @example order_return_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/returns
           */
          related?: string;
        };
      };
      state?: {
        data?: {
          /** @example 9ed39e2ea931586b6a985a6942ef573e */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/state
           */
          related?: string;
        };
      };
    };
    good?: boolean;
    id: string;
    identifier: string;
    label: string;
    orderId: string;
    orderVersionId?: string;
    parentId?: string;
    parentVersionId?: string;
    payload?: Record<string, never>;
    /** Format: int64 */
    position: number;
    price: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    priceDefinition?: Record<string, never>;
    productId?: string;
    productVersionId?: string;
    promotionId?: string;
    /** Format: int64 */
    quantity: number;
    referencedId?: string;
    relationships?: {
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/children
           */
          related?: string;
        };
      };
      cover?: {
        data?: {
          /** @example 41d0e299ca1abeb2094852da042165c7 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/cover
           */
          related?: string;
        };
      };
      downloads?: {
        data?: {
          /** @example d07d50a751bc6ddf12bf3af0efee9b45 */
          id?: string;
          /** @example order_line_item_download */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/downloads
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/order
           */
          related?: string;
        };
      };
      orderDeliveryPositions?: {
        data?: {
          /** @example 76d4619a36f864b08f57415baaa685ec */
          id?: string;
          /** @example order_delivery_position */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/orderDeliveryPositions
           */
          related?: string;
        };
      };
      orderTransactionCaptureRefundPositions?: {
        data?: {
          /** @example c330b64e5adc1e48e07a78aa79e5b27a */
          id?: string;
          /** @example order_transaction_capture_refund_position */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/orderTransactionCaptureRefundPositions
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example order_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/parent
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/product
           */
          related?: string;
        };
      };
      promotion?: {
        data?: {
          /** @example f8dcad058c9c44fdb6ffcb22d2d4c31f */
          id?: string;
          /** @example promotion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/promotion
           */
          related?: string;
        };
      };
    };
    removable?: boolean;
    stackable?: boolean;
    states: string[];
    /** Format: float */
    totalPrice?: number;
    type?: string;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderProductWarehouse: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: int64 */
    quantity?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    warehouseId: string;
    warehouses?: components["schemas"]["Warehouse"][];
  };
  OrderProductWarehouseJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    orderId: string;
    orderVersionId?: string;
    productId: string;
    productVersionId?: string;
    /** Format: int64 */
    quantity?: number;
    relationships?: {
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-product-warehouse/ef794dc5239b6857296e8e4ee4605a36/order
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-product-warehouse/ef794dc5239b6857296e8e4ee4605a36/product
           */
          related?: string;
        };
      };
      warehouses?: {
        data?: {
          /** @example 544959798565126142ca2820b4f56271 */
          id?: string;
          /** @example warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-product-warehouse/ef794dc5239b6857296e8e4ee4605a36/warehouses
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    warehouseId: string;
  };
  OrderReturn: {
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    /** Format: date-time */
    createdAt: string;
    createdBy?: components["schemas"]["User"];
    createdById?: string;
    id: string;
    internalComment?: string;
    lineItems?: components["schemas"]["OrderReturnLineItem"][];
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    /** Format: date-time */
    requestedAt: string;
    returnNumber: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    state?: components["schemas"]["StateMachineState"];
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedBy?: components["schemas"]["User"];
    updatedById?: string;
    versionId?: string;
  };
  OrderReturnJsonApi: components["schemas"]["resource"] & {
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    /** Format: date-time */
    createdAt: string;
    createdById?: string;
    id: string;
    internalComment?: string;
    orderId: string;
    orderVersionId?: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    relationships?: {
      createdBy?: {
        data?: {
          /** @example 34998857f537140306898d54d4b970dc */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return/f69f638340dfe19ae7ae215a7d5a8670/createdBy
           */
          related?: string;
        };
      };
      lineItems?: {
        data?: {
          /** @example a042af1aa9f3853fe3cd7dabc065568f */
          id?: string;
          /** @example order_return_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return/f69f638340dfe19ae7ae215a7d5a8670/lineItems
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return/f69f638340dfe19ae7ae215a7d5a8670/order
           */
          related?: string;
        };
      };
      state?: {
        data?: {
          /** @example 9ed39e2ea931586b6a985a6942ef573e */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return/f69f638340dfe19ae7ae215a7d5a8670/state
           */
          related?: string;
        };
      };
      updatedBy?: {
        data?: {
          /** @example 7ced3d0067ad61702af7db8ae260aa76 */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return/f69f638340dfe19ae7ae215a7d5a8670/updatedBy
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    requestedAt: string;
    returnNumber: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedById?: string;
    versionId?: string;
  };
  OrderReturnLineItem: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    internalComment?: string;
    lineItem?: components["schemas"]["OrderLineItem"];
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    orderReturnId: string;
    orderReturnVersionId?: string;
    price: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: int64 */
    quantity: number;
    reason?: components["schemas"]["OrderReturnLineItemReason"];
    reasonId: string;
    /** Format: float */
    refundAmount?: number;
    /** Format: int64 */
    restockQuantity?: number;
    return?: components["schemas"]["OrderReturn"];
    state?: components["schemas"]["StateMachineState"];
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderReturnLineItemJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    internalComment?: string;
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    orderReturnId: string;
    orderReturnVersionId?: string;
    price: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: int64 */
    quantity: number;
    reasonId: string;
    /** Format: float */
    refundAmount?: number;
    relationships?: {
      lineItem?: {
        data?: {
          /** @example 867cf1ff92974922abc5d5b045b4a2d8 */
          id?: string;
          /** @example order_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return-line-item/82c86fa96448e66da162746de632d95f/lineItem
           */
          related?: string;
        };
      };
      reason?: {
        data?: {
          /** @example 40bea8d637cdf2c1b07fcf0630482b73 */
          id?: string;
          /** @example order_return_line_item_reason */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return-line-item/82c86fa96448e66da162746de632d95f/reason
           */
          related?: string;
        };
      };
      return?: {
        data?: {
          /** @example e70c4df10ef0983b9c8c31bd06b2a2c3 */
          id?: string;
          /** @example order_return */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return-line-item/82c86fa96448e66da162746de632d95f/return
           */
          related?: string;
        };
      };
      state?: {
        data?: {
          /** @example 9ed39e2ea931586b6a985a6942ef573e */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return-line-item/82c86fa96448e66da162746de632d95f/state
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    restockQuantity?: number;
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderReturnLineItemReason: {
    content: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    lineItems?: components["schemas"]["OrderReturnLineItem"][];
    reasonKey: string;
    translated?: {
      content?: string;
      reasonKey?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  OrderReturnLineItemReasonJsonApi: components["schemas"]["resource"] & {
    content: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    reasonKey: string;
    relationships?: {
      lineItems?: {
        data?: {
          /** @example a042af1aa9f3853fe3cd7dabc065568f */
          id?: string;
          /** @example order_return_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-return-line-item-reason/56b9c90342150f40164af1328340bbac/lineItems
           */
          related?: string;
        };
      };
    };
    translated?: {
      content?: string;
      reasonKey?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  OrderTag: {
    id?: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  OrderTransaction: {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    captures?: components["schemas"]["OrderTransactionCapture"][];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionCapture: {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    externalReference?: string;
    id: string;
    orderTransactionId: string;
    orderTransactionVersionId?: string;
    refunds?: components["schemas"]["OrderTransactionCaptureRefund"][];
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    transaction?: components["schemas"]["OrderTransaction"];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionCaptureJsonApi: components["schemas"]["resource"] & {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    externalReference?: string;
    id: string;
    orderTransactionId: string;
    orderTransactionVersionId?: string;
    relationships?: {
      refunds?: {
        data?: {
          /** @example 0084ff716402199f733f841f5937d3ae */
          id?: string;
          /** @example order_transaction_capture_refund */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture/c63c3187538f020dbe3d0c9bd41c5fea/refunds
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture/c63c3187538f020dbe3d0c9bd41c5fea/stateMachineState
           */
          related?: string;
        };
      };
      transaction?: {
        data?: {
          /** @example f4d5b76a2418eba4baeabc1ed9142b54 */
          id?: string;
          /** @example order_transaction */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture/c63c3187538f020dbe3d0c9bd41c5fea/transaction
           */
          related?: string;
        };
      };
    };
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionCaptureRefund: {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    captureId: string;
    captureVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    externalReference?: string;
    id: string;
    positions?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
    reason?: string;
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    transactionCapture?: components["schemas"]["OrderTransactionCapture"];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionCaptureRefundJsonApi: components["schemas"]["resource"] & {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    captureId: string;
    captureVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    externalReference?: string;
    id: string;
    reason?: string;
    relationships?: {
      positions?: {
        data?: {
          /** @example 365a4a972db646c76d115b3897f2d4de */
          id?: string;
          /** @example order_transaction_capture_refund_position */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture-refund/3024adb21b1ba17454cf7cc0cfa881d4/positions
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture-refund/3024adb21b1ba17454cf7cc0cfa881d4/stateMachineState
           */
          related?: string;
        };
      };
      transactionCapture?: {
        data?: {
          /** @example 56b70ce76ce8e9bfbaf80ea040d456b5 */
          id?: string;
          /** @example order_transaction_capture */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture-refund/3024adb21b1ba17454cf7cc0cfa881d4/transactionCapture
           */
          related?: string;
        };
      };
    };
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionCaptureRefundPosition: {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    externalReference?: string;
    id: string;
    orderLineItem?: components["schemas"]["OrderLineItem"];
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    orderTransactionCaptureRefund?: components["schemas"]["OrderTransactionCaptureRefund"];
    /** Format: int64 */
    quantity?: number;
    reason?: string;
    refundId: string;
    refundVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionCaptureRefundPositionJsonApi: components["schemas"]["resource"] & {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    externalReference?: string;
    id: string;
    orderLineItemId: string;
    orderLineItemVersionId?: string;
    /** Format: int64 */
    quantity?: number;
    reason?: string;
    refundId: string;
    refundVersionId?: string;
    relationships?: {
      orderLineItem?: {
        data?: {
          /** @example 72c0cccf44b384eb8f91e0f7074252f8 */
          id?: string;
          /** @example order_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture-refund-position/dc9ea2968815c3064d57d506f542c4c1/orderLineItem
           */
          related?: string;
        };
      };
      orderTransactionCaptureRefund?: {
        data?: {
          /** @example 8e55f83da36c39263717541ec1f18de7 */
          id?: string;
          /** @example order_transaction_capture_refund */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction-capture-refund-position/dc9ea2968815c3064d57d506f542c4c1/orderTransactionCaptureRefund
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderTransactionJsonApi: components["schemas"]["resource"] & {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    orderId: string;
    orderVersionId?: string;
    paymentMethodId: string;
    relationships?: {
      captures?: {
        data?: {
          /** @example 8856ffdd044d57cd4124a6be5dcea329 */
          id?: string;
          /** @example order_transaction_capture */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction/117c998b69fea8e51bd46a905f8cdbeb/captures
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction/117c998b69fea8e51bd46a905f8cdbeb/order
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction/117c998b69fea8e51bd46a905f8cdbeb/paymentMethod
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-transaction/117c998b69fea8e51bd46a905f8cdbeb/stateMachineState
           */
          related?: string;
        };
      };
    };
    stateId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  OrderWarehouseGroup: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    warehouseGroup?: components["schemas"]["WarehouseGroup"];
    warehouseGroupId: string;
  };
  OrderWarehouseGroupJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    orderId: string;
    orderVersionId?: string;
    relationships?: {
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-warehouse-group/76d096c61d28159fe3efcbceced45044/order
           */
          related?: string;
        };
      };
      warehouseGroup?: {
        data?: {
          /** @example 1768e3071b62161d415e0c24332055ed */
          id?: string;
          /** @example warehouse_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /order-warehouse-group/76d096c61d28159fe3efcbceced45044/warehouseGroup
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
    warehouseGroupId: string;
  };
  PaymentMethod: {
    active?: boolean;
    afterOrderEnabled?: boolean;
    appPaymentMethod?: components["schemas"]["AppPaymentMethod"];
    /** Runtime field, cannot be used as part of the criteria. */
    asynchronous?: boolean;
    availabilityRule?: components["schemas"]["Rule"];
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    customers?: components["schemas"]["Customer"][];
    customFields?: Record<string, never>;
    description?: string;
    distinguishableName?: string;
    extensions?: {
      paypalVaultTokenMappings?: {
        data?: {
          /** @example 75fb7d13a771c74947402295ed591499 */
          id?: string;
          /** @example swag_paypal_vault_token_mapping */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/paypalVaultTokenMappings
           */
          related?: string;
        };
      };
      paypalVaultTokens?: {
        data?: {
          /** @example 7e423eeb595163d20591951433de150c */
          id?: string;
          /** @example swag_paypal_vault_token */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/paypalVaultTokens
           */
          related?: string;
        };
      };
      quoteTransactions?: {
        data?: {
          /** @example c960fb2e8b7ef26229da52c7f7775e13 */
          id?: string;
          /** @example quote_transaction */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/quoteTransactions
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/subscriptions
           */
          related?: string;
        };
      };
    };
    /** Runtime field, cannot be used as part of the criteria. */
    formattedHandlerIdentifier?: string;
    handlerIdentifier?: string;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    name: string;
    orderTransactions?: components["schemas"]["OrderTransaction"][];
    plugin?: components["schemas"]["Plugin"];
    pluginId?: string;
    /** Format: int64 */
    position?: number;
    /** Runtime field, cannot be used as part of the criteria. */
    prepared?: boolean;
    /** Runtime field, cannot be used as part of the criteria. */
    recurring?: boolean;
    /** Runtime field, cannot be used as part of the criteria. */
    refundable?: boolean;
    salesChannelDefaultAssignments?: components["schemas"]["SalesChannel"][];
    salesChannels?: components["schemas"]["SalesChannel"][];
    /** Runtime field, cannot be used as part of the criteria. */
    shortName?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    synchronous?: boolean;
    technicalName?: string;
    translated?: {
      availabilityRuleId?: string;
      description?: string;
      distinguishableName?: string;
      formattedHandlerIdentifier?: string;
      handlerIdentifier?: string;
      mediaId?: string;
      name?: string;
      pluginId?: string;
      shortName?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  PaymentMethodJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    afterOrderEnabled?: boolean;
    /** Runtime field, cannot be used as part of the criteria. */
    asynchronous?: boolean;
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    distinguishableName?: string;
    extensions?: {
      paypalVaultTokenMappings?: {
        data?: {
          /** @example 75fb7d13a771c74947402295ed591499 */
          id?: string;
          /** @example swag_paypal_vault_token_mapping */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/paypalVaultTokenMappings
           */
          related?: string;
        };
      };
      paypalVaultTokens?: {
        data?: {
          /** @example 7e423eeb595163d20591951433de150c */
          id?: string;
          /** @example swag_paypal_vault_token */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/paypalVaultTokens
           */
          related?: string;
        };
      };
      quoteTransactions?: {
        data?: {
          /** @example c960fb2e8b7ef26229da52c7f7775e13 */
          id?: string;
          /** @example quote_transaction */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/quoteTransactions
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/subscriptions
           */
          related?: string;
        };
      };
    };
    /** Runtime field, cannot be used as part of the criteria. */
    formattedHandlerIdentifier?: string;
    handlerIdentifier?: string;
    id: string;
    mediaId?: string;
    name: string;
    pluginId?: string;
    /** Format: int64 */
    position?: number;
    /** Runtime field, cannot be used as part of the criteria. */
    prepared?: boolean;
    /** Runtime field, cannot be used as part of the criteria. */
    recurring?: boolean;
    /** Runtime field, cannot be used as part of the criteria. */
    refundable?: boolean;
    relationships?: {
      appPaymentMethod?: {
        data?: {
          /** @example 30f64104cd0d0a7bb8a9e07fe4d12d88 */
          id?: string;
          /** @example app_payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/appPaymentMethod
           */
          related?: string;
        };
      };
      availabilityRule?: {
        data?: {
          /** @example 9fbb7961d1cb158094924c679e1b302c */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/availabilityRule
           */
          related?: string;
        };
      };
      customers?: {
        data?: {
          /** @example 4b6f7d34a58ba399f077685951d06738 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/customers
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/media
           */
          related?: string;
        };
      };
      orderTransactions?: {
        data?: {
          /** @example 3bdb6a464fb3330bd1935325493c5f2c */
          id?: string;
          /** @example order_transaction */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/orderTransactions
           */
          related?: string;
        };
      };
      plugin?: {
        data?: {
          /** @example a24bcf2198b1b13ad985304483f7f324 */
          id?: string;
          /** @example plugin */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/plugin
           */
          related?: string;
        };
      };
      salesChannelDefaultAssignments?: {
        data?: {
          /** @example b23663b2abc0909be9a8027a3fbff74b */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/salesChannelDefaultAssignments
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /payment-method/da8da1569e6bef3249a7064261df833f/salesChannels
           */
          related?: string;
        };
      };
    };
    /** Runtime field, cannot be used as part of the criteria. */
    shortName?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    synchronous?: boolean;
    technicalName?: string;
    translated?: {
      availabilityRuleId?: string;
      description?: string;
      distinguishableName?: string;
      formattedHandlerIdentifier?: string;
      handlerIdentifier?: string;
      mediaId?: string;
      name?: string;
      pluginId?: string;
      shortName?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Plugin: {
    active?: boolean;
    author?: string;
    autoload: Record<string, never>;
    baseClass: string;
    composerName?: string;
    copyright?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    icon?: string;
    id: string;
    /** Format: date-time */
    installedAt?: string;
    label: string;
    license?: string;
    managedByComposer?: boolean;
    manufacturerLink?: string;
    name: string;
    path?: string;
    paymentMethods?: components["schemas"]["PaymentMethod"][];
    supportLink?: string;
    translated?: {
      author?: string;
      baseClass?: string;
      composerName?: string;
      copyright?: string;
      description?: string;
      icon?: string;
      installedAt?: string;
      label?: string;
      license?: string;
      manufacturerLink?: string;
      name?: string;
      path?: string;
      supportLink?: string;
      upgradedAt?: string;
      upgradeVersion?: string;
      version?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    upgradedAt?: string;
    upgradeVersion?: string;
    version: string;
  };
  PluginJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    author?: string;
    autoload: Record<string, never>;
    baseClass: string;
    composerName?: string;
    copyright?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    icon?: string;
    id: string;
    /** Format: date-time */
    installedAt?: string;
    label: string;
    license?: string;
    managedByComposer?: boolean;
    manufacturerLink?: string;
    name: string;
    path?: string;
    relationships?: {
      paymentMethods?: {
        data?: {
          /** @example b631b1ab565525e892f9cdc1242cca14 */
          id?: string;
          /** @example payment_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /plugin/409c1892b68cb394799262ac57f6d4f1/paymentMethods
           */
          related?: string;
        };
      };
    };
    supportLink?: string;
    translated?: {
      author?: string;
      baseClass?: string;
      composerName?: string;
      copyright?: string;
      description?: string;
      icon?: string;
      installedAt?: string;
      label?: string;
      license?: string;
      manufacturerLink?: string;
      name?: string;
      path?: string;
      supportLink?: string;
      upgradedAt?: string;
      upgradeVersion?: string;
      version?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    /** Format: date-time */
    upgradedAt?: string;
    upgradeVersion?: string;
    version: string;
  };
  Product: {
    active?: boolean;
    /** Format: int64 */
    autoIncrement?: number;
    available?: boolean;
    /** Format: int64 */
    availableStock?: number;
    canonicalProduct?: components["schemas"]["Product"];
    canonicalProductId?: string;
    canonicalProductVersionId?: string;
    categories?: components["schemas"]["Category"][];
    categoriesRo?: components["schemas"]["Category"][];
    categoryIds?: readonly string[];
    categoryTree?: readonly string[];
    /** Format: int64 */
    childCount?: number;
    children?: components["schemas"]["Product"][];
    cmsPage?: components["schemas"]["CmsPage"];
    cmsPageId?: string;
    cmsPageVersionId?: string;
    configuratorSettings?: components["schemas"]["ProductConfiguratorSetting"][];
    cover?: components["schemas"]["ProductMedia"];
    coverId?: string;
    /** Format: date-time */
    createdAt: string;
    crossSellingAssignedProducts?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
    crossSellings?: components["schemas"]["ProductCrossSelling"][];
    customFields?: Record<string, never>;
    customFieldSets?: components["schemas"]["CustomFieldSet"][];
    customFieldSetSelectionActive?: boolean;
    customSearchKeywords?: Record<string, never>[];
    deliveryTime?: components["schemas"]["DeliveryTime"];
    deliveryTimeId?: string;
    description?: string;
    displayGroup?: string;
    downloads?: components["schemas"]["ProductDownload"][];
    ean?: string;
    extensions?: {
      customPrice?: {
        data?: {
          /** @example 35ed8bfa9c73171a7b417f13ab07d57a */
          id?: string;
          /** @example custom_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/customPrice
           */
          related?: string;
        };
      };
      orderWarehouses?: {
        data?: {
          /** @example 5331369e2f71d048521bd35d80975314 */
          id?: string;
          /** @example order_product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/orderWarehouses
           */
          related?: string;
        };
      };
      paypalPosLog?: {
        data?: {
          /** @example 7edfbc8f7a12c1d79b6de5b0154cf325 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel_run_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/paypalPosLog
           */
          related?: string;
        };
      };
      paypalPosSync?: {
        data?: {
          /** @example 163c806e836f72f29f292c8ef2dfe61e */
          id?: string;
          /** @example swag_paypal_pos_sales_channel_product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/paypalPosSync
           */
          related?: string;
        };
      };
      quoteLineItems?: {
        data?: {
          /** @example 6b1c17ad551ef636e491ab6848f68420 */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/quoteLineItems
           */
          related?: string;
        };
      };
      reviewSummaries?: {
        data?: {
          /** @example c9c718522e64ffa5effb26cef94f4849 */
          id?: string;
          /** @example product_review_summary */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/reviewSummaries
           */
          related?: string;
        };
      };
      search?: Record<string, never>;
      shoppingListLineItems?: {
        data?: {
          /** @example ce593c6d1db236f22dc387a2ee20dfd6 */
          id?: string;
          /** @example b2b_components_shopping_list_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/shoppingListLineItems
           */
          related?: string;
        };
      };
      socialShoppingProductErrors?: {
        data?: {
          /** @example 74181afcb28901351a5f2676d1687de8 */
          id?: string;
          /** @example swag_social_shopping_product_error */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/socialShoppingProductErrors
           */
          related?: string;
        };
      };
      subscriptionPlans?: {
        data?: {
          /** @example ed94874505da2886dc66a3a3d3968972 */
          id?: string;
          /** @example subscription_plan */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/subscriptionPlans
           */
          related?: string;
        };
      };
      swagCustomizedProductsTemplate?: {
        data?: {
          /** @example 6e9fad30dd3cb84748a01bb8152f4769 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/swagCustomizedProductsTemplate
           */
          related?: string;
        };
      };
      swagDynamicAccessRules?: {
        data?: {
          /** @example 05b9d828254c957dfa5224c581439c92 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/swagDynamicAccessRules
           */
          related?: string;
        };
      };
      warehouseGroups?: {
        data?: {
          /** @example 21191f2f6f4c30cd4ccc4714fa74ffea */
          id?: string;
          /** @example warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/warehouseGroups
           */
          related?: string;
        };
      };
      warehouses?: {
        data?: {
          /** @example 544959798565126142ca2820b4f56271 */
          id?: string;
          /** @example product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/warehouses
           */
          related?: string;
        };
      };
    };
    featureSet?: components["schemas"]["ProductFeatureSet"];
    featureSetId?: string;
    /** Format: float */
    height?: number;
    id: string;
    isCloseout?: boolean;
    keywords?: string;
    /** Format: float */
    length?: number;
    mainCategories?: components["schemas"]["MainCategory"][];
    manufacturer?: components["schemas"]["ProductManufacturer"];
    manufacturerId?: string;
    manufacturerNumber?: string;
    markAsTopseller?: boolean;
    /** Format: int64 */
    maxPurchase?: number;
    media?: components["schemas"]["ProductMedia"][];
    metaDescription?: string;
    metaTitle?: string;
    /** Format: int64 */
    minPurchase?: number;
    name: string;
    optionIds?: readonly string[];
    options?: components["schemas"]["PropertyGroupOption"][];
    orderLineItems?: components["schemas"]["OrderLineItem"][];
    packUnit?: string;
    packUnitPlural?: string;
    parent?: components["schemas"]["Product"];
    parentId?: string;
    parentVersionId?: string;
    price: Record<string, never>;
    prices?: components["schemas"]["ProductPrice"][];
    productManufacturerVersionId?: string;
    productMediaVersionId?: string;
    productNumber: string;
    productReviews?: components["schemas"]["ProductReview"][];
    properties?: components["schemas"]["PropertyGroupOption"][];
    propertyIds?: readonly string[];
    purchasePrices?: Record<string, never>;
    /** Format: int64 */
    purchaseSteps?: number;
    /** Format: float */
    purchaseUnit?: number;
    /** Format: float */
    ratingAverage?: number;
    /** Format: float */
    referenceUnit?: number;
    /** Format: date-time */
    releaseDate?: string;
    /** Format: int64 */
    restockTime?: number;
    /** Format: int64 */
    sales?: number;
    searchKeywords?: components["schemas"]["ProductSearchKeyword"][];
    seoUrls?: components["schemas"]["SeoUrl"][];
    shippingFree?: boolean;
    slotConfig?: Record<string, never>;
    states?: readonly string[];
    /** Format: int64 */
    stock: number;
    streamIds?: readonly string[];
    streams?: components["schemas"]["ProductStream"][];
    tagIds?: readonly string[];
    tags?: components["schemas"]["Tag"][];
    tax?: components["schemas"]["Tax"];
    taxId: string;
    translated?: {
      canonicalProductId?: string;
      canonicalProductVersionId?: string;
      cmsPageId?: string;
      cmsPageVersionId?: string;
      coverId?: string;
      deliveryTimeId?: string;
      description?: string;
      displayGroup?: string;
      ean?: string;
      featureSetId?: string;
      keywords?: string;
      manufacturerId?: string;
      manufacturerNumber?: string;
      metaDescription?: string;
      metaTitle?: string;
      name?: string;
      packUnit?: string;
      packUnitPlural?: string;
      parentId?: string;
      parentVersionId?: string;
      productManufacturerVersionId?: string;
      productMediaVersionId?: string;
      productNumber?: string;
      releaseDate?: string;
      taxId?: string;
      unitId?: string;
      versionId?: string;
    };
    unit?: components["schemas"]["Unit"];
    unitId?: string;
    /** Format: date-time */
    updatedAt?: string;
    variantListingConfig?: Record<string, never>;
    variantRestrictions?: Record<string, never>;
    variation?: string[];
    versionId?: string;
    visibilities?: components["schemas"]["ProductVisibility"][];
    /** Format: float */
    weight?: number;
    /** Format: float */
    width?: number;
    wishlists?: components["schemas"]["CustomerWishlistProduct"][];
  };
  ProductCategory: {
    category?: components["schemas"]["Category"];
    categoryId: string;
    categoryVersionId?: string;
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
  };
  ProductCategoryTree: {
    category?: components["schemas"]["Category"];
    categoryId: string;
    categoryVersionId?: string;
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
  };
  ProductConfiguratorSetting: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    option?: components["schemas"]["PropertyGroupOption"];
    optionId: string;
    /** Format: int64 */
    position?: number;
    price?: Record<string, never>;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductConfiguratorSettingJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    mediaId?: string;
    optionId: string;
    /** Format: int64 */
    position?: number;
    price?: Record<string, never>;
    productId: string;
    productVersionId?: string;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-configurator-setting/62bab37b1cdb1e5ffd2e0ea79ac515cb/media
           */
          related?: string;
        };
      };
      option?: {
        data?: {
          /** @example ef3e30e070f70244fd6578d88a6b77ac */
          id?: string;
          /** @example property_group_option */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-configurator-setting/62bab37b1cdb1e5ffd2e0ea79ac515cb/option
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-configurator-setting/62bab37b1cdb1e5ffd2e0ea79ac515cb/product
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductCrossSelling: {
    active?: boolean;
    assignedProducts?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    limit?: number;
    name: string;
    /** Format: int64 */
    position: number;
    product?: components["schemas"]["Product"];
    productId: string;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId?: string;
    productVersionId?: string;
    sortBy?: string;
    sortDirection?: string;
    translated?: {
      name?: string;
      productId?: string;
      productStreamId?: string;
      productVersionId?: string;
      sortBy?: string;
      sortDirection?: string;
      type?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductCrossSellingAssignedProducts: {
    /** Format: date-time */
    createdAt: string;
    crossSelling?: components["schemas"]["ProductCrossSelling"];
    crossSellingId: string;
    id: string;
    /** Format: int64 */
    position?: number;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductCrossSellingAssignedProductsJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    crossSellingId: string;
    id: string;
    /** Format: int64 */
    position?: number;
    productId: string;
    productVersionId?: string;
    relationships?: {
      crossSelling?: {
        data?: {
          /** @example ef23268669fb6d8a7def2b9f2da0aceb */
          id?: string;
          /** @example product_cross_selling */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-cross-selling-assigned-products/281cee27ae278acd6f5f2bc77ce12736/crossSelling
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-cross-selling-assigned-products/281cee27ae278acd6f5f2bc77ce12736/product
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductCrossSellingJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    limit?: number;
    name: string;
    /** Format: int64 */
    position: number;
    productId: string;
    productStreamId?: string;
    productVersionId?: string;
    relationships?: {
      assignedProducts?: {
        data?: {
          /** @example 5da5e10eda1b7026499bcd4747d6bdf8 */
          id?: string;
          /** @example product_cross_selling_assigned_products */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-cross-selling/30f0355cd0686038f211fd5c8014c9b4/assignedProducts
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-cross-selling/30f0355cd0686038f211fd5c8014c9b4/product
           */
          related?: string;
        };
      };
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-cross-selling/30f0355cd0686038f211fd5c8014c9b4/productStream
           */
          related?: string;
        };
      };
    };
    sortBy?: string;
    sortDirection?: string;
    translated?: {
      name?: string;
      productId?: string;
      productStreamId?: string;
      productVersionId?: string;
      sortBy?: string;
      sortDirection?: string;
      type?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductCustomFieldSet: {
    customFieldSet?: components["schemas"]["CustomFieldSet"];
    customFieldSetId: string;
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
  };
  ProductDownload: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    /** Format: int64 */
    position?: number;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductDownloadJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    mediaId: string;
    /** Format: int64 */
    position?: number;
    productId: string;
    productVersionId?: string;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-download/f1371d26b74fe7557f3d9b5aeb2653df/media
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-download/f1371d26b74fe7557f3d9b5aeb2653df/product
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductExport: {
    accessKey: string;
    bodyTemplate?: string;
    /** Format: date-time */
    createdAt: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    encoding: string;
    fileFormat: string;
    fileName: string;
    footerTemplate?: string;
    generateByCronjob: boolean;
    /** Format: date-time */
    generatedAt?: string;
    headerTemplate?: string;
    id: string;
    includeVariants?: boolean;
    /** Format: int64 */
    interval: number;
    isRunning?: boolean;
    pausedSchedule?: boolean;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelDomain?: components["schemas"]["SalesChannelDomain"];
    salesChannelDomainId: string;
    salesChannelId: string;
    storefrontSalesChannel?: components["schemas"]["SalesChannel"];
    storefrontSalesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductExportJsonApi: components["schemas"]["resource"] & {
    accessKey: string;
    bodyTemplate?: string;
    /** Format: date-time */
    createdAt: string;
    currencyId: string;
    encoding: string;
    fileFormat: string;
    fileName: string;
    footerTemplate?: string;
    generateByCronjob: boolean;
    /** Format: date-time */
    generatedAt?: string;
    headerTemplate?: string;
    id: string;
    includeVariants?: boolean;
    /** Format: int64 */
    interval: number;
    isRunning?: boolean;
    pausedSchedule?: boolean;
    productStreamId: string;
    relationships?: {
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-export/7a835b69a3e491d9a3be31d2de469f8a/currency
           */
          related?: string;
        };
      };
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-export/7a835b69a3e491d9a3be31d2de469f8a/productStream
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-export/7a835b69a3e491d9a3be31d2de469f8a/salesChannel
           */
          related?: string;
        };
      };
      salesChannelDomain?: {
        data?: {
          /** @example 29c8b34b04e94e35e95e8346954b7fb4 */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-export/7a835b69a3e491d9a3be31d2de469f8a/salesChannelDomain
           */
          related?: string;
        };
      };
      storefrontSalesChannel?: {
        data?: {
          /** @example 5979d6e259ba5ec4c2b93cf79df6f2e5 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-export/7a835b69a3e491d9a3be31d2de469f8a/storefrontSalesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelDomainId: string;
    salesChannelId: string;
    storefrontSalesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductFeatureSet: {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    features?: Record<string, never>;
    id: string;
    name: string;
    products?: components["schemas"]["Product"][];
    translated?: {
      description?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductFeatureSetJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    features?: Record<string, never>;
    id: string;
    name: string;
    relationships?: {
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-feature-set/69d445ae065ef917cd50febab4b55db2/products
           */
          related?: string;
        };
      };
    };
    translated?: {
      description?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    /** Format: int64 */
    autoIncrement?: number;
    available?: boolean;
    /** Format: int64 */
    availableStock?: number;
    canonicalProductId?: string;
    canonicalProductVersionId?: string;
    categoryIds?: readonly string[];
    categoryTree?: readonly string[];
    /** Format: int64 */
    childCount?: number;
    cmsPageId?: string;
    cmsPageVersionId?: string;
    coverId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    customFieldSetSelectionActive?: boolean;
    customSearchKeywords?: Record<string, never>[];
    deliveryTimeId?: string;
    description?: string;
    displayGroup?: string;
    ean?: string;
    extensions?: {
      customPrice?: {
        data?: {
          /** @example 35ed8bfa9c73171a7b417f13ab07d57a */
          id?: string;
          /** @example custom_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/customPrice
           */
          related?: string;
        };
      };
      orderWarehouses?: {
        data?: {
          /** @example 5331369e2f71d048521bd35d80975314 */
          id?: string;
          /** @example order_product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/orderWarehouses
           */
          related?: string;
        };
      };
      paypalPosLog?: {
        data?: {
          /** @example 7edfbc8f7a12c1d79b6de5b0154cf325 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel_run_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/paypalPosLog
           */
          related?: string;
        };
      };
      paypalPosSync?: {
        data?: {
          /** @example 163c806e836f72f29f292c8ef2dfe61e */
          id?: string;
          /** @example swag_paypal_pos_sales_channel_product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/paypalPosSync
           */
          related?: string;
        };
      };
      quoteLineItems?: {
        data?: {
          /** @example 6b1c17ad551ef636e491ab6848f68420 */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/quoteLineItems
           */
          related?: string;
        };
      };
      reviewSummaries?: {
        data?: {
          /** @example c9c718522e64ffa5effb26cef94f4849 */
          id?: string;
          /** @example product_review_summary */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/reviewSummaries
           */
          related?: string;
        };
      };
      search?: Record<string, never>;
      shoppingListLineItems?: {
        data?: {
          /** @example ce593c6d1db236f22dc387a2ee20dfd6 */
          id?: string;
          /** @example b2b_components_shopping_list_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/shoppingListLineItems
           */
          related?: string;
        };
      };
      socialShoppingProductErrors?: {
        data?: {
          /** @example 74181afcb28901351a5f2676d1687de8 */
          id?: string;
          /** @example swag_social_shopping_product_error */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/socialShoppingProductErrors
           */
          related?: string;
        };
      };
      subscriptionPlans?: {
        data?: {
          /** @example ed94874505da2886dc66a3a3d3968972 */
          id?: string;
          /** @example subscription_plan */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/subscriptionPlans
           */
          related?: string;
        };
      };
      swagCustomizedProductsTemplate?: {
        data?: {
          /** @example 6e9fad30dd3cb84748a01bb8152f4769 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/swagCustomizedProductsTemplate
           */
          related?: string;
        };
      };
      swagDynamicAccessRules?: {
        data?: {
          /** @example 05b9d828254c957dfa5224c581439c92 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/swagDynamicAccessRules
           */
          related?: string;
        };
      };
      warehouseGroups?: {
        data?: {
          /** @example 21191f2f6f4c30cd4ccc4714fa74ffea */
          id?: string;
          /** @example warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/warehouseGroups
           */
          related?: string;
        };
      };
      warehouses?: {
        data?: {
          /** @example 544959798565126142ca2820b4f56271 */
          id?: string;
          /** @example product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/warehouses
           */
          related?: string;
        };
      };
    };
    featureSetId?: string;
    /** Format: float */
    height?: number;
    id: string;
    isCloseout?: boolean;
    keywords?: string;
    /** Format: float */
    length?: number;
    manufacturerId?: string;
    manufacturerNumber?: string;
    markAsTopseller?: boolean;
    /** Format: int64 */
    maxPurchase?: number;
    metaDescription?: string;
    metaTitle?: string;
    /** Format: int64 */
    minPurchase?: number;
    name: string;
    optionIds?: readonly string[];
    packUnit?: string;
    packUnitPlural?: string;
    parentId?: string;
    parentVersionId?: string;
    price: Record<string, never>;
    productManufacturerVersionId?: string;
    productMediaVersionId?: string;
    productNumber: string;
    propertyIds?: readonly string[];
    purchasePrices?: Record<string, never>;
    /** Format: int64 */
    purchaseSteps?: number;
    /** Format: float */
    purchaseUnit?: number;
    /** Format: float */
    ratingAverage?: number;
    /** Format: float */
    referenceUnit?: number;
    relationships?: {
      canonicalProduct?: {
        data?: {
          /** @example 023995a50b56c0de077323e958b2bbcd */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/canonicalProduct
           */
          related?: string;
        };
      };
      categories?: {
        data?: {
          /** @example b0b5ccb4a195a07fd3eed14affb8695f */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/categories
           */
          related?: string;
        };
      };
      categoriesRo?: {
        data?: {
          /** @example 7f0702d3a90d965b8c9158c451f43fdb */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/categoriesRo
           */
          related?: string;
        };
      };
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/children
           */
          related?: string;
        };
      };
      cmsPage?: {
        data?: {
          /** @example 7b1460918b1abb93311108f3dc021c9b */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/cmsPage
           */
          related?: string;
        };
      };
      configuratorSettings?: {
        data?: {
          /** @example c0827fee13725d41f1fd7e292243f5aa */
          id?: string;
          /** @example product_configurator_setting */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/configuratorSettings
           */
          related?: string;
        };
      };
      cover?: {
        data?: {
          /** @example 41d0e299ca1abeb2094852da042165c7 */
          id?: string;
          /** @example product_media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/cover
           */
          related?: string;
        };
      };
      crossSellingAssignedProducts?: {
        data?: {
          /** @example 5ee26b69e515f51ece26912961283b6d */
          id?: string;
          /** @example product_cross_selling_assigned_products */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/crossSellingAssignedProducts
           */
          related?: string;
        };
      };
      crossSellings?: {
        data?: {
          /** @example 89936e14544d1b403cecef938101b6b0 */
          id?: string;
          /** @example product_cross_selling */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/crossSellings
           */
          related?: string;
        };
      };
      customFieldSets?: {
        data?: {
          /** @example 9b29ba872ce510f033b31364c8602760 */
          id?: string;
          /** @example custom_field_set */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/customFieldSets
           */
          related?: string;
        };
      };
      deliveryTime?: {
        data?: {
          /** @example 8c888ae25a7bd42057370e31f7e01044 */
          id?: string;
          /** @example delivery_time */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/deliveryTime
           */
          related?: string;
        };
      };
      downloads?: {
        data?: {
          /** @example d07d50a751bc6ddf12bf3af0efee9b45 */
          id?: string;
          /** @example product_download */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/downloads
           */
          related?: string;
        };
      };
      featureSet?: {
        data?: {
          /** @example 9cef0cd6ce1c52f0d29b23b7e40dbb17 */
          id?: string;
          /** @example product_feature_set */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/featureSet
           */
          related?: string;
        };
      };
      mainCategories?: {
        data?: {
          /** @example 1fb731fc4139cbb575429e28846f0c39 */
          id?: string;
          /** @example main_category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/mainCategories
           */
          related?: string;
        };
      };
      manufacturer?: {
        data?: {
          /** @example c2904bca62b22443d6cf5e9d89cab204 */
          id?: string;
          /** @example product_manufacturer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/manufacturer
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example product_media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/media
           */
          related?: string;
        };
      };
      options?: {
        data?: {
          /** @example 93da65a9fd0004d9477aeac024e08e15 */
          id?: string;
          /** @example property_group_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/options
           */
          related?: string;
        };
      };
      orderLineItems?: {
        data?: {
          /** @example 6bd56ce4562ca1be86bf5b8d92c3c1ee */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/orderLineItems
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/parent
           */
          related?: string;
        };
      };
      prices?: {
        data?: {
          /** @example afae32efe0f84fece3f96b377b768b33 */
          id?: string;
          /** @example product_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/prices
           */
          related?: string;
        };
      };
      productReviews?: {
        data?: {
          /** @example 01e78541ea343ed72424a5222796a4cd */
          id?: string;
          /** @example product_review */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/productReviews
           */
          related?: string;
        };
      };
      properties?: {
        data?: {
          /** @example 74693d2fc58b46bd06410f278e39aa71 */
          id?: string;
          /** @example property_group_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/properties
           */
          related?: string;
        };
      };
      searchKeywords?: {
        data?: {
          /** @example effbcffaacb8111b531f15e6f4c796d1 */
          id?: string;
          /** @example product_search_keyword */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/searchKeywords
           */
          related?: string;
        };
      };
      seoUrls?: {
        data?: {
          /** @example 5321b5a71127b8b98cdd4b068ad56c4c */
          id?: string;
          /** @example seo_url */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/seoUrls
           */
          related?: string;
        };
      };
      streams?: {
        data?: {
          /** @example 2f6f4768f1c2d7c8f1f54823723f1a70 */
          id?: string;
          /** @example product_stream */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/streams
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/tags
           */
          related?: string;
        };
      };
      tax?: {
        data?: {
          /** @example 06565e5611f23fdf8cc43e5077b92b54 */
          id?: string;
          /** @example tax */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/tax
           */
          related?: string;
        };
      };
      unit?: {
        data?: {
          /** @example 3e34bdebd9bd5edda27e8728904a2552 */
          id?: string;
          /** @example unit */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/unit
           */
          related?: string;
        };
      };
      visibilities?: {
        data?: {
          /** @example 63226fcdfe3316ec1237ef07a8fe6732 */
          id?: string;
          /** @example product_visibility */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/visibilities
           */
          related?: string;
        };
      };
      wishlists?: {
        data?: {
          /** @example 4ec38c6b2208529c1fadccc7d55d7947 */
          id?: string;
          /** @example customer_wishlist_product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product/deb10517653c255364175796ace3553f/wishlists
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    releaseDate?: string;
    /** Format: int64 */
    restockTime?: number;
    /** Format: int64 */
    sales?: number;
    shippingFree?: boolean;
    slotConfig?: Record<string, never>;
    states?: readonly string[];
    /** Format: int64 */
    stock: number;
    streamIds?: readonly string[];
    tagIds?: readonly string[];
    taxId: string;
    translated?: {
      canonicalProductId?: string;
      canonicalProductVersionId?: string;
      cmsPageId?: string;
      cmsPageVersionId?: string;
      coverId?: string;
      deliveryTimeId?: string;
      description?: string;
      displayGroup?: string;
      ean?: string;
      featureSetId?: string;
      keywords?: string;
      manufacturerId?: string;
      manufacturerNumber?: string;
      metaDescription?: string;
      metaTitle?: string;
      name?: string;
      packUnit?: string;
      packUnitPlural?: string;
      parentId?: string;
      parentVersionId?: string;
      productManufacturerVersionId?: string;
      productMediaVersionId?: string;
      productNumber?: string;
      releaseDate?: string;
      taxId?: string;
      unitId?: string;
      versionId?: string;
    };
    unitId?: string;
    /** Format: date-time */
    updatedAt?: string;
    variantListingConfig?: Record<string, never>;
    variantRestrictions?: Record<string, never>;
    variation?: string[];
    versionId?: string;
    /** Format: float */
    weight?: number;
    /** Format: float */
    width?: number;
  };
  ProductKeywordDictionary: {
    id: string;
    keyword: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    reversed?: string;
  };
  ProductKeywordDictionaryJsonApi: components["schemas"]["resource"] & {
    id: string;
    keyword: string;
    languageId: string;
    relationships?: {
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-keyword-dictionary/a1bc4695aa3e6f80fb42d62e6439296c/language
           */
          related?: string;
        };
      };
    };
    reversed?: string;
  };
  ProductManufacturer: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      search?: Record<string, never>;
    };
    id: string;
    link?: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    name: string;
    products?: components["schemas"]["Product"][];
    translated?: {
      description?: string;
      link?: string;
      mediaId?: string;
      name?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductManufacturerJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      search?: Record<string, never>;
    };
    id: string;
    link?: string;
    mediaId?: string;
    name: string;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-manufacturer/269f96011fc7a4e7a8c1fa87b45b8d1d/media
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-manufacturer/269f96011fc7a4e7a8c1fa87b45b8d1d/products
           */
          related?: string;
        };
      };
    };
    translated?: {
      description?: string;
      link?: string;
      mediaId?: string;
      name?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductMedia: {
    coverProducts?: components["schemas"]["Product"][];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    /** Format: int64 */
    position?: number;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductMediaJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    mediaId: string;
    /** Format: int64 */
    position?: number;
    productId: string;
    productVersionId?: string;
    relationships?: {
      coverProducts?: {
        data?: {
          /** @example 41f7b522ee6fd2f54469cf9ec8e1c8b0 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-media/b93c38a6be7ba7db807d807adfff50a3/coverProducts
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-media/b93c38a6be7ba7db807d807adfff50a3/media
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-media/b93c38a6be7ba7db807d807adfff50a3/product
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductOption: {
    id?: string;
    option?: components["schemas"]["PropertyGroupOption"];
    optionId: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
  };
  ProductPrice: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    price: Record<string, never>;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: int64 */
    quantityEnd?: number;
    /** Format: int64 */
    quantityStart: number;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductPriceJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    price: Record<string, never>;
    productId: string;
    productVersionId?: string;
    /** Format: int64 */
    quantityEnd?: number;
    /** Format: int64 */
    quantityStart: number;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-price/2003a59b6b10a56954d203e225f83585/product
           */
          related?: string;
        };
      };
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-price/2003a59b6b10a56954d203e225f83585/rule
           */
          related?: string;
        };
      };
    };
    ruleId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductProperty: {
    id?: string;
    option?: components["schemas"]["PropertyGroupOption"];
    optionId: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
  };
  ProductReview: {
    comment?: string;
    content: string;
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId?: string;
    customFields?: Record<string, never>;
    externalEmail?: string;
    externalUser?: string;
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    /** Format: float */
    points?: number;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    status?: boolean;
    title: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductReviewJsonApi: components["schemas"]["resource"] & {
    comment?: string;
    content: string;
    /** Format: date-time */
    createdAt: string;
    customerId?: string;
    customFields?: Record<string, never>;
    externalEmail?: string;
    externalUser?: string;
    id: string;
    languageId: string;
    /** Format: float */
    points?: number;
    productId: string;
    productVersionId?: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-review/0793b857a73beced20090eec19b11a3d/customer
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-review/0793b857a73beced20090eec19b11a3d/language
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-review/0793b857a73beced20090eec19b11a3d/product
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-review/0793b857a73beced20090eec19b11a3d/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    status?: boolean;
    title: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductReviewSummary: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    summary?: string;
    translated?: {
      productId?: string;
      productVersionId?: string;
      salesChannelId?: string;
      summary?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    visible?: boolean;
  };
  ProductReviewSummaryJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    productId: string;
    productVersionId?: string;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-review-summary/a4b5dac1755dd11ea772509278bbc072/product
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-review-summary/a4b5dac1755dd11ea772509278bbc072/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    summary?: string;
    translated?: {
      productId?: string;
      productVersionId?: string;
      salesChannelId?: string;
      summary?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    visible?: boolean;
  };
  ProductSearchConfig: {
    andLogic: boolean;
    configFields?: components["schemas"]["ProductSearchConfigField"][];
    /** Format: date-time */
    createdAt: string;
    excludedTerms?: string[];
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    /** Format: int64 */
    minSearchLength: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductSearchConfigField: {
    /** Format: date-time */
    createdAt: string;
    customField?: components["schemas"]["CustomField"];
    customFieldId?: string;
    field: string;
    id: string;
    /** Format: int64 */
    ranking: number;
    searchable: boolean;
    searchConfig?: components["schemas"]["ProductSearchConfig"];
    searchConfigId: string;
    tokenize: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductSearchConfigFieldJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFieldId?: string;
    field: string;
    id: string;
    /** Format: int64 */
    ranking: number;
    relationships?: {
      customField?: {
        data?: {
          /** @example ed2028a1c479c7e0065da597452d9c11 */
          id?: string;
          /** @example custom_field */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-search-config-field/38271ca1804968a1c9d07c12719453b8/customField
           */
          related?: string;
        };
      };
      searchConfig?: {
        data?: {
          /** @example bc8281d44069ce8ffd34144fbad1bddd */
          id?: string;
          /** @example product_search_config */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-search-config-field/38271ca1804968a1c9d07c12719453b8/searchConfig
           */
          related?: string;
        };
      };
    };
    searchable: boolean;
    searchConfigId: string;
    tokenize: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductSearchConfigJsonApi: components["schemas"]["resource"] & {
    andLogic: boolean;
    /** Format: date-time */
    createdAt: string;
    excludedTerms?: string[];
    id: string;
    languageId: string;
    /** Format: int64 */
    minSearchLength: number;
    relationships?: {
      configFields?: {
        data?: {
          /** @example 5334117da647d3f2fb8a82948d56bcc3 */
          id?: string;
          /** @example product_search_config_field */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-search-config/a150b98c1747cffb40453f0c15e18261/configFields
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-search-config/a150b98c1747cffb40453f0c15e18261/language
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductSearchKeyword: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    keyword: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: float */
    ranking: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductSearchKeywordJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    keyword: string;
    languageId: string;
    productId: string;
    productVersionId?: string;
    /** Format: float */
    ranking: number;
    relationships?: {
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-search-keyword/b704475cf722682ba73e11d9903e09a4/language
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-search-keyword/b704475cf722682ba73e11d9903e09a4/product
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  ProductSorting: {
    active: boolean;
    /** Format: date-time */
    createdAt: string;
    fields: Record<string, never>;
    id: string;
    key: string;
    label: string;
    locked?: boolean;
    /** Format: int64 */
    priority: number;
    translated?: {
      key?: string;
      label?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductSortingJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    /** Format: date-time */
    createdAt: string;
    fields: Record<string, never>;
    id: string;
    key: string;
    label: string;
    locked?: boolean;
    /** Format: int64 */
    priority: number;
    translated?: {
      key?: string;
      label?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductStream: {
    apiFilter?: Record<string, never>;
    categories?: components["schemas"]["Category"][];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      paypalPosSalesChannels?: {
        data?: {
          /** @example 80dd7867f3205b7f1600d6c76438fb42 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/paypalPosSalesChannels
           */
          related?: string;
        };
      };
      socialShoppingSalesChannels?: {
        data?: {
          /** @example e581067f817be66449a3f4350dc327af */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/socialShoppingSalesChannels
           */
          related?: string;
        };
      };
    };
    filters?: components["schemas"]["ProductStreamFilter"][];
    id: string;
    invalid?: boolean;
    name: string;
    productCrossSellings?: components["schemas"]["ProductCrossSelling"][];
    productExports?: components["schemas"]["ProductExport"][];
    translated?: {
      description?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductStreamFilter: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    field?: string;
    id: string;
    operator?: string;
    parameters?: Record<string, never>;
    parent?: components["schemas"]["ProductStreamFilter"];
    parentId?: string;
    /** Format: int64 */
    position?: number;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId: string;
    queries?: components["schemas"]["ProductStreamFilter"][];
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    value?: string;
  };
  ProductStreamFilterJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    field?: string;
    id: string;
    operator?: string;
    parameters?: Record<string, never>;
    parentId?: string;
    /** Format: int64 */
    position?: number;
    productStreamId: string;
    relationships?: {
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example product_stream_filter */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream-filter/4e06c1fc9085cee6646a5e736395212d/parent
           */
          related?: string;
        };
      };
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream-filter/4e06c1fc9085cee6646a5e736395212d/productStream
           */
          related?: string;
        };
      };
      queries?: {
        data?: {
          /** @example 5da7eb4247add5dbd5776c9c0b38460a */
          id?: string;
          /** @example product_stream_filter */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream-filter/4e06c1fc9085cee6646a5e736395212d/queries
           */
          related?: string;
        };
      };
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    value?: string;
  };
  ProductStreamJsonApi: components["schemas"]["resource"] & {
    apiFilter?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      paypalPosSalesChannels?: {
        data?: {
          /** @example 80dd7867f3205b7f1600d6c76438fb42 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/paypalPosSalesChannels
           */
          related?: string;
        };
      };
      socialShoppingSalesChannels?: {
        data?: {
          /** @example e581067f817be66449a3f4350dc327af */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/socialShoppingSalesChannels
           */
          related?: string;
        };
      };
    };
    id: string;
    invalid?: boolean;
    name: string;
    relationships?: {
      categories?: {
        data?: {
          /** @example b0b5ccb4a195a07fd3eed14affb8695f */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/categories
           */
          related?: string;
        };
      };
      filters?: {
        data?: {
          /** @example 2c9885d2b0c7e26971f60a90f33cf718 */
          id?: string;
          /** @example product_stream_filter */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/filters
           */
          related?: string;
        };
      };
      productCrossSellings?: {
        data?: {
          /** @example 6fa3de1d94218e2ac5a51cbeaca7f846 */
          id?: string;
          /** @example product_cross_selling */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/productCrossSellings
           */
          related?: string;
        };
      };
      productExports?: {
        data?: {
          /** @example 2cd8793787cda582174c0fc329fbc377 */
          id?: string;
          /** @example product_export */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /product-stream/8f4cdc10a7afbd7f3948c6f8cd5c4801/productExports
           */
          related?: string;
        };
      };
    };
    translated?: {
      description?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ProductStreamMapping: {
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId: string;
    productVersionId?: string;
  };
  ProductTag: {
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  ProductVisibility: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: int64 */
    visibility: number;
  };
  ProductVisibilityJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    productId: string;
    productVersionId?: string;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-visibility/e965d09420555f52df9b20f904697d96/product
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-visibility/e965d09420555f52df9b20f904697d96/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: int64 */
    visibility: number;
  };
  ProductWarehouse: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    /** Format: int64 */
    stock: number;
    /** Format: date-time */
    updatedAt?: string;
    warehouse?: components["schemas"]["Warehouse"];
    warehouseId: string;
  };
  ProductWarehouseGroup: {
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    warehouseGroup?: components["schemas"]["WarehouseGroup"];
    warehouseGroupId: string;
  };
  ProductWarehouseJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    productId: string;
    productVersionId?: string;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-warehouse/bb934215f15673b81755030f1d8cc000/product
           */
          related?: string;
        };
      };
      warehouse?: {
        data?: {
          /** @example 372d30dd2849813ef674855253900679 */
          id?: string;
          /** @example warehouse */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /product-warehouse/bb934215f15673b81755030f1d8cc000/warehouse
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    stock: number;
    /** Format: date-time */
    updatedAt?: string;
    warehouseId: string;
  };
  Promotion: {
    active: boolean;
    cartRules?: components["schemas"]["Rule"][];
    code?: string;
    /** Format: date-time */
    createdAt: string;
    customerRestriction?: boolean;
    customFields?: Record<string, never>;
    discounts?: components["schemas"]["PromotionDiscount"][];
    exclusionIds?: string[];
    exclusive: boolean;
    extensions?: {
      quoteLineItems?: {
        data?: {
          /** @example 6b1c17ad551ef636e491ab6848f68420 */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/quoteLineItems
           */
          related?: string;
        };
      };
    };
    id: string;
    individualCodePattern?: string;
    individualCodes?: components["schemas"]["PromotionIndividualCode"][];
    /** Format: int64 */
    maxRedemptionsGlobal?: number;
    /** Format: int64 */
    maxRedemptionsPerCustomer?: number;
    name: string;
    /** Format: int64 */
    orderCount?: number;
    orderLineItems?: components["schemas"]["OrderLineItem"][];
    orderRules?: components["schemas"]["Rule"][];
    ordersPerCustomerCount?: Record<string, never>;
    personaCustomers?: components["schemas"]["Customer"][];
    personaRules?: components["schemas"]["Rule"][];
    preventCombination: boolean;
    /** Format: int64 */
    priority: number;
    salesChannels?: components["schemas"]["PromotionSalesChannel"][];
    setgroups?: components["schemas"]["PromotionSetgroup"][];
    translated?: {
      code?: string;
      individualCodePattern?: string;
      name?: string;
      validFrom?: string;
      validUntil?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    useCodes: boolean;
    useIndividualCodes: boolean;
    useSetGroups: boolean;
    /** Format: date-time */
    validFrom?: string;
    /** Format: date-time */
    validUntil?: string;
  };
  PromotionCartRule: {
    id?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  PromotionDiscount: {
    applierKey?: string;
    considerAdvancedRules: boolean;
    /** Format: date-time */
    createdAt: string;
    discountRules?: components["schemas"]["Rule"][];
    id: string;
    /** Format: float */
    maxValue?: number;
    pickerKey?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionDiscountPrices?: components["schemas"]["PromotionDiscountPrices"][];
    promotionId: string;
    scope: string;
    sorterKey?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    usageKey?: string;
    /** Format: float */
    value: number;
  };
  PromotionDiscountJsonApi: components["schemas"]["resource"] & {
    applierKey?: string;
    considerAdvancedRules: boolean;
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: float */
    maxValue?: number;
    pickerKey?: string;
    promotionId: string;
    relationships?: {
      discountRules?: {
        data?: {
          /** @example d5a1e52263eb12172f7657376d7622c8 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-discount/1d292bd1ccb9a6140bb16d3a9217a30c/discountRules
           */
          related?: string;
        };
      };
      promotion?: {
        data?: {
          /** @example f8dcad058c9c44fdb6ffcb22d2d4c31f */
          id?: string;
          /** @example promotion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-discount/1d292bd1ccb9a6140bb16d3a9217a30c/promotion
           */
          related?: string;
        };
      };
      promotionDiscountPrices?: {
        data?: {
          /** @example 325723473ecab76b0f45e1554513f779 */
          id?: string;
          /** @example promotion_discount_prices */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-discount/1d292bd1ccb9a6140bb16d3a9217a30c/promotionDiscountPrices
           */
          related?: string;
        };
      };
    };
    scope: string;
    sorterKey?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    usageKey?: string;
    /** Format: float */
    value: number;
  };
  PromotionDiscountPrices: {
    /** Format: date-time */
    createdAt: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    discountId: string;
    id: string;
    /** Format: float */
    price: number;
    promotionDiscount?: components["schemas"]["PromotionDiscount"];
    /** Format: date-time */
    updatedAt?: string;
  };
  PromotionDiscountPricesJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    currencyId: string;
    discountId: string;
    id: string;
    /** Format: float */
    price: number;
    relationships?: {
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-discount-prices/bed3b77da61f7bd4ccc1f6d17fa416df/currency
           */
          related?: string;
        };
      };
      promotionDiscount?: {
        data?: {
          /** @example eaeedb5c09dfc7dbf130657ed44ef33f */
          id?: string;
          /** @example promotion_discount */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-discount-prices/bed3b77da61f7bd4ccc1f6d17fa416df/promotionDiscount
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  PromotionDiscountRule: {
    discount?: components["schemas"]["PromotionDiscount"];
    discountId: string;
    id?: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  PromotionIndividualCode: {
    code: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    payload?: Record<string, never>;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  PromotionIndividualCodeJsonApi: components["schemas"]["resource"] & {
    code: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    payload?: Record<string, never>;
    promotionId: string;
    relationships?: {
      promotion?: {
        data?: {
          /** @example f8dcad058c9c44fdb6ffcb22d2d4c31f */
          id?: string;
          /** @example promotion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-individual-code/139ddd829ed66162c831471f101e3823/promotion
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  PromotionJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    code?: string;
    /** Format: date-time */
    createdAt: string;
    customerRestriction?: boolean;
    customFields?: Record<string, never>;
    exclusionIds?: string[];
    exclusive: boolean;
    extensions?: {
      quoteLineItems?: {
        data?: {
          /** @example 6b1c17ad551ef636e491ab6848f68420 */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/quoteLineItems
           */
          related?: string;
        };
      };
    };
    id: string;
    individualCodePattern?: string;
    /** Format: int64 */
    maxRedemptionsGlobal?: number;
    /** Format: int64 */
    maxRedemptionsPerCustomer?: number;
    name: string;
    /** Format: int64 */
    orderCount?: number;
    ordersPerCustomerCount?: Record<string, never>;
    preventCombination: boolean;
    /** Format: int64 */
    priority: number;
    relationships?: {
      cartRules?: {
        data?: {
          /** @example 6549606ef529fde0a7628b4c0aa7c6ef */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/cartRules
           */
          related?: string;
        };
      };
      discounts?: {
        data?: {
          /** @example 9544fa2fae515081e7fc27ef2d268642 */
          id?: string;
          /** @example promotion_discount */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/discounts
           */
          related?: string;
        };
      };
      individualCodes?: {
        data?: {
          /** @example c777247035736c9eae54f8e5dfdcd2aa */
          id?: string;
          /** @example promotion_individual_code */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/individualCodes
           */
          related?: string;
        };
      };
      orderLineItems?: {
        data?: {
          /** @example 6bd56ce4562ca1be86bf5b8d92c3c1ee */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/orderLineItems
           */
          related?: string;
        };
      };
      orderRules?: {
        data?: {
          /** @example ee517f71bf240d98dcf33db6e6ffa881 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/orderRules
           */
          related?: string;
        };
      };
      personaCustomers?: {
        data?: {
          /** @example b969a9b0d5772d70ea83383c1be06c82 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/personaCustomers
           */
          related?: string;
        };
      };
      personaRules?: {
        data?: {
          /** @example 382af96335a79de564c412e6b493d7f3 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/personaRules
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example promotion_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/salesChannels
           */
          related?: string;
        };
      };
      setgroups?: {
        data?: {
          /** @example 3c963571517f44e87274198cb8bb62a8 */
          id?: string;
          /** @example promotion_setgroup */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion/626a54d37d402d449d6d7541911e0952/setgroups
           */
          related?: string;
        };
      };
    };
    translated?: {
      code?: string;
      individualCodePattern?: string;
      name?: string;
      validFrom?: string;
      validUntil?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    useCodes: boolean;
    useIndividualCodes: boolean;
    useSetGroups: boolean;
    /** Format: date-time */
    validFrom?: string;
    /** Format: date-time */
    validUntil?: string;
  };
  PromotionOrderRule: {
    id?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  PromotionPersonaCustomer: {
    customer?: components["schemas"]["Customer"];
    customerId: string;
    id?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
  };
  PromotionPersonaRule: {
    id?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  PromotionSalesChannel: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    priority: number;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  PromotionSalesChannelJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    priority: number;
    promotionId: string;
    relationships?: {
      promotion?: {
        data?: {
          /** @example f8dcad058c9c44fdb6ffcb22d2d4c31f */
          id?: string;
          /** @example promotion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-sales-channel/2081c7fb87ec7bafc7a39bf0e33ebaa8/promotion
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-sales-channel/2081c7fb87ec7bafc7a39bf0e33ebaa8/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  PromotionSetgroup: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    packagerKey: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId: string;
    setGroupRules?: components["schemas"]["Rule"][];
    sorterKey: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: float */
    value: number;
  };
  PromotionSetgroupJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    packagerKey: string;
    promotionId: string;
    relationships?: {
      promotion?: {
        data?: {
          /** @example f8dcad058c9c44fdb6ffcb22d2d4c31f */
          id?: string;
          /** @example promotion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-setgroup/d2e23a646d2a711e7af57757b8ff7d3f/promotion
           */
          related?: string;
        };
      };
      setGroupRules?: {
        data?: {
          /** @example a54c38d5a1d9180d689d11234afbbb32 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /promotion-setgroup/d2e23a646d2a711e7af57757b8ff7d3f/setGroupRules
           */
          related?: string;
        };
      };
    };
    sorterKey: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: float */
    value: number;
  };
  PromotionSetgroupRule: {
    id?: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
    setgroup?: components["schemas"]["PromotionSetgroup"];
    setgroupId: string;
  };
  PropertyGroup: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    displayType: string;
    filterable?: boolean;
    id: string;
    name: string;
    options?: components["schemas"]["PropertyGroupOption"][];
    /** Format: int64 */
    position?: number;
    sortingType: string;
    translated?: {
      description?: string;
      displayType?: string;
      name?: string;
      sortingType?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    visibleOnProductDetailPage?: boolean;
  };
  PropertyGroupJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    displayType: string;
    filterable?: boolean;
    id: string;
    name: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      options?: {
        data?: {
          /** @example 93da65a9fd0004d9477aeac024e08e15 */
          id?: string;
          /** @example property_group_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /property-group/28691f41cd50e3065fd221390a457a56/options
           */
          related?: string;
        };
      };
    };
    sortingType: string;
    translated?: {
      description?: string;
      displayType?: string;
      name?: string;
      sortingType?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    visibleOnProductDetailPage?: boolean;
  };
  PropertyGroupOption: {
    colorHexCode?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    group?: components["schemas"]["PropertyGroup"];
    groupId: string;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    name: string;
    /** Format: int64 */
    position?: number;
    productConfiguratorSettings?: components["schemas"]["ProductConfiguratorSetting"][];
    productOptions?: components["schemas"]["Product"][];
    productProperties?: components["schemas"]["Product"][];
    translated?: {
      colorHexCode?: string;
      groupId?: string;
      mediaId?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  PropertyGroupOptionJsonApi: components["schemas"]["resource"] & {
    colorHexCode?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    groupId: string;
    id: string;
    mediaId?: string;
    name: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      group?: {
        data?: {
          /** @example db0f6f37ebeb6ea09489124345af2a45 */
          id?: string;
          /** @example property_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /property-group-option/10f78a0d3f087d9d206956bca1cf72b1/group
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /property-group-option/10f78a0d3f087d9d206956bca1cf72b1/media
           */
          related?: string;
        };
      };
      productConfiguratorSettings?: {
        data?: {
          /** @example 4d46eb45eaf392b26bd46f0ea8cb93e0 */
          id?: string;
          /** @example product_configurator_setting */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /property-group-option/10f78a0d3f087d9d206956bca1cf72b1/productConfiguratorSettings
           */
          related?: string;
        };
      };
      productOptions?: {
        data?: {
          /** @example 2e96cc7eba692416e31a6af3230ebf88 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /property-group-option/10f78a0d3f087d9d206956bca1cf72b1/productOptions
           */
          related?: string;
        };
      };
      productProperties?: {
        data?: {
          /** @example bacd76b9cbbc26cb9854ec57f4d0fef3 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /property-group-option/10f78a0d3f087d9d206956bca1cf72b1/productProperties
           */
          related?: string;
        };
      };
    };
    translated?: {
      colorHexCode?: string;
      groupId?: string;
      mediaId?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Quote: {
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    /** Format: int64 */
    autoIncrement?: number;
    comments?: components["schemas"]["QuoteComment"][];
    /** Format: date-time */
    createdAt: string;
    createdBy?: components["schemas"]["User"];
    createdById?: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    customFields?: Record<string, never>;
    deliveries?: components["schemas"]["QuoteDelivery"][];
    discount?: {
      type?: string;
      /** Format: float */
      value?: number;
    };
    documents?: components["schemas"]["QuoteDocument"][];
    /** Format: date-time */
    expirationDate?: string;
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    language?: components["schemas"]["Language"];
    languageId: string;
    lineItems?: components["schemas"]["QuoteLineItem"][];
    order?: components["schemas"]["Order"];
    orderId?: string;
    orderVersionId?: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    quoteEmployees?: components["schemas"]["QuoteEmployee"][];
    quoteNumber?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    sentAt?: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    /** Format: float */
    subtotalNet?: number;
    taxStatus?: string;
    /** Format: float */
    totalDiscount?: number;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    transactions?: components["schemas"]["QuoteTransaction"][];
    /** Format: date-time */
    updatedAt?: string;
    updatedBy?: components["schemas"]["User"];
    updatedById?: string;
    user?: components["schemas"]["User"];
    userId?: string;
    versionId?: string;
  };
  QuoteComment: {
    comment: string;
    /** Format: date-time */
    createdAt: string;
    createdBy?: components["schemas"]["User"];
    createdById?: string;
    customer?: components["schemas"]["Customer"];
    customerId?: string;
    id: string;
    quote?: components["schemas"]["Quote"];
    quoteId: string;
    quoteVersionId?: string;
    /** Format: date-time */
    seenAt?: string;
    stateId?: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteCommentJsonApi: components["schemas"]["resource"] & {
    comment: string;
    /** Format: date-time */
    createdAt: string;
    createdById?: string;
    customerId?: string;
    id: string;
    quoteId: string;
    quoteVersionId?: string;
    relationships?: {
      createdBy?: {
        data?: {
          /** @example 34998857f537140306898d54d4b970dc */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-comment/b3ef9135f573201be0dd21b395c6ec07/createdBy
           */
          related?: string;
        };
      };
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-comment/b3ef9135f573201be0dd21b395c6ec07/customer
           */
          related?: string;
        };
      };
      quote?: {
        data?: {
          /** @example 7a674c327bfa07f7c1204fb38ca6ef3b */
          id?: string;
          /** @example quote */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-comment/b3ef9135f573201be0dd21b395c6ec07/quote
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-comment/b3ef9135f573201be0dd21b395c6ec07/stateMachineState
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    seenAt?: string;
    stateId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteDelivery: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    positions?: components["schemas"]["QuoteDeliveryPosition"][];
    quote?: components["schemas"]["Quote"];
    quoteId: string;
    quoteVersionId?: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    shippingDateEarliest: string;
    /** Format: date-time */
    shippingDateLatest: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteDeliveryJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    quoteId: string;
    quoteVersionId?: string;
    relationships?: {
      positions?: {
        data?: {
          /** @example 365a4a972db646c76d115b3897f2d4de */
          id?: string;
          /** @example quote_delivery_position */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-delivery/d2e61366180daeec11fe88b1cb03bbd6/positions
           */
          related?: string;
        };
      };
      quote?: {
        data?: {
          /** @example 7a674c327bfa07f7c1204fb38ca6ef3b */
          id?: string;
          /** @example quote */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-delivery/d2e61366180daeec11fe88b1cb03bbd6/quote
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-delivery/d2e61366180daeec11fe88b1cb03bbd6/shippingMethod
           */
          related?: string;
        };
      };
    };
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    shippingDateEarliest: string;
    /** Format: date-time */
    shippingDateLatest: string;
    shippingMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteDeliveryPosition: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: int64 */
    quantity?: number;
    quoteDelivery?: components["schemas"]["QuoteDelivery"];
    quoteDeliveryId: string;
    quoteDeliveryVersionId?: string;
    quoteLineItem?: components["schemas"]["QuoteLineItem"];
    quoteLineItemId: string;
    quoteLineItemVersionId?: string;
    /** Format: float */
    totalPrice?: number;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteDeliveryPositionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: int64 */
    quantity?: number;
    quoteDeliveryId: string;
    quoteDeliveryVersionId?: string;
    quoteLineItemId: string;
    quoteLineItemVersionId?: string;
    relationships?: {
      quoteDelivery?: {
        data?: {
          /** @example 19397469743ae5505500cb3fa99bc0b1 */
          id?: string;
          /** @example quote_delivery */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-delivery-position/9bccead7211d7f905df800ef90888f07/quoteDelivery
           */
          related?: string;
        };
      };
      quoteLineItem?: {
        data?: {
          /** @example dbe619b4a557266e76679178cc13085b */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-delivery-position/9bccead7211d7f905df800ef90888f07/quoteLineItem
           */
          related?: string;
        };
      };
    };
    /** Format: float */
    totalPrice?: number;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteDocument: {
    active?: boolean;
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deepLinkCode: string;
    documentMediaFile?: components["schemas"]["Media"];
    documentMediaFileId?: string;
    documentNumber?: string;
    documentType?: components["schemas"]["DocumentType"];
    documentTypeId: string;
    fileType: string;
    id: string;
    quote?: components["schemas"]["Quote"];
    quoteId: string;
    quoteVersionId?: string;
    sent?: boolean;
    static?: boolean;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteDocumentJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deepLinkCode: string;
    documentMediaFileId?: string;
    documentNumber?: string;
    documentTypeId: string;
    fileType: string;
    id: string;
    quoteId: string;
    quoteVersionId?: string;
    relationships?: {
      documentMediaFile?: {
        data?: {
          /** @example ac7db1e6be481d6422fc63700e08279d */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-document/08e3c4797f89c301ce82e4bcfab6d266/documentMediaFile
           */
          related?: string;
        };
      };
      documentType?: {
        data?: {
          /** @example 2e45fec65781ec559e2aea39372a55cd */
          id?: string;
          /** @example document_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-document/08e3c4797f89c301ce82e4bcfab6d266/documentType
           */
          related?: string;
        };
      };
      quote?: {
        data?: {
          /** @example 7a674c327bfa07f7c1204fb38ca6ef3b */
          id?: string;
          /** @example quote */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-document/08e3c4797f89c301ce82e4bcfab6d266/quote
           */
          related?: string;
        };
      };
    };
    sent?: boolean;
    static?: boolean;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteEmployee: {
    /** Format: date-time */
    createdAt: string;
    employee?: components["schemas"]["B2bEmployee"];
    employeeId: string;
    firstName: string;
    id: string;
    lastName: string;
    quote?: components["schemas"]["Quote"];
    quoteId: string;
    quoteVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteEmployeeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    employeeId: string;
    firstName: string;
    id: string;
    lastName: string;
    quoteId: string;
    quoteVersionId?: string;
    relationships?: {
      employee?: {
        data?: {
          /** @example fa5473530e4d1a5a1e1eb53d2fedb10c */
          id?: string;
          /** @example b2b_employee */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-employee/e4bf66af05d85640412ac7a8951252a3/employee
           */
          related?: string;
        };
      };
      quote?: {
        data?: {
          /** @example 7a674c327bfa07f7c1204fb38ca6ef3b */
          id?: string;
          /** @example quote */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-employee/e4bf66af05d85640412ac7a8951252a3/quote
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteJsonApi: components["schemas"]["resource"] & {
    /** Format: float */
    amountNet?: number;
    /** Format: float */
    amountTotal?: number;
    /** Format: int64 */
    autoIncrement?: number;
    /** Format: date-time */
    createdAt: string;
    createdById?: string;
    currencyId: string;
    customerId: string;
    customFields?: Record<string, never>;
    discount?: {
      type?: string;
      /** Format: float */
      value?: number;
    };
    /** Format: date-time */
    expirationDate?: string;
    id: string;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    languageId: string;
    orderId?: string;
    orderVersionId?: string;
    price?: {
      calculatedTaxes?: Record<string, never>;
      /** Format: float */
      netPrice: number;
      /** Format: float */
      positionPrice: number;
      /** Format: float */
      rawTotal: number;
      taxRules?: Record<string, never>;
      taxStatus: string;
      /** Format: float */
      totalPrice: number;
    };
    quoteNumber?: string;
    relationships?: {
      comments?: {
        data?: {
          /** @example a5d491060952aa8ad5fdee071be752de */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/comments
           */
          related?: string;
        };
      };
      createdBy?: {
        data?: {
          /** @example 34998857f537140306898d54d4b970dc */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/createdBy
           */
          related?: string;
        };
      };
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/currency
           */
          related?: string;
        };
      };
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/customer
           */
          related?: string;
        };
      };
      deliveries?: {
        data?: {
          /** @example 6fc31b6b9cd717cc0dcb81152308f8af */
          id?: string;
          /** @example quote_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/deliveries
           */
          related?: string;
        };
      };
      documents?: {
        data?: {
          /** @example 21f64da1e5792c8295b964d159a14491 */
          id?: string;
          /** @example quote_document */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/documents
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/language
           */
          related?: string;
        };
      };
      lineItems?: {
        data?: {
          /** @example a042af1aa9f3853fe3cd7dabc065568f */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/lineItems
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/order
           */
          related?: string;
        };
      };
      quoteEmployees?: {
        data?: {
          /** @example 2d59101091544ffd9a1d23090d6e2f0a */
          id?: string;
          /** @example quote_employee */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/quoteEmployees
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/salesChannel
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/stateMachineState
           */
          related?: string;
        };
      };
      transactions?: {
        data?: {
          /** @example c15b977dd99332ca8623fbdfb86827e8 */
          id?: string;
          /** @example quote_transaction */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/transactions
           */
          related?: string;
        };
      };
      updatedBy?: {
        data?: {
          /** @example 7ced3d0067ad61702af7db8ae260aa76 */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/updatedBy
           */
          related?: string;
        };
      };
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote/c48e929b2b1eabba2ba036884433345e/user
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    sentAt?: string;
    shippingCosts?: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    stateId: string;
    /** Format: float */
    subtotalNet?: number;
    taxStatus?: string;
    /** Format: float */
    totalDiscount?: number;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
    updatedById?: string;
    userId?: string;
    versionId?: string;
  };
  QuoteLineItem: {
    children: components["schemas"]["QuoteLineItem"][];
    cover?: components["schemas"]["Media"];
    coverId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    discount?: {
      type?: string;
      /** Format: int64 */
      value?: number;
    };
    good?: boolean;
    id: string;
    identifier: string;
    label: string;
    parent?: components["schemas"]["QuoteLineItem"];
    parentId?: string;
    parentVersionId?: string;
    payload?: Record<string, never>;
    /** Format: int64 */
    position: number;
    price: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    priceDefinition?: Record<string, never>;
    product?: components["schemas"]["Product"];
    productId?: string;
    productPrice?: Record<string, never>;
    productVersionId?: string;
    promotion?: components["schemas"]["Promotion"];
    promotionId?: string;
    purchasePrice?: Record<string, never>;
    /** Format: int64 */
    quantity: number;
    quote?: components["schemas"]["Quote"];
    quoteId: string;
    quoteVersionId?: string;
    referencedId?: string;
    removable?: boolean;
    stackable?: boolean;
    states: string[];
    /** Format: float */
    totalPrice?: number;
    type?: string;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteLineItemJsonApi: components["schemas"]["resource"] & {
    coverId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    discount?: {
      type?: string;
      /** Format: int64 */
      value?: number;
    };
    good?: boolean;
    id: string;
    identifier: string;
    label: string;
    parentId?: string;
    parentVersionId?: string;
    payload?: Record<string, never>;
    /** Format: int64 */
    position: number;
    price: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    priceDefinition?: Record<string, never>;
    productId?: string;
    productPrice?: Record<string, never>;
    productVersionId?: string;
    promotionId?: string;
    purchasePrice?: Record<string, never>;
    /** Format: int64 */
    quantity: number;
    quoteId: string;
    quoteVersionId?: string;
    referencedId?: string;
    relationships?: {
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-line-item/c7917be23ddd01ec45871fc8c1e5e540/children
           */
          related?: string;
        };
      };
      cover?: {
        data?: {
          /** @example 41d0e299ca1abeb2094852da042165c7 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-line-item/c7917be23ddd01ec45871fc8c1e5e540/cover
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example quote_line_item */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-line-item/c7917be23ddd01ec45871fc8c1e5e540/parent
           */
          related?: string;
        };
      };
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-line-item/c7917be23ddd01ec45871fc8c1e5e540/product
           */
          related?: string;
        };
      };
      promotion?: {
        data?: {
          /** @example f8dcad058c9c44fdb6ffcb22d2d4c31f */
          id?: string;
          /** @example promotion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-line-item/c7917be23ddd01ec45871fc8c1e5e540/promotion
           */
          related?: string;
        };
      };
      quote?: {
        data?: {
          /** @example 7a674c327bfa07f7c1204fb38ca6ef3b */
          id?: string;
          /** @example quote */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-line-item/c7917be23ddd01ec45871fc8c1e5e540/quote
           */
          related?: string;
        };
      };
    };
    removable?: boolean;
    stackable?: boolean;
    states: string[];
    /** Format: float */
    totalPrice?: number;
    type?: string;
    /** Format: float */
    unitPrice?: number;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteTransaction: {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    quote?: components["schemas"]["Quote"];
    quoteId: string;
    quoteVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  QuoteTransactionJsonApi: components["schemas"]["resource"] & {
    amount: {
      calculatedTaxes?: Record<string, never>;
      listPrice?: {
        /** Format: float */
        discount?: number;
        /** Format: float */
        percentage?: number;
        /** Format: float */
        price?: number;
      };
      /** Format: int64 */
      quantity: number;
      referencePrice?: Record<string, never>;
      regulationPrice?: {
        /** Format: float */
        price?: number;
      };
      taxRules?: Record<string, never>;
      /** Format: float */
      totalPrice: number;
      /** Format: float */
      unitPrice: number;
    };
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    paymentMethodId: string;
    quoteId: string;
    quoteVersionId?: string;
    relationships?: {
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-transaction/ace75e8d17b730e2c18557ab7ea8abeb/paymentMethod
           */
          related?: string;
        };
      };
      quote?: {
        data?: {
          /** @example 7a674c327bfa07f7c1204fb38ca6ef3b */
          id?: string;
          /** @example quote */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /quote-transaction/ace75e8d17b730e2c18557ab7ea8abeb/quote
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  Rule: {
    areas?: readonly Record<string, never>[];
    cartPromotions?: components["schemas"]["Promotion"][];
    conditions?: components["schemas"]["RuleCondition"][];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      customizedProductsTemplateOptionPrices?: {
        data?: {
          /** @example 00ece6d939b90beadc47a301e8b87a9e */
          id?: string;
          /** @example swag_customized_products_template_option_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/customizedProductsTemplateOptionPrices
           */
          related?: string;
        };
      };
      customizedProductsTemplateOptionValuePrices?: {
        data?: {
          /** @example 67d7fb8f29b1a418ccf772dd5dee13a8 */
          id?: string;
          /** @example swag_customized_products_template_option_value_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/customizedProductsTemplateOptionValuePrices
           */
          related?: string;
        };
      };
      subscriptionIntervals?: {
        data?: {
          /** @example 28e0fbf8d26aa147681d2241c60ef075 */
          id?: string;
          /** @example subscription_interval */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/subscriptionIntervals
           */
          related?: string;
        };
      };
      subscriptionPlans?: {
        data?: {
          /** @example ed94874505da2886dc66a3a3d3968972 */
          id?: string;
          /** @example subscription_plan */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/subscriptionPlans
           */
          related?: string;
        };
      };
      swagCmsExtensionsBlockRules?: {
        data?: {
          /** @example ce0b9f43f8947576ee10c93d4d69a4c4 */
          id?: string;
          /** @example swag_cms_extensions_block_rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagCmsExtensionsBlockRules
           */
          related?: string;
        };
      };
      swagDynamicAccessCategories?: {
        data?: {
          /** @example c9a96acd304adec0ef58961b00723adb */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagDynamicAccessCategories
           */
          related?: string;
        };
      };
      swagDynamicAccessLandingPages?: {
        data?: {
          /** @example 34fd45ab970fb4ad3e96509b1936ddfb */
          id?: string;
          /** @example landing_page */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagDynamicAccessLandingPages
           */
          related?: string;
        };
      };
      swagDynamicAccessProducts?: {
        data?: {
          /** @example acfed6b188b8ace53d2d2bb8dac196f0 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagDynamicAccessProducts
           */
          related?: string;
        };
      };
      warehouseGroup?: {
        data?: {
          /** @example 1768e3071b62161d415e0c24332055ed */
          id?: string;
          /** @example warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/warehouseGroup
           */
          related?: string;
        };
      };
    };
    flowSequences?: components["schemas"]["FlowSequence"][];
    id: string;
    invalid?: boolean;
    moduleTypes?: Record<string, never>;
    name: string;
    orderPromotions?: components["schemas"]["Promotion"][];
    paymentMethods?: components["schemas"]["PaymentMethod"][];
    personaPromotions?: components["schemas"]["Promotion"][];
    /** Format: int64 */
    priority: number;
    productPrices?: components["schemas"]["ProductPrice"][];
    promotionDiscounts?: components["schemas"]["PromotionDiscount"][];
    promotionSetGroups?: components["schemas"]["PromotionSetgroup"][];
    shippingMethodPriceCalculations?: components["schemas"]["ShippingMethodPrice"][];
    shippingMethodPrices?: components["schemas"]["ShippingMethodPrice"][];
    shippingMethods?: components["schemas"]["ShippingMethod"][];
    tags?: components["schemas"]["Tag"][];
    taxProviders?: components["schemas"]["TaxProvider"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  RuleCondition: {
    appScriptCondition?: components["schemas"]["AppScriptCondition"];
    children?: components["schemas"]["RuleCondition"][];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    parent?: components["schemas"]["RuleCondition"];
    parentId?: string;
    /** Format: int64 */
    position?: number;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
    scriptId?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    value?: Record<string, never>;
  };
  RuleConditionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    parentId?: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      appScriptCondition?: {
        data?: {
          /** @example d84ccced9bafd192ec0c6b5a8a49bc07 */
          id?: string;
          /** @example app_script_condition */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /rule-condition/5e1af56f1ebb8e4b634d38961afe4930/appScriptCondition
           */
          related?: string;
        };
      };
      children?: {
        data?: {
          /** @example 268184c12df027f536154d099d497b31 */
          id?: string;
          /** @example rule_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule-condition/5e1af56f1ebb8e4b634d38961afe4930/children
           */
          related?: string;
        };
      };
      parent?: {
        data?: {
          /** @example d0e45878043844ffc41aac437e86b602 */
          id?: string;
          /** @example rule_condition */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /rule-condition/5e1af56f1ebb8e4b634d38961afe4930/parent
           */
          related?: string;
        };
      };
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /rule-condition/5e1af56f1ebb8e4b634d38961afe4930/rule
           */
          related?: string;
        };
      };
    };
    ruleId: string;
    scriptId?: string;
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    value?: Record<string, never>;
  };
  RuleJsonApi: components["schemas"]["resource"] & {
    areas?: readonly Record<string, never>[];
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    extensions?: {
      customizedProductsTemplateOptionPrices?: {
        data?: {
          /** @example 00ece6d939b90beadc47a301e8b87a9e */
          id?: string;
          /** @example swag_customized_products_template_option_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/customizedProductsTemplateOptionPrices
           */
          related?: string;
        };
      };
      customizedProductsTemplateOptionValuePrices?: {
        data?: {
          /** @example 67d7fb8f29b1a418ccf772dd5dee13a8 */
          id?: string;
          /** @example swag_customized_products_template_option_value_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/customizedProductsTemplateOptionValuePrices
           */
          related?: string;
        };
      };
      subscriptionIntervals?: {
        data?: {
          /** @example 28e0fbf8d26aa147681d2241c60ef075 */
          id?: string;
          /** @example subscription_interval */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/subscriptionIntervals
           */
          related?: string;
        };
      };
      subscriptionPlans?: {
        data?: {
          /** @example ed94874505da2886dc66a3a3d3968972 */
          id?: string;
          /** @example subscription_plan */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/subscriptionPlans
           */
          related?: string;
        };
      };
      swagCmsExtensionsBlockRules?: {
        data?: {
          /** @example ce0b9f43f8947576ee10c93d4d69a4c4 */
          id?: string;
          /** @example swag_cms_extensions_block_rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagCmsExtensionsBlockRules
           */
          related?: string;
        };
      };
      swagDynamicAccessCategories?: {
        data?: {
          /** @example c9a96acd304adec0ef58961b00723adb */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagDynamicAccessCategories
           */
          related?: string;
        };
      };
      swagDynamicAccessLandingPages?: {
        data?: {
          /** @example 34fd45ab970fb4ad3e96509b1936ddfb */
          id?: string;
          /** @example landing_page */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagDynamicAccessLandingPages
           */
          related?: string;
        };
      };
      swagDynamicAccessProducts?: {
        data?: {
          /** @example acfed6b188b8ace53d2d2bb8dac196f0 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/swagDynamicAccessProducts
           */
          related?: string;
        };
      };
      warehouseGroup?: {
        data?: {
          /** @example 1768e3071b62161d415e0c24332055ed */
          id?: string;
          /** @example warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/warehouseGroup
           */
          related?: string;
        };
      };
    };
    id: string;
    invalid?: boolean;
    moduleTypes?: Record<string, never>;
    name: string;
    /** Format: int64 */
    priority: number;
    relationships?: {
      cartPromotions?: {
        data?: {
          /** @example 2ce52c5be33293c67fb55f29fa4046a7 */
          id?: string;
          /** @example promotion */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/cartPromotions
           */
          related?: string;
        };
      };
      conditions?: {
        data?: {
          /** @example b5b399ec1fcfe753f58dbafa197efdc1 */
          id?: string;
          /** @example rule_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/conditions
           */
          related?: string;
        };
      };
      flowSequences?: {
        data?: {
          /** @example 3a0d70b6dd3624074e5e15cd07e7fa90 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/flowSequences
           */
          related?: string;
        };
      };
      orderPromotions?: {
        data?: {
          /** @example 82dea0f7981e729cd7f6303cc8a1c499 */
          id?: string;
          /** @example promotion */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/orderPromotions
           */
          related?: string;
        };
      };
      paymentMethods?: {
        data?: {
          /** @example b631b1ab565525e892f9cdc1242cca14 */
          id?: string;
          /** @example payment_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/paymentMethods
           */
          related?: string;
        };
      };
      personaPromotions?: {
        data?: {
          /** @example e6c8f116c04f26f18410d2d0dbd677db */
          id?: string;
          /** @example promotion */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/personaPromotions
           */
          related?: string;
        };
      };
      productPrices?: {
        data?: {
          /** @example 186169119da6d813def53830287d0b9a */
          id?: string;
          /** @example product_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/productPrices
           */
          related?: string;
        };
      };
      promotionDiscounts?: {
        data?: {
          /** @example 3ddb3f7d5ec4f032dc51f294409b68f9 */
          id?: string;
          /** @example promotion_discount */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/promotionDiscounts
           */
          related?: string;
        };
      };
      promotionSetGroups?: {
        data?: {
          /** @example b71b82231d40fdedf42133c0e71384f8 */
          id?: string;
          /** @example promotion_setgroup */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/promotionSetGroups
           */
          related?: string;
        };
      };
      shippingMethodPriceCalculations?: {
        data?: {
          /** @example b8ea8aac272229a90f9a6cb1fcada8d1 */
          id?: string;
          /** @example shipping_method_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/shippingMethodPriceCalculations
           */
          related?: string;
        };
      };
      shippingMethodPrices?: {
        data?: {
          /** @example 3702bcc7b41585828b44acbbdcd83b23 */
          id?: string;
          /** @example shipping_method_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/shippingMethodPrices
           */
          related?: string;
        };
      };
      shippingMethods?: {
        data?: {
          /** @example 8268b0a6c902fbde485094c2f627b854 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/shippingMethods
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/tags
           */
          related?: string;
        };
      };
      taxProviders?: {
        data?: {
          /** @example 01a1a9d428b6402dc8255d99c787a00e */
          id?: string;
          /** @example tax_provider */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /rule/ab7a485ebe75b6dd7243ad719f23c7de/taxProviders
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  RuleTag: {
    id?: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  SaasAppStorefrontConfig: {
    app?: components["schemas"]["App"];
    appId: string;
    appVersion: string;
    assetPaths?: string[];
    author?: string;
    basePath: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    isTheme?: boolean;
    name?: string;
    previewMedia?: string;
    scriptFiles?: Record<string, never>;
    storefrontEntryPath?: string;
    styleFiles?: Record<string, never>;
    technicalName: string;
    themeConfig?: Record<string, never>;
    themeJson?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    viewInheritance?: string[];
  };
  SaasAppStorefrontConfigJsonApi: components["schemas"]["resource"] & {
    appId: string;
    appVersion: string;
    assetPaths?: string[];
    author?: string;
    basePath: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    isTheme?: boolean;
    name?: string;
    previewMedia?: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /saas-app-storefront-config/941d29c9ba5ba908e203784d6103906a/app
           */
          related?: string;
        };
      };
    };
    scriptFiles?: Record<string, never>;
    storefrontEntryPath?: string;
    styleFiles?: Record<string, never>;
    technicalName: string;
    themeConfig?: Record<string, never>;
    themeJson?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    viewInheritance?: string[];
  };
  SaasSbpUserData: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: date-time */
    lastSbpStatusChange?: string;
    sbpAccessToken?: Record<string, never>;
    sbpStatus: string;
    /** Format: int64 */
    sbpUserId: number;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
  };
  SaasSbpUserDataJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: date-time */
    lastSbpStatusChange?: string;
    relationships?: {
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /saas-sbp-user-data/d271f61e3b0f14048b1d3280fbd44718/user
           */
          related?: string;
        };
      };
    };
    sbpAccessToken?: Record<string, never>;
    sbpStatus: string;
    /** Format: int64 */
    sbpUserId: number;
    /** Format: date-time */
    updatedAt?: string;
    userId: string;
  };
  SaasStorefrontDemoToken: {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    expiresAt: string;
    id: string;
    token: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
  };
  SaasStorefrontDemoTokenJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    expiresAt: string;
    id: string;
    relationships?: {
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /saas-storefront-demo-token/6d788712a654b3860ec9cb23d47fe5d0/user
           */
          related?: string;
        };
      };
    };
    token: string;
    /** Format: date-time */
    updatedAt?: string;
    userId: string;
  };
  SaasUserLoginToken: {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    expiresAt: string;
    id: string;
    token: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
  };
  SaasUserLoginTokenJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    expiresAt: string;
    id: string;
    relationships?: {
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /saas-user-login-token/57e8c4fa360d6f7647f64b6c2f53d3bc/user
           */
          related?: string;
        };
      };
    };
    token: string;
    /** Format: date-time */
    updatedAt?: string;
    userId: string;
  };
  SalesChannel: {
    accessKey: string;
    active?: boolean;
    analytics?: components["schemas"]["SalesChannelAnalytics"];
    analyticsId?: string;
    boundCustomers?: components["schemas"]["Customer"][];
    configuration?: Record<string, never>;
    countries?: components["schemas"]["Country"][];
    country?: components["schemas"]["Country"];
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    currencies?: components["schemas"]["Currency"][];
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    customerGroup?: components["schemas"]["CustomerGroup"];
    customerGroupId: string;
    customerGroupsRegistrations?: components["schemas"]["CustomerGroup"][];
    customers?: components["schemas"]["Customer"][];
    customFields?: Record<string, never>;
    documentBaseConfigSalesChannels?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
    domains?: components["schemas"]["SalesChannelDomain"][];
    extensions?: {
      paypalPosSalesChannel?: {
        data?: {
          /** @example 67ba77ec00554136bd30a09f2b79a091 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/paypalPosSalesChannel
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/quotes
           */
          related?: string;
        };
      };
      socialShoppingProductErrors?: {
        data?: {
          /** @example 74181afcb28901351a5f2676d1687de8 */
          id?: string;
          /** @example swag_social_shopping_product_error */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/socialShoppingProductErrors
           */
          related?: string;
        };
      };
      socialShoppingSalesChannel?: {
        data?: {
          /** @example be7393dc9d5ee6da46b8ccdf1b316101 */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/socialShoppingSalesChannel
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/subscriptions
           */
          related?: string;
        };
      };
      swagSocialShoppingCustomer?: {
        data?: {
          /** @example 70825a5dfabd078bce265301ba7d9cca */
          id?: string;
          /** @example swag_social_shopping_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/swagSocialShoppingCustomer
           */
          related?: string;
        };
      };
      swagSocialShoppingOrder?: {
        data?: {
          /** @example 829fa9441f5dea1e7ada99a9ae4a867f */
          id?: string;
          /** @example swag_social_shopping_order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/swagSocialShoppingOrder
           */
          related?: string;
        };
      };
      themes?: {
        data?: {
          /** @example fe021943dcda87150f590b3475afaded */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/themes
           */
          related?: string;
        };
      };
    };
    footerCategory?: components["schemas"]["Category"];
    footerCategoryId?: string;
    footerCategoryVersionId?: string;
    homeCmsPage?: components["schemas"]["CmsPage"];
    homeCmsPageId?: string;
    homeCmsPageVersionId?: string;
    homeEnabled: boolean;
    homeKeywords?: string;
    homeMetaDescription?: string;
    homeMetaTitle?: string;
    homeName?: string;
    homeSlotConfig?: Record<string, never>;
    hreflangActive?: boolean;
    hreflangDefaultDomain?: components["schemas"]["SalesChannelDomain"];
    hreflangDefaultDomainId?: string;
    id: string;
    landingPages?: components["schemas"]["LandingPage"][];
    language?: components["schemas"]["Language"];
    languageId: string;
    languages?: components["schemas"]["Language"][];
    mailHeaderFooter?: components["schemas"]["MailHeaderFooter"];
    mailHeaderFooterId?: string;
    mainCategories?: components["schemas"]["MainCategory"][];
    maintenance?: boolean;
    maintenanceIpWhitelist?: Record<string, never>[];
    name: string;
    navigationCategory?: components["schemas"]["Category"];
    /** Format: int64 */
    navigationCategoryDepth?: number;
    navigationCategoryId: string;
    navigationCategoryVersionId?: string;
    newsletterRecipients?: components["schemas"]["NewsletterRecipient"][];
    numberRangeSalesChannels?: components["schemas"]["NumberRangeSalesChannel"][];
    orders?: components["schemas"]["Order"][];
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    paymentMethodIds?: readonly string[];
    paymentMethods?: components["schemas"]["PaymentMethod"][];
    productExports?: components["schemas"]["ProductExport"][];
    productReviews?: components["schemas"]["ProductReview"][];
    productVisibilities?: components["schemas"]["ProductVisibility"][];
    promotionSalesChannels?: components["schemas"]["PromotionSalesChannel"][];
    seoUrls?: components["schemas"]["SeoUrl"][];
    seoUrlTemplates?: components["schemas"]["SeoUrlTemplate"][];
    serviceCategory?: components["schemas"]["Category"];
    serviceCategoryId?: string;
    serviceCategoryVersionId?: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    shippingMethods?: components["schemas"]["ShippingMethod"][];
    shortName?: string;
    systemConfigs?: components["schemas"]["SystemConfig"][];
    taxCalculationType?: string;
    translated?: {
      accessKey?: string;
      analyticsId?: string;
      countryId?: string;
      currencyId?: string;
      customerGroupId?: string;
      footerCategoryId?: string;
      footerCategoryVersionId?: string;
      homeCmsPageId?: string;
      homeCmsPageVersionId?: string;
      homeKeywords?: string;
      homeMetaDescription?: string;
      homeMetaTitle?: string;
      homeName?: string;
      hreflangDefaultDomainId?: string;
      languageId?: string;
      mailHeaderFooterId?: string;
      name?: string;
      navigationCategoryId?: string;
      navigationCategoryVersionId?: string;
      paymentMethodId?: string;
      serviceCategoryId?: string;
      serviceCategoryVersionId?: string;
      shippingMethodId?: string;
      shortName?: string;
      taxCalculationType?: string;
      typeId?: string;
    };
    type?: components["schemas"]["SalesChannelType"];
    typeId: string;
    /** Format: date-time */
    updatedAt?: string;
    wishlists?: components["schemas"]["CustomerWishlist"][];
  };
  SalesChannelAnalytics: {
    active?: boolean;
    anonymizeIp?: boolean;
    /** Format: date-time */
    createdAt: string;
    id: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    trackingId?: string;
    trackOrders?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  SalesChannelAnalyticsJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    anonymizeIp?: boolean;
    /** Format: date-time */
    createdAt: string;
    id: string;
    relationships?: {
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-analytics/d2c88e9b92761eeb97980a50c7d2cdc0/salesChannel
           */
          related?: string;
        };
      };
    };
    trackingId?: string;
    trackOrders?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  SalesChannelCountry: {
    country?: components["schemas"]["Country"];
    countryId: string;
    id?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
  };
  SalesChannelCurrency: {
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    id?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
  };
  SalesChannelDomain: {
    /** Format: date-time */
    createdAt: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    customFields?: Record<string, never>;
    extensions?: {
      socialShoppingSalesChannels?: {
        data?: {
          /** @example e581067f817be66449a3f4350dc327af */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/socialShoppingSalesChannels
           */
          related?: string;
        };
      };
    };
    hreflangUseOnlyLocale?: boolean;
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    productExports?: components["schemas"]["ProductExport"][];
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelDefaultHreflang?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    snippetSet?: components["schemas"]["SnippetSet"];
    snippetSetId: string;
    /** Format: date-time */
    updatedAt?: string;
    url: string;
  };
  SalesChannelDomainJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    currencyId: string;
    customFields?: Record<string, never>;
    extensions?: {
      socialShoppingSalesChannels?: {
        data?: {
          /** @example e581067f817be66449a3f4350dc327af */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/socialShoppingSalesChannels
           */
          related?: string;
        };
      };
    };
    hreflangUseOnlyLocale?: boolean;
    id: string;
    languageId: string;
    relationships?: {
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/currency
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/language
           */
          related?: string;
        };
      };
      productExports?: {
        data?: {
          /** @example 2cd8793787cda582174c0fc329fbc377 */
          id?: string;
          /** @example product_export */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/productExports
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/salesChannel
           */
          related?: string;
        };
      };
      salesChannelDefaultHreflang?: {
        data?: {
          /** @example 8d7b798a77667d73c422fb222603234c */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/salesChannelDefaultHreflang
           */
          related?: string;
        };
      };
      snippetSet?: {
        data?: {
          /** @example 543af5fd1912efc00742534f621046d3 */
          id?: string;
          /** @example snippet_set */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-domain/e8e8de5eb87653b51534931bb0714095/snippetSet
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    snippetSetId: string;
    /** Format: date-time */
    updatedAt?: string;
    url: string;
  };
  SalesChannelJsonApi: components["schemas"]["resource"] & {
    accessKey: string;
    active?: boolean;
    analyticsId?: string;
    configuration?: Record<string, never>;
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    currencyId: string;
    customerGroupId: string;
    customFields?: Record<string, never>;
    extensions?: {
      paypalPosSalesChannel?: {
        data?: {
          /** @example 67ba77ec00554136bd30a09f2b79a091 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/paypalPosSalesChannel
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/quotes
           */
          related?: string;
        };
      };
      socialShoppingProductErrors?: {
        data?: {
          /** @example 74181afcb28901351a5f2676d1687de8 */
          id?: string;
          /** @example swag_social_shopping_product_error */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/socialShoppingProductErrors
           */
          related?: string;
        };
      };
      socialShoppingSalesChannel?: {
        data?: {
          /** @example be7393dc9d5ee6da46b8ccdf1b316101 */
          id?: string;
          /** @example swag_social_shopping_sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/socialShoppingSalesChannel
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/subscriptions
           */
          related?: string;
        };
      };
      swagSocialShoppingCustomer?: {
        data?: {
          /** @example 70825a5dfabd078bce265301ba7d9cca */
          id?: string;
          /** @example swag_social_shopping_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/swagSocialShoppingCustomer
           */
          related?: string;
        };
      };
      swagSocialShoppingOrder?: {
        data?: {
          /** @example 829fa9441f5dea1e7ada99a9ae4a867f */
          id?: string;
          /** @example swag_social_shopping_order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/swagSocialShoppingOrder
           */
          related?: string;
        };
      };
      themes?: {
        data?: {
          /** @example fe021943dcda87150f590b3475afaded */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/themes
           */
          related?: string;
        };
      };
    };
    footerCategoryId?: string;
    footerCategoryVersionId?: string;
    homeCmsPageId?: string;
    homeCmsPageVersionId?: string;
    homeEnabled: boolean;
    homeKeywords?: string;
    homeMetaDescription?: string;
    homeMetaTitle?: string;
    homeName?: string;
    homeSlotConfig?: Record<string, never>;
    hreflangActive?: boolean;
    hreflangDefaultDomainId?: string;
    id: string;
    languageId: string;
    mailHeaderFooterId?: string;
    maintenance?: boolean;
    maintenanceIpWhitelist?: Record<string, never>[];
    name: string;
    /** Format: int64 */
    navigationCategoryDepth?: number;
    navigationCategoryId: string;
    navigationCategoryVersionId?: string;
    paymentMethodId: string;
    paymentMethodIds?: readonly string[];
    relationships?: {
      analytics?: {
        data?: {
          /** @example 68c4283db8074b12df1660b31c0220a9 */
          id?: string;
          /** @example sales_channel_analytics */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/analytics
           */
          related?: string;
        };
      };
      boundCustomers?: {
        data?: {
          /** @example 770f1f7d01437434bcdf89eee15d4bd2 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/boundCustomers
           */
          related?: string;
        };
      };
      countries?: {
        data?: {
          /** @example 71bee43a7a930f904d6194833b9619c9 */
          id?: string;
          /** @example country */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/countries
           */
          related?: string;
        };
      };
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/country
           */
          related?: string;
        };
      };
      currencies?: {
        data?: {
          /** @example 7f24d9fc4140045241b3f97bcf36bf03 */
          id?: string;
          /** @example currency */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/currencies
           */
          related?: string;
        };
      };
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/currency
           */
          related?: string;
        };
      };
      customerGroup?: {
        data?: {
          /** @example 115091b01a7299f28a5ce7e1b712a222 */
          id?: string;
          /** @example customer_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/customerGroup
           */
          related?: string;
        };
      };
      customerGroupsRegistrations?: {
        data?: {
          /** @example ea52a61e886aa27d777ef201c6fb7fff */
          id?: string;
          /** @example customer_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/customerGroupsRegistrations
           */
          related?: string;
        };
      };
      customers?: {
        data?: {
          /** @example 4b6f7d34a58ba399f077685951d06738 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/customers
           */
          related?: string;
        };
      };
      documentBaseConfigSalesChannels?: {
        data?: {
          /** @example 9c990fde5b38ff70fc1a07bf84c12a17 */
          id?: string;
          /** @example document_base_config_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/documentBaseConfigSalesChannels
           */
          related?: string;
        };
      };
      domains?: {
        data?: {
          /** @example e4e46deb7f9cc58c7abfb32e5570b6f3 */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/domains
           */
          related?: string;
        };
      };
      footerCategory?: {
        data?: {
          /** @example a609a222a2767cf322ee21d72a0ddb3e */
          id?: string;
          /** @example category */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/footerCategory
           */
          related?: string;
        };
      };
      homeCmsPage?: {
        data?: {
          /** @example 00bba78f79ca4792a3162942ac65c768 */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/homeCmsPage
           */
          related?: string;
        };
      };
      hreflangDefaultDomain?: {
        data?: {
          /** @example 7e80830860b9b8e5b8fc8d67262680b5 */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/hreflangDefaultDomain
           */
          related?: string;
        };
      };
      landingPages?: {
        data?: {
          /** @example d60b77f2b3bd69591e3d5e3100926b4d */
          id?: string;
          /** @example landing_page */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/landingPages
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/language
           */
          related?: string;
        };
      };
      languages?: {
        data?: {
          /** @example f3e334d42863e8250c7d03efefbfd387 */
          id?: string;
          /** @example language */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/languages
           */
          related?: string;
        };
      };
      mailHeaderFooter?: {
        data?: {
          /** @example a21fbb0e023f5e68d5be77b969e1eb09 */
          id?: string;
          /** @example mail_header_footer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/mailHeaderFooter
           */
          related?: string;
        };
      };
      mainCategories?: {
        data?: {
          /** @example 1fb731fc4139cbb575429e28846f0c39 */
          id?: string;
          /** @example main_category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/mainCategories
           */
          related?: string;
        };
      };
      navigationCategory?: {
        data?: {
          /** @example 2194fe03b676158bb7a3a03f1b98b80e */
          id?: string;
          /** @example category */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/navigationCategory
           */
          related?: string;
        };
      };
      newsletterRecipients?: {
        data?: {
          /** @example 2217f01dc5cddfd5b60387c39867f58e */
          id?: string;
          /** @example newsletter_recipient */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/newsletterRecipients
           */
          related?: string;
        };
      };
      numberRangeSalesChannels?: {
        data?: {
          /** @example 62db021f1d56ae4688775365be68a04f */
          id?: string;
          /** @example number_range_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/numberRangeSalesChannels
           */
          related?: string;
        };
      };
      orders?: {
        data?: {
          /** @example 12c500ed0b7879105fb46af0f246be87 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/orders
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/paymentMethod
           */
          related?: string;
        };
      };
      paymentMethods?: {
        data?: {
          /** @example b631b1ab565525e892f9cdc1242cca14 */
          id?: string;
          /** @example payment_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/paymentMethods
           */
          related?: string;
        };
      };
      productExports?: {
        data?: {
          /** @example 2cd8793787cda582174c0fc329fbc377 */
          id?: string;
          /** @example product_export */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/productExports
           */
          related?: string;
        };
      };
      productReviews?: {
        data?: {
          /** @example 01e78541ea343ed72424a5222796a4cd */
          id?: string;
          /** @example product_review */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/productReviews
           */
          related?: string;
        };
      };
      productVisibilities?: {
        data?: {
          /** @example a3534dc8df51f93286fcf577a5f8b153 */
          id?: string;
          /** @example product_visibility */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/productVisibilities
           */
          related?: string;
        };
      };
      promotionSalesChannels?: {
        data?: {
          /** @example ede6dfd9f261361e1f3ada8c5385d064 */
          id?: string;
          /** @example promotion_sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/promotionSalesChannels
           */
          related?: string;
        };
      };
      seoUrls?: {
        data?: {
          /** @example 5321b5a71127b8b98cdd4b068ad56c4c */
          id?: string;
          /** @example seo_url */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/seoUrls
           */
          related?: string;
        };
      };
      seoUrlTemplates?: {
        data?: {
          /** @example 02cde325fef3e680f529875e8abd60bb */
          id?: string;
          /** @example seo_url_template */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/seoUrlTemplates
           */
          related?: string;
        };
      };
      serviceCategory?: {
        data?: {
          /** @example bc70a595d052072b5d94cffea6d8d5bb */
          id?: string;
          /** @example category */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/serviceCategory
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/shippingMethod
           */
          related?: string;
        };
      };
      shippingMethods?: {
        data?: {
          /** @example 8268b0a6c902fbde485094c2f627b854 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/shippingMethods
           */
          related?: string;
        };
      };
      systemConfigs?: {
        data?: {
          /** @example dbcfb7a885e393eeb296543d06485547 */
          id?: string;
          /** @example system_config */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/systemConfigs
           */
          related?: string;
        };
      };
      type?: {
        data?: {
          /** @example 599dcce2998a6b40b1e38e8c6006cb0a */
          id?: string;
          /** @example sales_channel_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/type
           */
          related?: string;
        };
      };
      wishlists?: {
        data?: {
          /** @example 4ec38c6b2208529c1fadccc7d55d7947 */
          id?: string;
          /** @example customer_wishlist */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel/e497ee380a9e2a5e9812e9e0bf504045/wishlists
           */
          related?: string;
        };
      };
    };
    serviceCategoryId?: string;
    serviceCategoryVersionId?: string;
    shippingMethodId: string;
    shortName?: string;
    taxCalculationType?: string;
    translated?: {
      accessKey?: string;
      analyticsId?: string;
      countryId?: string;
      currencyId?: string;
      customerGroupId?: string;
      footerCategoryId?: string;
      footerCategoryVersionId?: string;
      homeCmsPageId?: string;
      homeCmsPageVersionId?: string;
      homeKeywords?: string;
      homeMetaDescription?: string;
      homeMetaTitle?: string;
      homeName?: string;
      hreflangDefaultDomainId?: string;
      languageId?: string;
      mailHeaderFooterId?: string;
      name?: string;
      navigationCategoryId?: string;
      navigationCategoryVersionId?: string;
      paymentMethodId?: string;
      serviceCategoryId?: string;
      serviceCategoryVersionId?: string;
      shippingMethodId?: string;
      shortName?: string;
      taxCalculationType?: string;
      typeId?: string;
    };
    typeId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SalesChannelLanguage: {
    id?: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
  };
  SalesChannelPaymentMethod: {
    id?: string;
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
  };
  SalesChannelShippingMethod: {
    id?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
  };
  SalesChannelType: {
    coverUrl?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    descriptionLong?: string;
    iconName?: string;
    id: string;
    manufacturer?: string;
    name: string;
    salesChannels?: components["schemas"]["SalesChannel"][];
    screenshotUrls?: string[];
    translated?: {
      coverUrl?: string;
      description?: string;
      descriptionLong?: string;
      iconName?: string;
      manufacturer?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SalesChannelTypeJsonApi: components["schemas"]["resource"] & {
    coverUrl?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    descriptionLong?: string;
    iconName?: string;
    id: string;
    manufacturer?: string;
    name: string;
    relationships?: {
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sales-channel-type/569a394914261338c70075564274cb38/salesChannels
           */
          related?: string;
        };
      };
    };
    screenshotUrls?: string[];
    translated?: {
      coverUrl?: string;
      description?: string;
      descriptionLong?: string;
      iconName?: string;
      manufacturer?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Salutation: {
    /** Format: date-time */
    createdAt: string;
    customerAddresses?: components["schemas"]["CustomerAddress"][];
    customers?: components["schemas"]["Customer"][];
    customFields?: Record<string, never>;
    displayName: string;
    extensions?: {
      subscriptionCustomerAddresses?: {
        data?: {
          /** @example 8951627da0210d39cc55d1a91ae21b8d */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/subscriptionCustomerAddresses
           */
          related?: string;
        };
      };
      subscriptionCustomers?: {
        data?: {
          /** @example ee8811605866488e8f21308857e1e5a8 */
          id?: string;
          /** @example subscription_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/subscriptionCustomers
           */
          related?: string;
        };
      };
    };
    id: string;
    letterName: string;
    newsletterRecipients?: components["schemas"]["NewsletterRecipient"][];
    orderAddresses?: components["schemas"]["OrderAddress"][];
    orderCustomers?: components["schemas"]["OrderCustomer"][];
    salutationKey: string;
    translated?: {
      displayName?: string;
      letterName?: string;
      salutationKey?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SalutationJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    displayName: string;
    extensions?: {
      subscriptionCustomerAddresses?: {
        data?: {
          /** @example 8951627da0210d39cc55d1a91ae21b8d */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/subscriptionCustomerAddresses
           */
          related?: string;
        };
      };
      subscriptionCustomers?: {
        data?: {
          /** @example ee8811605866488e8f21308857e1e5a8 */
          id?: string;
          /** @example subscription_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/subscriptionCustomers
           */
          related?: string;
        };
      };
    };
    id: string;
    letterName: string;
    relationships?: {
      customerAddresses?: {
        data?: {
          /** @example 84ed5cbc10cd9f665a8c9f05e49095af */
          id?: string;
          /** @example customer_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/customerAddresses
           */
          related?: string;
        };
      };
      customers?: {
        data?: {
          /** @example 4b6f7d34a58ba399f077685951d06738 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/customers
           */
          related?: string;
        };
      };
      newsletterRecipients?: {
        data?: {
          /** @example 2217f01dc5cddfd5b60387c39867f58e */
          id?: string;
          /** @example newsletter_recipient */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/newsletterRecipients
           */
          related?: string;
        };
      };
      orderAddresses?: {
        data?: {
          /** @example c3182f0dc0cc20b4982616d3e0221747 */
          id?: string;
          /** @example order_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/orderAddresses
           */
          related?: string;
        };
      };
      orderCustomers?: {
        data?: {
          /** @example 1e7dbe7e3bcb48d233fd80588f54c980 */
          id?: string;
          /** @example order_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /salutation/c69a98e13eae87bc0ca8735329bf3a5d/orderCustomers
           */
          related?: string;
        };
      };
    };
    salutationKey: string;
    translated?: {
      displayName?: string;
      letterName?: string;
      salutationKey?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ScheduledTask: {
    /** Format: date-time */
    createdAt: string;
    /** Format: int64 */
    defaultRunInterval: number;
    id: string;
    /** Format: date-time */
    lastExecutionTime?: string;
    name: string;
    /** Format: date-time */
    nextExecutionTime: string;
    /** Format: int64 */
    runInterval: number;
    scheduledTaskClass: string;
    status: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ScheduledTaskJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    /** Format: int64 */
    defaultRunInterval: number;
    id: string;
    /** Format: date-time */
    lastExecutionTime?: string;
    name: string;
    /** Format: date-time */
    nextExecutionTime: string;
    /** Format: int64 */
    runInterval: number;
    scheduledTaskClass: string;
    status: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Script: {
    active: boolean;
    app?: components["schemas"]["App"];
    appId?: string;
    /** Format: date-time */
    createdAt: string;
    hook: string;
    id: string;
    name: string;
    script: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ScriptJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    appId?: string;
    /** Format: date-time */
    createdAt: string;
    hook: string;
    id: string;
    name: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /script/f907e651164789346ae0a1e257c462d8/app
           */
          related?: string;
        };
      };
    };
    script: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SeoUrl: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Runtime field, cannot be used as part of the criteria. */
    error?: string;
    foreignKey: string;
    id: string;
    isCanonical?: boolean;
    isDeleted?: boolean;
    isModified?: boolean;
    language?: components["schemas"]["Language"];
    languageId: string;
    pathInfo: string;
    routeName: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId?: string;
    seoPathInfo: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    url?: string;
  };
  SeoUrlJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    /** Runtime field, cannot be used as part of the criteria. */
    error?: string;
    foreignKey: string;
    id: string;
    isCanonical?: boolean;
    isDeleted?: boolean;
    isModified?: boolean;
    languageId: string;
    pathInfo: string;
    relationships?: {
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /seo-url/da349d0533b621e1f2a0c00b3a04cd46/language
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /seo-url/da349d0533b621e1f2a0c00b3a04cd46/salesChannel
           */
          related?: string;
        };
      };
    };
    routeName: string;
    salesChannelId?: string;
    seoPathInfo: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Runtime field, cannot be used as part of the criteria. */
    url?: string;
  };
  SeoUrlTemplate: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    entityName: string;
    id: string;
    isValid?: boolean;
    routeName: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId?: string;
    template?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SeoUrlTemplateJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    entityName: string;
    id: string;
    isValid?: boolean;
    relationships?: {
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /seo-url-template/58940688e95c02f54877a72861f930bb/salesChannel
           */
          related?: string;
        };
      };
    };
    routeName: string;
    salesChannelId?: string;
    template?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ShippingMethod: {
    active?: boolean;
    appShippingMethod?: components["schemas"]["AppShippingMethod"];
    availabilityRule?: components["schemas"]["Rule"];
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deliveryTime?: components["schemas"]["DeliveryTime"];
    deliveryTimeId: string;
    description?: string;
    extensions?: {
      quoteDeliveries?: {
        data?: {
          /** @example 2aabe64723fb0f621446cd7b5c04f15e */
          id?: string;
          /** @example quote_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/quoteDeliveries
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/subscriptions
           */
          related?: string;
        };
      };
    };
    id: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    name: string;
    orderDeliveries?: components["schemas"]["OrderDelivery"][];
    /** Format: int64 */
    position?: number;
    prices?: components["schemas"]["ShippingMethodPrice"][];
    salesChannelDefaultAssignments?: components["schemas"]["SalesChannel"][];
    salesChannels?: components["schemas"]["SalesChannel"][];
    tags?: components["schemas"]["Tag"][];
    tax?: components["schemas"]["Tax"];
    taxId?: string;
    taxType: string;
    technicalName?: string;
    trackingUrl?: string;
    translated?: {
      availabilityRuleId?: string;
      deliveryTimeId?: string;
      description?: string;
      mediaId?: string;
      name?: string;
      taxId?: string;
      taxType?: string;
      technicalName?: string;
      trackingUrl?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ShippingMethodJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deliveryTimeId: string;
    description?: string;
    extensions?: {
      quoteDeliveries?: {
        data?: {
          /** @example 2aabe64723fb0f621446cd7b5c04f15e */
          id?: string;
          /** @example quote_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/quoteDeliveries
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/subscriptions
           */
          related?: string;
        };
      };
    };
    id: string;
    mediaId?: string;
    name: string;
    /** Format: int64 */
    position?: number;
    relationships?: {
      appShippingMethod?: {
        data?: {
          /** @example 09f1214e961760dbae11d49b2bf9fa2c */
          id?: string;
          /** @example app_shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/appShippingMethod
           */
          related?: string;
        };
      };
      availabilityRule?: {
        data?: {
          /** @example 9fbb7961d1cb158094924c679e1b302c */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/availabilityRule
           */
          related?: string;
        };
      };
      deliveryTime?: {
        data?: {
          /** @example 8c888ae25a7bd42057370e31f7e01044 */
          id?: string;
          /** @example delivery_time */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/deliveryTime
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/media
           */
          related?: string;
        };
      };
      orderDeliveries?: {
        data?: {
          /** @example 0ba472de56dd7ba2e7bb878434321e26 */
          id?: string;
          /** @example order_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/orderDeliveries
           */
          related?: string;
        };
      };
      prices?: {
        data?: {
          /** @example afae32efe0f84fece3f96b377b768b33 */
          id?: string;
          /** @example shipping_method_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/prices
           */
          related?: string;
        };
      };
      salesChannelDefaultAssignments?: {
        data?: {
          /** @example b23663b2abc0909be9a8027a3fbff74b */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/salesChannelDefaultAssignments
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/salesChannels
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/tags
           */
          related?: string;
        };
      };
      tax?: {
        data?: {
          /** @example 06565e5611f23fdf8cc43e5077b92b54 */
          id?: string;
          /** @example tax */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method/d72e7a227a27328b28342b32fc66b6bf/tax
           */
          related?: string;
        };
      };
    };
    taxId?: string;
    taxType: string;
    technicalName?: string;
    trackingUrl?: string;
    translated?: {
      availabilityRuleId?: string;
      deliveryTimeId?: string;
      description?: string;
      mediaId?: string;
      name?: string;
      taxId?: string;
      taxType?: string;
      technicalName?: string;
      trackingUrl?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ShippingMethodPrice: {
    /** Format: int64 */
    calculation?: number;
    calculationRule?: components["schemas"]["Rule"];
    calculationRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    currencyPrice?: Record<string, never>;
    customFields?: Record<string, never>;
    id: string;
    /** Format: float */
    quantityEnd?: number;
    /** Format: float */
    quantityStart?: number;
    rule?: components["schemas"]["Rule"];
    ruleId?: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ShippingMethodPriceJsonApi: components["schemas"]["resource"] & {
    /** Format: int64 */
    calculation?: number;
    calculationRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    currencyPrice?: Record<string, never>;
    customFields?: Record<string, never>;
    id: string;
    /** Format: float */
    quantityEnd?: number;
    /** Format: float */
    quantityStart?: number;
    relationships?: {
      calculationRule?: {
        data?: {
          /** @example 01b78fd34df634d784131ceefffbac99 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method-price/db327935c14793601a943097a4852a7b/calculationRule
           */
          related?: string;
        };
      };
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method-price/db327935c14793601a943097a4852a7b/rule
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /shipping-method-price/db327935c14793601a943097a4852a7b/shippingMethod
           */
          related?: string;
        };
      };
    };
    ruleId?: string;
    shippingMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  ShippingMethodTag: {
    id?: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  Snippet: {
    author: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    set?: components["schemas"]["SnippetSet"];
    setId: string;
    translationKey: string;
    /** Format: date-time */
    updatedAt?: string;
    value: string;
  };
  SnippetJsonApi: components["schemas"]["resource"] & {
    author: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    relationships?: {
      set?: {
        data?: {
          /** @example cdaeeeba9b4a4c5ebf042c0215a7bb0e */
          id?: string;
          /** @example snippet_set */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /snippet/c437bb5adb99c55aa0754151c5a61e3d/set
           */
          related?: string;
        };
      };
    };
    setId: string;
    translationKey: string;
    /** Format: date-time */
    updatedAt?: string;
    value: string;
  };
  SnippetSet: {
    baseFile: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    iso: string;
    name: string;
    salesChannelDomains?: components["schemas"]["SalesChannelDomain"][];
    snippets?: components["schemas"]["Snippet"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  SnippetSetJsonApi: components["schemas"]["resource"] & {
    baseFile: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    iso: string;
    name: string;
    relationships?: {
      salesChannelDomains?: {
        data?: {
          /** @example b60ab8d110194bfe34ef9928ba48ab6d */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /snippet-set/9f6e11952dab122bb6c007faaa8d4880/salesChannelDomains
           */
          related?: string;
        };
      };
      snippets?: {
        data?: {
          /** @example 67be68a348da3b850fb7daa10b034528 */
          id?: string;
          /** @example snippet */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /snippet-set/9f6e11952dab122bb6c007faaa8d4880/snippets
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SsoProvider: {
    active: boolean;
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    name: string;
    ssoProviderCustomers?: components["schemas"]["SsoProviderCustomer"][];
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SsoProviderCustomer: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    id: string;
    ssoProvider?: components["schemas"]["SsoProvider"];
    ssoProviderId: string;
    subject: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SsoProviderCustomerJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    id: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sso-provider-customer/bfea076e6e55c14790133b1314edcdb2/customer
           */
          related?: string;
        };
      };
      ssoProvider?: {
        data?: {
          /** @example 643b6966b5e1ecd3029a10a40f7b85ff */
          id?: string;
          /** @example sso_provider */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sso-provider-customer/bfea076e6e55c14790133b1314edcdb2/ssoProvider
           */
          related?: string;
        };
      };
    };
    ssoProviderId: string;
    subject: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SsoProviderJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    config: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    id: string;
    mediaId?: string;
    name: string;
    relationships?: {
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /sso-provider/179b43520e8619ff3a0ff51723f7e827/media
           */
          related?: string;
        };
      };
      ssoProviderCustomers?: {
        data?: {
          /** @example 6f2bd941c85a0835cd1889fd0a2c835a */
          id?: string;
          /** @example sso_provider_customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /sso-provider/179b43520e8619ff3a0ff51723f7e827/ssoProviderCustomers
           */
          related?: string;
        };
      };
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  StateMachine: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    historyEntries?: components["schemas"]["StateMachineHistory"][];
    id: string;
    initialStateId?: string;
    name: string;
    states?: components["schemas"]["StateMachineState"][];
    technicalName: string;
    transitions?: components["schemas"]["StateMachineTransition"][];
    translated?: {
      initialStateId?: string;
      name?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  StateMachineHistory: {
    /** Format: date-time */
    createdAt: string;
    entityName: string;
    fromStateId: string;
    fromStateMachineState?: components["schemas"]["StateMachineState"];
    id: string;
    referencedId: string;
    referencedVersionId: string;
    stateMachine?: components["schemas"]["StateMachine"];
    stateMachineId: string;
    toStateId: string;
    toStateMachineState?: components["schemas"]["StateMachineState"];
    transitionActionName?: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId?: string;
  };
  StateMachineHistoryJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    entityName: string;
    fromStateId: string;
    id: string;
    referencedId: string;
    referencedVersionId: string;
    relationships?: {
      fromStateMachineState?: {
        data?: {
          /** @example b108a2a0d303fafc83ef06f6790722e8 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-history/2981354377022484094791c3f19ffec8/fromStateMachineState
           */
          related?: string;
        };
      };
      stateMachine?: {
        data?: {
          /** @example 341364a811428a3ed8c355c2c4fe6990 */
          id?: string;
          /** @example state_machine */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-history/2981354377022484094791c3f19ffec8/stateMachine
           */
          related?: string;
        };
      };
      toStateMachineState?: {
        data?: {
          /** @example d04a8a7ce57fa3ec0bc44aa1cb095713 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-history/2981354377022484094791c3f19ffec8/toStateMachineState
           */
          related?: string;
        };
      };
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-history/2981354377022484094791c3f19ffec8/user
           */
          related?: string;
        };
      };
    };
    stateMachineId: string;
    toStateId: string;
    transitionActionName?: string;
    /** Format: date-time */
    updatedAt?: string;
    userId?: string;
  };
  StateMachineJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    initialStateId?: string;
    name: string;
    relationships?: {
      historyEntries?: {
        data?: {
          /** @example 83f6d6b77ef224687b7b34cfe4296bea */
          id?: string;
          /** @example state_machine_history */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine/e33d8b3de97b8246976dde33ff4abd48/historyEntries
           */
          related?: string;
        };
      };
      states?: {
        data?: {
          /** @example 34d955a0df5f7af9c9b4e4dccb3c3564 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine/e33d8b3de97b8246976dde33ff4abd48/states
           */
          related?: string;
        };
      };
      transitions?: {
        data?: {
          /** @example 34fe3c1def90f54754c23fb8df6dbeb0 */
          id?: string;
          /** @example state_machine_transition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine/e33d8b3de97b8246976dde33ff4abd48/transitions
           */
          related?: string;
        };
      };
    };
    technicalName: string;
    translated?: {
      initialStateId?: string;
      name?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  StateMachineState: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      orderLineItems?: {
        data?: {
          /** @example 6bd56ce4562ca1be86bf5b8d92c3c1ee */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderLineItems
           */
          related?: string;
        };
      };
      orderReturnLineItems?: {
        data?: {
          /** @example 56ae6981fe0ca866f2bedad1b47ddcc3 */
          id?: string;
          /** @example order_return_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderReturnLineItems
           */
          related?: string;
        };
      };
      orderReturns?: {
        data?: {
          /** @example e062ff5da223b1e61bb4f72a7808b23b */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderReturns
           */
          related?: string;
        };
      };
      quoteComments?: {
        data?: {
          /** @example 98dec49a83119c512f84645e81ea52d8 */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/quoteComments
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/quotes
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/subscriptions
           */
          related?: string;
        };
      };
    };
    fromStateMachineHistoryEntries?: components["schemas"]["StateMachineHistory"][];
    fromStateMachineTransitions?: components["schemas"]["StateMachineTransition"][];
    id: string;
    name: string;
    orderDeliveries?: components["schemas"]["OrderDelivery"][];
    orders?: components["schemas"]["Order"][];
    orderTransactionCaptureRefunds?: components["schemas"]["OrderTransactionCaptureRefund"][];
    orderTransactionCaptures?: components["schemas"]["OrderTransactionCapture"][];
    orderTransactions?: components["schemas"]["OrderTransaction"][];
    stateMachine?: components["schemas"]["StateMachine"];
    stateMachineId: string;
    technicalName: string;
    toStateMachineHistoryEntries?: components["schemas"]["StateMachineHistory"][];
    toStateMachineTransitions?: components["schemas"]["StateMachineTransition"][];
    translated?: {
      name?: string;
      stateMachineId?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  StateMachineStateJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      orderLineItems?: {
        data?: {
          /** @example 6bd56ce4562ca1be86bf5b8d92c3c1ee */
          id?: string;
          /** @example order_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderLineItems
           */
          related?: string;
        };
      };
      orderReturnLineItems?: {
        data?: {
          /** @example 56ae6981fe0ca866f2bedad1b47ddcc3 */
          id?: string;
          /** @example order_return_line_item */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderReturnLineItems
           */
          related?: string;
        };
      };
      orderReturns?: {
        data?: {
          /** @example e062ff5da223b1e61bb4f72a7808b23b */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderReturns
           */
          related?: string;
        };
      };
      quoteComments?: {
        data?: {
          /** @example 98dec49a83119c512f84645e81ea52d8 */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/quoteComments
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/quotes
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/subscriptions
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    relationships?: {
      fromStateMachineHistoryEntries?: {
        data?: {
          /** @example 6e4fe8b42b9cffa16c3e7b7e4a2a836d */
          id?: string;
          /** @example state_machine_history */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/fromStateMachineHistoryEntries
           */
          related?: string;
        };
      };
      fromStateMachineTransitions?: {
        data?: {
          /** @example 80afc3e35f99674237f602b393d3b2ba */
          id?: string;
          /** @example state_machine_transition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/fromStateMachineTransitions
           */
          related?: string;
        };
      };
      orderDeliveries?: {
        data?: {
          /** @example 0ba472de56dd7ba2e7bb878434321e26 */
          id?: string;
          /** @example order_delivery */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderDeliveries
           */
          related?: string;
        };
      };
      orders?: {
        data?: {
          /** @example 12c500ed0b7879105fb46af0f246be87 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orders
           */
          related?: string;
        };
      };
      orderTransactionCaptureRefunds?: {
        data?: {
          /** @example 24fe1cc759f5450a1d5984a61ad20bda */
          id?: string;
          /** @example order_transaction_capture_refund */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderTransactionCaptureRefunds
           */
          related?: string;
        };
      };
      orderTransactionCaptures?: {
        data?: {
          /** @example a32c8bdb9e1154cf4e138a0c8faa7159 */
          id?: string;
          /** @example order_transaction_capture */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderTransactionCaptures
           */
          related?: string;
        };
      };
      orderTransactions?: {
        data?: {
          /** @example 3bdb6a464fb3330bd1935325493c5f2c */
          id?: string;
          /** @example order_transaction */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/orderTransactions
           */
          related?: string;
        };
      };
      stateMachine?: {
        data?: {
          /** @example 341364a811428a3ed8c355c2c4fe6990 */
          id?: string;
          /** @example state_machine */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/stateMachine
           */
          related?: string;
        };
      };
      toStateMachineHistoryEntries?: {
        data?: {
          /** @example 01326b3b7d7c9c9182eb3940bb456c50 */
          id?: string;
          /** @example state_machine_history */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/toStateMachineHistoryEntries
           */
          related?: string;
        };
      };
      toStateMachineTransitions?: {
        data?: {
          /** @example eb2ca150be27264985d0fcf20d53408d */
          id?: string;
          /** @example state_machine_transition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-state/1e364983d1f17d332d360ae797efc181/toStateMachineTransitions
           */
          related?: string;
        };
      };
    };
    stateMachineId: string;
    technicalName: string;
    translated?: {
      name?: string;
      stateMachineId?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  StateMachineTransition: {
    actionName: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    fromStateId: string;
    fromStateMachineState?: components["schemas"]["StateMachineState"];
    id: string;
    stateMachine?: components["schemas"]["StateMachine"];
    stateMachineId: string;
    toStateId: string;
    toStateMachineState?: components["schemas"]["StateMachineState"];
    /** Format: date-time */
    updatedAt?: string;
  };
  StateMachineTransitionJsonApi: components["schemas"]["resource"] & {
    actionName: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    fromStateId: string;
    id: string;
    relationships?: {
      fromStateMachineState?: {
        data?: {
          /** @example b108a2a0d303fafc83ef06f6790722e8 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-transition/72d87bcb11bdd3adcb321d14ee8c6515/fromStateMachineState
           */
          related?: string;
        };
      };
      stateMachine?: {
        data?: {
          /** @example 341364a811428a3ed8c355c2c4fe6990 */
          id?: string;
          /** @example state_machine */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-transition/72d87bcb11bdd3adcb321d14ee8c6515/stateMachine
           */
          related?: string;
        };
      };
      toStateMachineState?: {
        data?: {
          /** @example d04a8a7ce57fa3ec0bc44aa1cb095713 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /state-machine-transition/72d87bcb11bdd3adcb321d14ee8c6515/toStateMachineState
           */
          related?: string;
        };
      };
    };
    stateMachineId: string;
    toStateId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Subscription: {
    addresses?: components["schemas"]["SubscriptionAddress"][];
    /** Format: int64 */
    autoIncrement?: number;
    billingAddress?: components["schemas"]["SubscriptionAddress"];
    billingAddressId: string;
    convertedOrder: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    cronInterval: string;
    currency?: components["schemas"]["Currency"];
    currencyId: string;
    customFields?: Record<string, never>;
    dateInterval: string;
    id: string;
    /** Format: int64 */
    initialExecutionCount: number;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    language?: components["schemas"]["Language"];
    languageId: string;
    /** Format: date-time */
    nextSchedule: string;
    orders?: components["schemas"]["Order"][];
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    /** Format: int64 */
    remainingExecutionCount: number;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    shippingAddress?: components["schemas"]["SubscriptionAddress"];
    shippingAddressId: string;
    shippingMethod?: components["schemas"]["ShippingMethod"];
    shippingMethodId: string;
    stateId: string;
    stateMachineState?: components["schemas"]["StateMachineState"];
    subscriptionCustomer?: components["schemas"]["SubscriptionCustomer"];
    subscriptionInterval?: components["schemas"]["SubscriptionInterval"];
    subscriptionIntervalId?: string;
    subscriptionIntervalName: string;
    subscriptionNumber: string;
    subscriptionPlan?: components["schemas"]["SubscriptionPlan"];
    subscriptionPlanId?: string;
    subscriptionPlanName: string;
    tags?: components["schemas"]["Tag"][];
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SubscriptionAddress: {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    billingSubscription?: components["schemas"]["Subscription"];
    city: string;
    company?: string;
    country?: components["schemas"]["Country"];
    countryId: string;
    countryState?: components["schemas"]["CountryState"];
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    phoneNumber?: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId?: string;
    shippingSubscription?: components["schemas"]["Subscription"];
    street: string;
    subscription?: components["schemas"]["Subscription"];
    subscriptionId: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatId?: string;
    zipcode?: string;
  };
  SubscriptionAddressJsonApi: components["schemas"]["resource"] & {
    additionalAddressLine1?: string;
    additionalAddressLine2?: string;
    city: string;
    company?: string;
    countryId: string;
    countryStateId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    department?: string;
    firstName: string;
    id: string;
    lastName: string;
    phoneNumber?: string;
    relationships?: {
      billingSubscription?: {
        data?: {
          /** @example 5c80db3824a615a8c5494779f006418d */
          id?: string;
          /** @example subscription */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-address/63f6fea69c128c002aa378821b168c76/billingSubscription
           */
          related?: string;
        };
      };
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-address/63f6fea69c128c002aa378821b168c76/country
           */
          related?: string;
        };
      };
      countryState?: {
        data?: {
          /** @example cb6a9764567191fb74fe28d8d6a4819d */
          id?: string;
          /** @example country_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-address/63f6fea69c128c002aa378821b168c76/countryState
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-address/63f6fea69c128c002aa378821b168c76/salutation
           */
          related?: string;
        };
      };
      shippingSubscription?: {
        data?: {
          /** @example 45791ef15bb346d90a50fc87adbabbbc */
          id?: string;
          /** @example subscription */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-address/63f6fea69c128c002aa378821b168c76/shippingSubscription
           */
          related?: string;
        };
      };
      subscription?: {
        data?: {
          /** @example b48b13e73a6ac2a86dc54425dd24d9ff */
          id?: string;
          /** @example subscription */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-address/63f6fea69c128c002aa378821b168c76/subscription
           */
          related?: string;
        };
      };
    };
    salutationId?: string;
    street: string;
    subscriptionId: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatId?: string;
    zipcode?: string;
  };
  SubscriptionCustomer: {
    company?: string;
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId?: string;
    customerNumber?: string;
    customFields?: Record<string, never>;
    email: string;
    firstName: string;
    id: string;
    lastName: string;
    remoteAddress?: string;
    salutation?: components["schemas"]["Salutation"];
    salutationId: string;
    subscription?: components["schemas"]["Subscription"];
    subscriptionId: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatIds?: string[];
  };
  SubscriptionCustomerJsonApi: components["schemas"]["resource"] & {
    company?: string;
    /** Format: date-time */
    createdAt: string;
    customerId?: string;
    customerNumber?: string;
    customFields?: Record<string, never>;
    email: string;
    firstName: string;
    id: string;
    lastName: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-customer/2bbf8cc18dfb0a95c32f2a79905723d9/customer
           */
          related?: string;
        };
      };
      salutation?: {
        data?: {
          /** @example 7a6efb02514153b5aa9a8f40c6f8bcc3 */
          id?: string;
          /** @example salutation */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-customer/2bbf8cc18dfb0a95c32f2a79905723d9/salutation
           */
          related?: string;
        };
      };
      subscription?: {
        data?: {
          /** @example b48b13e73a6ac2a86dc54425dd24d9ff */
          id?: string;
          /** @example subscription */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-customer/2bbf8cc18dfb0a95c32f2a79905723d9/subscription
           */
          related?: string;
        };
      };
    };
    remoteAddress?: string;
    salutationId: string;
    subscriptionId: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    vatIds?: string[];
  };
  SubscriptionInterval: {
    active: boolean;
    availabilityRule?: components["schemas"]["Rule"];
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    cronInterval: string;
    dateInterval: string;
    id: string;
    name: string;
    subscriptionPlans?: components["schemas"]["SubscriptionPlan"][];
    subscriptions?: components["schemas"]["Subscription"][];
    translated?: {
      availabilityRuleId?: string;
      cronInterval?: string;
      dateInterval?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SubscriptionIntervalJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    cronInterval: string;
    dateInterval: string;
    id: string;
    name: string;
    relationships?: {
      availabilityRule?: {
        data?: {
          /** @example 9fbb7961d1cb158094924c679e1b302c */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-interval/6908067ce08a164d022b6a07940ebc7b/availabilityRule
           */
          related?: string;
        };
      };
      subscriptionPlans?: {
        data?: {
          /** @example ed94874505da2886dc66a3a3d3968972 */
          id?: string;
          /** @example subscription_plan */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-interval/6908067ce08a164d022b6a07940ebc7b/subscriptionPlans
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-interval/6908067ce08a164d022b6a07940ebc7b/subscriptions
           */
          related?: string;
        };
      };
    };
    translated?: {
      availabilityRuleId?: string;
      cronInterval?: string;
      dateInterval?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SubscriptionJsonApi: components["schemas"]["resource"] & {
    /** Format: int64 */
    autoIncrement?: number;
    billingAddressId: string;
    convertedOrder: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    cronInterval: string;
    currencyId: string;
    customFields?: Record<string, never>;
    dateInterval: string;
    id: string;
    /** Format: int64 */
    initialExecutionCount: number;
    itemRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    languageId: string;
    /** Format: date-time */
    nextSchedule: string;
    paymentMethodId: string;
    relationships?: {
      addresses?: {
        data?: {
          /** @example 963e3a2fe559e393bad631f3dc686f69 */
          id?: string;
          /** @example subscription_address */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/addresses
           */
          related?: string;
        };
      };
      billingAddress?: {
        data?: {
          /** @example 7fee8ff88b768662dd8fc06e1b6997d2 */
          id?: string;
          /** @example subscription_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/billingAddress
           */
          related?: string;
        };
      };
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/currency
           */
          related?: string;
        };
      };
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/language
           */
          related?: string;
        };
      };
      orders?: {
        data?: {
          /** @example 12c500ed0b7879105fb46af0f246be87 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/orders
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/paymentMethod
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/salesChannel
           */
          related?: string;
        };
      };
      shippingAddress?: {
        data?: {
          /** @example 8ced05ad5d4ac52bbf7f4b1413f35521 */
          id?: string;
          /** @example subscription_address */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/shippingAddress
           */
          related?: string;
        };
      };
      shippingMethod?: {
        data?: {
          /** @example e97bfcdc0cae44bc9e4ab35762eaf0e1 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/shippingMethod
           */
          related?: string;
        };
      };
      stateMachineState?: {
        data?: {
          /** @example 1ab22d393154f21e3be76aca3ec3ee31 */
          id?: string;
          /** @example state_machine_state */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/stateMachineState
           */
          related?: string;
        };
      };
      subscriptionCustomer?: {
        data?: {
          /** @example 6b5e1e89a3d596fceff0f09fdbb41770 */
          id?: string;
          /** @example subscription_customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/subscriptionCustomer
           */
          related?: string;
        };
      };
      subscriptionInterval?: {
        data?: {
          /** @example 411797824a15b44b931bc4b9e614fb79 */
          id?: string;
          /** @example subscription_interval */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/subscriptionInterval
           */
          related?: string;
        };
      };
      subscriptionPlan?: {
        data?: {
          /** @example cc77ba4ffd2f2fe79753e342bf273e18 */
          id?: string;
          /** @example subscription_plan */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/subscriptionPlan
           */
          related?: string;
        };
      };
      tags?: {
        data?: {
          /** @example d57ac45256849d9b13e2422d91580fb9 */
          id?: string;
          /** @example tag */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription/787ad0b7a17de4ad6b1711bbf8d79fcb/tags
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    remainingExecutionCount: number;
    salesChannelId: string;
    shippingAddressId: string;
    shippingMethodId: string;
    stateId: string;
    subscriptionIntervalId?: string;
    subscriptionIntervalName: string;
    subscriptionNumber: string;
    subscriptionPlanId?: string;
    subscriptionPlanName: string;
    totalRounding: {
      /** Format: int64 */
      decimals: number;
      /** Format: float */
      interval: number;
      roundForNet: boolean;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SubscriptionPlan: {
    active: boolean;
    activeStorefrontLabel: boolean;
    availabilityRule?: components["schemas"]["Rule"];
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    description?: string;
    /** Format: float */
    discountPercentage?: number;
    id: string;
    label?: string;
    /** Format: int64 */
    minimumExecutionCount?: number;
    name: string;
    products?: components["schemas"]["Product"][];
    subscriptionIntervals?: components["schemas"]["SubscriptionInterval"][];
    subscriptions?: components["schemas"]["Subscription"][];
    translated?: {
      availabilityRuleId?: string;
      description?: string;
      label?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SubscriptionPlanIntervalMapping: {
    id?: string;
    subscriptionInterval?: components["schemas"]["SubscriptionInterval"];
    subscriptionIntervalId: string;
    subscriptionPlan?: components["schemas"]["SubscriptionPlan"];
    subscriptionPlanId: string;
  };
  SubscriptionPlanJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    activeStorefrontLabel: boolean;
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    description?: string;
    /** Format: float */
    discountPercentage?: number;
    id: string;
    label?: string;
    /** Format: int64 */
    minimumExecutionCount?: number;
    name: string;
    relationships?: {
      availabilityRule?: {
        data?: {
          /** @example 9fbb7961d1cb158094924c679e1b302c */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-plan/5e63f9057837020694081b9412211bfb/availabilityRule
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-plan/5e63f9057837020694081b9412211bfb/products
           */
          related?: string;
        };
      };
      subscriptionIntervals?: {
        data?: {
          /** @example 28e0fbf8d26aa147681d2241c60ef075 */
          id?: string;
          /** @example subscription_interval */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-plan/5e63f9057837020694081b9412211bfb/subscriptionIntervals
           */
          related?: string;
        };
      };
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /subscription-plan/5e63f9057837020694081b9412211bfb/subscriptions
           */
          related?: string;
        };
      };
    };
    translated?: {
      availabilityRuleId?: string;
      description?: string;
      label?: string;
      name?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SubscriptionPlanProductMapping: {
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    subscriptionPlan?: components["schemas"]["SubscriptionPlan"];
    subscriptionPlanId: string;
  };
  SubscriptionTagMapping: {
    id?: string;
    subscription?: components["schemas"]["Subscription"];
    subscriptionId: string;
    tag?: components["schemas"]["Tag"];
    tagId: string;
  };
  SwagCmsExtensionsBlockRule: {
    cmsBlock?: components["schemas"]["CmsBlock"];
    cmsBlockId: string;
    cmsBlockVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    inverted?: boolean;
    /** Format: date-time */
    updatedAt?: string;
    visibilityRule?: components["schemas"]["Rule"];
    visibilityRuleId?: string;
  };
  SwagCmsExtensionsBlockRuleJsonApi: components["schemas"]["resource"] & {
    cmsBlockId: string;
    cmsBlockVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    inverted?: boolean;
    relationships?: {
      cmsBlock?: {
        data?: {
          /** @example 87a71f31728ecc19c2e87fbe9face4b2 */
          id?: string;
          /** @example cms_block */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-block-rule/f36890a9656215be0edf2204ba8dc876/cmsBlock
           */
          related?: string;
        };
      };
      visibilityRule?: {
        data?: {
          /** @example 6efc965839211c3f91ba4d7d2a3fc9f3 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-block-rule/f36890a9656215be0edf2204ba8dc876/visibilityRule
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    visibilityRuleId?: string;
  };
  SwagCmsExtensionsForm: {
    cmsSlot?: components["schemas"]["CmsSlot"];
    cmsSlotId?: string;
    cmsSlotVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    groups?: components["schemas"]["SwagCmsExtensionsFormGroup"][];
    id: string;
    isTemplate: boolean;
    mailTemplate?: components["schemas"]["MailTemplate"];
    mailTemplateId: string;
    receivers?: Record<string, never>;
    successMessage?: string;
    technicalName: string;
    title?: string;
    translated?: {
      cmsSlotId?: string;
      cmsSlotVersionId?: string;
      mailTemplateId?: string;
      successMessage?: string;
      technicalName?: string;
      title?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsFormGroup: {
    /** Format: date-time */
    createdAt: string;
    fields?: components["schemas"]["SwagCmsExtensionsFormGroupField"][];
    form?: components["schemas"]["SwagCmsExtensionsForm"];
    formId?: string;
    id: string;
    /** Format: int64 */
    position: number;
    technicalName: string;
    title?: string;
    translated?: {
      formId?: string;
      technicalName?: string;
      title?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsFormGroupField: {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    errorMessage?: string;
    group?: components["schemas"]["SwagCmsExtensionsFormGroup"];
    groupId?: string;
    id: string;
    label: string;
    placeholder?: string;
    /** Format: int64 */
    position: number;
    required: boolean;
    technicalName: string;
    translated?: {
      errorMessage?: string;
      groupId?: string;
      label?: string;
      placeholder?: string;
      technicalName?: string;
      type?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: int64 */
    width: number;
  };
  SwagCmsExtensionsFormGroupFieldJsonApi: components["schemas"]["resource"] & {
    config?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    errorMessage?: string;
    groupId?: string;
    id: string;
    label: string;
    placeholder?: string;
    /** Format: int64 */
    position: number;
    relationships?: {
      group?: {
        data?: {
          /** @example db0f6f37ebeb6ea09489124345af2a45 */
          id?: string;
          /** @example swag_cms_extensions_form_group */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-form-group-field/8c53232660618aa34371b17b0fddac3d/group
           */
          related?: string;
        };
      };
    };
    required: boolean;
    technicalName: string;
    translated?: {
      errorMessage?: string;
      groupId?: string;
      label?: string;
      placeholder?: string;
      technicalName?: string;
      type?: string;
    };
    type: string;
    /** Format: date-time */
    updatedAt?: string;
    /** Format: int64 */
    width: number;
  };
  SwagCmsExtensionsFormGroupJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    formId?: string;
    id: string;
    /** Format: int64 */
    position: number;
    relationships?: {
      fields?: {
        data?: {
          /** @example d05b6ed7d2345020440df396d6da7f73 */
          id?: string;
          /** @example swag_cms_extensions_form_group_field */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-form-group/468e2351f66daae01feec5952fa04897/fields
           */
          related?: string;
        };
      };
      form?: {
        data?: {
          /** @example 3fcdb73d36d54f2cc22d0f68e6b6e182 */
          id?: string;
          /** @example swag_cms_extensions_form */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-form-group/468e2351f66daae01feec5952fa04897/form
           */
          related?: string;
        };
      };
    };
    technicalName: string;
    title?: string;
    translated?: {
      formId?: string;
      technicalName?: string;
      title?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsFormJsonApi: components["schemas"]["resource"] & {
    cmsSlotId?: string;
    cmsSlotVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    isTemplate: boolean;
    mailTemplateId: string;
    receivers?: Record<string, never>;
    relationships?: {
      cmsSlot?: {
        data?: {
          /** @example e1306ba9f900039b95359c03fa95dd8b */
          id?: string;
          /** @example cms_slot */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-form/f06a6b72709adae43e1e94ef1caa8e5f/cmsSlot
           */
          related?: string;
        };
      };
      groups?: {
        data?: {
          /** @example 1471e4e05a4db95d353cc867fe317314 */
          id?: string;
          /** @example swag_cms_extensions_form_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-form/f06a6b72709adae43e1e94ef1caa8e5f/groups
           */
          related?: string;
        };
      };
      mailTemplate?: {
        data?: {
          /** @example 246e2bdec01d63875c35f120d7b05092 */
          id?: string;
          /** @example mail_template */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-form/f06a6b72709adae43e1e94ef1caa8e5f/mailTemplate
           */
          related?: string;
        };
      };
    };
    successMessage?: string;
    technicalName: string;
    title?: string;
    translated?: {
      cmsSlotId?: string;
      cmsSlotVersionId?: string;
      mailTemplateId?: string;
      successMessage?: string;
      technicalName?: string;
      title?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsQuickview: {
    active?: boolean;
    cmsBlock?: components["schemas"]["CmsBlock"];
    cmsBlockId?: string;
    cmsBlockVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsQuickviewJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    cmsBlockId?: string;
    cmsBlockVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    relationships?: {
      cmsBlock?: {
        data?: {
          /** @example 87a71f31728ecc19c2e87fbe9face4b2 */
          id?: string;
          /** @example cms_block */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-quickview/93c1c8d93a2120d8141e5fed74a16dce/cmsBlock
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsScrollNavigation: {
    active?: boolean;
    cmsSection?: components["schemas"]["CmsSection"];
    cmsSectionId?: string;
    cmsSectionVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    displayName?: string;
    id: string;
    translated?: {
      cmsSectionId?: string;
      cmsSectionVersionId?: string;
      displayName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsScrollNavigationJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    cmsSectionId?: string;
    cmsSectionVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    displayName?: string;
    id: string;
    relationships?: {
      cmsSection?: {
        data?: {
          /** @example 212545e6991db0675b783d4574ab20dc */
          id?: string;
          /** @example cms_section */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-scroll-navigation/fe6e0a5fca8ed3c312de3ba20a10be99/cmsSection
           */
          related?: string;
        };
      };
    };
    translated?: {
      cmsSectionId?: string;
      cmsSectionVersionId?: string;
      displayName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsScrollNavigationPageSettings: {
    active: boolean;
    bouncy: boolean;
    cmsPage?: components["schemas"]["CmsPage"];
    cmsPageId?: string;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    /** Format: int64 */
    duration: number;
    easing: string;
    /** Format: int64 */
    easingDegree: number;
    id: string;
    nativeScrolling: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCmsExtensionsScrollNavigationPageSettingsJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    bouncy: boolean;
    cmsPageId?: string;
    cmsPageVersionId?: string;
    /** Format: date-time */
    createdAt: string;
    /** Format: int64 */
    duration: number;
    easing: string;
    /** Format: int64 */
    easingDegree: number;
    id: string;
    nativeScrolling: boolean;
    relationships?: {
      cmsPage?: {
        data?: {
          /** @example 7b1460918b1abb93311108f3dc021c9b */
          id?: string;
          /** @example cms_page */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-cms-extensions-scroll-navigation-page-settings/ee67f9f8361095c164fecc7e32aace8d/cmsPage
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCustomizedProductsTemplate: {
    active?: boolean;
    configurations?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
    confirmInput?: boolean;
    /** Format: date-time */
    createdAt: string;
    decisionTree?: Record<string, never>;
    description?: string;
    displayName: string;
    exclusions?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
    id: string;
    internalName: string;
    media?: components["schemas"]["Media"];
    mediaId?: string;
    options?: components["schemas"]["SwagCustomizedProductsTemplateOption"][];
    optionsAutoCollapse?: boolean;
    parentVersionId?: string;
    products?: components["schemas"]["Product"][];
    stepByStep?: boolean;
    translated?: {
      description?: string;
      displayName?: string;
      internalName?: string;
      mediaId?: string;
      parentVersionId?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateConfiguration: {
    configuration: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    hash: string;
    id: string;
    template?: components["schemas"]["SwagCustomizedProductsTemplate"];
    templateConfigurationShares?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
    templateId: string;
    templateVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateConfigurationJsonApi: components["schemas"]["resource"] & {
    configuration: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    hash: string;
    id: string;
    relationships?: {
      template?: {
        data?: {
          /** @example 66f6181bcb4cff4cd38fbc804a036db6 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-configuration/ab78fa5f6df63876a7c6575bdf517fe2/template
           */
          related?: string;
        };
      };
      templateConfigurationShares?: {
        data?: {
          /** @example 81a31c81fde24f296e176502d32baa6d */
          id?: string;
          /** @example swag_customized_products_template_configuration_share */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-configuration/ab78fa5f6df63876a7c6575bdf517fe2/templateConfigurationShares
           */
          related?: string;
        };
      };
    };
    templateId: string;
    templateVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateConfigurationShare: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    oneTime: boolean;
    templateConfiguration?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
    templateConfigurationId: string;
    templateConfigurationVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateConfigurationShareJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    oneTime: boolean;
    relationships?: {
      templateConfiguration?: {
        data?: {
          /** @example 82a3b2de8107d3e15a17f2d4278c849c */
          id?: string;
          /** @example swag_customized_products_template_configuration */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-configuration-share/9ed7d8ec8fa2b6e96c0ab1803eb42789/templateConfiguration
           */
          related?: string;
        };
      };
    };
    templateConfigurationId: string;
    templateConfigurationVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateExclusion: {
    conditions?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
    /** Format: date-time */
    createdAt: string;
    id: string;
    name: string;
    template?: components["schemas"]["SwagCustomizedProductsTemplate"];
    templateId: string;
    templateVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateExclusionCondition: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    templateExclusion?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
    templateExclusionId: string;
    templateExclusionOperator?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
    templateExclusionOperatorId: string;
    templateExclusionVersionId?: string;
    templateOption?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
    templateOptionId: string;
    templateOptionValues?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
    templateOptionVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateExclusionConditionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    relationships?: {
      templateExclusion?: {
        data?: {
          /** @example 13cbb51fc716b7cdd04a5e995b57cce4 */
          id?: string;
          /** @example swag_customized_products_template_exclusion */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion-condition/7fb5a2315280913d00c5ff5a0415afcf/templateExclusion
           */
          related?: string;
        };
      };
      templateExclusionOperator?: {
        data?: {
          /** @example 8a3c6855d1712345c9fe9468425bfe2e */
          id?: string;
          /** @example swag_customized_products_template_exclusion_operator */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion-condition/7fb5a2315280913d00c5ff5a0415afcf/templateExclusionOperator
           */
          related?: string;
        };
      };
      templateOption?: {
        data?: {
          /** @example 6891a002a90a39e71e67c4fc148db8df */
          id?: string;
          /** @example swag_customized_products_template_option */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion-condition/7fb5a2315280913d00c5ff5a0415afcf/templateOption
           */
          related?: string;
        };
      };
      templateOptionValues?: {
        data?: {
          /** @example 7d3eaa0fb0118db414750bb30b0582b6 */
          id?: string;
          /** @example swag_customized_products_template_option_value */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion-condition/7fb5a2315280913d00c5ff5a0415afcf/templateOptionValues
           */
          related?: string;
        };
      };
    };
    templateExclusionId: string;
    templateExclusionOperatorId: string;
    templateExclusionVersionId?: string;
    templateOptionId: string;
    templateOptionVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateExclusionConditionValues: {
    /** Format: date-time */
    createdAt: string;
    id?: string;
    swagCustomizedProductsTemplateExclusionConditionVersionId?: string;
    swagCustomizedProductsTemplateOptionValueVersionId?: string;
    templateExclusionCondition?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
    templateExclusionConditionId: string;
    templateOptionValue?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
    templateOptionValueId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCustomizedProductsTemplateExclusionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    name: string;
    relationships?: {
      conditions?: {
        data?: {
          /** @example b5b399ec1fcfe753f58dbafa197efdc1 */
          id?: string;
          /** @example swag_customized_products_template_exclusion_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion/d28221401a2fa711c59f4bb8cbd9d06e/conditions
           */
          related?: string;
        };
      };
      template?: {
        data?: {
          /** @example 66f6181bcb4cff4cd38fbc804a036db6 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion/d28221401a2fa711c59f4bb8cbd9d06e/template
           */
          related?: string;
        };
      };
    };
    templateId: string;
    templateVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateExclusionOperator: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    label: string;
    operator: string;
    templateExclusionConditions?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
    templateOptionType: string;
    translated?: {
      label?: string;
      operator?: string;
      templateOptionType?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCustomizedProductsTemplateExclusionOperatorJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    label: string;
    operator: string;
    relationships?: {
      templateExclusionConditions?: {
        data?: {
          /** @example 57e853a74b92e339ec2e302b015e60f3 */
          id?: string;
          /** @example swag_customized_products_template_exclusion_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-exclusion-operator/df2936b0a1e725c8000f04817f4545f7/templateExclusionConditions
           */
          related?: string;
        };
      };
    };
    templateOptionType: string;
    translated?: {
      label?: string;
      operator?: string;
      templateOptionType?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagCustomizedProductsTemplateJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    confirmInput?: boolean;
    /** Format: date-time */
    createdAt: string;
    decisionTree?: Record<string, never>;
    description?: string;
    displayName: string;
    id: string;
    internalName: string;
    mediaId?: string;
    optionsAutoCollapse?: boolean;
    parentVersionId?: string;
    relationships?: {
      configurations?: {
        data?: {
          /** @example 86f23519571eb918e8812e1979d55409 */
          id?: string;
          /** @example swag_customized_products_template_configuration */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/configurations
           */
          related?: string;
        };
      };
      exclusions?: {
        data?: {
          /** @example c6fc0a7508c1a1fe9e233e81d31133b8 */
          id?: string;
          /** @example swag_customized_products_template_exclusion */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/exclusions
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/media
           */
          related?: string;
        };
      };
      options?: {
        data?: {
          /** @example 93da65a9fd0004d9477aeac024e08e15 */
          id?: string;
          /** @example swag_customized_products_template_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/options
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/products
           */
          related?: string;
        };
      };
    };
    stepByStep?: boolean;
    translated?: {
      description?: string;
      displayName?: string;
      internalName?: string;
      mediaId?: string;
      parentVersionId?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOption: {
    advancedSurcharge?: boolean;
    calculatedPrice?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    description?: string;
    displayName: string;
    id: string;
    itemNumber?: string;
    oneTimeSurcharge?: boolean;
    /** Format: float */
    percentageSurcharge?: number;
    placeholder?: string;
    /** Format: int64 */
    position?: number;
    price?: Record<string, never>;
    prices?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
    relativeSurcharge?: boolean;
    required?: boolean;
    tax?: components["schemas"]["Tax"];
    taxId?: string;
    template?: components["schemas"]["SwagCustomizedProductsTemplate"];
    templateExclusionConditions?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
    templateId: string;
    templateVersionId?: string;
    translated?: {
      description?: string;
      displayName?: string;
      itemNumber?: string;
      placeholder?: string;
      taxId?: string;
      templateId?: string;
      templateVersionId?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    typeProperties?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    values?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionJsonApi: components["schemas"]["resource"] & {
    advancedSurcharge?: boolean;
    calculatedPrice?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    description?: string;
    displayName: string;
    id: string;
    itemNumber?: string;
    oneTimeSurcharge?: boolean;
    /** Format: float */
    percentageSurcharge?: number;
    placeholder?: string;
    /** Format: int64 */
    position?: number;
    price?: Record<string, never>;
    relationships?: {
      prices?: {
        data?: {
          /** @example afae32efe0f84fece3f96b377b768b33 */
          id?: string;
          /** @example swag_customized_products_template_option_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/prices
           */
          related?: string;
        };
      };
      tax?: {
        data?: {
          /** @example 06565e5611f23fdf8cc43e5077b92b54 */
          id?: string;
          /** @example tax */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/tax
           */
          related?: string;
        };
      };
      template?: {
        data?: {
          /** @example 66f6181bcb4cff4cd38fbc804a036db6 */
          id?: string;
          /** @example swag_customized_products_template */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/template
           */
          related?: string;
        };
      };
      templateExclusionConditions?: {
        data?: {
          /** @example 57e853a74b92e339ec2e302b015e60f3 */
          id?: string;
          /** @example swag_customized_products_template_exclusion_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/templateExclusionConditions
           */
          related?: string;
        };
      };
      values?: {
        data?: {
          /** @example f09cc7ee3a9a93273f4b80601cafb00c */
          id?: string;
          /** @example swag_customized_products_template_option_value */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/values
           */
          related?: string;
        };
      };
    };
    relativeSurcharge?: boolean;
    required?: boolean;
    taxId?: string;
    templateId: string;
    templateVersionId?: string;
    translated?: {
      description?: string;
      displayName?: string;
      itemNumber?: string;
      placeholder?: string;
      taxId?: string;
      templateId?: string;
      templateVersionId?: string;
      type?: string;
      versionId?: string;
    };
    type: string;
    typeProperties?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionPrice: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: float */
    percentageSurcharge?: number;
    price?: Record<string, never>;
    rule?: components["schemas"]["Rule"];
    ruleId?: string;
    templateOption?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
    templateOptionId: string;
    templateOptionVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionPriceJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: float */
    percentageSurcharge?: number;
    price?: Record<string, never>;
    relationships?: {
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-price/a27c46432f56bc59ae059a4bfe5145c0/rule
           */
          related?: string;
        };
      };
      templateOption?: {
        data?: {
          /** @example 6891a002a90a39e71e67c4fc148db8df */
          id?: string;
          /** @example swag_customized_products_template_option */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-price/a27c46432f56bc59ae059a4bfe5145c0/templateOption
           */
          related?: string;
        };
      };
    };
    ruleId?: string;
    templateOptionId: string;
    templateOptionVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionValue: {
    advancedSurcharge?: boolean;
    /** Format: date-time */
    createdAt: string;
    default?: boolean;
    displayName: string;
    id: string;
    itemNumber?: string;
    oneTimeSurcharge?: boolean;
    /** Format: float */
    percentageSurcharge?: number;
    /** Format: int64 */
    position: number;
    price?: Record<string, never>;
    prices?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
    relativeSurcharge?: boolean;
    tax?: components["schemas"]["Tax"];
    taxId?: string;
    templateExclusionConditions?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
    templateOption?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
    templateOptionId: string;
    templateOptionVersionId?: string;
    translated?: {
      displayName?: string;
      itemNumber?: string;
      taxId?: string;
      templateOptionId?: string;
      templateOptionVersionId?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    value?: Record<string, never>;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionValueJsonApi: components["schemas"]["resource"] & {
    advancedSurcharge?: boolean;
    /** Format: date-time */
    createdAt: string;
    default?: boolean;
    displayName: string;
    id: string;
    itemNumber?: string;
    oneTimeSurcharge?: boolean;
    /** Format: float */
    percentageSurcharge?: number;
    /** Format: int64 */
    position: number;
    price?: Record<string, never>;
    relationships?: {
      prices?: {
        data?: {
          /** @example afae32efe0f84fece3f96b377b768b33 */
          id?: string;
          /** @example swag_customized_products_template_option_value_price */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/prices
           */
          related?: string;
        };
      };
      tax?: {
        data?: {
          /** @example 06565e5611f23fdf8cc43e5077b92b54 */
          id?: string;
          /** @example tax */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/tax
           */
          related?: string;
        };
      };
      templateExclusionConditions?: {
        data?: {
          /** @example 57e853a74b92e339ec2e302b015e60f3 */
          id?: string;
          /** @example swag_customized_products_template_exclusion_condition */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/templateExclusionConditions
           */
          related?: string;
        };
      };
      templateOption?: {
        data?: {
          /** @example 6891a002a90a39e71e67c4fc148db8df */
          id?: string;
          /** @example swag_customized_products_template_option */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/templateOption
           */
          related?: string;
        };
      };
    };
    relativeSurcharge?: boolean;
    taxId?: string;
    templateOptionId: string;
    templateOptionVersionId?: string;
    translated?: {
      displayName?: string;
      itemNumber?: string;
      taxId?: string;
      templateOptionId?: string;
      templateOptionVersionId?: string;
      versionId?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
    value?: Record<string, never>;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionValuePrice: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: float */
    percentageSurcharge?: number;
    price?: Record<string, never>;
    rule?: components["schemas"]["Rule"];
    ruleId?: string;
    templateOptionValue?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
    templateOptionValueId: string;
    templateOptionValueVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagCustomizedProductsTemplateOptionValuePriceJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: float */
    percentageSurcharge?: number;
    price?: Record<string, never>;
    relationships?: {
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-value-price/db366966e64f89b2bba004a12d76d7af/rule
           */
          related?: string;
        };
      };
      templateOptionValue?: {
        data?: {
          /** @example 376d05104f693cb58e93bed5fe8a7cad */
          id?: string;
          /** @example swag_customized_products_template_option_value */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-customized-products-template-option-value-price/db366966e64f89b2bba004a12d76d7af/templateOptionValue
           */
          related?: string;
        };
      };
    };
    ruleId?: string;
    templateOptionValueId: string;
    templateOptionValueVersionId?: string;
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagDelayAction: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId?: string;
    delaySequenceId?: string;
    eventName?: string;
    /** Format: date-time */
    executionTime: string;
    expired?: boolean;
    flow?: components["schemas"]["Flow"];
    flowId: string;
    id: string;
    order?: components["schemas"]["Order"];
    orderId?: string;
    orderVersionId?: string;
    sequence?: components["schemas"]["FlowSequence"];
    stored: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagDelayActionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId?: string;
    delaySequenceId?: string;
    eventName?: string;
    /** Format: date-time */
    executionTime: string;
    expired?: boolean;
    flowId: string;
    id: string;
    orderId?: string;
    orderVersionId?: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-delay-action/70d03dd9ed2b3fc83b562c9baae3df7b/customer
           */
          related?: string;
        };
      };
      flow?: {
        data?: {
          /** @example cff5497121104c2b8e0cb41ed2083a9b */
          id?: string;
          /** @example flow */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-delay-action/70d03dd9ed2b3fc83b562c9baae3df7b/flow
           */
          related?: string;
        };
      };
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-delay-action/70d03dd9ed2b3fc83b562c9baae3df7b/order
           */
          related?: string;
        };
      };
      sequence?: {
        data?: {
          /** @example fa1c731ead93e333a9180e16f968c01e */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-delay-action/70d03dd9ed2b3fc83b562c9baae3df7b/sequence
           */
          related?: string;
        };
      };
    };
    stored: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagDynamicAccessCategoryRule: {
    category?: components["schemas"]["Category"];
    categoryId: string;
    categoryVersionId?: string;
    id?: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  SwagDynamicAccessLandingPageRule: {
    id?: string;
    landingPage?: components["schemas"]["LandingPage"];
    landingPageId: string;
    landingPageVersionId?: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  SwagDynamicAccessProductRule: {
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    rule?: components["schemas"]["Rule"];
    ruleId: string;
  };
  SwagLanguagePackLanguage: {
    administrationActive?: boolean;
    /** Format: date-time */
    createdAt: string;
    id: string;
    language?: components["schemas"]["Language"];
    languageId: string;
    salesChannelActive?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagLanguagePackLanguageJsonApi: components["schemas"]["resource"] & {
    administrationActive?: boolean;
    /** Format: date-time */
    createdAt: string;
    id: string;
    languageId: string;
    relationships?: {
      language?: {
        data?: {
          /** @example 8512ae7d57b1396273f76fe6ed341a23 */
          id?: string;
          /** @example language */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-language-pack-language/a31be60242ded43ddd1a483395e69359/language
           */
          related?: string;
        };
      };
    };
    salesChannelActive?: boolean;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationConnection: {
    /** Format: date-time */
    createdAt: string;
    credentialFields?: Record<string, never>;
    gatewayName: string;
    id: string;
    mappings?: components["schemas"]["SwagMigrationMapping"][];
    name: string;
    premapping?: Record<string, never>;
    profileName: string;
    runs?: components["schemas"]["SwagMigrationRun"][];
    settings?: components["schemas"]["SwagMigrationGeneralSetting"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationConnectionJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    credentialFields?: Record<string, never>;
    gatewayName: string;
    id: string;
    name: string;
    premapping?: Record<string, never>;
    profileName: string;
    relationships?: {
      mappings?: {
        data?: {
          /** @example d8e23b791f4ced4d23db067b32520236 */
          id?: string;
          /** @example swag_migration_mapping */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-connection/9b4cd5ca287134a108c3d94d44ed2e05/mappings
           */
          related?: string;
        };
      };
      runs?: {
        data?: {
          /** @example 878983117a2370e5b702db49786da067 */
          id?: string;
          /** @example swag_migration_run */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-connection/9b4cd5ca287134a108c3d94d44ed2e05/runs
           */
          related?: string;
        };
      };
      settings?: {
        data?: {
          /** @example 2e5d8aa3dfa8ef34ca5131d20f9dad51 */
          id?: string;
          /** @example swag_migration_general_setting */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-connection/9b4cd5ca287134a108c3d94d44ed2e05/settings
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationData: {
    /** Format: int64 */
    autoIncrement?: number;
    converted?: Record<string, never>;
    convertFailure?: boolean;
    /** Format: date-time */
    createdAt: string;
    entity: string;
    id: string;
    mappingUuid?: string;
    raw: Record<string, never>;
    run?: components["schemas"]["SwagMigrationRun"];
    runId: string;
    unmapped?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    writeFailure?: boolean;
    written?: boolean;
  };
  SwagMigrationDataJsonApi: components["schemas"]["resource"] & {
    /** Format: int64 */
    autoIncrement?: number;
    converted?: Record<string, never>;
    convertFailure?: boolean;
    /** Format: date-time */
    createdAt: string;
    entity: string;
    id: string;
    mappingUuid?: string;
    raw: Record<string, never>;
    relationships?: {
      run?: {
        data?: {
          /** @example a53108f7543b75adbb34afc035d4cdf6 */
          id?: string;
          /** @example swag_migration_run */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-data/ef2fb6f2b4f336b801810dd506c09a28/run
           */
          related?: string;
        };
      };
    };
    runId: string;
    unmapped?: Record<string, never>;
    /** Format: date-time */
    updatedAt?: string;
    writeFailure?: boolean;
    written?: boolean;
  };
  SwagMigrationGeneralSetting: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    isReset?: boolean;
    selectedConnection?: components["schemas"]["SwagMigrationConnection"];
    selectedConnectionId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationGeneralSettingJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    isReset?: boolean;
    relationships?: {
      selectedConnection?: {
        data?: {
          /** @example 82d96df3e87e20b1f52236d17e286761 */
          id?: string;
          /** @example swag_migration_connection */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-general-setting/7739a73800e4f4674c4c550f9c2af035/selectedConnection
           */
          related?: string;
        };
      };
    };
    selectedConnectionId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationLogging: {
    code: string;
    /** Format: date-time */
    createdAt: string;
    description: string;
    descriptionSnippet: string;
    entity?: string;
    id: string;
    level: string;
    parameters: Record<string, never>;
    run?: components["schemas"]["SwagMigrationRun"];
    runId?: string;
    sourceId?: string;
    title: string;
    titleSnippet: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationLoggingJsonApi: components["schemas"]["resource"] & {
    code: string;
    /** Format: date-time */
    createdAt: string;
    description: string;
    descriptionSnippet: string;
    entity?: string;
    id: string;
    level: string;
    parameters: Record<string, never>;
    relationships?: {
      run?: {
        data?: {
          /** @example a53108f7543b75adbb34afc035d4cdf6 */
          id?: string;
          /** @example swag_migration_run */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-logging/ae841195106900928cb59970ff05b1b2/run
           */
          related?: string;
        };
      };
    };
    runId?: string;
    sourceId?: string;
    title: string;
    titleSnippet: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationMapping: {
    additionalData?: Record<string, never>;
    checksum?: string;
    connection?: components["schemas"]["SwagMigrationConnection"];
    connectionId: string;
    /** Format: date-time */
    createdAt: string;
    entity: string;
    entityUuid?: string;
    entityValue?: string;
    id: string;
    oldIdentifier?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationMappingJsonApi: components["schemas"]["resource"] & {
    additionalData?: Record<string, never>;
    checksum?: string;
    connectionId: string;
    /** Format: date-time */
    createdAt: string;
    entity: string;
    entityUuid?: string;
    entityValue?: string;
    id: string;
    oldIdentifier?: string;
    relationships?: {
      connection?: {
        data?: {
          /** @example 4717d53ebfdfea8477f780ec66151dcb */
          id?: string;
          /** @example swag_migration_connection */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-mapping/804cc61b5d3a72021ea5d6f60fa7a450/connection
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagMigrationMediaFile: {
    /** Format: date-time */
    createdAt: string;
    entity: string;
    fileName: string;
    /** Format: int64 */
    fileSize: number;
    id: string;
    mediaId: string;
    processed?: boolean;
    processFailure?: boolean;
    run?: components["schemas"]["SwagMigrationRun"];
    runId: string;
    /** Format: date-time */
    updatedAt?: string;
    uri: string;
    written?: boolean;
  };
  SwagMigrationMediaFileJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    entity: string;
    fileName: string;
    /** Format: int64 */
    fileSize: number;
    id: string;
    mediaId: string;
    processed?: boolean;
    processFailure?: boolean;
    relationships?: {
      run?: {
        data?: {
          /** @example a53108f7543b75adbb34afc035d4cdf6 */
          id?: string;
          /** @example swag_migration_run */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-media-file/8915313832bc55b48888b768abe6f87c/run
           */
          related?: string;
        };
      };
    };
    runId: string;
    /** Format: date-time */
    updatedAt?: string;
    uri: string;
    written?: boolean;
  };
  SwagMigrationRun: {
    accessToken?: string;
    connection?: components["schemas"]["SwagMigrationConnection"];
    connectionId?: string;
    /** Format: date-time */
    createdAt: string;
    data?: components["schemas"]["SwagMigrationData"][];
    environmentInformation?: Record<string, never>;
    id: string;
    logs?: components["schemas"]["SwagMigrationLogging"][];
    mediaFiles?: components["schemas"]["SwagMigrationMediaFile"][];
    premapping?: Record<string, never>;
    progress?: Record<string, never>;
    status: string;
    /** Format: date-time */
    updatedAt?: string;
    userId?: string;
  };
  SwagMigrationRunJsonApi: components["schemas"]["resource"] & {
    accessToken?: string;
    connectionId?: string;
    /** Format: date-time */
    createdAt: string;
    environmentInformation?: Record<string, never>;
    id: string;
    premapping?: Record<string, never>;
    progress?: Record<string, never>;
    relationships?: {
      connection?: {
        data?: {
          /** @example 4717d53ebfdfea8477f780ec66151dcb */
          id?: string;
          /** @example swag_migration_connection */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-run/dc7ebb549cf146b2f3bc154621cf4d2f/connection
           */
          related?: string;
        };
      };
      data?: {
        data?: {
          /** @example 8d777f385d3dfec8815d20f7496026dc */
          id?: string;
          /** @example swag_migration_data */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-run/dc7ebb549cf146b2f3bc154621cf4d2f/data
           */
          related?: string;
        };
      };
      logs?: {
        data?: {
          /** @example 2165e4fa5bddb65a31f6a0c495c2fa37 */
          id?: string;
          /** @example swag_migration_logging */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-run/dc7ebb549cf146b2f3bc154621cf4d2f/logs
           */
          related?: string;
        };
      };
      mediaFiles?: {
        data?: {
          /** @example 0ff9a5da8eb40da0b7784847ec9d83e8 */
          id?: string;
          /** @example swag_migration_media_file */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-migration-run/dc7ebb549cf146b2f3bc154621cf4d2f/mediaFiles
           */
          related?: string;
        };
      };
    };
    status: string;
    /** Format: date-time */
    updatedAt?: string;
    userId?: string;
  };
  SwagPaypalPosSalesChannel: {
    apiKey: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    mediaDomain?: string;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId?: string;
    /** Format: int64 */
    replace?: number;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    syncPrices?: boolean;
    /** Format: date-time */
    updatedAt?: string;
    webhookSigningKey?: string;
  };
  SwagPaypalPosSalesChannelInventory: {
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannelId: string;
    /** Format: int64 */
    stock: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalPosSalesChannelJsonApi: components["schemas"]["resource"] & {
    apiKey: string;
    /** Format: date-time */
    createdAt: string;
    id: string;
    mediaDomain?: string;
    productStreamId?: string;
    relationships?: {
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-pos-sales-channel/132fed17638687e1cc65e90247be70f7/productStream
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-pos-sales-channel/132fed17638687e1cc65e90247be70f7/salesChannel
           */
          related?: string;
        };
      };
    };
    /** Format: int64 */
    replace?: number;
    salesChannelId: string;
    syncPrices?: boolean;
    /** Format: date-time */
    updatedAt?: string;
    webhookSigningKey?: string;
  };
  SwagPaypalPosSalesChannelMedia: {
    /** Format: date-time */
    createdAt: string;
    id?: string;
    lookupKey?: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    salesChannelId: string;
    url?: string;
  };
  SwagPaypalPosSalesChannelProduct: {
    checksum: string;
    /** Format: date-time */
    createdAt: string;
    id?: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalPosSalesChannelRun: {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    finishedAt?: string;
    id: string;
    logs?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
    /** Format: int64 */
    messageCount: number;
    salesChannelId: string;
    status: string;
    /** Format: int64 */
    stepIndex: number;
    steps: Record<string, never>;
    task: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalPosSalesChannelRunJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    /** Format: date-time */
    finishedAt?: string;
    id: string;
    /** Format: int64 */
    messageCount: number;
    relationships?: {
      logs?: {
        data?: {
          /** @example 2165e4fa5bddb65a31f6a0c495c2fa37 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel_run_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-pos-sales-channel-run/b76976c435509bec6879d50ac4d90782/logs
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    status: string;
    /** Format: int64 */
    stepIndex: number;
    steps: Record<string, never>;
    task: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalPosSalesChannelRunLog: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    level: number;
    message: string;
    posSalesChannelRun?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
    productId?: string;
    productVersionId?: string;
    runId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalPosSalesChannelRunLogJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    level: number;
    message: string;
    productId?: string;
    productVersionId?: string;
    relationships?: {
      posSalesChannelRun?: {
        data?: {
          /** @example 140259e47ae052d4bb99572342db1448 */
          id?: string;
          /** @example swag_paypal_pos_sales_channel_run */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-pos-sales-channel-run-log/b0323556f4973e4d61a168a39cbed319/posSalesChannelRun
           */
          related?: string;
        };
      };
    };
    runId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalTransactionReport: {
    /** Format: date-time */
    createdAt: string;
    currencyIso: string;
    id?: string;
    orderTransaction?: components["schemas"]["OrderTransaction"];
    orderTransactionId: string;
    orderTransactionVersionId?: string;
    /** Format: float */
    totalPrice: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalTransactionReportJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    currencyIso: string;
    id?: string;
    orderTransactionId: string;
    orderTransactionVersionId?: string;
    relationships?: {
      orderTransaction?: {
        data?: {
          /** @example 7d80e6b0ba7e22cf746c767f19873b8f */
          id?: string;
          /** @example order_transaction */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-transaction-report/02de0229f33a31b3839208f09069fadd/orderTransaction
           */
          related?: string;
        };
      };
    };
    /** Format: float */
    totalPrice: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalVaultToken: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    id: string;
    identifier: string;
    mainMapping?: components["schemas"]["SwagPaypalVaultTokenMapping"];
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalVaultTokenJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    id: string;
    identifier: string;
    paymentMethodId: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-vault-token/fde7456018e5f3d68d7f7cedd814c892/customer
           */
          related?: string;
        };
      };
      mainMapping?: {
        data?: {
          /** @example e8768174312011419754aa9085d8a9d7 */
          id?: string;
          /** @example swag_paypal_vault_token_mapping */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-vault-token/fde7456018e5f3d68d7f7cedd814c892/mainMapping
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-vault-token/fde7456018e5f3d68d7f7cedd814c892/paymentMethod
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalVaultTokenMapping: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    id?: string;
    paymentMethod?: components["schemas"]["PaymentMethod"];
    paymentMethodId: string;
    token?: components["schemas"]["SwagPaypalVaultToken"];
    tokenId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagPaypalVaultTokenMappingJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    id?: string;
    paymentMethodId: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-vault-token-mapping/f80653150e29d7e8e53a0a345ee5a75f/customer
           */
          related?: string;
        };
      };
      paymentMethod?: {
        data?: {
          /** @example 68ec1eeea9f1b7744e231b5bd0d97df0 */
          id?: string;
          /** @example payment_method */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-vault-token-mapping/f80653150e29d7e8e53a0a345ee5a75f/paymentMethod
           */
          related?: string;
        };
      };
      token?: {
        data?: {
          /** @example 94a08da1fecbb6e8b46990538c7b50b2 */
          id?: string;
          /** @example swag_paypal_vault_token */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-paypal-vault-token-mapping/f80653150e29d7e8e53a0a345ee5a75f/token
           */
          related?: string;
        };
      };
    };
    tokenId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagSequenceWebhookEventLog: {
    flowSequence?: components["schemas"]["FlowSequence"];
    id?: string;
    sequenceId: string;
    webhookEventLog?: components["schemas"]["WebhookEventLog"];
    webhookEventLogId: string;
  };
  SwagSocialShoppingCustomer: {
    /** Format: date-time */
    createdAt: string;
    customer?: components["schemas"]["Customer"];
    customerId: string;
    id: string;
    referralCode: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagSocialShoppingCustomerJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customerId: string;
    id: string;
    referralCode: string;
    relationships?: {
      customer?: {
        data?: {
          /** @example 91ec1f9324753048c0096d036a694f86 */
          id?: string;
          /** @example customer */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-customer/dd006533dded680c6de287a39d562c04/customer
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-customer/dd006533dded680c6de287a39d562c04/salesChannel
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagSocialShoppingOrder: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    order?: components["schemas"]["Order"];
    orderId: string;
    orderVersionId?: string;
    referralCode: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagSocialShoppingOrderJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    orderId: string;
    orderVersionId?: string;
    referralCode: string;
    relationships?: {
      order?: {
        data?: {
          /** @example 70a17ffa722a3985b86d30b034ad06d7 */
          id?: string;
          /** @example order */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-order/dbc494901d9806bb09916e7bc87fa549/order
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-order/dbc494901d9806bb09916e7bc87fa549/salesChannel
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    versionId?: string;
  };
  SwagSocialShoppingProductError: {
    /** Format: date-time */
    createdAt: string;
    errors: Record<string, never>;
    id: string;
    product?: components["schemas"]["Product"];
    productId: string;
    productVersionId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagSocialShoppingProductErrorJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    errors: Record<string, never>;
    id: string;
    productId: string;
    productVersionId?: string;
    relationships?: {
      product?: {
        data?: {
          /** @example f5bf48aa40cad7891eb709fcf1fde128 */
          id?: string;
          /** @example product */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-product-error/da06f26280a08ad5cc8dc81990613070/product
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-product-error/da06f26280a08ad5cc8dc81990613070/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagSocialShoppingSalesChannel: {
    configuration?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    currency?: components["schemas"]["Currency"];
    currencyId?: string;
    id: string;
    isValidating?: boolean;
    /** Format: date-time */
    lastValidation?: string;
    network: string;
    productStream?: components["schemas"]["ProductStream"];
    productStreamId?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelDomain?: components["schemas"]["SalesChannelDomain"];
    salesChannelDomainId: string;
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SwagSocialShoppingSalesChannelJsonApi: components["schemas"]["resource"] & {
    configuration?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    currencyId?: string;
    id: string;
    isValidating?: boolean;
    /** Format: date-time */
    lastValidation?: string;
    network: string;
    productStreamId?: string;
    relationships?: {
      currency?: {
        data?: {
          /** @example 1af0389838508d7016a9841eb6273962 */
          id?: string;
          /** @example currency */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-sales-channel/4fd0d9d0cef562d4ab72dd4b2818e4d9/currency
           */
          related?: string;
        };
      };
      productStream?: {
        data?: {
          /** @example 49561f6faa0badfce831a183d2ec7c2f */
          id?: string;
          /** @example product_stream */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-sales-channel/4fd0d9d0cef562d4ab72dd4b2818e4d9/productStream
           */
          related?: string;
        };
      };
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-sales-channel/4fd0d9d0cef562d4ab72dd4b2818e4d9/salesChannel
           */
          related?: string;
        };
      };
      salesChannelDomain?: {
        data?: {
          /** @example 29c8b34b04e94e35e95e8346954b7fb4 */
          id?: string;
          /** @example sales_channel_domain */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /swag-social-shopping-sales-channel/4fd0d9d0cef562d4ab72dd4b2818e4d9/salesChannelDomain
           */
          related?: string;
        };
      };
    };
    salesChannelDomainId: string;
    salesChannelId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SystemConfig: {
    configurationKey: string;
    configurationValue: {
      _value?: Record<string, never>;
    };
    /** Format: date-time */
    createdAt: string;
    id: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  SystemConfigJsonApi: components["schemas"]["resource"] & {
    configurationKey: string;
    configurationValue: {
      _value?: Record<string, never>;
    };
    /** Format: date-time */
    createdAt: string;
    id: string;
    relationships?: {
      salesChannel?: {
        data?: {
          /** @example ec3712a84143b57e0db620eaac6e55b8 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /system-config/a59948b9e45358eaaaa1b13d9cedc248/salesChannel
           */
          related?: string;
        };
      };
    };
    salesChannelId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Tag: {
    categories?: components["schemas"]["Category"][];
    /** Format: date-time */
    createdAt: string;
    customers?: components["schemas"]["Customer"][];
    extensions?: {
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/subscriptions
           */
          related?: string;
        };
      };
    };
    id: string;
    landingPages?: components["schemas"]["LandingPage"][];
    media?: components["schemas"]["Media"][];
    name: string;
    newsletterRecipients?: components["schemas"]["NewsletterRecipient"][];
    orders?: components["schemas"]["Order"][];
    products?: components["schemas"]["Product"][];
    rules?: components["schemas"]["Rule"][];
    shippingMethods?: components["schemas"]["ShippingMethod"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  TagJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    extensions?: {
      subscriptions?: {
        data?: {
          /** @example 2d5d14f95af035cbd8437948de61f94c */
          id?: string;
          /** @example subscription */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/subscriptions
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    relationships?: {
      categories?: {
        data?: {
          /** @example b0b5ccb4a195a07fd3eed14affb8695f */
          id?: string;
          /** @example category */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/categories
           */
          related?: string;
        };
      };
      customers?: {
        data?: {
          /** @example 4b6f7d34a58ba399f077685951d06738 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/customers
           */
          related?: string;
        };
      };
      landingPages?: {
        data?: {
          /** @example d60b77f2b3bd69591e3d5e3100926b4d */
          id?: string;
          /** @example landing_page */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/landingPages
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/media
           */
          related?: string;
        };
      };
      newsletterRecipients?: {
        data?: {
          /** @example 2217f01dc5cddfd5b60387c39867f58e */
          id?: string;
          /** @example newsletter_recipient */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/newsletterRecipients
           */
          related?: string;
        };
      };
      orders?: {
        data?: {
          /** @example 12c500ed0b7879105fb46af0f246be87 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/orders
           */
          related?: string;
        };
      };
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/products
           */
          related?: string;
        };
      };
      rules?: {
        data?: {
          /** @example a4f86f7bfc24194b276c22e0ef158197 */
          id?: string;
          /** @example rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/rules
           */
          related?: string;
        };
      };
      shippingMethods?: {
        data?: {
          /** @example 8268b0a6c902fbde485094c2f627b854 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tag/c101058e7ea21bbbf2a5ac893088e90b/shippingMethods
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Tax: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      customizedProductsOptions?: {
        data?: {
          /** @example 687cffacb8fb6b0e985310daeafaaecc */
          id?: string;
          /** @example swag_customized_products_template_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/customizedProductsOptions
           */
          related?: string;
        };
      };
      customizedProductsOptionValues?: {
        data?: {
          /** @example 627d98c94bb4151da667d1e9b26e9807 */
          id?: string;
          /** @example swag_customized_products_template_option_value */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/customizedProductsOptionValues
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    /**
     * Format: int64
     * Added since version: 6.4.0.0.
     */
    position: number;
    products?: components["schemas"]["Product"][];
    rules?: components["schemas"]["TaxRule"][];
    shippingMethods?: components["schemas"]["ShippingMethod"][];
    /** Format: float */
    taxRate: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    extensions?: {
      customizedProductsOptions?: {
        data?: {
          /** @example 687cffacb8fb6b0e985310daeafaaecc */
          id?: string;
          /** @example swag_customized_products_template_option */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/customizedProductsOptions
           */
          related?: string;
        };
      };
      customizedProductsOptionValues?: {
        data?: {
          /** @example 627d98c94bb4151da667d1e9b26e9807 */
          id?: string;
          /** @example swag_customized_products_template_option_value */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/customizedProductsOptionValues
           */
          related?: string;
        };
      };
    };
    id: string;
    name: string;
    /**
     * Format: int64
     * Added since version: 6.4.0.0.
     */
    position: number;
    relationships?: {
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/products
           */
          related?: string;
        };
      };
      rules?: {
        data?: {
          /** @example a4f86f7bfc24194b276c22e0ef158197 */
          id?: string;
          /** @example tax_rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/rules
           */
          related?: string;
        };
      };
      shippingMethods?: {
        data?: {
          /** @example 8268b0a6c902fbde485094c2f627b854 */
          id?: string;
          /** @example shipping_method */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax/4b78ac8eb158840e9638a3aeb26c4a9d/shippingMethods
           */
          related?: string;
        };
      };
    };
    /** Format: float */
    taxRate: number;
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxProvider: {
    active?: boolean;
    app?: components["schemas"]["App"];
    appId?: string;
    availabilityRule?: components["schemas"]["Rule"];
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    identifier: string;
    name: string;
    /** Format: int64 */
    priority: number;
    processUrl?: string;
    translated?: {
      appId?: string;
      availabilityRuleId?: string;
      identifier?: string;
      name?: string;
      processUrl?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxProviderJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    appId?: string;
    availabilityRuleId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    identifier: string;
    name: string;
    /** Format: int64 */
    priority: number;
    processUrl?: string;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /tax-provider/c948e3fe09fafe2aa0da1b75ebbd211b/app
           */
          related?: string;
        };
      };
      availabilityRule?: {
        data?: {
          /** @example 9fbb7961d1cb158094924c679e1b302c */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /tax-provider/c948e3fe09fafe2aa0da1b75ebbd211b/availabilityRule
           */
          related?: string;
        };
      };
    };
    translated?: {
      appId?: string;
      availabilityRuleId?: string;
      identifier?: string;
      name?: string;
      processUrl?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxRule: {
    /** Format: date-time */
    activeFrom?: string;
    country?: components["schemas"]["Country"];
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    data?: {
      fromZipCode?: string;
      states?: Record<string, never>[];
      toZipCode?: string;
      zipCode?: string;
    };
    id: string;
    tax?: components["schemas"]["Tax"];
    taxId: string;
    /** Format: float */
    taxRate: number;
    taxRuleTypeId: string;
    type?: components["schemas"]["TaxRuleType"];
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxRuleJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    activeFrom?: string;
    countryId: string;
    /** Format: date-time */
    createdAt: string;
    data?: {
      fromZipCode?: string;
      states?: Record<string, never>[];
      toZipCode?: string;
      zipCode?: string;
    };
    id: string;
    relationships?: {
      country?: {
        data?: {
          /** @example e909c2d7067ea37437cf97fe11d91bd0 */
          id?: string;
          /** @example country */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /tax-rule/0c7d1b4f3382a39cbbf06af100fd4dc9/country
           */
          related?: string;
        };
      };
      tax?: {
        data?: {
          /** @example 06565e5611f23fdf8cc43e5077b92b54 */
          id?: string;
          /** @example tax */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /tax-rule/0c7d1b4f3382a39cbbf06af100fd4dc9/tax
           */
          related?: string;
        };
      };
      type?: {
        data?: {
          /** @example 599dcce2998a6b40b1e38e8c6006cb0a */
          id?: string;
          /** @example tax_rule_type */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /tax-rule/0c7d1b4f3382a39cbbf06af100fd4dc9/type
           */
          related?: string;
        };
      };
    };
    taxId: string;
    /** Format: float */
    taxRate: number;
    taxRuleTypeId: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxRuleType: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    position: number;
    rules?: components["schemas"]["TaxRule"][];
    technicalName: string;
    translated?: {
      technicalName?: string;
      typeName?: string;
    };
    typeName: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  TaxRuleTypeJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    /** Format: int64 */
    position: number;
    relationships?: {
      rules?: {
        data?: {
          /** @example a4f86f7bfc24194b276c22e0ef158197 */
          id?: string;
          /** @example tax_rule */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /tax-rule-type/ebbaa02c602593b9fea23bc0256355fc/rules
           */
          related?: string;
        };
      };
    };
    technicalName: string;
    translated?: {
      technicalName?: string;
      typeName?: string;
    };
    typeName: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  Theme: {
    active: boolean;
    author: string;
    baseConfig?: Record<string, never>;
    configValues?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    dependentThemes?: components["schemas"]["Theme"][];
    description?: string;
    helpTexts?: Record<string, never>;
    id: string;
    labels?: Record<string, never>;
    media?: components["schemas"]["Media"][];
    name: string;
    parentThemeId?: string;
    previewMedia?: components["schemas"]["Media"];
    previewMediaId?: string;
    salesChannels?: components["schemas"]["SalesChannel"][];
    technicalName?: string;
    themeJson?: Record<string, never>;
    translated?: {
      author?: string;
      description?: string;
      name?: string;
      parentThemeId?: string;
      previewMediaId?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ThemeChild: {
    childId: string;
    childTheme?: components["schemas"]["Theme"];
    id?: string;
    parentId: string;
    parentTheme?: components["schemas"]["Theme"];
  };
  ThemeJsonApi: components["schemas"]["resource"] & {
    active: boolean;
    author: string;
    baseConfig?: Record<string, never>;
    configValues?: Record<string, never>;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    description?: string;
    helpTexts?: Record<string, never>;
    id: string;
    labels?: Record<string, never>;
    name: string;
    parentThemeId?: string;
    previewMediaId?: string;
    relationships?: {
      dependentThemes?: {
        data?: {
          /** @example f0608e2d62b88d9b9da8d6d715b6439c */
          id?: string;
          /** @example theme */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /theme/d721757161f7f70c5b0949fdb6ec2c30/dependentThemes
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /theme/d721757161f7f70c5b0949fdb6ec2c30/media
           */
          related?: string;
        };
      };
      previewMedia?: {
        data?: {
          /** @example a7a817fb0e422cff87e878b8ff7ca914 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /theme/d721757161f7f70c5b0949fdb6ec2c30/previewMedia
           */
          related?: string;
        };
      };
      salesChannels?: {
        data?: {
          /** @example 986f6f891e90ab91c091ff4a1a460777 */
          id?: string;
          /** @example sales_channel */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /theme/d721757161f7f70c5b0949fdb6ec2c30/salesChannels
           */
          related?: string;
        };
      };
    };
    technicalName?: string;
    themeJson?: Record<string, never>;
    translated?: {
      author?: string;
      description?: string;
      name?: string;
      parentThemeId?: string;
      previewMediaId?: string;
      technicalName?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  ThemeMedia: {
    id?: string;
    media?: components["schemas"]["Media"];
    mediaId: string;
    theme?: components["schemas"]["Theme"];
    themeId: string;
  };
  ThemeSalesChannel: {
    id?: string;
    salesChannel?: components["schemas"]["SalesChannel"];
    salesChannelId: string;
    theme?: components["schemas"]["Theme"];
    themeId: string;
  };
  Unit: {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    name: string;
    products?: components["schemas"]["Product"][];
    shortCode: string;
    translated?: {
      name?: string;
      shortCode?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  UnitJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    name: string;
    relationships?: {
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /unit/19c562a36aeb455d09534f93b4f5236f/products
           */
          related?: string;
        };
      };
    };
    shortCode: string;
    translated?: {
      name?: string;
      shortCode?: string;
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  User: {
    accessKeys?: components["schemas"]["UserAccessKey"][];
    aclRoles?: components["schemas"]["AclRole"][];
    active?: boolean;
    admin?: boolean;
    avatarId?: string;
    avatarMedia?: components["schemas"]["Media"];
    configs?: components["schemas"]["UserConfig"][];
    /** Format: date-time */
    createdAt: string;
    createdCustomers?: components["schemas"]["Customer"][];
    createdOrders?: components["schemas"]["Order"][];
    customFields?: Record<string, never>;
    email: string;
    extensions?: {
      cmsPageActivities?: {
        data?: {
          /** @example aae7ba0db81d03df86e789e3f6cf8fe5 */
          id?: string;
          /** @example cms_page_activity */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/cmsPageActivities
           */
          related?: string;
        };
      };
      cmsPageDrafts?: {
        data?: {
          /** @example 93c0df75844858f2b2a9359abc152f5d */
          id?: string;
          /** @example cms_page_draft */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/cmsPageDrafts
           */
          related?: string;
        };
      };
      createdNotifications?: {
        data?: {
          /** @example 04f88ea12127fe03b65beffbc2c96954 */
          id?: string;
          /** @example notification */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/createdNotifications
           */
          related?: string;
        };
      };
      createdQuoteComments?: {
        data?: {
          /** @example 860bc13329c5b039ddeccbd9cced778d */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/createdQuoteComments
           */
          related?: string;
        };
      };
      demoToken?: {
        readonly data?: {
          /** @example 69de4ff786578920993323df63a4439a */
          id?: string;
          /** @example saas_storefront_demo_token */
          type?: string;
        }[];
        readonly links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/demoToken
           */
          related?: string;
        };
      };
      loginToken?: {
        readonly data?: {
          /** @example 4750140e5c1fe2a486703813ab519180 */
          id?: string;
          /** @example saas_user_login_token */
          type?: string;
        }[];
        readonly links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/loginToken
           */
          related?: string;
        };
      };
      orderReturnsCreated?: {
        data?: {
          /** @example 727aaaa1b237ca288bd73419446975b4 */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/orderReturnsCreated
           */
          related?: string;
        };
      };
      orderReturnsUpdated?: {
        data?: {
          /** @example b236f1d18dddb0c2a359d93c25da5a20 */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/orderReturnsUpdated
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/quotes
           */
          related?: string;
        };
      };
      quotesAssignee?: {
        data?: {
          /** @example 1b848b0267abc056ed84fb16cb26f60a */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/quotesAssignee
           */
          related?: string;
        };
      };
      quotesUpdated?: {
        data?: {
          /** @example 58ff54114372ffbca7305b48fa25f8fc */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/quotesUpdated
           */
          related?: string;
        };
      };
      sbpUserData?: {
        readonly data?: {
          /** @example 7afee5a98234c94ed28df8d4f2f78b96 */
          id?: string;
          /** @example saas_sbp_user_data */
          type?: string;
        };
        readonly links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/sbpUserData
           */
          related?: string;
        };
      };
    };
    firstName: string;
    id: string;
    importExportLogEntries?: components["schemas"]["ImportExportLog"][];
    lastName: string;
    /** Format: date-time */
    lastUpdatedPasswordAt?: string;
    locale?: components["schemas"]["Locale"];
    localeId: string;
    media?: components["schemas"]["Media"][];
    recoveryUser?: components["schemas"]["UserRecovery"];
    stateMachineHistoryEntries?: components["schemas"]["StateMachineHistory"][];
    timeZone: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    updatedCustomers?: components["schemas"]["Customer"][];
    updatedOrders?: components["schemas"]["Order"][];
    username: string;
  };
  UserAccessKey: {
    accessKey: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    /** Format: date-time */
    lastUsageAt?: string;
    secretAccessKey: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
  };
  UserAccessKeyJsonApi: components["schemas"]["resource"] & {
    accessKey: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    id: string;
    /** Format: date-time */
    lastUsageAt?: string;
    relationships?: {
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /user-access-key/01614dd7e96bd79868128dca72e7eff8/user
           */
          related?: string;
        };
      };
    };
    secretAccessKey: string;
    /** Format: date-time */
    updatedAt?: string;
    userId: string;
  };
  UserConfig: {
    /** Format: date-time */
    createdAt: string;
    id: string;
    key: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
    value?: Record<string, never>;
  };
  UserConfigJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    id: string;
    key: string;
    relationships?: {
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /user-config/4b55408b66d30e27bb1593401072cd70/user
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    userId: string;
    value?: Record<string, never>;
  };
  UserJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    admin?: boolean;
    avatarId?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    email: string;
    extensions?: {
      cmsPageActivities?: {
        data?: {
          /** @example aae7ba0db81d03df86e789e3f6cf8fe5 */
          id?: string;
          /** @example cms_page_activity */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/cmsPageActivities
           */
          related?: string;
        };
      };
      cmsPageDrafts?: {
        data?: {
          /** @example 93c0df75844858f2b2a9359abc152f5d */
          id?: string;
          /** @example cms_page_draft */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/cmsPageDrafts
           */
          related?: string;
        };
      };
      createdNotifications?: {
        data?: {
          /** @example 04f88ea12127fe03b65beffbc2c96954 */
          id?: string;
          /** @example notification */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/createdNotifications
           */
          related?: string;
        };
      };
      createdQuoteComments?: {
        data?: {
          /** @example 860bc13329c5b039ddeccbd9cced778d */
          id?: string;
          /** @example quote_comment */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/createdQuoteComments
           */
          related?: string;
        };
      };
      demoToken?: {
        readonly data?: {
          /** @example 69de4ff786578920993323df63a4439a */
          id?: string;
          /** @example saas_storefront_demo_token */
          type?: string;
        }[];
        readonly links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/demoToken
           */
          related?: string;
        };
      };
      loginToken?: {
        readonly data?: {
          /** @example 4750140e5c1fe2a486703813ab519180 */
          id?: string;
          /** @example saas_user_login_token */
          type?: string;
        }[];
        readonly links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/loginToken
           */
          related?: string;
        };
      };
      orderReturnsCreated?: {
        data?: {
          /** @example 727aaaa1b237ca288bd73419446975b4 */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/orderReturnsCreated
           */
          related?: string;
        };
      };
      orderReturnsUpdated?: {
        data?: {
          /** @example b236f1d18dddb0c2a359d93c25da5a20 */
          id?: string;
          /** @example order_return */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/orderReturnsUpdated
           */
          related?: string;
        };
      };
      quotes?: {
        data?: {
          /** @example 2150fd65034a9bcdb357943b3900a918 */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/quotes
           */
          related?: string;
        };
      };
      quotesAssignee?: {
        data?: {
          /** @example 1b848b0267abc056ed84fb16cb26f60a */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/quotesAssignee
           */
          related?: string;
        };
      };
      quotesUpdated?: {
        data?: {
          /** @example 58ff54114372ffbca7305b48fa25f8fc */
          id?: string;
          /** @example quote */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/quotesUpdated
           */
          related?: string;
        };
      };
      sbpUserData?: {
        readonly data?: {
          /** @example 7afee5a98234c94ed28df8d4f2f78b96 */
          id?: string;
          /** @example saas_sbp_user_data */
          type?: string;
        };
        readonly links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/sbpUserData
           */
          related?: string;
        };
      };
    };
    firstName: string;
    id: string;
    lastName: string;
    /** Format: date-time */
    lastUpdatedPasswordAt?: string;
    localeId: string;
    relationships?: {
      accessKeys?: {
        data?: {
          /** @example d11944e47e101a4aaa8d7947faa56b16 */
          id?: string;
          /** @example user_access_key */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/accessKeys
           */
          related?: string;
        };
      };
      aclRoles?: {
        data?: {
          /** @example e050a8081a3eb1d193c23cf0ef761183 */
          id?: string;
          /** @example acl_role */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/aclRoles
           */
          related?: string;
        };
      };
      avatarMedia?: {
        data?: {
          /** @example 117ab0b986d2b792c775e3beeacca7c7 */
          id?: string;
          /** @example media */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/avatarMedia
           */
          related?: string;
        };
      };
      configs?: {
        data?: {
          /** @example c23f7ab876ac167e05468ef79f046cb7 */
          id?: string;
          /** @example user_config */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/configs
           */
          related?: string;
        };
      };
      createdCustomers?: {
        data?: {
          /** @example c0caccfe18ce8c277f15d100818139a6 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/createdCustomers
           */
          related?: string;
        };
      };
      createdOrders?: {
        data?: {
          /** @example 20509127ddf2655eb49e3db3b1d710c0 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/createdOrders
           */
          related?: string;
        };
      };
      importExportLogEntries?: {
        data?: {
          /** @example 72ec794255f368c7a704e177fa9a4967 */
          id?: string;
          /** @example import_export_log */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/importExportLogEntries
           */
          related?: string;
        };
      };
      locale?: {
        data?: {
          /** @example fb216d9e8791e63c8d12bdc420956839 */
          id?: string;
          /** @example locale */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/locale
           */
          related?: string;
        };
      };
      media?: {
        data?: {
          /** @example 62933a2951ef01f4eafd9bdf4d3cd2f0 */
          id?: string;
          /** @example media */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/media
           */
          related?: string;
        };
      };
      recoveryUser?: {
        data?: {
          /** @example bf6cdb5c30f0f0d234b96e50f2953109 */
          id?: string;
          /** @example user_recovery */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/recoveryUser
           */
          related?: string;
        };
      };
      stateMachineHistoryEntries?: {
        data?: {
          /** @example c78c7ea361b7def0876b75bd1bd37879 */
          id?: string;
          /** @example state_machine_history */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/stateMachineHistoryEntries
           */
          related?: string;
        };
      };
      updatedCustomers?: {
        data?: {
          /** @example dddac98f88e37eb31b56e7e1d455fd75 */
          id?: string;
          /** @example customer */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/updatedCustomers
           */
          related?: string;
        };
      };
      updatedOrders?: {
        data?: {
          /** @example 9ce34a8be6d860e8bd92feaf79e9a4a2 */
          id?: string;
          /** @example order */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /user/8f9bfe9d1345237cb3b2b205864da075/updatedOrders
           */
          related?: string;
        };
      };
    };
    timeZone: string;
    title?: string;
    /** Format: date-time */
    updatedAt?: string;
    username: string;
  };
  UserRecovery: {
    /** Format: date-time */
    createdAt: string;
    hash: string;
    id: string;
    /** Format: date-time */
    updatedAt?: string;
    user?: components["schemas"]["User"];
    userId: string;
  };
  UserRecoveryJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    hash: string;
    id: string;
    relationships?: {
      user?: {
        data?: {
          /** @example ee11cbb19052e40b07aac0ca060c23ee */
          id?: string;
          /** @example user */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /user-recovery/f451cbc27abefae127822d81c5dbb338/user
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    userId: string;
  };
  Warehouse: {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    groups?: components["schemas"]["WarehouseGroup"][];
    id: string;
    name: string;
    orderProducts?: components["schemas"]["OrderProductWarehouse"][];
    productWarehouses?: components["schemas"]["ProductWarehouse"][];
    /** Format: date-time */
    updatedAt?: string;
  };
  WarehouseGroup: {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    id: string;
    name: string;
    /** Format: int64 */
    priority?: number;
    products?: components["schemas"]["Product"][];
    rule?: components["schemas"]["Rule"];
    ruleId?: string;
    /** Format: date-time */
    updatedAt?: string;
    warehouses?: components["schemas"]["Warehouse"][];
  };
  WarehouseGroupJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    id: string;
    name: string;
    /** Format: int64 */
    priority?: number;
    relationships?: {
      products?: {
        data?: {
          /** @example 86024cad1e83101d97359d7351051156 */
          id?: string;
          /** @example product */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /warehouse-group/de0cc3be51d97f8063ce4c0cb7ba2515/products
           */
          related?: string;
        };
      };
      rule?: {
        data?: {
          /** @example 981c1e7b3795da18687613fbd66d4954 */
          id?: string;
          /** @example rule */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /warehouse-group/de0cc3be51d97f8063ce4c0cb7ba2515/rule
           */
          related?: string;
        };
      };
      warehouses?: {
        data?: {
          /** @example 544959798565126142ca2820b4f56271 */
          id?: string;
          /** @example warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /warehouse-group/de0cc3be51d97f8063ce4c0cb7ba2515/warehouses
           */
          related?: string;
        };
      };
    };
    ruleId?: string;
    /** Format: date-time */
    updatedAt?: string;
  };
  WarehouseGroupWarehouse: {
    id?: string;
    /** Format: int64 */
    priority?: number;
    warehouse?: components["schemas"]["Warehouse"];
    warehouseGroup?: components["schemas"]["WarehouseGroup"];
    warehouseGroupId: string;
    warehouseId: string;
  };
  WarehouseJsonApi: components["schemas"]["resource"] & {
    /** Format: date-time */
    createdAt: string;
    description?: string;
    id: string;
    name: string;
    relationships?: {
      groups?: {
        data?: {
          /** @example 1471e4e05a4db95d353cc867fe317314 */
          id?: string;
          /** @example warehouse_group */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /warehouse/6416e8cb5fc0a208d94fa7f5a300dbc4/groups
           */
          related?: string;
        };
      };
      orderProducts?: {
        data?: {
          /** @example 5b044c586b7768148276b8d5c4ef61b6 */
          id?: string;
          /** @example order_product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /warehouse/6416e8cb5fc0a208d94fa7f5a300dbc4/orderProducts
           */
          related?: string;
        };
      };
      productWarehouses?: {
        data?: {
          /** @example ff6147ec4fdd4e27441a0439366d0e4d */
          id?: string;
          /** @example product_warehouse */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /warehouse/6416e8cb5fc0a208d94fa7f5a300dbc4/productWarehouses
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
  };
  Webhook: {
    active?: boolean;
    app?: components["schemas"]["App"];
    appId?: string;
    /** Format: date-time */
    createdAt: string;
    /** Format: int64 */
    errorCount: number;
    eventName: string;
    id: string;
    name: string;
    onlyLiveVersion?: boolean;
    /** Format: date-time */
    updatedAt?: string;
    url: string;
  };
  WebhookEventLog: {
    appName?: string;
    appVersion?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deliveryStatus: string;
    eventName: string;
    extensions?: {
      flowSequences?: {
        data?: {
          /** @example 3a0d70b6dd3624074e5e15cd07e7fa90 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /webhook-event-log/9a55f6ada630f9af57230d03e40bc8ee/flowSequences
           */
          related?: string;
        };
      };
    };
    id: string;
    onlyLiveVersion?: boolean;
    /** Format: int64 */
    processingTime?: number;
    requestContent?: Record<string, never>;
    responseContent?: Record<string, never>;
    responseReasonPhrase?: string;
    /** Format: int64 */
    responseStatusCode?: number;
    /** Format: int64 */
    timestamp?: number;
    /** Format: date-time */
    updatedAt?: string;
    url: string;
    webhookName: string;
  };
  WebhookEventLogJsonApi: components["schemas"]["resource"] & {
    appName?: string;
    appVersion?: string;
    /** Format: date-time */
    createdAt: string;
    customFields?: Record<string, never>;
    deliveryStatus: string;
    eventName: string;
    extensions?: {
      flowSequences?: {
        data?: {
          /** @example 3a0d70b6dd3624074e5e15cd07e7fa90 */
          id?: string;
          /** @example flow_sequence */
          type?: string;
        }[];
        links?: {
          /**
           * Format: uri-reference
           * @example /webhook-event-log/9a55f6ada630f9af57230d03e40bc8ee/flowSequences
           */
          related?: string;
        };
      };
    };
    id: string;
    onlyLiveVersion?: boolean;
    /** Format: int64 */
    processingTime?: number;
    requestContent?: Record<string, never>;
    responseContent?: Record<string, never>;
    responseReasonPhrase?: string;
    /** Format: int64 */
    responseStatusCode?: number;
    /** Format: int64 */
    timestamp?: number;
    /** Format: date-time */
    updatedAt?: string;
    url: string;
    webhookName: string;
  };
  WebhookJsonApi: components["schemas"]["resource"] & {
    active?: boolean;
    appId?: string;
    /** Format: date-time */
    createdAt: string;
    /** Format: int64 */
    errorCount: number;
    eventName: string;
    id: string;
    name: string;
    onlyLiveVersion?: boolean;
    relationships?: {
      app?: {
        data?: {
          /** @example d2a57dc1d883fd21fb9951699df71cc7 */
          id?: string;
          /** @example app */
          type?: string;
        };
        links?: {
          /**
           * Format: uri-reference
           * @example /webhook/150c7abfca6c489fee5cb82fbb7a9bc4/app
           */
          related?: string;
        };
      };
    };
    /** Format: date-time */
    updatedAt?: string;
    url: string;
  };
  attributes: {
    [key: string]: unknown;
  };
  businessEventsResponse: {
    /** Flow builder will base on awareness to show actions */
    aware?: string[];
    /** Class name of the event */
    class?: string;
    /** Available data of event */
    data?: Record<string, never>;
    /** Extensions data of event */
    extensions?: string[];
    /** Name of the event */
    name?: string;
  }[];
  data: components["schemas"]["resource"] | components["schemas"]["resource"][];
  error: {
    /** An application-specific error code, expressed as a string value. */
    code?: string;
    /** A human-readable description of the problem. */
    description?: string;
    /** A human-readable explanation specific to this occurrence of the problem. */
    detail?: string;
    /** A unique identifier for this particular occurrence of the problem. */
    id?: string;
    links?: components["schemas"]["links"];
    meta?: components["schemas"]["meta"];
    source?: {
      /** A string indicating which query parameter caused the error. */
      parameter?: string;
      /** A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute]. */
      pointer?: string;
    };
    /** The HTTP status code applicable to this problem, expressed as a string value. */
    status?: string;
    /** A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization. */
    title?: string;
  };
  failure: {
    errors: components["schemas"]["error"][];
    links?: components["schemas"]["links"];
    meta?: components["schemas"]["meta"];
  };
  flowBulderActionsResponse: {
    /** Extensions data of event */
    extensions?: string[];
    /** Name of the flow action */
    name?: string;
    /** When requirement fit with aware from `events.json` actions will be shown */
    requirements?: string[];
  }[];
  info: {
    jsonapi?: components["schemas"]["jsonapi"];
    links?: components["schemas"]["links"];
    meta: components["schemas"]["meta"];
  };
  infoConfigResponse: {
    /** Information about the admin worker. */
    adminWorker?: {
      /** State of the admin worker. */
      enableAdminWorker?: boolean;
      /** Configured transports. */
      transports?: string[];
    };
    /** Asset files of active extensions */
    bundles?: {
      [key: string]: {
        css?: string[];
        js?: string[];
      };
    };
    settings?: {
      /** State of the `urlFeature` setting. */
      enableUrlFeature?: boolean;
    };
    /** The Shopware version. */
    version?: string;
    /** The Shopware version revision. */
    versionRevision?: string;
  };
  jsonapi: {
    meta?: components["schemas"]["meta"];
    version?: string;
  };
  link: OneOf<
    [
      string,
      {
        /**
         * Format: uri-reference
         * A string containing the link's URL.
         */
        href: string;
        meta?: components["schemas"]["meta"];
      },
    ]
  >;
  linkage: {
    id: string;
    meta?: components["schemas"]["meta"];
    type: string;
  };
  links: {
    [key: string]: components["schemas"]["link"];
  };
  meta: {
    [key: string]: unknown;
  };
  pagination: {
    /**
     * Format: uri-reference
     * The first page of data
     */
    first?: string;
    /**
     * Format: uri-reference
     * The last page of data
     */
    last?: string;
    /**
     * Format: uri-reference
     * The next page of data
     */
    next?: string;
    /**
     * Format: uri-reference
     * The previous page of data
     */
    prev?: string;
  };
  relationshipLinks: {
    related?: components["schemas"]["link"];
    self?: Record<string, never>[] & components["schemas"]["link"];
    [key: string]: unknown;
  };
  relationshipToMany: components["schemas"]["linkage"][];
  relationshipToOne: components["schemas"]["linkage"];
  relationships: unknown;
  resource: {
    attributes?: components["schemas"]["attributes"];
    id: string;
    links?: components["schemas"]["links"];
    meta?: components["schemas"]["meta"];
    relationships?: components["schemas"]["relationships"];
    type: string;
  };
  success: {
    data: components["schemas"]["data"];
    /** To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called "compound documents". */
    included?: components["schemas"]["resource"][];
    /** Link members related to the primary data. */
    links?: components["schemas"]["links"] &
      components["schemas"]["pagination"];
    meta?: components["schemas"]["meta"];
  };
};
export type operations = {
  "clearCache delete /_action/cache": {
    contentType?: "application/json";
    accept?: "application/json";
    response: never;
    responseCode: 204;
  };
  "info get /_action/cache_info": {
    contentType?: "application/json";
    accept?: "application/json";
    response: {
      /** The active cache adapter. */
      cacheAdapter?: string;
      /** The active environment. */
      environment?: string;
      /** State of the HTTP cache. */
      httpCache?: boolean;
    };
    responseCode: 200;
  };
  "clearOldCacheFolders delete /_action/cleanup": {
    contentType?: "application/json";
    accept?: "application/json";
    response: never;
    responseCode: 204;
  };
  "clearContainerCache delete /_action/container_cache": {
    contentType?: "application/json";
    accept?: "application/json";
    response: never;
    responseCode: 204;
  };
  "createEmployee post /_action/create-employee": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** Email of the new employee */
      email?: string;
      /** First name of the new employee */
      firstName?: string;
      /** Last name of the new employee */
      lastName?: string;
      /** Id of the role of the new employee */
      roleId?: string;
    };
    response: {
      /** Array of the created employee ids */
      data?: string[];
    };
    responseCode: 200;
  };
  "customPriceImport post /_action/custom-price": {
    contentType?: "application/json";
    accept?: "application/json";
    body: (
      | components["schemas"]["CustomPricingUpsertOperation"]
      | components["schemas"]["CustomPricingDeleteOperation"]
    )[];
    response: components["schemas"]["CustomPricingResponse"];
    responseCode: 200;
  };
  "downloadDocument get /_action/document/{documentId}/{deepLinkCode}": {
    contentType?: "application/json";
    accept: "application/octet-stream";
    query?: {
      /** This parameter controls the `Content-Disposition` header. If set to `true` the header will be set to `attachment` else `inline`. */
      download?: boolean;
    };
    pathParams: {
      /** Identifier of the document to be downloaded. */
      documentId: string;
      /** A unique hash code which was generated when the document was created. */
      deepLinkCode: string;
    };
    response: Blob;
    responseCode: 200;
  };
  "uploadToDocument post /_action/document/{documentId}/upload":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query: {
          /** Name of the uploaded file. */
          fileName: string;
          /** Extension of the uploaded file. For example `pdf` */
          extension: string;
        };
        pathParams: {
          /** Identifier of the document the new file should be added to. */
          documentId: string;
        };
        body: {
          /** The url of the document that will be downloaded. */
          url: string;
        };
        response: {
          /** A unique hash code which is required to open the document. */
          documentDeepLink?: string;
          /** Identifier of the document. */
          documentId?: string;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/octet-stream";
        accept?: "application/json";
        query: {
          /** Name of the uploaded file. */
          fileName: string;
          /** Extension of the uploaded file. For example `pdf` */
          extension: string;
        };
        pathParams: {
          /** Identifier of the document the new file should be added to. */
          documentId: string;
        };
        body: Blob;
        response: {
          /** A unique hash code which is required to open the document. */
          documentDeepLink?: string;
          /** Identifier of the document. */
          documentId?: string;
        };
        responseCode: 200;
      };
  "index post /_action/index": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** Array of indexers/updaters to be skipped. */
      skip?: string[];
    };
    response: never;
    responseCode: 204;
  };
  "productIndexing post /_action/index-products": {
    contentType?: "application/json";
    accept?: "application/json";
    response: never;
    responseCode: 204;
  };
  "indexing post /_action/indexing": {
    contentType?: "application/json";
    accept?: "application/json";
    response: never;
    responseCode: 200;
  };
  "iterate post /_action/indexing/{indexer}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Name of the indexer to iterate. */
      indexer: string;
    };
    body: {
      /** The offset for the iteration. */
      offset?: number;
    };
    response: {
      /** Indicates if the indexing process finished. */
      finish?: boolean;
      /** Offset to be used for the next iteration. */
      offset?: number;
    };
    responseCode: 200;
  };
  "inviteEmployee post /_action/invite-employee": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** Id of the employee to invite */
      id: string;
      /** Id of the sales channel through which the registration will be fulfilled. */
      salesChannelId?: string;
    };
    response: never;
    responseCode: 204;
  };
  "build post /_action/mail-template/build": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** The content of the mail as plain text. */
      mailTemplate: {
        /**
         * The content of mail mail template in html format.
         * @example Hello {{ order.customerName }}, this is example mail content, the current date is {{ 'now'|date('d/m/Y') }}
         */
        contentHtml?: string;
      };
      /** Only the property `templateData` is used. It provides additional variables to the templating engine. */
      mailTemplateType: {
        /**
         * An associative array that is handed over to the templating engine and can be used as variables in the mail content.
         * @example {
         *   "order": {
         *     "orderNumber": 5000,
         *     "customerName": "Example Customer"
         *   },
         *   "messageOfTheDay": "An apple a day keeps the doctor away!"
         * }
         */
        templateData?: {
          [key: string]: unknown;
        };
      };
    };
    response: string;
    responseCode: 200;
  };
  "send post /_action/mail-template/send": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** A list of binary attachments which should be added to the mail. */
      binAttachments?: {
        /** Binary content of the attachment. */
        content?: string;
        /** File name of the attachment. */
        fileName?: string;
        /** Mime type of the attachment. */
        mimeType?: string;
      }[];
      /** The content of the mail in HTML format. */
      contentHtml: string;
      /** The content of the mail as plain text. */
      contentPlain: string;
      /** List of media identifiers which should be attached to the mail. */
      mediaIds?: string[];
      /**
       * A list of recipients with name and mail address.
       * @example {
       *   "test1@example.com": "Test user 1",
       *   "test2@example.com": "Test user 2"
       * }
       */
      recipients: {
        [key: string]: string;
      };
      /**
       * A list of recipients with name and mail address to be set in BCC.
       * @example {
       *   "test1@example.com": "Test user 1",
       *   "test2@example.com": "Test user 2"
       * }
       */
      recipientsBcc?: {
        [key: string]: string;
      };
      /**
       * A list of recipients with name and mail address to be set in CC.
       * @example {
       *   "test1@example.com": "Test user 1",
       *   "test2@example.com": "Test user 2"
       * }
       */
      recipientsCc?: {
        [key: string]: string;
      };
      /**
       * A list of mail addresses with name and mail address to be set in reply to.
       * @example {
       *   "test1@example.com": "Test user 1",
       *   "test2@example.com": "Test user 2"
       * }
       */
      replyTo?: {
        [key: string]: string;
      };
      /**
       * A list of mail addresses with name and mail address to be set in return path.
       * @example {
       *   "test1@example.com": "Test user 1",
       *   "test2@example.com": "Test user 2"
       * }
       */
      returnPath?: {
        [key: string]: string;
      };
      /** Identifier of the sales channel from which the mail should be send. */
      salesChannelId: string;
      /** Mail address of the sender. If not set, `core.basicInformation.email` or `core.mailerSettings.senderAddress` will be used from the shop configuration. */
      senderEmail?: string;
      /** Name of the sender. */
      senderName: string;
      /** Subject of the mail. */
      subject: string;
    };
    response: {
      /** Length of the email message */
      size?: number;
    };
    responseCode: 200;
  };
  "validate post /_action/mail-template/validate": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** The content of the mail in HTML format. */
      contentHtml: string;
      /** The content of the mail as plain text. */
      contentPlain: string;
    };
    response: never;
    responseCode: 204;
  };
  "upload post /_action/media/{mediaId}/upload":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query: {
          /** Name of the uploaded file. If not provided the media identifier will be used as name */
          fileName?: string;
          /** Extension of the uploaded file. For example `png` */
          extension: string;
        };
        pathParams: {
          /** Identifier of the media entity. */
          mediaId: string;
        };
        body: {
          /** The url of the media file that will be downloaded. */
          url: string;
        };
        response: never;
        responseCode: 204;
      }
    | {
        contentType: "application/octet-stream";
        accept?: "application/json";
        query: {
          /** Name of the uploaded file. If not provided the media identifier will be used as name */
          fileName?: string;
          /** Extension of the uploaded file. For example `png` */
          extension: string;
        };
        pathParams: {
          /** Identifier of the media entity. */
          mediaId: string;
        };
        body: Blob;
        response: never;
        responseCode: 204;
      };
  "consumeMessages post /_action/message-queue/consume": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /**
       * The name of the transport in the messenger that should be processed.
       * See the [Symfony Messenger documentation](https://symfony.com/doc/current/messenger.html) for more information
       */
      receiver: string;
    };
    response: {
      /** The number of messages processed. */
      handledMessages?: number;
    };
    responseCode: 200;
  };
  "numberRangeReserve get /_action/number-range/reserve/{type}/{saleschannel}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** If this parameter has a true value, the number will not actually be incremented, but only previewed. */
      preview?: boolean;
    };
    pathParams: {
      /** `technicalName` of the document type (e.g. `document_invoice`). Available types can be fetched with the `/api/document-type endpoint`. */
      type: string;
      /** Sales channel for the number range. Number ranges can be defined per sales channel, so you can pass a sales channel ID here. */
      saleschannel: string;
    };
    response: {
      /** The generated (or previewed) document number. */
      number?: string;
    };
    responseCode: 200;
  };
  "orderDeliveryStateTransition post /_action/order_delivery/{orderDeliveryId}/state/{transition}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the order delivery. */
      orderDeliveryId: string;
      /**
       * The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.
       *
       * Note: If you choose a transition which is not possible, you will get an error that lists possible transition for the actual state.
       */
      transition: string;
    };
    body: {
      /** A list of document identifiers that should be attached */
      documentIds?: string[];
      /** A list of media identifiers that should be attached */
      mediaIds?: string[];
      /** Controls if a mail should be send to the customer. */
      sendMail?: unknown;
      /**
       * This is the state column within the order delivery database table. There should be no need to change it from the default.
       * @default stateId
       */
      stateFieldName?: string;
    };
    response: never;
    responseCode: 200;
  };
  "orderTransactionCaptureRefund post /_action/order_transaction_capture_refund/{refundId}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the order transaction capture refund. */
      refundId: string;
    };
    response: never;
    responseCode: 204;
  };
  "orderTransactionStateTransition post /_action/order_transaction/{orderTransactionId}/state/{transition}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the order transaction. */
      orderTransactionId: string;
      /**
       * The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.
       *
       * Note: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.
       */
      transition: string;
    };
    body: {
      /** A list of document identifiers that should be attached */
      documentIds?: string[];
      /** A list of media identifiers that should be attached */
      mediaIds?: string[];
      /** Controls if a mail should be sent to the customer. */
      sendMail?: unknown;
      /**
       * This is the state column within the order transaction database table. There should be no need to change it from the default.
       * @default stateId
       */
      stateFieldName?: string;
    };
    response: never;
    responseCode: 200;
  };
  "updateOrderAddresses post /_action/order/{orderId}/order-address": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the order. */
      orderId: string;
    };
    body: {
      /** The mapping of order addresses */
      mapping?: {
        /** The ID of the customer address */
        customerAddressId: string;
        /** The ID of the delivery (optional) */
        deliveryId?: string | null;
        /** The type of the address */
        type: string;
      }[];
    };
    response: never;
    responseCode: 204;
  };
  "orderStateTransition post /_action/order/{orderId}/state/{transition}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the order. */
      orderId: string;
      /**
       * The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.
       *
       * Note: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.
       */
      transition: string;
    };
    body: {
      /** A list of document identifiers that should be attached */
      documentIds?: string[];
      /** A list of media identifiers that should be attached */
      mediaIds?: string[];
      /** Controls if a mail should be sent to the customer. */
      sendMail?: unknown;
      /**
       * This is the state column within the order database table. There should be no need to change it from the default.
       * @default stateId
       */
      stateFieldName?: string;
    };
    response: never;
    responseCode: 200;
  };
  "createDocuments post /_action/order/document/{documentTypeName}/create": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** The type of document to create */
      documentTypeName: string;
    };
    body: {
      /** Document specific configuration, like documentNumber, documentDate, documentComment. */
      config?: Record<string, never>;
      /**
       * Type of document file to be generated.
       * @default pdf
       */
      fileType?: string;
      /** Identifier of the order. */
      orderId: string;
      /**
       * Identifier of the reverenced document.
       * @default null
       */
      referencedDocumentId?: string;
      /**
       * Indicate if the document should be static or not.
       * @default false
       */
      static?: boolean;
      /** Type of the document to be generated. */
      type: string;
    }[];
    response: never;
    responseCode: 200;
  };
  "downloadDocuments post /_action/order/document/download": {
    contentType?: "application/json";
    accept: "application/octet-stream";
    body: string[];
    response: Blob;
    responseCode: 200;
  };
  "createComment post /_action/quote/{quoteId}/comment": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the quote to be fetched */
      quoteId: string;
    };
    body: {
      /** Message content */
      comment?: string;
      /** Current quote state */
      state?: string;
    };
    response: never;
    responseCode: 204;
  };
  "addCustomLineItemToQuote post /_action/quote/{quoteId}/lineItem": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the quote to be fetched */
      quoteId: string;
    };
    body: {
      /** @default null */
      description?: string;
      identifier?: string;
      /** @default null */
      label?: string;
      payload?: Record<string, never>[];
      priceDefinition?: Record<string, never>[];
      quantity?: number;
      /** @default true */
      removable?: boolean;
      /** @default true */
      stackable?: boolean;
      /** @default custom */
      type?: string;
    };
    response: never;
    responseCode: 204;
  };
  "addProductToQuote post /_action/quote/{quoteId}/product/{productId}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the quote to be fetched */
      quoteId: string;
      /** Identifier of the product to be fetched */
      productId: string;
    };
    body: {
      quantity?: number;
    };
    response: never;
    responseCode: 204;
  };
  "recalculateQuote post /_action/quote/{quoteId}/recalculate": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the quote to be fetched */
      quoteId: string;
    };
    response: never;
    responseCode: 204;
  };
  "getMinRunInterval get /_action/scheduled-task/min-run-interval": {
    contentType?: "application/json";
    accept?: "application/json";
    response: {
      /** Minimal interval in seconds. */
      minRunInterval?: string;
    };
    responseCode: 200;
  };
  "runScheduledTasks post /_action/scheduled-task/run": {
    contentType?: "application/json";
    accept?: "application/json";
    response: {
      /** Success message */
      message?: string;
    };
    responseCode: 200;
  };
  "sync post /_action/sync": {
    contentType?: "application/json";
    accept?: "application/json";
    headers?: {
      /** To continue upcoming actions on errors, set the `fail-on-error` header to `false`. */
      "fail-on-error"?: boolean;
      /**
       * Controls the indexing behavior.
       *     - `disable-indexing`: Data indexing is completely disabled
       */
      "indexing-behavior"?: "use-queue-indexing" | "disable-indexing";
    };
    body: {
      /**
       * The action indicates what should happen with the provided payload.
       *     * `upsert`: The Sync API does not differ between create and update operations,
       *     but always performs an upsert operation. During an upsert, the system checks whether the entity already exists in the
       *     system and updates it if an identifier has been passed, otherwise a new entity is created with this identifier.
       *     * `delete`: Deletes entites with the provided identifiers
       * @enum {string}
       */
      action: "upsert" | "delete";
      /**
       * The entity that should be processed with the payload.
       * @example product
       */
      entity: string;
      /**
       * Contains a list of changesets for an entity. If the action type is `delete`,
       *     a list of identifiers can be provided.
       */
      payload: Record<string, never>[];
    }[];
    response: {
      /** Object with information about updated entites */
      data?: Record<string, never>;
      /** Object with information about deleted entites */
      deleted?: Record<string, never>;
      /** Object with information about not found entites */
      notFound?: Record<string, never>;
    };
    responseCode: 200;
  };
  "textToImageGenerate post /_action/text-to-image/generate": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /**
       * The textual prompt to describe what image to generate
       * @example Generate a warm and inviting ambience with soft lightning and neutral tones
       */
      description?: string;
    };
    response: string;
    responseCode: 200;
  };
  "updateEmployee patch /_action/update-employee": {
    contentType?: "application/json";
    accept?: "application/json";
    body: {
      /** Email of the employee */
      email?: string;
      /** First name of the employee */
      firstName?: string;
      /** Id of the employee */
      id?: string;
      /** Last name of the employee */
      lastName?: string;
      /** Id of the role of the employee */
      roleId?: string;
    };
    response: never;
    responseCode: 204;
  };
  "config get /_info/config": {
    contentType?: "application/json";
    accept?: "application/json";
    response: components["schemas"]["infoConfigResponse"];
    responseCode: 200;
  };
  "business-events get /_info/events.json": {
    contentType?: "application/json";
    accept?: "application/json";
    response: components["schemas"]["businessEventsResponse"];
    responseCode: 200;
  };
  "flow-actions get /_info/flow-actions.json": {
    contentType?: "application/json";
    accept?: "application/json";
    response: components["schemas"]["flowBulderActionsResponse"];
    responseCode: 200;
  };
  "healthCheck get /_info/health-check": {
    contentType?: "application/json";
    accept?: "application/json";
    response: never;
    responseCode: 200;
  };
  "api-info get /_info/openapi3.json": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Type of the api */
      type?: "jsonapi" | "json";
    };
    response: {
      components?: {
        callbacks?: Record<string, never>;
        examples?: Record<string, never>;
        headers?: Record<string, never>;
        links?: Record<string, never>;
        parameters?: Record<string, never>;
        pathItems?: Record<string, never>;
        requestBodies?: Record<string, never>;
        responses?: Record<string, never>;
        schemas?: Record<string, never>;
        securitySchemes?: Record<string, never>;
      };
      externalDocs?: {
        description?: string;
        /** Format: uri */
        url: string;
      };
      info: {
        contact?: {
          /** Format: email */
          email?: string;
          name?: string;
          /** Format: uri */
          url?: string;
        };
        description?: string;
        license?: {
          identifier?: string;
          name: string;
          /** Format: uri */
          url?: string;
        };
        summary?: string;
        /** Format: uri */
        termsOfService?: string;
        title: string;
        version: string;
      };
      jsonSchemaDialect?: string;
      openapi: string;
      paths?: Record<string, never>;
      security?: Record<string, never>[];
      servers?: {
        url: string;
      }[];
      tags?: {
        description?: string;
        externalDocs?: {
          description?: string;
          /** Format: uri */
          url: string;
        };
        name: string;
      }[];
      webhooks?: Record<string, never>;
    };
    responseCode: 200;
  };
  "infoShopwareVersion get /_info/version": {
    contentType?: "application/json";
    accept?: "application/json";
    response: {
      /** The Shopware version. */
      version?: string;
    };
    responseCode: 200;
  };
  "createQuoteFromAdmin post /_proxy-quote/{salesChannelId}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the sales channel to be fetched */
      salesChannelId: string;
    };
    body: {
      customerId?: string;
    };
    response: components["schemas"]["Quote"];
    responseCode: 200;
  };
  "getAclRoleList get /acl-role":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AclRole"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AclRole"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /acl-role?limit=25 */
            first?: unknown;
            /** @example /acl-role?limit=25&page=11 */
            last?: unknown;
            /** @example /acl-role?limit=25&page=4 */
            next?: unknown;
            /** @example /acl-role?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAclRole post /acl-role":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AclRole"];
        response: {
          data: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AclRole"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AclRole"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AclRole"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      };
  "getAclRole get /acl-role/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the acl_role */
          id: string;
        };
        response: {
          data: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the acl_role */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      };
  "deleteAclRole delete /acl-role/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the acl_role */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAclRole patch /acl-role/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the acl_role */
          id: string;
        };
        body: components["schemas"]["AclRole"];
        response: {
          data: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the acl_role */
          id: string;
        };
        body: components["schemas"]["AclRole"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the acl_role */
          id: string;
        };
        body: {
          data?: components["schemas"]["AclRole"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the acl_role */
          id: string;
        };
        body: {
          data?: components["schemas"]["AclRole"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchActionList get /advanced-search-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchAction"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-action?limit=25 */
            first?: unknown;
            /** @example /advanced-search-action?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-action?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-action?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchAction post /advanced-search-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchAction"];
        response: {
          data: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchAction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchAction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchAction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchActionSearchTermList get /advanced-search-action-search-term":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchActionSearchTerm"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-action-search-term?limit=25 */
            first?: unknown;
            /** @example /advanced-search-action-search-term?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-action-search-term?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-action-search-term?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchActionSearchTerm post /advanced-search-action-search-term":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchActionSearchTerm"];
        response: {
          data: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchActionSearchTerm"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchActionSearchTerm get /advanced-search-action-search-term/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_action_search_term */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_action_search_term */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchActionSearchTerm delete /advanced-search-action-search-term/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_action_search_term */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchActionSearchTerm patch /advanced-search-action-search-term/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action_search_term */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchActionSearchTerm"];
        response: {
          data: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action_search_term */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchActionSearchTerm"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action_search_term */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action_search_term */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchAction get /advanced-search-action/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_action */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_action */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchAction delete /advanced-search-action/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_action */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchAction patch /advanced-search-action/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchAction"];
        response: {
          data: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchAction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchAction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_action */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchAction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchBoostingList get /advanced-search-boosting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchBoosting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchBoosting"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-boosting?limit=25 */
            first?: unknown;
            /** @example /advanced-search-boosting?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-boosting?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-boosting?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchBoosting post /advanced-search-boosting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchBoosting"];
        response: {
          data: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchBoosting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchBoosting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchBoosting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchBoosting get /advanced-search-boosting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_boosting */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_boosting */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchBoosting delete /advanced-search-boosting/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_boosting */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchBoosting patch /advanced-search-boosting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_boosting */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchBoosting"];
        response: {
          data: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_boosting */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchBoosting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_boosting */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchBoosting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_boosting */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchBoosting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchConfigList get /advanced-search-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchConfig"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-config?limit=25 */
            first?: unknown;
            /** @example /advanced-search-config?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-config?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-config?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchConfig post /advanced-search-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchConfig"];
        response: {
          data: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchConfigFieldList get /advanced-search-config-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchConfigField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchConfigField"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-config-field?limit=25 */
            first?: unknown;
            /** @example /advanced-search-config-field?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-config-field?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-config-field?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchConfigField post /advanced-search-config-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchConfigField"];
        response: {
          data: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchConfigField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchConfigField get /advanced-search-config-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_config_field */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_config_field */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchConfigField delete /advanced-search-config-field/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_config_field */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchConfigField patch /advanced-search-config-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config_field */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchConfigField"];
        response: {
          data: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config_field */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchConfigField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchConfig get /advanced-search-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_config */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_config */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchConfig delete /advanced-search-config/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_config */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchConfig patch /advanced-search-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchConfig"];
        response: {
          data: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchEntityStreamList get /advanced-search-entity-stream":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchEntityStream"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchEntityStream"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-entity-stream?limit=25 */
            first?: unknown;
            /** @example /advanced-search-entity-stream?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-entity-stream?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-entity-stream?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchEntityStream post /advanced-search-entity-stream":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchEntityStream"];
        response: {
          data: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchEntityStream"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchEntityStreamFilterList get /advanced-search-entity-stream-filter":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchEntityStreamFilter"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-entity-stream-filter?limit=25 */
            first?: unknown;
            /** @example /advanced-search-entity-stream-filter?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-entity-stream-filter?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-entity-stream-filter?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchEntityStreamFilter post /advanced-search-entity-stream-filter":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        response: {
          data: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchEntityStreamFilter get /advanced-search-entity-stream-filter/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_entity_stream_filter */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_entity_stream_filter */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchEntityStreamFilter delete /advanced-search-entity-stream-filter/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_entity_stream_filter */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchEntityStreamFilter patch /advanced-search-entity-stream-filter/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream_filter */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        response: {
          data: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream_filter */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream_filter */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream_filter */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchEntityStream get /advanced-search-entity-stream/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_entity_stream */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_entity_stream */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchEntityStream delete /advanced-search-entity-stream/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_entity_stream */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchEntityStream patch /advanced-search-entity-stream/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchEntityStream"];
        response: {
          data: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchEntityStream"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_entity_stream */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchSynonymList get /advanced-search-synonym":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AdvancedSearchSynonym"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AdvancedSearchSynonym"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /advanced-search-synonym?limit=25 */
            first?: unknown;
            /** @example /advanced-search-synonym?limit=25&page=11 */
            last?: unknown;
            /** @example /advanced-search-synonym?limit=25&page=4 */
            next?: unknown;
            /** @example /advanced-search-synonym?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAdvancedSearchSynonym post /advanced-search-synonym":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchSynonym"];
        response: {
          data: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AdvancedSearchSynonym"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchSynonym"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AdvancedSearchSynonym"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      };
  "getAdvancedSearchSynonym get /advanced-search-synonym/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the advanced_search_synonym */
          id: string;
        };
        response: {
          data: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the advanced_search_synonym */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      };
  "deleteAdvancedSearchSynonym delete /advanced-search-synonym/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the advanced_search_synonym */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAdvancedSearchSynonym patch /advanced-search-synonym/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_synonym */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchSynonym"];
        response: {
          data: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_synonym */
          id: string;
        };
        body: components["schemas"]["AdvancedSearchSynonym"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_synonym */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchSynonym"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the advanced_search_synonym */
          id: string;
        };
        body: {
          data?: components["schemas"]["AdvancedSearchSynonym"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"];
        };
        responseCode: 200;
      };
  "rulePreview post /api/_admin/rule-builder-preview/{orderId}": {
    contentType?: "application/json";
    accept?: "application/json";
    pathParams: {
      /** Identifier of the order the preview should be generated for */
      orderId: string;
    };
    body: {
      /** Array of nested rule condition payloads. */
      conditions: Record<string, never>[];
      /** A date and time to be mocked in the preview evaluation. */
      dateTime?: string;
    };
    response: {
      /** Evaluation of the condition */
      match?: boolean;
      /** The technical name of the condition */
      name?: string;
      /** The id of the corresponding rule_condition entity */
      ruleReferenceId?: string;
    }[];
    responseCode: 200;
  };
  "getAppList get /app":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["App"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] & components["schemas"]["App"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app?limit=25 */
            first?: unknown;
            /** @example /app?limit=25&page=11 */
            last?: unknown;
            /** @example /app?limit=25&page=4 */
            next?: unknown;
            /** @example /app?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createApp post /app":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["App"];
        response: {
          data: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["App"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["App"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["App"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"];
        };
        responseCode: 200;
      };
  "getAppActionButtonList get /app-action-button":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppActionButton"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppActionButton"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-action-button?limit=25 */
            first?: unknown;
            /** @example /app-action-button?limit=25&page=11 */
            last?: unknown;
            /** @example /app-action-button?limit=25&page=4 */
            next?: unknown;
            /** @example /app-action-button?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppActionButton post /app-action-button":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppActionButton"];
        response: {
          data: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppActionButton"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppActionButton"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppActionButton"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      };
  "getAppActionButton get /app-action-button/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_action_button */
          id: string;
        };
        response: {
          data: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_action_button */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      };
  "deleteAppActionButton delete /app-action-button/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_action_button */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppActionButton patch /app-action-button/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_action_button */
          id: string;
        };
        body: components["schemas"]["AppActionButton"];
        response: {
          data: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_action_button */
          id: string;
        };
        body: components["schemas"]["AppActionButton"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_action_button */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppActionButton"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_action_button */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppActionButton"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"];
        };
        responseCode: 200;
      };
  "getAppAdministrationSnippetList get /app-administration-snippet":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppAdministrationSnippet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppAdministrationSnippet"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-administration-snippet?limit=25 */
            first?: unknown;
            /** @example /app-administration-snippet?limit=25&page=11 */
            last?: unknown;
            /** @example /app-administration-snippet?limit=25&page=4 */
            next?: unknown;
            /** @example /app-administration-snippet?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppAdministrationSnippet post /app-administration-snippet":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppAdministrationSnippet"];
        response: {
          data: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppAdministrationSnippet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppAdministrationSnippet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppAdministrationSnippet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      };
  "getAppAdministrationSnippet get /app-administration-snippet/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_administration_snippet */
          id: string;
        };
        response: {
          data: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_administration_snippet */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      };
  "deleteAppAdministrationSnippet delete /app-administration-snippet/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_administration_snippet */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppAdministrationSnippet patch /app-administration-snippet/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_administration_snippet */
          id: string;
        };
        body: components["schemas"]["AppAdministrationSnippet"];
        response: {
          data: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_administration_snippet */
          id: string;
        };
        body: components["schemas"]["AppAdministrationSnippet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_administration_snippet */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppAdministrationSnippet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_administration_snippet */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppAdministrationSnippet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"];
        };
        responseCode: 200;
      };
  "getAppCmsBlockList get /app-cms-block":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppCmsBlock"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppCmsBlock"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-cms-block?limit=25 */
            first?: unknown;
            /** @example /app-cms-block?limit=25&page=11 */
            last?: unknown;
            /** @example /app-cms-block?limit=25&page=4 */
            next?: unknown;
            /** @example /app-cms-block?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppCmsBlock post /app-cms-block":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppCmsBlock"];
        response: {
          data: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppCmsBlock"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppCmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppCmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      };
  "getAppCmsBlock get /app-cms-block/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_cms_block */
          id: string;
        };
        response: {
          data: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_cms_block */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      };
  "deleteAppCmsBlock delete /app-cms-block/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_cms_block */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppCmsBlock patch /app-cms-block/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_cms_block */
          id: string;
        };
        body: components["schemas"]["AppCmsBlock"];
        response: {
          data: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_cms_block */
          id: string;
        };
        body: components["schemas"]["AppCmsBlock"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_cms_block */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppCmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_cms_block */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppCmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"];
        };
        responseCode: 200;
      };
  "getAppFlowActionList get /app-flow-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppFlowAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppFlowAction"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-flow-action?limit=25 */
            first?: unknown;
            /** @example /app-flow-action?limit=25&page=11 */
            last?: unknown;
            /** @example /app-flow-action?limit=25&page=4 */
            next?: unknown;
            /** @example /app-flow-action?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppFlowAction post /app-flow-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppFlowAction"];
        response: {
          data: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppFlowAction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppFlowAction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppFlowAction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      };
  "getAppFlowAction get /app-flow-action/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_flow_action */
          id: string;
        };
        response: {
          data: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_flow_action */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      };
  "deleteAppFlowAction delete /app-flow-action/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_flow_action */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppFlowAction patch /app-flow-action/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_action */
          id: string;
        };
        body: components["schemas"]["AppFlowAction"];
        response: {
          data: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_action */
          id: string;
        };
        body: components["schemas"]["AppFlowAction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_action */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppFlowAction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_action */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppFlowAction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"];
        };
        responseCode: 200;
      };
  "getAppFlowEventList get /app-flow-event":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppFlowEvent"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppFlowEvent"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-flow-event?limit=25 */
            first?: unknown;
            /** @example /app-flow-event?limit=25&page=11 */
            last?: unknown;
            /** @example /app-flow-event?limit=25&page=4 */
            next?: unknown;
            /** @example /app-flow-event?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppFlowEvent post /app-flow-event":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppFlowEvent"];
        response: {
          data: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppFlowEvent"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppFlowEvent"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppFlowEvent"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      };
  "getAppFlowEvent get /app-flow-event/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_flow_event */
          id: string;
        };
        response: {
          data: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_flow_event */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      };
  "deleteAppFlowEvent delete /app-flow-event/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_flow_event */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppFlowEvent patch /app-flow-event/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_event */
          id: string;
        };
        body: components["schemas"]["AppFlowEvent"];
        response: {
          data: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_event */
          id: string;
        };
        body: components["schemas"]["AppFlowEvent"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_event */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppFlowEvent"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_flow_event */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppFlowEvent"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"];
        };
        responseCode: 200;
      };
  "getAppPaymentMethodList get /app-payment-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppPaymentMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppPaymentMethod"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-payment-method?limit=25 */
            first?: unknown;
            /** @example /app-payment-method?limit=25&page=11 */
            last?: unknown;
            /** @example /app-payment-method?limit=25&page=4 */
            next?: unknown;
            /** @example /app-payment-method?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppPaymentMethod post /app-payment-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppPaymentMethod"];
        response: {
          data: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppPaymentMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppPaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppPaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      };
  "getAppPaymentMethod get /app-payment-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_payment_method */
          id: string;
        };
        response: {
          data: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_payment_method */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      };
  "deleteAppPaymentMethod delete /app-payment-method/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_payment_method */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppPaymentMethod patch /app-payment-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_payment_method */
          id: string;
        };
        body: components["schemas"]["AppPaymentMethod"];
        response: {
          data: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_payment_method */
          id: string;
        };
        body: components["schemas"]["AppPaymentMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_payment_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppPaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_payment_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppPaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"];
        };
        responseCode: 200;
      };
  "getAppScriptConditionList get /app-script-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppScriptCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppScriptCondition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-script-condition?limit=25 */
            first?: unknown;
            /** @example /app-script-condition?limit=25&page=11 */
            last?: unknown;
            /** @example /app-script-condition?limit=25&page=4 */
            next?: unknown;
            /** @example /app-script-condition?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppScriptCondition post /app-script-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppScriptCondition"];
        response: {
          data: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppScriptCondition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppScriptCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppScriptCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      };
  "getAppScriptCondition get /app-script-condition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_script_condition */
          id: string;
        };
        response: {
          data: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_script_condition */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      };
  "deleteAppScriptCondition delete /app-script-condition/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_script_condition */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppScriptCondition patch /app-script-condition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_script_condition */
          id: string;
        };
        body: components["schemas"]["AppScriptCondition"];
        response: {
          data: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_script_condition */
          id: string;
        };
        body: components["schemas"]["AppScriptCondition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_script_condition */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppScriptCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_script_condition */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppScriptCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"];
        };
        responseCode: 200;
      };
  "getAppShippingMethodList get /app-shipping-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppShippingMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppShippingMethod"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-shipping-method?limit=25 */
            first?: unknown;
            /** @example /app-shipping-method?limit=25&page=11 */
            last?: unknown;
            /** @example /app-shipping-method?limit=25&page=4 */
            next?: unknown;
            /** @example /app-shipping-method?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppShippingMethod post /app-shipping-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppShippingMethod"];
        response: {
          data: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppShippingMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      };
  "getAppShippingMethod get /app-shipping-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_shipping_method */
          id: string;
        };
        response: {
          data: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_shipping_method */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      };
  "deleteAppShippingMethod delete /app-shipping-method/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_shipping_method */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppShippingMethod patch /app-shipping-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_shipping_method */
          id: string;
        };
        body: components["schemas"]["AppShippingMethod"];
        response: {
          data: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_shipping_method */
          id: string;
        };
        body: components["schemas"]["AppShippingMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_shipping_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_shipping_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"];
        };
        responseCode: 200;
      };
  "getAppTemplateList get /app-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["AppTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["AppTemplate"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /app-template?limit=25 */
            first?: unknown;
            /** @example /app-template?limit=25&page=11 */
            last?: unknown;
            /** @example /app-template?limit=25&page=4 */
            next?: unknown;
            /** @example /app-template?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createAppTemplate post /app-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppTemplate"];
        response: {
          data: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["AppTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["AppTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      };
  "getAppTemplate get /app-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app_template */
          id: string;
        };
        response: {
          data: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app_template */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      };
  "deleteAppTemplate delete /app-template/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app_template */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateAppTemplate patch /app-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_template */
          id: string;
        };
        body: components["schemas"]["AppTemplate"];
        response: {
          data: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_template */
          id: string;
        };
        body: components["schemas"]["AppTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["AppTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"];
        };
        responseCode: 200;
      };
  "getApp get /app/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the app */
          id: string;
        };
        response: {
          data: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the app */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"];
        };
        responseCode: 200;
      };
  "deleteApp delete /app/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the app */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateApp patch /app/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app */
          id: string;
        };
        body: components["schemas"]["App"];
        response: {
          data: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app */
          id: string;
        };
        body: components["schemas"]["App"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app */
          id: string;
        };
        body: {
          data?: components["schemas"]["App"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["App"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the app */
          id: string;
        };
        body: {
          data?: components["schemas"]["App"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"];
        };
        responseCode: 200;
      };
  "getB2bBusinessPartnerList get /b2b-business-partner":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bBusinessPartner"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bBusinessPartner"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-business-partner?limit=25 */
            first?: unknown;
            /** @example /b2b-business-partner?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-business-partner?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-business-partner?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bBusinessPartner post /b2b-business-partner":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bBusinessPartner"];
        response: {
          data: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bBusinessPartner"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bBusinessPartner"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bBusinessPartner"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      };
  "getB2bBusinessPartner get /b2b-business-partner/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_business_partner */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_business_partner */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      };
  "deleteB2bBusinessPartner delete /b2b-business-partner/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_business_partner */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bBusinessPartner patch /b2b-business-partner/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_business_partner */
          id: string;
        };
        body: components["schemas"]["B2bBusinessPartner"];
        response: {
          data: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_business_partner */
          id: string;
        };
        body: components["schemas"]["B2bBusinessPartner"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_business_partner */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bBusinessPartner"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_business_partner */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bBusinessPartner"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"];
        };
        responseCode: 200;
      };
  "getB2bComponentsApprovalRuleList get /b2b-components-approval-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bComponentsApprovalRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bComponentsApprovalRule"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-components-approval-rule?limit=25 */
            first?: unknown;
            /** @example /b2b-components-approval-rule?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-components-approval-rule?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-components-approval-rule?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bComponentsApprovalRule post /b2b-components-approval-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsApprovalRule"];
        response: {
          data: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsApprovalRule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      };
  "getB2bComponentsApprovalRule get /b2b-components-approval-rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_components_approval_rule */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_components_approval_rule */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      };
  "deleteB2bComponentsApprovalRule delete /b2b-components-approval-rule/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_components_approval_rule */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bComponentsApprovalRule patch /b2b-components-approval-rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_approval_rule */
          id: string;
        };
        body: components["schemas"]["B2bComponentsApprovalRule"];
        response: {
          data: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_approval_rule */
          id: string;
        };
        body: components["schemas"]["B2bComponentsApprovalRule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_approval_rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_approval_rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"];
        };
        responseCode: 200;
      };
  "getB2bComponentsPendingOrderList get /b2b-components-pending-order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bComponentsPendingOrder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bComponentsPendingOrder"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-components-pending-order?limit=25 */
            first?: unknown;
            /** @example /b2b-components-pending-order?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-components-pending-order?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-components-pending-order?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bComponentsPendingOrder post /b2b-components-pending-order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsPendingOrder"];
        response: {
          data: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsPendingOrder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      };
  "getB2bComponentsPendingOrderAddressList get /b2b-components-pending-order-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bComponentsPendingOrderAddress"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-components-pending-order-address?limit=25 */
            first?: unknown;
            /** @example /b2b-components-pending-order-address?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-components-pending-order-address?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-components-pending-order-address?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bComponentsPendingOrderAddress post /b2b-components-pending-order-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsPendingOrderAddress"];
        response: {
          data: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsPendingOrderAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      };
  "getB2bComponentsPendingOrderAddress get /b2b-components-pending-order-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_components_pending_order_address */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_components_pending_order_address */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      };
  "deleteB2bComponentsPendingOrderAddress delete /b2b-components-pending-order-address/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_components_pending_order_address */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bComponentsPendingOrderAddress patch /b2b-components-pending-order-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order_address */
          id: string;
        };
        body: components["schemas"]["B2bComponentsPendingOrderAddress"];
        response: {
          data: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order_address */
          id: string;
        };
        body: components["schemas"]["B2bComponentsPendingOrderAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"];
        };
        responseCode: 200;
      };
  "getB2bComponentsPendingOrder get /b2b-components-pending-order/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_components_pending_order */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_components_pending_order */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      };
  "deleteB2bComponentsPendingOrder delete /b2b-components-pending-order/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_components_pending_order */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bComponentsPendingOrder patch /b2b-components-pending-order/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order */
          id: string;
        };
        body: components["schemas"]["B2bComponentsPendingOrder"];
        response: {
          data: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order */
          id: string;
        };
        body: components["schemas"]["B2bComponentsPendingOrder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_pending_order */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"];
        };
        responseCode: 200;
      };
  "getB2bComponentsRoleList get /b2b-components-role":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bComponentsRole"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bComponentsRole"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-components-role?limit=25 */
            first?: unknown;
            /** @example /b2b-components-role?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-components-role?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-components-role?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bComponentsRole post /b2b-components-role":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsRole"];
        response: {
          data: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsRole"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsRole"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsRole"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      };
  "getB2bComponentsRole get /b2b-components-role/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_components_role */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_components_role */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      };
  "deleteB2bComponentsRole delete /b2b-components-role/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_components_role */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bComponentsRole patch /b2b-components-role/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_role */
          id: string;
        };
        body: components["schemas"]["B2bComponentsRole"];
        response: {
          data: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_role */
          id: string;
        };
        body: components["schemas"]["B2bComponentsRole"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_role */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsRole"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_role */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsRole"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"];
        };
        responseCode: 200;
      };
  "getB2bComponentsShoppingListList get /b2b-components-shopping-list":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bComponentsShoppingList"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bComponentsShoppingList"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-components-shopping-list?limit=25 */
            first?: unknown;
            /** @example /b2b-components-shopping-list?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-components-shopping-list?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-components-shopping-list?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bComponentsShoppingList post /b2b-components-shopping-list":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsShoppingList"];
        response: {
          data: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsShoppingList"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingList"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingList"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      };
  "getB2bComponentsShoppingListLineItemList get /b2b-components-shopping-list-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bComponentsShoppingListLineItem"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-components-shopping-list-line-item?limit=25 */
            first?: unknown;
            /** @example /b2b-components-shopping-list-line-item?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-components-shopping-list-line-item?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-components-shopping-list-line-item?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bComponentsShoppingListLineItem post /b2b-components-shopping-list-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsShoppingListLineItem"];
        response: {
          data: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bComponentsShoppingListLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      };
  "getB2bComponentsShoppingListLineItem get /b2b-components-shopping-list-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_components_shopping_list_line_item */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_components_shopping_list_line_item */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      };
  "deleteB2bComponentsShoppingListLineItem delete /b2b-components-shopping-list-line-item/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_components_shopping_list_line_item */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bComponentsShoppingListLineItem patch /b2b-components-shopping-list-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list_line_item */
          id: string;
        };
        body: components["schemas"]["B2bComponentsShoppingListLineItem"];
        response: {
          data: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list_line_item */
          id: string;
        };
        body: components["schemas"]["B2bComponentsShoppingListLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"];
        };
        responseCode: 200;
      };
  "getB2bComponentsShoppingList get /b2b-components-shopping-list/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_components_shopping_list */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_components_shopping_list */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      };
  "deleteB2bComponentsShoppingList delete /b2b-components-shopping-list/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_components_shopping_list */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bComponentsShoppingList patch /b2b-components-shopping-list/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list */
          id: string;
        };
        body: components["schemas"]["B2bComponentsShoppingList"];
        response: {
          data: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list */
          id: string;
        };
        body: components["schemas"]["B2bComponentsShoppingList"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingList"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_components_shopping_list */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bComponentsShoppingList"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"];
        };
        responseCode: 200;
      };
  "getB2bEmployeeList get /b2b-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bEmployee"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-employee?limit=25 */
            first?: unknown;
            /** @example /b2b-employee?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-employee?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-employee?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bEmployee post /b2b-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bEmployee"];
        response: {
          data: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bEmployee"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      };
  "getB2bEmployee get /b2b-employee/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_employee */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_employee */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      };
  "deleteB2bEmployee delete /b2b-employee/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_employee */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bEmployee patch /b2b-employee/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_employee */
          id: string;
        };
        body: components["schemas"]["B2bEmployee"];
        response: {
          data: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_employee */
          id: string;
        };
        body: components["schemas"]["B2bEmployee"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_employee */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_employee */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"];
        };
        responseCode: 200;
      };
  "getB2bOrderEmployeeList get /b2b-order-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bOrderEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bOrderEmployee"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-order-employee?limit=25 */
            first?: unknown;
            /** @example /b2b-order-employee?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-order-employee?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-order-employee?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bOrderEmployee post /b2b-order-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bOrderEmployee"];
        response: {
          data: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bOrderEmployee"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bOrderEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bOrderEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      };
  "getB2bOrderEmployee get /b2b-order-employee/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_order_employee */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_order_employee */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      };
  "deleteB2bOrderEmployee delete /b2b-order-employee/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_order_employee */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bOrderEmployee patch /b2b-order-employee/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_order_employee */
          id: string;
        };
        body: components["schemas"]["B2bOrderEmployee"];
        response: {
          data: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_order_employee */
          id: string;
        };
        body: components["schemas"]["B2bOrderEmployee"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_order_employee */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bOrderEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_order_employee */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bOrderEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"];
        };
        responseCode: 200;
      };
  "getB2bPermissionList get /b2b-permission":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["B2bPermission"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["B2bPermission"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /b2b-permission?limit=25 */
            first?: unknown;
            /** @example /b2b-permission?limit=25&page=11 */
            last?: unknown;
            /** @example /b2b-permission?limit=25&page=4 */
            next?: unknown;
            /** @example /b2b-permission?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createB2bPermission post /b2b-permission":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bPermission"];
        response: {
          data: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["B2bPermission"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bPermission"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["B2bPermission"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      };
  "getB2bPermission get /b2b-permission/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the b2b_permission */
          id: string;
        };
        response: {
          data: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the b2b_permission */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      };
  "deleteB2bPermission delete /b2b-permission/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the b2b_permission */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateB2bPermission patch /b2b-permission/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_permission */
          id: string;
        };
        body: components["schemas"]["B2bPermission"];
        response: {
          data: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_permission */
          id: string;
        };
        body: components["schemas"]["B2bPermission"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_permission */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bPermission"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the b2b_permission */
          id: string;
        };
        body: {
          data?: components["schemas"]["B2bPermission"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"];
        };
        responseCode: 200;
      };
  "getCategoryList get /category":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Category"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Category"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /category?limit=25 */
            first?: unknown;
            /** @example /category?limit=25&page=11 */
            last?: unknown;
            /** @example /category?limit=25&page=4 */
            next?: unknown;
            /** @example /category?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCategory post /category":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Category"];
        response: {
          data: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Category"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Category"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Category"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"];
        };
        responseCode: 200;
      };
  "getCategory get /category/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the category */
          id: string;
        };
        response: {
          data: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the category */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"];
        };
        responseCode: 200;
      };
  "deleteCategory delete /category/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the category */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCategory patch /category/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the category */
          id: string;
        };
        body: components["schemas"]["Category"];
        response: {
          data: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the category */
          id: string;
        };
        body: components["schemas"]["Category"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the category */
          id: string;
        };
        body: {
          data?: components["schemas"]["Category"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Category"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the category */
          id: string;
        };
        body: {
          data?: components["schemas"]["Category"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"];
        };
        responseCode: 200;
      };
  "getCmsBlockList get /cms-block":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CmsBlock"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CmsBlock"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /cms-block?limit=25 */
            first?: unknown;
            /** @example /cms-block?limit=25&page=11 */
            last?: unknown;
            /** @example /cms-block?limit=25&page=4 */
            next?: unknown;
            /** @example /cms-block?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCmsBlock post /cms-block":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsBlock"];
        response: {
          data: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsBlock"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      };
  "getCmsBlock get /cms-block/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the cms_block */
          id: string;
        };
        response: {
          data: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the cms_block */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      };
  "deleteCmsBlock delete /cms-block/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the cms_block */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCmsBlock patch /cms-block/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_block */
          id: string;
        };
        body: components["schemas"]["CmsBlock"];
        response: {
          data: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_block */
          id: string;
        };
        body: components["schemas"]["CmsBlock"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_block */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_block */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsBlock"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"];
        };
        responseCode: 200;
      };
  "getCmsPageList get /cms-page":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CmsPage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CmsPage"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /cms-page?limit=25 */
            first?: unknown;
            /** @example /cms-page?limit=25&page=11 */
            last?: unknown;
            /** @example /cms-page?limit=25&page=4 */
            next?: unknown;
            /** @example /cms-page?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCmsPage post /cms-page":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsPage"];
        response: {
          data: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsPage"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsPage"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsPage"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      };
  "getCmsPageActivityList get /cms-page-activity":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CmsPageActivity"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CmsPageActivity"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /cms-page-activity?limit=25 */
            first?: unknown;
            /** @example /cms-page-activity?limit=25&page=11 */
            last?: unknown;
            /** @example /cms-page-activity?limit=25&page=4 */
            next?: unknown;
            /** @example /cms-page-activity?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCmsPageActivity post /cms-page-activity":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsPageActivity"];
        response: {
          data: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsPageActivity"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsPageActivity"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsPageActivity"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      };
  "getCmsPageActivity get /cms-page-activity/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the cms_page_activity */
          id: string;
        };
        response: {
          data: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the cms_page_activity */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      };
  "deleteCmsPageActivity delete /cms-page-activity/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the cms_page_activity */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCmsPageActivity patch /cms-page-activity/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_activity */
          id: string;
        };
        body: components["schemas"]["CmsPageActivity"];
        response: {
          data: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_activity */
          id: string;
        };
        body: components["schemas"]["CmsPageActivity"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_activity */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsPageActivity"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_activity */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsPageActivity"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"];
        };
        responseCode: 200;
      };
  "getCmsPageDraftList get /cms-page-draft":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CmsPageDraft"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CmsPageDraft"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /cms-page-draft?limit=25 */
            first?: unknown;
            /** @example /cms-page-draft?limit=25&page=11 */
            last?: unknown;
            /** @example /cms-page-draft?limit=25&page=4 */
            next?: unknown;
            /** @example /cms-page-draft?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCmsPageDraft post /cms-page-draft":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsPageDraft"];
        response: {
          data: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsPageDraft"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsPageDraft"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsPageDraft"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      };
  "getCmsPageDraft get /cms-page-draft/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the cms_page_draft */
          id: string;
        };
        response: {
          data: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the cms_page_draft */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      };
  "deleteCmsPageDraft delete /cms-page-draft/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the cms_page_draft */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCmsPageDraft patch /cms-page-draft/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_draft */
          id: string;
        };
        body: components["schemas"]["CmsPageDraft"];
        response: {
          data: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_draft */
          id: string;
        };
        body: components["schemas"]["CmsPageDraft"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_draft */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsPageDraft"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page_draft */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsPageDraft"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"];
        };
        responseCode: 200;
      };
  "getCmsPage get /cms-page/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the cms_page */
          id: string;
        };
        response: {
          data: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the cms_page */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      };
  "deleteCmsPage delete /cms-page/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the cms_page */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCmsPage patch /cms-page/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page */
          id: string;
        };
        body: components["schemas"]["CmsPage"];
        response: {
          data: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page */
          id: string;
        };
        body: components["schemas"]["CmsPage"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsPage"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_page */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsPage"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"];
        };
        responseCode: 200;
      };
  "getCmsSectionList get /cms-section":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CmsSection"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CmsSection"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /cms-section?limit=25 */
            first?: unknown;
            /** @example /cms-section?limit=25&page=11 */
            last?: unknown;
            /** @example /cms-section?limit=25&page=4 */
            next?: unknown;
            /** @example /cms-section?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCmsSection post /cms-section":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsSection"];
        response: {
          data: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsSection"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsSection"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsSection"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      };
  "getCmsSection get /cms-section/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the cms_section */
          id: string;
        };
        response: {
          data: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the cms_section */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      };
  "deleteCmsSection delete /cms-section/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the cms_section */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCmsSection patch /cms-section/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_section */
          id: string;
        };
        body: components["schemas"]["CmsSection"];
        response: {
          data: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_section */
          id: string;
        };
        body: components["schemas"]["CmsSection"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_section */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsSection"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_section */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsSection"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"];
        };
        responseCode: 200;
      };
  "getCmsSlotList get /cms-slot":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CmsSlot"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CmsSlot"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /cms-slot?limit=25 */
            first?: unknown;
            /** @example /cms-slot?limit=25&page=11 */
            last?: unknown;
            /** @example /cms-slot?limit=25&page=4 */
            next?: unknown;
            /** @example /cms-slot?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCmsSlot post /cms-slot":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsSlot"];
        response: {
          data: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CmsSlot"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsSlot"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CmsSlot"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      };
  "getCmsSlot get /cms-slot/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the cms_slot */
          id: string;
        };
        response: {
          data: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the cms_slot */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      };
  "deleteCmsSlot delete /cms-slot/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the cms_slot */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCmsSlot patch /cms-slot/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_slot */
          id: string;
        };
        body: components["schemas"]["CmsSlot"];
        response: {
          data: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_slot */
          id: string;
        };
        body: components["schemas"]["CmsSlot"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_slot */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsSlot"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the cms_slot */
          id: string;
        };
        body: {
          data?: components["schemas"]["CmsSlot"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"];
        };
        responseCode: 200;
      };
  "getCountryList get /country":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Country"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Country"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /country?limit=25 */
            first?: unknown;
            /** @example /country?limit=25&page=11 */
            last?: unknown;
            /** @example /country?limit=25&page=4 */
            next?: unknown;
            /** @example /country?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCountry post /country":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Country"];
        response: {
          data: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Country"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Country"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Country"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"];
        };
        responseCode: 200;
      };
  "getCountryStateList get /country-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CountryState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CountryState"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /country-state?limit=25 */
            first?: unknown;
            /** @example /country-state?limit=25&page=11 */
            last?: unknown;
            /** @example /country-state?limit=25&page=4 */
            next?: unknown;
            /** @example /country-state?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCountryState post /country-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CountryState"];
        response: {
          data: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CountryState"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CountryState"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CountryState"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      };
  "getCountryState get /country-state/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the country_state */
          id: string;
        };
        response: {
          data: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the country_state */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      };
  "deleteCountryState delete /country-state/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the country_state */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCountryState patch /country-state/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country_state */
          id: string;
        };
        body: components["schemas"]["CountryState"];
        response: {
          data: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country_state */
          id: string;
        };
        body: components["schemas"]["CountryState"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country_state */
          id: string;
        };
        body: {
          data?: components["schemas"]["CountryState"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country_state */
          id: string;
        };
        body: {
          data?: components["schemas"]["CountryState"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"];
        };
        responseCode: 200;
      };
  "getCountry get /country/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the country */
          id: string;
        };
        response: {
          data: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the country */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"];
        };
        responseCode: 200;
      };
  "deleteCountry delete /country/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the country */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCountry patch /country/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country */
          id: string;
        };
        body: components["schemas"]["Country"];
        response: {
          data: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country */
          id: string;
        };
        body: components["schemas"]["Country"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country */
          id: string;
        };
        body: {
          data?: components["schemas"]["Country"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Country"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the country */
          id: string;
        };
        body: {
          data?: components["schemas"]["Country"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"];
        };
        responseCode: 200;
      };
  "getCurrencyList get /currency":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Currency"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Currency"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /currency?limit=25 */
            first?: unknown;
            /** @example /currency?limit=25&page=11 */
            last?: unknown;
            /** @example /currency?limit=25&page=4 */
            next?: unknown;
            /** @example /currency?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCurrency post /currency":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Currency"];
        response: {
          data: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Currency"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Currency"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Currency"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"];
        };
        responseCode: 200;
      };
  "getCurrencyCountryRoundingList get /currency-country-rounding":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CurrencyCountryRounding"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CurrencyCountryRounding"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /currency-country-rounding?limit=25 */
            first?: unknown;
            /** @example /currency-country-rounding?limit=25&page=11 */
            last?: unknown;
            /** @example /currency-country-rounding?limit=25&page=4 */
            next?: unknown;
            /** @example /currency-country-rounding?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCurrencyCountryRounding post /currency-country-rounding":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CurrencyCountryRounding"];
        response: {
          data: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CurrencyCountryRounding"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CurrencyCountryRounding"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CurrencyCountryRounding"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      };
  "getCurrencyCountryRounding get /currency-country-rounding/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the currency_country_rounding */
          id: string;
        };
        response: {
          data: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the currency_country_rounding */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      };
  "deleteCurrencyCountryRounding delete /currency-country-rounding/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the currency_country_rounding */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCurrencyCountryRounding patch /currency-country-rounding/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency_country_rounding */
          id: string;
        };
        body: components["schemas"]["CurrencyCountryRounding"];
        response: {
          data: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency_country_rounding */
          id: string;
        };
        body: components["schemas"]["CurrencyCountryRounding"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency_country_rounding */
          id: string;
        };
        body: {
          data?: components["schemas"]["CurrencyCountryRounding"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency_country_rounding */
          id: string;
        };
        body: {
          data?: components["schemas"]["CurrencyCountryRounding"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"];
        };
        responseCode: 200;
      };
  "getCurrency get /currency/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the currency */
          id: string;
        };
        response: {
          data: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the currency */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"];
        };
        responseCode: 200;
      };
  "deleteCurrency delete /currency/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the currency */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCurrency patch /currency/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency */
          id: string;
        };
        body: components["schemas"]["Currency"];
        response: {
          data: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency */
          id: string;
        };
        body: components["schemas"]["Currency"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency */
          id: string;
        };
        body: {
          data?: components["schemas"]["Currency"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Currency"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the currency */
          id: string;
        };
        body: {
          data?: components["schemas"]["Currency"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"];
        };
        responseCode: 200;
      };
  "getCustomEntityList get /custom-entity":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomEntity"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomEntity"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /custom-entity?limit=25 */
            first?: unknown;
            /** @example /custom-entity?limit=25&page=11 */
            last?: unknown;
            /** @example /custom-entity?limit=25&page=4 */
            next?: unknown;
            /** @example /custom-entity?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomEntity post /custom-entity":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomEntity"];
        response: {
          data: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomEntity"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomEntity"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomEntity"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      };
  "getCustomEntity get /custom-entity/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the custom_entity */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the custom_entity */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      };
  "deleteCustomEntity delete /custom-entity/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the custom_entity */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomEntity patch /custom-entity/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_entity */
          id: string;
        };
        body: components["schemas"]["CustomEntity"];
        response: {
          data: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_entity */
          id: string;
        };
        body: components["schemas"]["CustomEntity"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_entity */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomEntity"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_entity */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomEntity"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"];
        };
        responseCode: 200;
      };
  "getCustomFieldList get /custom-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomField"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /custom-field?limit=25 */
            first?: unknown;
            /** @example /custom-field?limit=25&page=11 */
            last?: unknown;
            /** @example /custom-field?limit=25&page=4 */
            next?: unknown;
            /** @example /custom-field?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomField post /custom-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomField"];
        response: {
          data: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      };
  "getCustomFieldSetList get /custom-field-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomFieldSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomFieldSet"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /custom-field-set?limit=25 */
            first?: unknown;
            /** @example /custom-field-set?limit=25&page=11 */
            last?: unknown;
            /** @example /custom-field-set?limit=25&page=4 */
            next?: unknown;
            /** @example /custom-field-set?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomFieldSet post /custom-field-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomFieldSet"];
        response: {
          data: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomFieldSet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomFieldSet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomFieldSet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      };
  "getCustomFieldSetRelationList get /custom-field-set-relation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomFieldSetRelation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomFieldSetRelation"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /custom-field-set-relation?limit=25 */
            first?: unknown;
            /** @example /custom-field-set-relation?limit=25&page=11 */
            last?: unknown;
            /** @example /custom-field-set-relation?limit=25&page=4 */
            next?: unknown;
            /** @example /custom-field-set-relation?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomFieldSetRelation post /custom-field-set-relation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomFieldSetRelation"];
        response: {
          data: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomFieldSetRelation"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomFieldSetRelation"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomFieldSetRelation"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      };
  "getCustomFieldSetRelation get /custom-field-set-relation/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the custom_field_set_relation */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the custom_field_set_relation */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      };
  "deleteCustomFieldSetRelation delete /custom-field-set-relation/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the custom_field_set_relation */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomFieldSetRelation patch /custom-field-set-relation/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set_relation */
          id: string;
        };
        body: components["schemas"]["CustomFieldSetRelation"];
        response: {
          data: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set_relation */
          id: string;
        };
        body: components["schemas"]["CustomFieldSetRelation"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set_relation */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomFieldSetRelation"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set_relation */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomFieldSetRelation"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"];
        };
        responseCode: 200;
      };
  "getCustomFieldSet get /custom-field-set/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the custom_field_set */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the custom_field_set */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      };
  "deleteCustomFieldSet delete /custom-field-set/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the custom_field_set */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomFieldSet patch /custom-field-set/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set */
          id: string;
        };
        body: components["schemas"]["CustomFieldSet"];
        response: {
          data: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set */
          id: string;
        };
        body: components["schemas"]["CustomFieldSet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomFieldSet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field_set */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomFieldSet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"];
        };
        responseCode: 200;
      };
  "getCustomField get /custom-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the custom_field */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the custom_field */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      };
  "deleteCustomField delete /custom-field/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the custom_field */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomField patch /custom-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field */
          id: string;
        };
        body: components["schemas"]["CustomField"];
        response: {
          data: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field */
          id: string;
        };
        body: components["schemas"]["CustomField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"];
        };
        responseCode: 200;
      };
  "getCustomPriceList get /custom-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomPrice"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /custom-price?limit=25 */
            first?: unknown;
            /** @example /custom-price?limit=25&page=11 */
            last?: unknown;
            /** @example /custom-price?limit=25&page=4 */
            next?: unknown;
            /** @example /custom-price?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomPrice post /custom-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomPrice"];
        response: {
          data: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      };
  "getCustomPrice get /custom-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the custom_price */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the custom_price */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      };
  "deleteCustomPrice delete /custom-price/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the custom_price */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomPrice patch /custom-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_price */
          id: string;
        };
        body: components["schemas"]["CustomPrice"];
        response: {
          data: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_price */
          id: string;
        };
        body: components["schemas"]["CustomPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the custom_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"];
        };
        responseCode: 200;
      };
  "getCustomerList get /customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Customer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Customer"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer?limit=25 */
            first?: unknown;
            /** @example /customer?limit=25&page=11 */
            last?: unknown;
            /** @example /customer?limit=25&page=4 */
            next?: unknown;
            /** @example /customer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomer post /customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Customer"];
        response: {
          data: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Customer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Customer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Customer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"];
        };
        responseCode: 200;
      };
  "getCustomerAddressList get /customer-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomerAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomerAddress"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer-address?limit=25 */
            first?: unknown;
            /** @example /customer-address?limit=25&page=11 */
            last?: unknown;
            /** @example /customer-address?limit=25&page=4 */
            next?: unknown;
            /** @example /customer-address?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomerAddress post /customer-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerAddress"];
        response: {
          data: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      };
  "getCustomerAddress get /customer-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer_address */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer_address */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      };
  "deleteCustomerAddress delete /customer-address/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer_address */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomerAddress patch /customer-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_address */
          id: string;
        };
        body: components["schemas"]["CustomerAddress"];
        response: {
          data: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_address */
          id: string;
        };
        body: components["schemas"]["CustomerAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"];
        };
        responseCode: 200;
      };
  "getCustomerGroupList get /customer-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomerGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomerGroup"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer-group?limit=25 */
            first?: unknown;
            /** @example /customer-group?limit=25&page=11 */
            last?: unknown;
            /** @example /customer-group?limit=25&page=4 */
            next?: unknown;
            /** @example /customer-group?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomerGroup post /customer-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerGroup"];
        response: {
          data: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      };
  "getCustomerGroup get /customer-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer_group */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer_group */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      };
  "deleteCustomerGroup delete /customer-group/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer_group */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomerGroup patch /customer-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_group */
          id: string;
        };
        body: components["schemas"]["CustomerGroup"];
        response: {
          data: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_group */
          id: string;
        };
        body: components["schemas"]["CustomerGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"];
        };
        responseCode: 200;
      };
  "getCustomerRecoveryList get /customer-recovery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomerRecovery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomerRecovery"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer-recovery?limit=25 */
            first?: unknown;
            /** @example /customer-recovery?limit=25&page=11 */
            last?: unknown;
            /** @example /customer-recovery?limit=25&page=4 */
            next?: unknown;
            /** @example /customer-recovery?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomerRecovery post /customer-recovery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerRecovery"];
        response: {
          data: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerRecovery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      };
  "getCustomerRecovery get /customer-recovery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer_recovery */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer_recovery */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      };
  "deleteCustomerRecovery delete /customer-recovery/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer_recovery */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomerRecovery patch /customer-recovery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_recovery */
          id: string;
        };
        body: components["schemas"]["CustomerRecovery"];
        response: {
          data: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_recovery */
          id: string;
        };
        body: components["schemas"]["CustomerRecovery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_recovery */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_recovery */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"];
        };
        responseCode: 200;
      };
  "getCustomerSpecificFeaturesList get /customer-specific-features":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomerSpecificFeatures"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomerSpecificFeatures"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer-specific-features?limit=25 */
            first?: unknown;
            /** @example /customer-specific-features?limit=25&page=11 */
            last?: unknown;
            /** @example /customer-specific-features?limit=25&page=4 */
            next?: unknown;
            /** @example /customer-specific-features?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomerSpecificFeatures post /customer-specific-features":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerSpecificFeatures"];
        response: {
          data: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerSpecificFeatures"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerSpecificFeatures"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerSpecificFeatures"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      };
  "getCustomerSpecificFeatures get /customer-specific-features/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer_specific_features */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer_specific_features */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      };
  "deleteCustomerSpecificFeatures delete /customer-specific-features/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer_specific_features */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomerSpecificFeatures patch /customer-specific-features/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_specific_features */
          id: string;
        };
        body: components["schemas"]["CustomerSpecificFeatures"];
        response: {
          data: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_specific_features */
          id: string;
        };
        body: components["schemas"]["CustomerSpecificFeatures"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_specific_features */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerSpecificFeatures"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_specific_features */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerSpecificFeatures"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"];
        };
        responseCode: 200;
      };
  "getCustomerWishlistList get /customer-wishlist":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomerWishlist"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomerWishlist"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer-wishlist?limit=25 */
            first?: unknown;
            /** @example /customer-wishlist?limit=25&page=11 */
            last?: unknown;
            /** @example /customer-wishlist?limit=25&page=4 */
            next?: unknown;
            /** @example /customer-wishlist?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomerWishlist post /customer-wishlist":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerWishlist"];
        response: {
          data: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerWishlist"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerWishlist"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerWishlist"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      };
  "getCustomerWishlistProductList get /customer-wishlist-product":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["CustomerWishlistProduct"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["CustomerWishlistProduct"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /customer-wishlist-product?limit=25 */
            first?: unknown;
            /** @example /customer-wishlist-product?limit=25&page=11 */
            last?: unknown;
            /** @example /customer-wishlist-product?limit=25&page=4 */
            next?: unknown;
            /** @example /customer-wishlist-product?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createCustomerWishlistProduct post /customer-wishlist-product":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerWishlistProduct"];
        response: {
          data: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["CustomerWishlistProduct"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerWishlistProduct"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["CustomerWishlistProduct"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      };
  "getCustomerWishlistProduct get /customer-wishlist-product/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer_wishlist_product */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer_wishlist_product */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      };
  "deleteCustomerWishlistProduct delete /customer-wishlist-product/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer_wishlist_product */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomerWishlistProduct patch /customer-wishlist-product/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist_product */
          id: string;
        };
        body: components["schemas"]["CustomerWishlistProduct"];
        response: {
          data: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist_product */
          id: string;
        };
        body: components["schemas"]["CustomerWishlistProduct"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist_product */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerWishlistProduct"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist_product */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerWishlistProduct"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"];
        };
        responseCode: 200;
      };
  "getCustomerWishlist get /customer-wishlist/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer_wishlist */
          id: string;
        };
        response: {
          data: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer_wishlist */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      };
  "deleteCustomerWishlist delete /customer-wishlist/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer_wishlist */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomerWishlist patch /customer-wishlist/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist */
          id: string;
        };
        body: components["schemas"]["CustomerWishlist"];
        response: {
          data: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist */
          id: string;
        };
        body: components["schemas"]["CustomerWishlist"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerWishlist"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer_wishlist */
          id: string;
        };
        body: {
          data?: components["schemas"]["CustomerWishlist"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"];
        };
        responseCode: 200;
      };
  "getCustomer get /customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the customer */
          id: string;
        };
        response: {
          data: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the customer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"];
        };
        responseCode: 200;
      };
  "deleteCustomer delete /customer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the customer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateCustomer patch /customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer */
          id: string;
        };
        body: components["schemas"]["Customer"];
        response: {
          data: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer */
          id: string;
        };
        body: components["schemas"]["Customer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["Customer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Customer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["Customer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"];
        };
        responseCode: 200;
      };
  "getDeliveryTimeList get /delivery-time":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["DeliveryTime"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["DeliveryTime"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /delivery-time?limit=25 */
            first?: unknown;
            /** @example /delivery-time?limit=25&page=11 */
            last?: unknown;
            /** @example /delivery-time?limit=25&page=4 */
            next?: unknown;
            /** @example /delivery-time?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createDeliveryTime post /delivery-time":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DeliveryTime"];
        response: {
          data: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DeliveryTime"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DeliveryTime"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DeliveryTime"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      };
  "getDeliveryTime get /delivery-time/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the delivery_time */
          id: string;
        };
        response: {
          data: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the delivery_time */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      };
  "deleteDeliveryTime delete /delivery-time/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the delivery_time */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateDeliveryTime patch /delivery-time/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the delivery_time */
          id: string;
        };
        body: components["schemas"]["DeliveryTime"];
        response: {
          data: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the delivery_time */
          id: string;
        };
        body: components["schemas"]["DeliveryTime"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the delivery_time */
          id: string;
        };
        body: {
          data?: components["schemas"]["DeliveryTime"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the delivery_time */
          id: string;
        };
        body: {
          data?: components["schemas"]["DeliveryTime"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"];
        };
        responseCode: 200;
      };
  "getDocumentList get /document":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Document"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Document"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /document?limit=25 */
            first?: unknown;
            /** @example /document?limit=25&page=11 */
            last?: unknown;
            /** @example /document?limit=25&page=4 */
            next?: unknown;
            /** @example /document?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createDocument post /document":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Document"];
        response: {
          data: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Document"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Document"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Document"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"];
        };
        responseCode: 200;
      };
  "getDocumentBaseConfigList get /document-base-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["DocumentBaseConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["DocumentBaseConfig"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /document-base-config?limit=25 */
            first?: unknown;
            /** @example /document-base-config?limit=25&page=11 */
            last?: unknown;
            /** @example /document-base-config?limit=25&page=4 */
            next?: unknown;
            /** @example /document-base-config?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createDocumentBaseConfig post /document-base-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DocumentBaseConfig"];
        response: {
          data: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DocumentBaseConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      };
  "getDocumentBaseConfigSalesChannelList get /document-base-config-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["DocumentBaseConfigSalesChannel"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /document-base-config-sales-channel?limit=25 */
            first?: unknown;
            /** @example /document-base-config-sales-channel?limit=25&page=11 */
            last?: unknown;
            /** @example /document-base-config-sales-channel?limit=25&page=4 */
            next?: unknown;
            /** @example /document-base-config-sales-channel?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createDocumentBaseConfigSalesChannel post /document-base-config-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DocumentBaseConfigSalesChannel"];
        response: {
          data: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DocumentBaseConfigSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      };
  "getDocumentBaseConfigSalesChannel get /document-base-config-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the document_base_config_sales_channel */
          id: string;
        };
        response: {
          data: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the document_base_config_sales_channel */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      };
  "deleteDocumentBaseConfigSalesChannel delete /document-base-config-sales-channel/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the document_base_config_sales_channel */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateDocumentBaseConfigSalesChannel patch /document-base-config-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config_sales_channel */
          id: string;
        };
        body: components["schemas"]["DocumentBaseConfigSalesChannel"];
        response: {
          data: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config_sales_channel */
          id: string;
        };
        body: components["schemas"]["DocumentBaseConfigSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"];
        };
        responseCode: 200;
      };
  "getDocumentBaseConfig get /document-base-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the document_base_config */
          id: string;
        };
        response: {
          data: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the document_base_config */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      };
  "deleteDocumentBaseConfig delete /document-base-config/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the document_base_config */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateDocumentBaseConfig patch /document-base-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config */
          id: string;
        };
        body: components["schemas"]["DocumentBaseConfig"];
        response: {
          data: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config */
          id: string;
        };
        body: components["schemas"]["DocumentBaseConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_base_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["DocumentBaseConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"];
        };
        responseCode: 200;
      };
  "getDocumentTypeList get /document-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["DocumentType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["DocumentType"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /document-type?limit=25 */
            first?: unknown;
            /** @example /document-type?limit=25&page=11 */
            last?: unknown;
            /** @example /document-type?limit=25&page=4 */
            next?: unknown;
            /** @example /document-type?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createDocumentType post /document-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DocumentType"];
        response: {
          data: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["DocumentType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DocumentType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["DocumentType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      };
  "getDocumentType get /document-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the document_type */
          id: string;
        };
        response: {
          data: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the document_type */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      };
  "deleteDocumentType delete /document-type/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the document_type */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateDocumentType patch /document-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_type */
          id: string;
        };
        body: components["schemas"]["DocumentType"];
        response: {
          data: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_type */
          id: string;
        };
        body: components["schemas"]["DocumentType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["DocumentType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["DocumentType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"];
        };
        responseCode: 200;
      };
  "getDocument get /document/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the document */
          id: string;
        };
        response: {
          data: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the document */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"];
        };
        responseCode: 200;
      };
  "deleteDocument delete /document/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the document */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateDocument patch /document/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document */
          id: string;
        };
        body: components["schemas"]["Document"];
        response: {
          data: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document */
          id: string;
        };
        body: components["schemas"]["Document"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document */
          id: string;
        };
        body: {
          data?: components["schemas"]["Document"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Document"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the document */
          id: string;
        };
        body: {
          data?: components["schemas"]["Document"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"];
        };
        responseCode: 200;
      };
  "getFlowList get /flow":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Flow"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Flow"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /flow?limit=25 */
            first?: unknown;
            /** @example /flow?limit=25&page=11 */
            last?: unknown;
            /** @example /flow?limit=25&page=4 */
            next?: unknown;
            /** @example /flow?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createFlow post /flow":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Flow"];
        response: {
          data: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Flow"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Flow"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Flow"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"];
        };
        responseCode: 200;
      };
  "getFlowSequenceList get /flow-sequence":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["FlowSequence"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["FlowSequence"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /flow-sequence?limit=25 */
            first?: unknown;
            /** @example /flow-sequence?limit=25&page=11 */
            last?: unknown;
            /** @example /flow-sequence?limit=25&page=4 */
            next?: unknown;
            /** @example /flow-sequence?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createFlowSequence post /flow-sequence":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["FlowSequence"];
        response: {
          data: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["FlowSequence"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["FlowSequence"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["FlowSequence"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      };
  "getFlowSequence get /flow-sequence/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the flow_sequence */
          id: string;
        };
        response: {
          data: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the flow_sequence */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      };
  "deleteFlowSequence delete /flow-sequence/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the flow_sequence */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateFlowSequence patch /flow-sequence/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_sequence */
          id: string;
        };
        body: components["schemas"]["FlowSequence"];
        response: {
          data: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_sequence */
          id: string;
        };
        body: components["schemas"]["FlowSequence"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_sequence */
          id: string;
        };
        body: {
          data?: components["schemas"]["FlowSequence"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_sequence */
          id: string;
        };
        body: {
          data?: components["schemas"]["FlowSequence"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"];
        };
        responseCode: 200;
      };
  "getFlowTemplateList get /flow-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["FlowTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["FlowTemplate"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /flow-template?limit=25 */
            first?: unknown;
            /** @example /flow-template?limit=25&page=11 */
            last?: unknown;
            /** @example /flow-template?limit=25&page=4 */
            next?: unknown;
            /** @example /flow-template?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createFlowTemplate post /flow-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["FlowTemplate"];
        response: {
          data: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["FlowTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["FlowTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["FlowTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      };
  "getFlowTemplate get /flow-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the flow_template */
          id: string;
        };
        response: {
          data: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the flow_template */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      };
  "deleteFlowTemplate delete /flow-template/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the flow_template */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateFlowTemplate patch /flow-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_template */
          id: string;
        };
        body: components["schemas"]["FlowTemplate"];
        response: {
          data: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_template */
          id: string;
        };
        body: components["schemas"]["FlowTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["FlowTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["FlowTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"];
        };
        responseCode: 200;
      };
  "getFlow get /flow/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the flow */
          id: string;
        };
        response: {
          data: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the flow */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"];
        };
        responseCode: 200;
      };
  "deleteFlow delete /flow/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the flow */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateFlow patch /flow/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow */
          id: string;
        };
        body: components["schemas"]["Flow"];
        response: {
          data: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow */
          id: string;
        };
        body: components["schemas"]["Flow"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow */
          id: string;
        };
        body: {
          data?: components["schemas"]["Flow"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Flow"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the flow */
          id: string;
        };
        body: {
          data?: components["schemas"]["Flow"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"];
        };
        responseCode: 200;
      };
  "getImportExportFileList get /import-export-file":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ImportExportFile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ImportExportFile"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /import-export-file?limit=25 */
            first?: unknown;
            /** @example /import-export-file?limit=25&page=11 */
            last?: unknown;
            /** @example /import-export-file?limit=25&page=4 */
            next?: unknown;
            /** @example /import-export-file?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createImportExportFile post /import-export-file":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ImportExportFile"];
        response: {
          data: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ImportExportFile"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ImportExportFile"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ImportExportFile"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      };
  "getImportExportFile get /import-export-file/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the import_export_file */
          id: string;
        };
        response: {
          data: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the import_export_file */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      };
  "deleteImportExportFile delete /import-export-file/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the import_export_file */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateImportExportFile patch /import-export-file/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_file */
          id: string;
        };
        body: components["schemas"]["ImportExportFile"];
        response: {
          data: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_file */
          id: string;
        };
        body: components["schemas"]["ImportExportFile"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_file */
          id: string;
        };
        body: {
          data?: components["schemas"]["ImportExportFile"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_file */
          id: string;
        };
        body: {
          data?: components["schemas"]["ImportExportFile"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"];
        };
        responseCode: 200;
      };
  "getImportExportLogList get /import-export-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ImportExportLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ImportExportLog"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /import-export-log?limit=25 */
            first?: unknown;
            /** @example /import-export-log?limit=25&page=11 */
            last?: unknown;
            /** @example /import-export-log?limit=25&page=4 */
            next?: unknown;
            /** @example /import-export-log?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createImportExportLog post /import-export-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ImportExportLog"];
        response: {
          data: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ImportExportLog"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ImportExportLog"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ImportExportLog"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      };
  "getImportExportLog get /import-export-log/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the import_export_log */
          id: string;
        };
        response: {
          data: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the import_export_log */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      };
  "deleteImportExportLog delete /import-export-log/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the import_export_log */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateImportExportLog patch /import-export-log/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_log */
          id: string;
        };
        body: components["schemas"]["ImportExportLog"];
        response: {
          data: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_log */
          id: string;
        };
        body: components["schemas"]["ImportExportLog"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_log */
          id: string;
        };
        body: {
          data?: components["schemas"]["ImportExportLog"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_log */
          id: string;
        };
        body: {
          data?: components["schemas"]["ImportExportLog"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"];
        };
        responseCode: 200;
      };
  "getImportExportProfileList get /import-export-profile":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ImportExportProfile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ImportExportProfile"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /import-export-profile?limit=25 */
            first?: unknown;
            /** @example /import-export-profile?limit=25&page=11 */
            last?: unknown;
            /** @example /import-export-profile?limit=25&page=4 */
            next?: unknown;
            /** @example /import-export-profile?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createImportExportProfile post /import-export-profile":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ImportExportProfile"];
        response: {
          data: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ImportExportProfile"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ImportExportProfile"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ImportExportProfile"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      };
  "getImportExportProfile get /import-export-profile/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the import_export_profile */
          id: string;
        };
        response: {
          data: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the import_export_profile */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      };
  "deleteImportExportProfile delete /import-export-profile/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the import_export_profile */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateImportExportProfile patch /import-export-profile/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_profile */
          id: string;
        };
        body: components["schemas"]["ImportExportProfile"];
        response: {
          data: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_profile */
          id: string;
        };
        body: components["schemas"]["ImportExportProfile"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_profile */
          id: string;
        };
        body: {
          data?: components["schemas"]["ImportExportProfile"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the import_export_profile */
          id: string;
        };
        body: {
          data?: components["schemas"]["ImportExportProfile"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"];
        };
        responseCode: 200;
      };
  "getIntegrationList get /integration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Integration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Integration"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /integration?limit=25 */
            first?: unknown;
            /** @example /integration?limit=25&page=11 */
            last?: unknown;
            /** @example /integration?limit=25&page=4 */
            next?: unknown;
            /** @example /integration?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createIntegration post /integration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Integration"];
        response: {
          data: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Integration"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Integration"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Integration"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"];
        };
        responseCode: 200;
      };
  "getIntegration get /integration/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the integration */
          id: string;
        };
        response: {
          data: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the integration */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"];
        };
        responseCode: 200;
      };
  "deleteIntegration delete /integration/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the integration */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateIntegration patch /integration/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the integration */
          id: string;
        };
        body: components["schemas"]["Integration"];
        response: {
          data: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the integration */
          id: string;
        };
        body: components["schemas"]["Integration"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the integration */
          id: string;
        };
        body: {
          data?: components["schemas"]["Integration"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Integration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the integration */
          id: string;
        };
        body: {
          data?: components["schemas"]["Integration"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"];
        };
        responseCode: 200;
      };
  "getLandingPageList get /landing-page":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["LandingPage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["LandingPage"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /landing-page?limit=25 */
            first?: unknown;
            /** @example /landing-page?limit=25&page=11 */
            last?: unknown;
            /** @example /landing-page?limit=25&page=4 */
            next?: unknown;
            /** @example /landing-page?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createLandingPage post /landing-page":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["LandingPage"];
        response: {
          data: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["LandingPage"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["LandingPage"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["LandingPage"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      };
  "getLandingPage get /landing-page/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the landing_page */
          id: string;
        };
        response: {
          data: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the landing_page */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      };
  "deleteLandingPage delete /landing-page/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the landing_page */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateLandingPage patch /landing-page/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the landing_page */
          id: string;
        };
        body: components["schemas"]["LandingPage"];
        response: {
          data: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the landing_page */
          id: string;
        };
        body: components["schemas"]["LandingPage"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the landing_page */
          id: string;
        };
        body: {
          data?: components["schemas"]["LandingPage"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the landing_page */
          id: string;
        };
        body: {
          data?: components["schemas"]["LandingPage"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"];
        };
        responseCode: 200;
      };
  "getLanguageList get /language":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Language"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Language"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /language?limit=25 */
            first?: unknown;
            /** @example /language?limit=25&page=11 */
            last?: unknown;
            /** @example /language?limit=25&page=4 */
            next?: unknown;
            /** @example /language?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createLanguage post /language":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Language"];
        response: {
          data: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Language"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Language"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Language"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"];
        };
        responseCode: 200;
      };
  "getLanguage get /language/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the language */
          id: string;
        };
        response: {
          data: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the language */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"];
        };
        responseCode: 200;
      };
  "deleteLanguage delete /language/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the language */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateLanguage patch /language/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the language */
          id: string;
        };
        body: components["schemas"]["Language"];
        response: {
          data: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the language */
          id: string;
        };
        body: components["schemas"]["Language"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the language */
          id: string;
        };
        body: {
          data?: components["schemas"]["Language"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Language"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the language */
          id: string;
        };
        body: {
          data?: components["schemas"]["Language"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"];
        };
        responseCode: 200;
      };
  "getLocaleList get /locale":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Locale"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Locale"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /locale?limit=25 */
            first?: unknown;
            /** @example /locale?limit=25&page=11 */
            last?: unknown;
            /** @example /locale?limit=25&page=4 */
            next?: unknown;
            /** @example /locale?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createLocale post /locale":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Locale"];
        response: {
          data: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Locale"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Locale"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Locale"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"];
        };
        responseCode: 200;
      };
  "getLocale get /locale/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the locale */
          id: string;
        };
        response: {
          data: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the locale */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"];
        };
        responseCode: 200;
      };
  "deleteLocale delete /locale/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the locale */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateLocale patch /locale/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the locale */
          id: string;
        };
        body: components["schemas"]["Locale"];
        response: {
          data: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the locale */
          id: string;
        };
        body: components["schemas"]["Locale"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the locale */
          id: string;
        };
        body: {
          data?: components["schemas"]["Locale"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Locale"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the locale */
          id: string;
        };
        body: {
          data?: components["schemas"]["Locale"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"];
        };
        responseCode: 200;
      };
  "getLogEntryList get /log-entry":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["LogEntry"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["LogEntry"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /log-entry?limit=25 */
            first?: unknown;
            /** @example /log-entry?limit=25&page=11 */
            last?: unknown;
            /** @example /log-entry?limit=25&page=4 */
            next?: unknown;
            /** @example /log-entry?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createLogEntry post /log-entry":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["LogEntry"];
        response: {
          data: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["LogEntry"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["LogEntry"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["LogEntry"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      };
  "getLogEntry get /log-entry/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the log_entry */
          id: string;
        };
        response: {
          data: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the log_entry */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      };
  "deleteLogEntry delete /log-entry/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the log_entry */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateLogEntry patch /log-entry/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the log_entry */
          id: string;
        };
        body: components["schemas"]["LogEntry"];
        response: {
          data: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the log_entry */
          id: string;
        };
        body: components["schemas"]["LogEntry"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the log_entry */
          id: string;
        };
        body: {
          data?: components["schemas"]["LogEntry"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the log_entry */
          id: string;
        };
        body: {
          data?: components["schemas"]["LogEntry"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"];
        };
        responseCode: 200;
      };
  "getMailHeaderFooterList get /mail-header-footer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MailHeaderFooter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MailHeaderFooter"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /mail-header-footer?limit=25 */
            first?: unknown;
            /** @example /mail-header-footer?limit=25&page=11 */
            last?: unknown;
            /** @example /mail-header-footer?limit=25&page=4 */
            next?: unknown;
            /** @example /mail-header-footer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMailHeaderFooter post /mail-header-footer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MailHeaderFooter"];
        response: {
          data: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MailHeaderFooter"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MailHeaderFooter"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MailHeaderFooter"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      };
  "getMailHeaderFooter get /mail-header-footer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the mail_header_footer */
          id: string;
        };
        response: {
          data: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the mail_header_footer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      };
  "deleteMailHeaderFooter delete /mail-header-footer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the mail_header_footer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMailHeaderFooter patch /mail-header-footer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_header_footer */
          id: string;
        };
        body: components["schemas"]["MailHeaderFooter"];
        response: {
          data: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_header_footer */
          id: string;
        };
        body: components["schemas"]["MailHeaderFooter"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_header_footer */
          id: string;
        };
        body: {
          data?: components["schemas"]["MailHeaderFooter"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_header_footer */
          id: string;
        };
        body: {
          data?: components["schemas"]["MailHeaderFooter"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"];
        };
        responseCode: 200;
      };
  "getMailTemplateList get /mail-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MailTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MailTemplate"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /mail-template?limit=25 */
            first?: unknown;
            /** @example /mail-template?limit=25&page=11 */
            last?: unknown;
            /** @example /mail-template?limit=25&page=4 */
            next?: unknown;
            /** @example /mail-template?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMailTemplate post /mail-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MailTemplate"];
        response: {
          data: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MailTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MailTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MailTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      };
  "getMailTemplateTypeList get /mail-template-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MailTemplateType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MailTemplateType"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /mail-template-type?limit=25 */
            first?: unknown;
            /** @example /mail-template-type?limit=25&page=11 */
            last?: unknown;
            /** @example /mail-template-type?limit=25&page=4 */
            next?: unknown;
            /** @example /mail-template-type?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMailTemplateType post /mail-template-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MailTemplateType"];
        response: {
          data: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MailTemplateType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MailTemplateType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MailTemplateType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      };
  "getMailTemplateType get /mail-template-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the mail_template_type */
          id: string;
        };
        response: {
          data: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the mail_template_type */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      };
  "deleteMailTemplateType delete /mail-template-type/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the mail_template_type */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMailTemplateType patch /mail-template-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template_type */
          id: string;
        };
        body: components["schemas"]["MailTemplateType"];
        response: {
          data: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template_type */
          id: string;
        };
        body: components["schemas"]["MailTemplateType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["MailTemplateType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["MailTemplateType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"];
        };
        responseCode: 200;
      };
  "getMailTemplate get /mail-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the mail_template */
          id: string;
        };
        response: {
          data: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the mail_template */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      };
  "deleteMailTemplate delete /mail-template/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the mail_template */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMailTemplate patch /mail-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template */
          id: string;
        };
        body: components["schemas"]["MailTemplate"];
        response: {
          data: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template */
          id: string;
        };
        body: components["schemas"]["MailTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["MailTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the mail_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["MailTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"];
        };
        responseCode: 200;
      };
  "getMainCategoryList get /main-category":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MainCategory"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MainCategory"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /main-category?limit=25 */
            first?: unknown;
            /** @example /main-category?limit=25&page=11 */
            last?: unknown;
            /** @example /main-category?limit=25&page=4 */
            next?: unknown;
            /** @example /main-category?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMainCategory post /main-category":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MainCategory"];
        response: {
          data: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MainCategory"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MainCategory"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MainCategory"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      };
  "getMainCategory get /main-category/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the main_category */
          id: string;
        };
        response: {
          data: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the main_category */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      };
  "deleteMainCategory delete /main-category/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the main_category */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMainCategory patch /main-category/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the main_category */
          id: string;
        };
        body: components["schemas"]["MainCategory"];
        response: {
          data: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the main_category */
          id: string;
        };
        body: components["schemas"]["MainCategory"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the main_category */
          id: string;
        };
        body: {
          data?: components["schemas"]["MainCategory"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the main_category */
          id: string;
        };
        body: {
          data?: components["schemas"]["MainCategory"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"];
        };
        responseCode: 200;
      };
  "getMediaList get /media":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Media"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Media"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media?limit=25 */
            first?: unknown;
            /** @example /media?limit=25&page=11 */
            last?: unknown;
            /** @example /media?limit=25&page=4 */
            next?: unknown;
            /** @example /media?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMedia post /media":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Media"];
        response: {
          data: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Media"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Media"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Media"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"];
        };
        responseCode: 200;
      };
  "getMediaAiTagList get /media-ai-tag":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MediaAiTag"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MediaAiTag"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media-ai-tag?limit=25 */
            first?: unknown;
            /** @example /media-ai-tag?limit=25&page=11 */
            last?: unknown;
            /** @example /media-ai-tag?limit=25&page=4 */
            next?: unknown;
            /** @example /media-ai-tag?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMediaAiTag post /media-ai-tag":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaAiTag"];
        response: {
          data: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaAiTag"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaAiTag"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaAiTag"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      };
  "getMediaAiTag get /media-ai-tag/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media_ai_tag */
          id: string;
        };
        response: {
          data: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media_ai_tag */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      };
  "deleteMediaAiTag delete /media-ai-tag/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media_ai_tag */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMediaAiTag patch /media-ai-tag/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_ai_tag */
          id: string;
        };
        body: components["schemas"]["MediaAiTag"];
        response: {
          data: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_ai_tag */
          id: string;
        };
        body: components["schemas"]["MediaAiTag"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_ai_tag */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaAiTag"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_ai_tag */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaAiTag"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"];
        };
        responseCode: 200;
      };
  "getMediaDefaultFolderList get /media-default-folder":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MediaDefaultFolder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MediaDefaultFolder"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media-default-folder?limit=25 */
            first?: unknown;
            /** @example /media-default-folder?limit=25&page=11 */
            last?: unknown;
            /** @example /media-default-folder?limit=25&page=4 */
            next?: unknown;
            /** @example /media-default-folder?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMediaDefaultFolder post /media-default-folder":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaDefaultFolder"];
        response: {
          data: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaDefaultFolder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaDefaultFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaDefaultFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      };
  "getMediaDefaultFolder get /media-default-folder/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media_default_folder */
          id: string;
        };
        response: {
          data: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media_default_folder */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      };
  "deleteMediaDefaultFolder delete /media-default-folder/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media_default_folder */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMediaDefaultFolder patch /media-default-folder/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_default_folder */
          id: string;
        };
        body: components["schemas"]["MediaDefaultFolder"];
        response: {
          data: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_default_folder */
          id: string;
        };
        body: components["schemas"]["MediaDefaultFolder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_default_folder */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaDefaultFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_default_folder */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaDefaultFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"];
        };
        responseCode: 200;
      };
  "getMediaFolderList get /media-folder":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MediaFolder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MediaFolder"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media-folder?limit=25 */
            first?: unknown;
            /** @example /media-folder?limit=25&page=11 */
            last?: unknown;
            /** @example /media-folder?limit=25&page=4 */
            next?: unknown;
            /** @example /media-folder?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMediaFolder post /media-folder":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaFolder"];
        response: {
          data: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaFolder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      };
  "getMediaFolderConfigurationList get /media-folder-configuration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MediaFolderConfiguration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MediaFolderConfiguration"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media-folder-configuration?limit=25 */
            first?: unknown;
            /** @example /media-folder-configuration?limit=25&page=11 */
            last?: unknown;
            /** @example /media-folder-configuration?limit=25&page=4 */
            next?: unknown;
            /** @example /media-folder-configuration?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMediaFolderConfiguration post /media-folder-configuration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaFolderConfiguration"];
        response: {
          data: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaFolderConfiguration"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaFolderConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaFolderConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      };
  "getMediaFolderConfiguration get /media-folder-configuration/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media_folder_configuration */
          id: string;
        };
        response: {
          data: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media_folder_configuration */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      };
  "deleteMediaFolderConfiguration delete /media-folder-configuration/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media_folder_configuration */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMediaFolderConfiguration patch /media-folder-configuration/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder_configuration */
          id: string;
        };
        body: components["schemas"]["MediaFolderConfiguration"];
        response: {
          data: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder_configuration */
          id: string;
        };
        body: components["schemas"]["MediaFolderConfiguration"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder_configuration */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaFolderConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder_configuration */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaFolderConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"];
        };
        responseCode: 200;
      };
  "getMediaFolder get /media-folder/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media_folder */
          id: string;
        };
        response: {
          data: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media_folder */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      };
  "deleteMediaFolder delete /media-folder/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media_folder */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMediaFolder patch /media-folder/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder */
          id: string;
        };
        body: components["schemas"]["MediaFolder"];
        response: {
          data: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder */
          id: string;
        };
        body: components["schemas"]["MediaFolder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_folder */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaFolder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"];
        };
        responseCode: 200;
      };
  "getMediaThumbnailList get /media-thumbnail":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MediaThumbnail"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MediaThumbnail"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media-thumbnail?limit=25 */
            first?: unknown;
            /** @example /media-thumbnail?limit=25&page=11 */
            last?: unknown;
            /** @example /media-thumbnail?limit=25&page=4 */
            next?: unknown;
            /** @example /media-thumbnail?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMediaThumbnail post /media-thumbnail":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaThumbnail"];
        response: {
          data: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaThumbnail"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaThumbnail"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaThumbnail"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      };
  "getMediaThumbnailSizeList get /media-thumbnail-size":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["MediaThumbnailSize"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["MediaThumbnailSize"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /media-thumbnail-size?limit=25 */
            first?: unknown;
            /** @example /media-thumbnail-size?limit=25&page=11 */
            last?: unknown;
            /** @example /media-thumbnail-size?limit=25&page=4 */
            next?: unknown;
            /** @example /media-thumbnail-size?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createMediaThumbnailSize post /media-thumbnail-size":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaThumbnailSize"];
        response: {
          data: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["MediaThumbnailSize"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaThumbnailSize"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["MediaThumbnailSize"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      };
  "getMediaThumbnailSize get /media-thumbnail-size/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media_thumbnail_size */
          id: string;
        };
        response: {
          data: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media_thumbnail_size */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      };
  "deleteMediaThumbnailSize delete /media-thumbnail-size/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media_thumbnail_size */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMediaThumbnailSize patch /media-thumbnail-size/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail_size */
          id: string;
        };
        body: components["schemas"]["MediaThumbnailSize"];
        response: {
          data: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail_size */
          id: string;
        };
        body: components["schemas"]["MediaThumbnailSize"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail_size */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaThumbnailSize"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail_size */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaThumbnailSize"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"];
        };
        responseCode: 200;
      };
  "getMediaThumbnail get /media-thumbnail/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media_thumbnail */
          id: string;
        };
        response: {
          data: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media_thumbnail */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      };
  "deleteMediaThumbnail delete /media-thumbnail/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media_thumbnail */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMediaThumbnail patch /media-thumbnail/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail */
          id: string;
        };
        body: components["schemas"]["MediaThumbnail"];
        response: {
          data: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail */
          id: string;
        };
        body: components["schemas"]["MediaThumbnail"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaThumbnail"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media_thumbnail */
          id: string;
        };
        body: {
          data?: components["schemas"]["MediaThumbnail"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"];
        };
        responseCode: 200;
      };
  "getMedia get /media/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the media */
          id: string;
        };
        response: {
          data: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the media */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"];
        };
        responseCode: 200;
      };
  "deleteMedia delete /media/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the media */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateMedia patch /media/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media */
          id: string;
        };
        body: components["schemas"]["Media"];
        response: {
          data: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media */
          id: string;
        };
        body: components["schemas"]["Media"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media */
          id: string;
        };
        body: {
          data?: components["schemas"]["Media"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Media"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the media */
          id: string;
        };
        body: {
          data?: components["schemas"]["Media"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"];
        };
        responseCode: 200;
      };
  "getNewsletterRecipientList get /newsletter-recipient":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["NewsletterRecipient"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["NewsletterRecipient"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /newsletter-recipient?limit=25 */
            first?: unknown;
            /** @example /newsletter-recipient?limit=25&page=11 */
            last?: unknown;
            /** @example /newsletter-recipient?limit=25&page=4 */
            next?: unknown;
            /** @example /newsletter-recipient?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createNewsletterRecipient post /newsletter-recipient":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NewsletterRecipient"];
        response: {
          data: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NewsletterRecipient"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NewsletterRecipient"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NewsletterRecipient"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      };
  "getNewsletterRecipient get /newsletter-recipient/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the newsletter_recipient */
          id: string;
        };
        response: {
          data: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the newsletter_recipient */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      };
  "deleteNewsletterRecipient delete /newsletter-recipient/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the newsletter_recipient */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateNewsletterRecipient patch /newsletter-recipient/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the newsletter_recipient */
          id: string;
        };
        body: components["schemas"]["NewsletterRecipient"];
        response: {
          data: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the newsletter_recipient */
          id: string;
        };
        body: components["schemas"]["NewsletterRecipient"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the newsletter_recipient */
          id: string;
        };
        body: {
          data?: components["schemas"]["NewsletterRecipient"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the newsletter_recipient */
          id: string;
        };
        body: {
          data?: components["schemas"]["NewsletterRecipient"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"];
        };
        responseCode: 200;
      };
  "getNotificationList get /notification":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Notification"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Notification"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /notification?limit=25 */
            first?: unknown;
            /** @example /notification?limit=25&page=11 */
            last?: unknown;
            /** @example /notification?limit=25&page=4 */
            next?: unknown;
            /** @example /notification?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createNotification post /notification":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Notification"];
        response: {
          data: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Notification"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Notification"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Notification"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"];
        };
        responseCode: 200;
      };
  "getNotification get /notification/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the notification */
          id: string;
        };
        response: {
          data: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the notification */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"];
        };
        responseCode: 200;
      };
  "deleteNotification delete /notification/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the notification */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateNotification patch /notification/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the notification */
          id: string;
        };
        body: components["schemas"]["Notification"];
        response: {
          data: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the notification */
          id: string;
        };
        body: components["schemas"]["Notification"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the notification */
          id: string;
        };
        body: {
          data?: components["schemas"]["Notification"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Notification"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the notification */
          id: string;
        };
        body: {
          data?: components["schemas"]["Notification"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"];
        };
        responseCode: 200;
      };
  "getNumberRangeList get /number-range":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["NumberRange"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["NumberRange"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /number-range?limit=25 */
            first?: unknown;
            /** @example /number-range?limit=25&page=11 */
            last?: unknown;
            /** @example /number-range?limit=25&page=4 */
            next?: unknown;
            /** @example /number-range?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createNumberRange post /number-range":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRange"];
        response: {
          data: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRange"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRange"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRange"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      };
  "getNumberRangeSalesChannelList get /number-range-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["NumberRangeSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["NumberRangeSalesChannel"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /number-range-sales-channel?limit=25 */
            first?: unknown;
            /** @example /number-range-sales-channel?limit=25&page=11 */
            last?: unknown;
            /** @example /number-range-sales-channel?limit=25&page=4 */
            next?: unknown;
            /** @example /number-range-sales-channel?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createNumberRangeSalesChannel post /number-range-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRangeSalesChannel"];
        response: {
          data: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRangeSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRangeSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRangeSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      };
  "getNumberRangeSalesChannel get /number-range-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the number_range_sales_channel */
          id: string;
        };
        response: {
          data: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the number_range_sales_channel */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      };
  "deleteNumberRangeSalesChannel delete /number-range-sales-channel/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the number_range_sales_channel */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateNumberRangeSalesChannel patch /number-range-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_sales_channel */
          id: string;
        };
        body: components["schemas"]["NumberRangeSalesChannel"];
        response: {
          data: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_sales_channel */
          id: string;
        };
        body: components["schemas"]["NumberRangeSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRangeSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRangeSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"];
        };
        responseCode: 200;
      };
  "getNumberRangeStateList get /number-range-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["NumberRangeState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["NumberRangeState"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /number-range-state?limit=25 */
            first?: unknown;
            /** @example /number-range-state?limit=25&page=11 */
            last?: unknown;
            /** @example /number-range-state?limit=25&page=4 */
            next?: unknown;
            /** @example /number-range-state?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createNumberRangeState post /number-range-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRangeState"];
        response: {
          data: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRangeState"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRangeState"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRangeState"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      };
  "getNumberRangeState get /number-range-state/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the number_range_state */
          id: string;
        };
        response: {
          data: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the number_range_state */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      };
  "deleteNumberRangeState delete /number-range-state/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the number_range_state */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateNumberRangeState patch /number-range-state/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_state */
          id: string;
        };
        body: components["schemas"]["NumberRangeState"];
        response: {
          data: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_state */
          id: string;
        };
        body: components["schemas"]["NumberRangeState"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_state */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRangeState"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_state */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRangeState"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"];
        };
        responseCode: 200;
      };
  "getNumberRangeTypeList get /number-range-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["NumberRangeType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["NumberRangeType"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /number-range-type?limit=25 */
            first?: unknown;
            /** @example /number-range-type?limit=25&page=11 */
            last?: unknown;
            /** @example /number-range-type?limit=25&page=4 */
            next?: unknown;
            /** @example /number-range-type?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createNumberRangeType post /number-range-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRangeType"];
        response: {
          data: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["NumberRangeType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRangeType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["NumberRangeType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      };
  "getNumberRangeType get /number-range-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the number_range_type */
          id: string;
        };
        response: {
          data: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the number_range_type */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      };
  "deleteNumberRangeType delete /number-range-type/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the number_range_type */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateNumberRangeType patch /number-range-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_type */
          id: string;
        };
        body: components["schemas"]["NumberRangeType"];
        response: {
          data: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_type */
          id: string;
        };
        body: components["schemas"]["NumberRangeType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRangeType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRangeType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"];
        };
        responseCode: 200;
      };
  "getNumberRange get /number-range/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the number_range */
          id: string;
        };
        response: {
          data: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the number_range */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      };
  "deleteNumberRange delete /number-range/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the number_range */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateNumberRange patch /number-range/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range */
          id: string;
        };
        body: components["schemas"]["NumberRange"];
        response: {
          data: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range */
          id: string;
        };
        body: components["schemas"]["NumberRange"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRange"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the number_range */
          id: string;
        };
        body: {
          data?: components["schemas"]["NumberRange"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"];
        };
        responseCode: 200;
      };
  "token post /oauth/token": {
    contentType?: "application/json";
    accept?: "application/json";
    body:
      | components["schemas"]["OAuthPasswordGrant"]
      | components["schemas"]["OAuthRefreshTokenGrant"]
      | components["schemas"]["OAuthClientCredentialsGrant"];
    response: {
      /** The access token that can be used for subsequent requests */
      access_token: string;
      /** Token lifetime in seconds. */
      expires_in: number;
      /** The refresh token that can be used to refresh the access token. This field is not returned on grant type `refresh_token`. */
      refresh_token?: string;
      /** Type of the token. */
      token_type: string;
    };
    responseCode: 200;
  };
  "getOrderList get /order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Order"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Order"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order?limit=25 */
            first?: unknown;
            /** @example /order?limit=25&page=11 */
            last?: unknown;
            /** @example /order?limit=25&page=4 */
            next?: unknown;
            /** @example /order?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrder post /order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Order"];
        response: {
          data: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Order"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Order"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Order"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"];
        };
        responseCode: 200;
      };
  "getOrderAddressList get /order-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderAddress"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-address?limit=25 */
            first?: unknown;
            /** @example /order-address?limit=25&page=11 */
            last?: unknown;
            /** @example /order-address?limit=25&page=4 */
            next?: unknown;
            /** @example /order-address?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderAddress post /order-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderAddress"];
        response: {
          data: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      };
  "getOrderAddress get /order-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_address */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_address */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      };
  "deleteOrderAddress delete /order-address/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_address */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderAddress patch /order-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_address */
          id: string;
        };
        body: components["schemas"]["OrderAddress"];
        response: {
          data: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_address */
          id: string;
        };
        body: components["schemas"]["OrderAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"];
        };
        responseCode: 200;
      };
  "getOrderCustomerList get /order-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderCustomer"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-customer?limit=25 */
            first?: unknown;
            /** @example /order-customer?limit=25&page=11 */
            last?: unknown;
            /** @example /order-customer?limit=25&page=4 */
            next?: unknown;
            /** @example /order-customer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderCustomer post /order-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderCustomer"];
        response: {
          data: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      };
  "getOrderCustomer get /order-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_customer */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_customer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      };
  "deleteOrderCustomer delete /order-customer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_customer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderCustomer patch /order-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_customer */
          id: string;
        };
        body: components["schemas"]["OrderCustomer"];
        response: {
          data: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_customer */
          id: string;
        };
        body: components["schemas"]["OrderCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"];
        };
        responseCode: 200;
      };
  "getOrderDeliveryList get /order-delivery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderDelivery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderDelivery"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-delivery?limit=25 */
            first?: unknown;
            /** @example /order-delivery?limit=25&page=11 */
            last?: unknown;
            /** @example /order-delivery?limit=25&page=4 */
            next?: unknown;
            /** @example /order-delivery?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderDelivery post /order-delivery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderDelivery"];
        response: {
          data: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderDelivery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      };
  "getOrderDeliveryPositionList get /order-delivery-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderDeliveryPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderDeliveryPosition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-delivery-position?limit=25 */
            first?: unknown;
            /** @example /order-delivery-position?limit=25&page=11 */
            last?: unknown;
            /** @example /order-delivery-position?limit=25&page=4 */
            next?: unknown;
            /** @example /order-delivery-position?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderDeliveryPosition post /order-delivery-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderDeliveryPosition"];
        response: {
          data: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderDeliveryPosition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      };
  "getOrderDeliveryPosition get /order-delivery-position/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_delivery_position */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_delivery_position */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      };
  "deleteOrderDeliveryPosition delete /order-delivery-position/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_delivery_position */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderDeliveryPosition patch /order-delivery-position/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery_position */
          id: string;
        };
        body: components["schemas"]["OrderDeliveryPosition"];
        response: {
          data: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery_position */
          id: string;
        };
        body: components["schemas"]["OrderDeliveryPosition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery_position */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery_position */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"];
        };
        responseCode: 200;
      };
  "getOrderDelivery get /order-delivery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_delivery */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_delivery */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      };
  "deleteOrderDelivery delete /order-delivery/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_delivery */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderDelivery patch /order-delivery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery */
          id: string;
        };
        body: components["schemas"]["OrderDelivery"];
        response: {
          data: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery */
          id: string;
        };
        body: components["schemas"]["OrderDelivery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_delivery */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"];
        };
        responseCode: 200;
      };
  "getOrderLineItemList get /order-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderLineItem"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-line-item?limit=25 */
            first?: unknown;
            /** @example /order-line-item?limit=25&page=11 */
            last?: unknown;
            /** @example /order-line-item?limit=25&page=4 */
            next?: unknown;
            /** @example /order-line-item?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderLineItem post /order-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderLineItem"];
        response: {
          data: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      };
  "getOrderLineItemDownloadList get /order-line-item-download":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderLineItemDownload"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderLineItemDownload"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-line-item-download?limit=25 */
            first?: unknown;
            /** @example /order-line-item-download?limit=25&page=11 */
            last?: unknown;
            /** @example /order-line-item-download?limit=25&page=4 */
            next?: unknown;
            /** @example /order-line-item-download?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderLineItemDownload post /order-line-item-download":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderLineItemDownload"];
        response: {
          data: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderLineItemDownload"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderLineItemDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderLineItemDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      };
  "getOrderLineItemDownload get /order-line-item-download/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_line_item_download */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_line_item_download */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      };
  "deleteOrderLineItemDownload delete /order-line-item-download/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_line_item_download */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderLineItemDownload patch /order-line-item-download/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item_download */
          id: string;
        };
        body: components["schemas"]["OrderLineItemDownload"];
        response: {
          data: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item_download */
          id: string;
        };
        body: components["schemas"]["OrderLineItemDownload"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item_download */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderLineItemDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item_download */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderLineItemDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"];
        };
        responseCode: 200;
      };
  "getOrderLineItem get /order-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_line_item */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_line_item */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      };
  "deleteOrderLineItem delete /order-line-item/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_line_item */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderLineItem patch /order-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item */
          id: string;
        };
        body: components["schemas"]["OrderLineItem"];
        response: {
          data: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item */
          id: string;
        };
        body: components["schemas"]["OrderLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"];
        };
        responseCode: 200;
      };
  "getOrderProductWarehouseList get /order-product-warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderProductWarehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderProductWarehouse"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-product-warehouse?limit=25 */
            first?: unknown;
            /** @example /order-product-warehouse?limit=25&page=11 */
            last?: unknown;
            /** @example /order-product-warehouse?limit=25&page=4 */
            next?: unknown;
            /** @example /order-product-warehouse?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderProductWarehouse post /order-product-warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderProductWarehouse"];
        response: {
          data: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderProductWarehouse"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      };
  "getOrderProductWarehouse get /order-product-warehouse/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_product_warehouse */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_product_warehouse */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      };
  "deleteOrderProductWarehouse delete /order-product-warehouse/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_product_warehouse */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderProductWarehouse patch /order-product-warehouse/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_product_warehouse */
          id: string;
        };
        body: components["schemas"]["OrderProductWarehouse"];
        response: {
          data: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_product_warehouse */
          id: string;
        };
        body: components["schemas"]["OrderProductWarehouse"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_product_warehouse */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_product_warehouse */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"];
        };
        responseCode: 200;
      };
  "getOrderReturnList get /order-return":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderReturn"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderReturn"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-return?limit=25 */
            first?: unknown;
            /** @example /order-return?limit=25&page=11 */
            last?: unknown;
            /** @example /order-return?limit=25&page=4 */
            next?: unknown;
            /** @example /order-return?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderReturn post /order-return":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderReturn"];
        response: {
          data: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderReturn"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderReturn"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderReturn"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      };
  "getOrderReturnLineItemList get /order-return-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderReturnLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderReturnLineItem"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-return-line-item?limit=25 */
            first?: unknown;
            /** @example /order-return-line-item?limit=25&page=11 */
            last?: unknown;
            /** @example /order-return-line-item?limit=25&page=4 */
            next?: unknown;
            /** @example /order-return-line-item?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderReturnLineItem post /order-return-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderReturnLineItem"];
        response: {
          data: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderReturnLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      };
  "getOrderReturnLineItemReasonList get /order-return-line-item-reason":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderReturnLineItemReason"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderReturnLineItemReason"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-return-line-item-reason?limit=25 */
            first?: unknown;
            /** @example /order-return-line-item-reason?limit=25&page=11 */
            last?: unknown;
            /** @example /order-return-line-item-reason?limit=25&page=4 */
            next?: unknown;
            /** @example /order-return-line-item-reason?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderReturnLineItemReason post /order-return-line-item-reason":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderReturnLineItemReason"];
        response: {
          data: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderReturnLineItemReason"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItemReason"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItemReason"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      };
  "getOrderReturnLineItemReason get /order-return-line-item-reason/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_return_line_item_reason */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_return_line_item_reason */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      };
  "deleteOrderReturnLineItemReason delete /order-return-line-item-reason/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_return_line_item_reason */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderReturnLineItemReason patch /order-return-line-item-reason/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item_reason */
          id: string;
        };
        body: components["schemas"]["OrderReturnLineItemReason"];
        response: {
          data: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item_reason */
          id: string;
        };
        body: components["schemas"]["OrderReturnLineItemReason"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item_reason */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItemReason"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item_reason */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItemReason"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"];
        };
        responseCode: 200;
      };
  "getOrderReturnLineItem get /order-return-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_return_line_item */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_return_line_item */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      };
  "deleteOrderReturnLineItem delete /order-return-line-item/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_return_line_item */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderReturnLineItem patch /order-return-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item */
          id: string;
        };
        body: components["schemas"]["OrderReturnLineItem"];
        response: {
          data: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item */
          id: string;
        };
        body: components["schemas"]["OrderReturnLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderReturnLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"];
        };
        responseCode: 200;
      };
  "getOrderReturn get /order-return/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_return */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_return */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      };
  "deleteOrderReturn delete /order-return/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_return */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderReturn patch /order-return/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return */
          id: string;
        };
        body: components["schemas"]["OrderReturn"];
        response: {
          data: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return */
          id: string;
        };
        body: components["schemas"]["OrderReturn"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderReturn"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_return */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderReturn"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"];
        };
        responseCode: 200;
      };
  "getOrderTransactionList get /order-transaction":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderTransaction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderTransaction"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-transaction?limit=25 */
            first?: unknown;
            /** @example /order-transaction?limit=25&page=11 */
            last?: unknown;
            /** @example /order-transaction?limit=25&page=4 */
            next?: unknown;
            /** @example /order-transaction?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderTransaction post /order-transaction":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransaction"];
        response: {
          data: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransaction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      };
  "getOrderTransactionCaptureList get /order-transaction-capture":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderTransactionCapture"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderTransactionCapture"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-transaction-capture?limit=25 */
            first?: unknown;
            /** @example /order-transaction-capture?limit=25&page=11 */
            last?: unknown;
            /** @example /order-transaction-capture?limit=25&page=4 */
            next?: unknown;
            /** @example /order-transaction-capture?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderTransactionCapture post /order-transaction-capture":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransactionCapture"];
        response: {
          data: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransactionCapture"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransactionCapture"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransactionCapture"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      };
  "getOrderTransactionCaptureRefundList get /order-transaction-capture-refund":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderTransactionCaptureRefund"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-transaction-capture-refund?limit=25 */
            first?: unknown;
            /** @example /order-transaction-capture-refund?limit=25&page=11 */
            last?: unknown;
            /** @example /order-transaction-capture-refund?limit=25&page=4 */
            next?: unknown;
            /** @example /order-transaction-capture-refund?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderTransactionCaptureRefund post /order-transaction-capture-refund":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransactionCaptureRefund"];
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransactionCaptureRefund"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      };
  "getOrderTransactionCaptureRefundPositionList get /order-transaction-capture-refund-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderTransactionCaptureRefundPosition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-transaction-capture-refund-position?limit=25 */
            first?: unknown;
            /** @example /order-transaction-capture-refund-position?limit=25&page=11 */
            last?: unknown;
            /** @example /order-transaction-capture-refund-position?limit=25&page=4 */
            next?: unknown;
            /** @example /order-transaction-capture-refund-position?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderTransactionCaptureRefundPosition post /order-transaction-capture-refund-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      };
  "getOrderTransactionCaptureRefundPosition get /order-transaction-capture-refund-position/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_transaction_capture_refund_position */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_transaction_capture_refund_position */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      };
  "deleteOrderTransactionCaptureRefundPosition delete /order-transaction-capture-refund-position/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_transaction_capture_refund_position */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderTransactionCaptureRefundPosition patch /order-transaction-capture-refund-position/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund_position */
          id: string;
        };
        body: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund_position */
          id: string;
        };
        body: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund_position */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund_position */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"];
        };
        responseCode: 200;
      };
  "getOrderTransactionCaptureRefund get /order-transaction-capture-refund/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_transaction_capture_refund */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_transaction_capture_refund */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      };
  "deleteOrderTransactionCaptureRefund delete /order-transaction-capture-refund/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_transaction_capture_refund */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderTransactionCaptureRefund patch /order-transaction-capture-refund/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund */
          id: string;
        };
        body: components["schemas"]["OrderTransactionCaptureRefund"];
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund */
          id: string;
        };
        body: components["schemas"]["OrderTransactionCaptureRefund"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture_refund */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"];
        };
        responseCode: 200;
      };
  "getOrderTransactionCapture get /order-transaction-capture/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_transaction_capture */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_transaction_capture */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      };
  "deleteOrderTransactionCapture delete /order-transaction-capture/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_transaction_capture */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderTransactionCapture patch /order-transaction-capture/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture */
          id: string;
        };
        body: components["schemas"]["OrderTransactionCapture"];
        response: {
          data: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture */
          id: string;
        };
        body: components["schemas"]["OrderTransactionCapture"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransactionCapture"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction_capture */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransactionCapture"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"];
        };
        responseCode: 200;
      };
  "getOrderTransaction get /order-transaction/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_transaction */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_transaction */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      };
  "deleteOrderTransaction delete /order-transaction/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_transaction */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderTransaction patch /order-transaction/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction */
          id: string;
        };
        body: components["schemas"]["OrderTransaction"];
        response: {
          data: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction */
          id: string;
        };
        body: components["schemas"]["OrderTransaction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_transaction */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"];
        };
        responseCode: 200;
      };
  "getOrderWarehouseGroupList get /order-warehouse-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["OrderWarehouseGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["OrderWarehouseGroup"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /order-warehouse-group?limit=25 */
            first?: unknown;
            /** @example /order-warehouse-group?limit=25&page=11 */
            last?: unknown;
            /** @example /order-warehouse-group?limit=25&page=4 */
            next?: unknown;
            /** @example /order-warehouse-group?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createOrderWarehouseGroup post /order-warehouse-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderWarehouseGroup"];
        response: {
          data: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["OrderWarehouseGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderWarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["OrderWarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      };
  "getOrderWarehouseGroup get /order-warehouse-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order_warehouse_group */
          id: string;
        };
        response: {
          data: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order_warehouse_group */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      };
  "deleteOrderWarehouseGroup delete /order-warehouse-group/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order_warehouse_group */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrderWarehouseGroup patch /order-warehouse-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_warehouse_group */
          id: string;
        };
        body: components["schemas"]["OrderWarehouseGroup"];
        response: {
          data: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_warehouse_group */
          id: string;
        };
        body: components["schemas"]["OrderWarehouseGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_warehouse_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderWarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order_warehouse_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["OrderWarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"];
        };
        responseCode: 200;
      };
  "getOrder get /order/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the order */
          id: string;
        };
        response: {
          data: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the order */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"];
        };
        responseCode: 200;
      };
  "deleteOrder delete /order/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the order */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateOrder patch /order/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order */
          id: string;
        };
        body: components["schemas"]["Order"];
        response: {
          data: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order */
          id: string;
        };
        body: components["schemas"]["Order"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order */
          id: string;
        };
        body: {
          data?: components["schemas"]["Order"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Order"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the order */
          id: string;
        };
        body: {
          data?: components["schemas"]["Order"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"];
        };
        responseCode: 200;
      };
  "getPaymentMethodList get /payment-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PaymentMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PaymentMethod"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /payment-method?limit=25 */
            first?: unknown;
            /** @example /payment-method?limit=25&page=11 */
            last?: unknown;
            /** @example /payment-method?limit=25&page=4 */
            next?: unknown;
            /** @example /payment-method?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPaymentMethod post /payment-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PaymentMethod"];
        response: {
          data: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PaymentMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      };
  "getPaymentMethod get /payment-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the payment_method */
          id: string;
        };
        response: {
          data: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the payment_method */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      };
  "deletePaymentMethod delete /payment-method/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the payment_method */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePaymentMethod patch /payment-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the payment_method */
          id: string;
        };
        body: components["schemas"]["PaymentMethod"];
        response: {
          data: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the payment_method */
          id: string;
        };
        body: components["schemas"]["PaymentMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the payment_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["PaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the payment_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["PaymentMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"];
        };
        responseCode: 200;
      };
  "getPluginList get /plugin":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Plugin"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Plugin"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /plugin?limit=25 */
            first?: unknown;
            /** @example /plugin?limit=25&page=11 */
            last?: unknown;
            /** @example /plugin?limit=25&page=4 */
            next?: unknown;
            /** @example /plugin?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPlugin post /plugin":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Plugin"];
        response: {
          data: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Plugin"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Plugin"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Plugin"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      };
  "getPlugin get /plugin/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the plugin */
          id: string;
        };
        response: {
          data: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the plugin */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      };
  "deletePlugin delete /plugin/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the plugin */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePlugin patch /plugin/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the plugin */
          id: string;
        };
        body: components["schemas"]["Plugin"];
        response: {
          data: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the plugin */
          id: string;
        };
        body: components["schemas"]["Plugin"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the plugin */
          id: string;
        };
        body: {
          data?: components["schemas"]["Plugin"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the plugin */
          id: string;
        };
        body: {
          data?: components["schemas"]["Plugin"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"];
        };
        responseCode: 200;
      };
  "getProductList get /product":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Product"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Product"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product?limit=25 */
            first?: unknown;
            /** @example /product?limit=25&page=11 */
            last?: unknown;
            /** @example /product?limit=25&page=4 */
            next?: unknown;
            /** @example /product?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProduct post /product":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Product"];
        response: {
          data: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Product"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Product"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Product"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"];
        };
        responseCode: 200;
      };
  "getProductConfiguratorSettingList get /product-configurator-setting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductConfiguratorSetting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductConfiguratorSetting"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-configurator-setting?limit=25 */
            first?: unknown;
            /** @example /product-configurator-setting?limit=25&page=11 */
            last?: unknown;
            /** @example /product-configurator-setting?limit=25&page=4 */
            next?: unknown;
            /** @example /product-configurator-setting?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductConfiguratorSetting post /product-configurator-setting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductConfiguratorSetting"];
        response: {
          data: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductConfiguratorSetting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductConfiguratorSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductConfiguratorSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      };
  "getProductConfiguratorSetting get /product-configurator-setting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_configurator_setting */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_configurator_setting */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      };
  "deleteProductConfiguratorSetting delete /product-configurator-setting/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_configurator_setting */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductConfiguratorSetting patch /product-configurator-setting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_configurator_setting */
          id: string;
        };
        body: components["schemas"]["ProductConfiguratorSetting"];
        response: {
          data: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_configurator_setting */
          id: string;
        };
        body: components["schemas"]["ProductConfiguratorSetting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_configurator_setting */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductConfiguratorSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_configurator_setting */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductConfiguratorSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"];
        };
        responseCode: 200;
      };
  "getProductCrossSellingList get /product-cross-selling":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductCrossSelling"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductCrossSelling"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-cross-selling?limit=25 */
            first?: unknown;
            /** @example /product-cross-selling?limit=25&page=11 */
            last?: unknown;
            /** @example /product-cross-selling?limit=25&page=4 */
            next?: unknown;
            /** @example /product-cross-selling?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductCrossSelling post /product-cross-selling":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductCrossSelling"];
        response: {
          data: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductCrossSelling"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductCrossSelling"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductCrossSelling"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      };
  "getProductCrossSellingAssignedProductsList get /product-cross-selling-assigned-products":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductCrossSellingAssignedProducts"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-cross-selling-assigned-products?limit=25 */
            first?: unknown;
            /** @example /product-cross-selling-assigned-products?limit=25&page=11 */
            last?: unknown;
            /** @example /product-cross-selling-assigned-products?limit=25&page=4 */
            next?: unknown;
            /** @example /product-cross-selling-assigned-products?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductCrossSellingAssignedProducts post /product-cross-selling-assigned-products":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductCrossSellingAssignedProducts"];
        response: {
          data: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductCrossSellingAssignedProducts"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      };
  "getProductCrossSellingAssignedProducts get /product-cross-selling-assigned-products/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_cross_selling_assigned_products */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_cross_selling_assigned_products */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      };
  "deleteProductCrossSellingAssignedProducts delete /product-cross-selling-assigned-products/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_cross_selling_assigned_products */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductCrossSellingAssignedProducts patch /product-cross-selling-assigned-products/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling_assigned_products */
          id: string;
        };
        body: components["schemas"]["ProductCrossSellingAssignedProducts"];
        response: {
          data: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling_assigned_products */
          id: string;
        };
        body: components["schemas"]["ProductCrossSellingAssignedProducts"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling_assigned_products */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling_assigned_products */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"];
        };
        responseCode: 200;
      };
  "getProductCrossSelling get /product-cross-selling/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_cross_selling */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_cross_selling */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      };
  "deleteProductCrossSelling delete /product-cross-selling/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_cross_selling */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductCrossSelling patch /product-cross-selling/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling */
          id: string;
        };
        body: components["schemas"]["ProductCrossSelling"];
        response: {
          data: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling */
          id: string;
        };
        body: components["schemas"]["ProductCrossSelling"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductCrossSelling"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_cross_selling */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductCrossSelling"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"];
        };
        responseCode: 200;
      };
  "getProductDownloadList get /product-download":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductDownload"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductDownload"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-download?limit=25 */
            first?: unknown;
            /** @example /product-download?limit=25&page=11 */
            last?: unknown;
            /** @example /product-download?limit=25&page=4 */
            next?: unknown;
            /** @example /product-download?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductDownload post /product-download":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductDownload"];
        response: {
          data: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductDownload"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      };
  "getProductDownload get /product-download/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_download */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_download */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      };
  "deleteProductDownload delete /product-download/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_download */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductDownload patch /product-download/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_download */
          id: string;
        };
        body: components["schemas"]["ProductDownload"];
        response: {
          data: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_download */
          id: string;
        };
        body: components["schemas"]["ProductDownload"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_download */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_download */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductDownload"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"];
        };
        responseCode: 200;
      };
  "getProductExportList get /product-export":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductExport"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductExport"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-export?limit=25 */
            first?: unknown;
            /** @example /product-export?limit=25&page=11 */
            last?: unknown;
            /** @example /product-export?limit=25&page=4 */
            next?: unknown;
            /** @example /product-export?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductExport post /product-export":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductExport"];
        response: {
          data: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductExport"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductExport"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductExport"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      };
  "getProductExport get /product-export/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_export */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_export */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      };
  "deleteProductExport delete /product-export/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_export */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductExport patch /product-export/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_export */
          id: string;
        };
        body: components["schemas"]["ProductExport"];
        response: {
          data: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_export */
          id: string;
        };
        body: components["schemas"]["ProductExport"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_export */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductExport"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_export */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductExport"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"];
        };
        responseCode: 200;
      };
  "getProductFeatureSetList get /product-feature-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductFeatureSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductFeatureSet"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-feature-set?limit=25 */
            first?: unknown;
            /** @example /product-feature-set?limit=25&page=11 */
            last?: unknown;
            /** @example /product-feature-set?limit=25&page=4 */
            next?: unknown;
            /** @example /product-feature-set?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductFeatureSet post /product-feature-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductFeatureSet"];
        response: {
          data: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductFeatureSet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductFeatureSet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductFeatureSet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      };
  "getProductFeatureSet get /product-feature-set/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_feature_set */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_feature_set */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      };
  "deleteProductFeatureSet delete /product-feature-set/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_feature_set */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductFeatureSet patch /product-feature-set/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_feature_set */
          id: string;
        };
        body: components["schemas"]["ProductFeatureSet"];
        response: {
          data: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_feature_set */
          id: string;
        };
        body: components["schemas"]["ProductFeatureSet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_feature_set */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductFeatureSet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_feature_set */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductFeatureSet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"];
        };
        responseCode: 200;
      };
  "getProductKeywordDictionaryList get /product-keyword-dictionary":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductKeywordDictionary"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductKeywordDictionary"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-keyword-dictionary?limit=25 */
            first?: unknown;
            /** @example /product-keyword-dictionary?limit=25&page=11 */
            last?: unknown;
            /** @example /product-keyword-dictionary?limit=25&page=4 */
            next?: unknown;
            /** @example /product-keyword-dictionary?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductKeywordDictionary post /product-keyword-dictionary":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductKeywordDictionary"];
        response: {
          data: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductKeywordDictionary"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductKeywordDictionary"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductKeywordDictionary"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      };
  "getProductKeywordDictionary get /product-keyword-dictionary/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_keyword_dictionary */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_keyword_dictionary */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      };
  "deleteProductKeywordDictionary delete /product-keyword-dictionary/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_keyword_dictionary */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductKeywordDictionary patch /product-keyword-dictionary/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_keyword_dictionary */
          id: string;
        };
        body: components["schemas"]["ProductKeywordDictionary"];
        response: {
          data: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_keyword_dictionary */
          id: string;
        };
        body: components["schemas"]["ProductKeywordDictionary"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_keyword_dictionary */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductKeywordDictionary"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_keyword_dictionary */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductKeywordDictionary"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"];
        };
        responseCode: 200;
      };
  "getProductManufacturerList get /product-manufacturer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductManufacturer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductManufacturer"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-manufacturer?limit=25 */
            first?: unknown;
            /** @example /product-manufacturer?limit=25&page=11 */
            last?: unknown;
            /** @example /product-manufacturer?limit=25&page=4 */
            next?: unknown;
            /** @example /product-manufacturer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductManufacturer post /product-manufacturer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductManufacturer"];
        response: {
          data: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductManufacturer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductManufacturer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductManufacturer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      };
  "getProductManufacturer get /product-manufacturer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_manufacturer */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_manufacturer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      };
  "deleteProductManufacturer delete /product-manufacturer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_manufacturer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductManufacturer patch /product-manufacturer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_manufacturer */
          id: string;
        };
        body: components["schemas"]["ProductManufacturer"];
        response: {
          data: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_manufacturer */
          id: string;
        };
        body: components["schemas"]["ProductManufacturer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_manufacturer */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductManufacturer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_manufacturer */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductManufacturer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"];
        };
        responseCode: 200;
      };
  "getProductMediaList get /product-media":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductMedia"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductMedia"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-media?limit=25 */
            first?: unknown;
            /** @example /product-media?limit=25&page=11 */
            last?: unknown;
            /** @example /product-media?limit=25&page=4 */
            next?: unknown;
            /** @example /product-media?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductMedia post /product-media":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductMedia"];
        response: {
          data: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductMedia"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductMedia"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductMedia"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      };
  "getProductMedia get /product-media/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_media */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_media */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      };
  "deleteProductMedia delete /product-media/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_media */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductMedia patch /product-media/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_media */
          id: string;
        };
        body: components["schemas"]["ProductMedia"];
        response: {
          data: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_media */
          id: string;
        };
        body: components["schemas"]["ProductMedia"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_media */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductMedia"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_media */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductMedia"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"];
        };
        responseCode: 200;
      };
  "getProductPriceList get /product-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductPrice"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-price?limit=25 */
            first?: unknown;
            /** @example /product-price?limit=25&page=11 */
            last?: unknown;
            /** @example /product-price?limit=25&page=4 */
            next?: unknown;
            /** @example /product-price?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductPrice post /product-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductPrice"];
        response: {
          data: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      };
  "getProductPrice get /product-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_price */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_price */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      };
  "deleteProductPrice delete /product-price/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_price */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductPrice patch /product-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_price */
          id: string;
        };
        body: components["schemas"]["ProductPrice"];
        response: {
          data: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_price */
          id: string;
        };
        body: components["schemas"]["ProductPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"];
        };
        responseCode: 200;
      };
  "getProductReviewList get /product-review":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductReview"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductReview"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-review?limit=25 */
            first?: unknown;
            /** @example /product-review?limit=25&page=11 */
            last?: unknown;
            /** @example /product-review?limit=25&page=4 */
            next?: unknown;
            /** @example /product-review?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductReview post /product-review":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductReview"];
        response: {
          data: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductReview"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductReview"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductReview"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      };
  "getProductReviewSummaryList get /product-review-summary":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductReviewSummary"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductReviewSummary"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-review-summary?limit=25 */
            first?: unknown;
            /** @example /product-review-summary?limit=25&page=11 */
            last?: unknown;
            /** @example /product-review-summary?limit=25&page=4 */
            next?: unknown;
            /** @example /product-review-summary?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductReviewSummary post /product-review-summary":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductReviewSummary"];
        response: {
          data: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductReviewSummary"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductReviewSummary"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductReviewSummary"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      };
  "getProductReviewSummary get /product-review-summary/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_review_summary */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_review_summary */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      };
  "deleteProductReviewSummary delete /product-review-summary/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_review_summary */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductReviewSummary patch /product-review-summary/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review_summary */
          id: string;
        };
        body: components["schemas"]["ProductReviewSummary"];
        response: {
          data: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review_summary */
          id: string;
        };
        body: components["schemas"]["ProductReviewSummary"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review_summary */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductReviewSummary"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review_summary */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductReviewSummary"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"];
        };
        responseCode: 200;
      };
  "getProductReview get /product-review/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_review */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_review */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      };
  "deleteProductReview delete /product-review/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_review */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductReview patch /product-review/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review */
          id: string;
        };
        body: components["schemas"]["ProductReview"];
        response: {
          data: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review */
          id: string;
        };
        body: components["schemas"]["ProductReview"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductReview"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_review */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductReview"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"];
        };
        responseCode: 200;
      };
  "getProductSearchConfigList get /product-search-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductSearchConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductSearchConfig"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-search-config?limit=25 */
            first?: unknown;
            /** @example /product-search-config?limit=25&page=11 */
            last?: unknown;
            /** @example /product-search-config?limit=25&page=4 */
            next?: unknown;
            /** @example /product-search-config?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductSearchConfig post /product-search-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSearchConfig"];
        response: {
          data: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSearchConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      };
  "getProductSearchConfigFieldList get /product-search-config-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductSearchConfigField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductSearchConfigField"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-search-config-field?limit=25 */
            first?: unknown;
            /** @example /product-search-config-field?limit=25&page=11 */
            last?: unknown;
            /** @example /product-search-config-field?limit=25&page=4 */
            next?: unknown;
            /** @example /product-search-config-field?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductSearchConfigField post /product-search-config-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSearchConfigField"];
        response: {
          data: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSearchConfigField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      };
  "getProductSearchConfigField get /product-search-config-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_search_config_field */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_search_config_field */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      };
  "deleteProductSearchConfigField delete /product-search-config-field/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_search_config_field */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductSearchConfigField patch /product-search-config-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config_field */
          id: string;
        };
        body: components["schemas"]["ProductSearchConfigField"];
        response: {
          data: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config_field */
          id: string;
        };
        body: components["schemas"]["ProductSearchConfigField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSearchConfigField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"];
        };
        responseCode: 200;
      };
  "getProductSearchConfig get /product-search-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_search_config */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_search_config */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      };
  "deleteProductSearchConfig delete /product-search-config/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_search_config */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductSearchConfig patch /product-search-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config */
          id: string;
        };
        body: components["schemas"]["ProductSearchConfig"];
        response: {
          data: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config */
          id: string;
        };
        body: components["schemas"]["ProductSearchConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSearchConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"];
        };
        responseCode: 200;
      };
  "getProductSearchKeywordList get /product-search-keyword":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductSearchKeyword"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductSearchKeyword"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-search-keyword?limit=25 */
            first?: unknown;
            /** @example /product-search-keyword?limit=25&page=11 */
            last?: unknown;
            /** @example /product-search-keyword?limit=25&page=4 */
            next?: unknown;
            /** @example /product-search-keyword?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductSearchKeyword post /product-search-keyword":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSearchKeyword"];
        response: {
          data: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSearchKeyword"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSearchKeyword"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSearchKeyword"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      };
  "getProductSearchKeyword get /product-search-keyword/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_search_keyword */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_search_keyword */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      };
  "deleteProductSearchKeyword delete /product-search-keyword/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_search_keyword */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductSearchKeyword patch /product-search-keyword/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_keyword */
          id: string;
        };
        body: components["schemas"]["ProductSearchKeyword"];
        response: {
          data: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_keyword */
          id: string;
        };
        body: components["schemas"]["ProductSearchKeyword"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_keyword */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSearchKeyword"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_search_keyword */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSearchKeyword"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"];
        };
        responseCode: 200;
      };
  "getProductSortingList get /product-sorting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductSorting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductSorting"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-sorting?limit=25 */
            first?: unknown;
            /** @example /product-sorting?limit=25&page=11 */
            last?: unknown;
            /** @example /product-sorting?limit=25&page=4 */
            next?: unknown;
            /** @example /product-sorting?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductSorting post /product-sorting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSorting"];
        response: {
          data: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductSorting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSorting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductSorting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      };
  "getProductSorting get /product-sorting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_sorting */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_sorting */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      };
  "deleteProductSorting delete /product-sorting/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_sorting */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductSorting patch /product-sorting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_sorting */
          id: string;
        };
        body: components["schemas"]["ProductSorting"];
        response: {
          data: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_sorting */
          id: string;
        };
        body: components["schemas"]["ProductSorting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_sorting */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSorting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_sorting */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductSorting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"];
        };
        responseCode: 200;
      };
  "getProductStreamList get /product-stream":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductStream"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductStream"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-stream?limit=25 */
            first?: unknown;
            /** @example /product-stream?limit=25&page=11 */
            last?: unknown;
            /** @example /product-stream?limit=25&page=4 */
            next?: unknown;
            /** @example /product-stream?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductStream post /product-stream":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductStream"];
        response: {
          data: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductStream"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductStream"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductStream"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      };
  "getProductStreamFilterList get /product-stream-filter":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductStreamFilter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductStreamFilter"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-stream-filter?limit=25 */
            first?: unknown;
            /** @example /product-stream-filter?limit=25&page=11 */
            last?: unknown;
            /** @example /product-stream-filter?limit=25&page=4 */
            next?: unknown;
            /** @example /product-stream-filter?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductStreamFilter post /product-stream-filter":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductStreamFilter"];
        response: {
          data: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductStreamFilter"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      };
  "getProductStreamFilter get /product-stream-filter/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_stream_filter */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_stream_filter */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      };
  "deleteProductStreamFilter delete /product-stream-filter/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_stream_filter */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductStreamFilter patch /product-stream-filter/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream_filter */
          id: string;
        };
        body: components["schemas"]["ProductStreamFilter"];
        response: {
          data: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream_filter */
          id: string;
        };
        body: components["schemas"]["ProductStreamFilter"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream_filter */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream_filter */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductStreamFilter"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"];
        };
        responseCode: 200;
      };
  "getProductStream get /product-stream/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_stream */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_stream */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      };
  "deleteProductStream delete /product-stream/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_stream */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductStream patch /product-stream/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream */
          id: string;
        };
        body: components["schemas"]["ProductStream"];
        response: {
          data: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream */
          id: string;
        };
        body: components["schemas"]["ProductStream"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductStream"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_stream */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductStream"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"];
        };
        responseCode: 200;
      };
  "getProductVisibilityList get /product-visibility":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductVisibility"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductVisibility"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-visibility?limit=25 */
            first?: unknown;
            /** @example /product-visibility?limit=25&page=11 */
            last?: unknown;
            /** @example /product-visibility?limit=25&page=4 */
            next?: unknown;
            /** @example /product-visibility?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductVisibility post /product-visibility":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductVisibility"];
        response: {
          data: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductVisibility"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductVisibility"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductVisibility"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      };
  "getProductVisibility get /product-visibility/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_visibility */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_visibility */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      };
  "deleteProductVisibility delete /product-visibility/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_visibility */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductVisibility patch /product-visibility/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_visibility */
          id: string;
        };
        body: components["schemas"]["ProductVisibility"];
        response: {
          data: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_visibility */
          id: string;
        };
        body: components["schemas"]["ProductVisibility"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_visibility */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductVisibility"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_visibility */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductVisibility"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"];
        };
        responseCode: 200;
      };
  "getProductWarehouseList get /product-warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ProductWarehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ProductWarehouse"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /product-warehouse?limit=25 */
            first?: unknown;
            /** @example /product-warehouse?limit=25&page=11 */
            last?: unknown;
            /** @example /product-warehouse?limit=25&page=4 */
            next?: unknown;
            /** @example /product-warehouse?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createProductWarehouse post /product-warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductWarehouse"];
        response: {
          data: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ProductWarehouse"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      };
  "getProductWarehouse get /product-warehouse/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product_warehouse */
          id: string;
        };
        response: {
          data: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product_warehouse */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      };
  "deleteProductWarehouse delete /product-warehouse/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product_warehouse */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProductWarehouse patch /product-warehouse/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_warehouse */
          id: string;
        };
        body: components["schemas"]["ProductWarehouse"];
        response: {
          data: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_warehouse */
          id: string;
        };
        body: components["schemas"]["ProductWarehouse"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_warehouse */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product_warehouse */
          id: string;
        };
        body: {
          data?: components["schemas"]["ProductWarehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"];
        };
        responseCode: 200;
      };
  "getProduct get /product/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the product */
          id: string;
        };
        response: {
          data: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the product */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"];
        };
        responseCode: 200;
      };
  "deleteProduct delete /product/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the product */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateProduct patch /product/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product */
          id: string;
        };
        body: components["schemas"]["Product"];
        response: {
          data: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product */
          id: string;
        };
        body: components["schemas"]["Product"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product */
          id: string;
        };
        body: {
          data?: components["schemas"]["Product"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Product"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the product */
          id: string;
        };
        body: {
          data?: components["schemas"]["Product"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"];
        };
        responseCode: 200;
      };
  "getPromotionList get /promotion":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Promotion"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Promotion"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /promotion?limit=25 */
            first?: unknown;
            /** @example /promotion?limit=25&page=11 */
            last?: unknown;
            /** @example /promotion?limit=25&page=4 */
            next?: unknown;
            /** @example /promotion?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPromotion post /promotion":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Promotion"];
        response: {
          data: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Promotion"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Promotion"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Promotion"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      };
  "getPromotionDiscountList get /promotion-discount":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PromotionDiscount"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PromotionDiscount"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /promotion-discount?limit=25 */
            first?: unknown;
            /** @example /promotion-discount?limit=25&page=11 */
            last?: unknown;
            /** @example /promotion-discount?limit=25&page=4 */
            next?: unknown;
            /** @example /promotion-discount?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPromotionDiscount post /promotion-discount":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionDiscount"];
        response: {
          data: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionDiscount"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionDiscount"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionDiscount"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      };
  "getPromotionDiscountPricesList get /promotion-discount-prices":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PromotionDiscountPrices"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PromotionDiscountPrices"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /promotion-discount-prices?limit=25 */
            first?: unknown;
            /** @example /promotion-discount-prices?limit=25&page=11 */
            last?: unknown;
            /** @example /promotion-discount-prices?limit=25&page=4 */
            next?: unknown;
            /** @example /promotion-discount-prices?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPromotionDiscountPrices post /promotion-discount-prices":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionDiscountPrices"];
        response: {
          data: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionDiscountPrices"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionDiscountPrices"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionDiscountPrices"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      };
  "getPromotionDiscountPrices get /promotion-discount-prices/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the promotion_discount_prices */
          id: string;
        };
        response: {
          data: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the promotion_discount_prices */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      };
  "deletePromotionDiscountPrices delete /promotion-discount-prices/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the promotion_discount_prices */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePromotionDiscountPrices patch /promotion-discount-prices/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount_prices */
          id: string;
        };
        body: components["schemas"]["PromotionDiscountPrices"];
        response: {
          data: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount_prices */
          id: string;
        };
        body: components["schemas"]["PromotionDiscountPrices"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount_prices */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionDiscountPrices"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount_prices */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionDiscountPrices"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"];
        };
        responseCode: 200;
      };
  "getPromotionDiscount get /promotion-discount/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the promotion_discount */
          id: string;
        };
        response: {
          data: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the promotion_discount */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      };
  "deletePromotionDiscount delete /promotion-discount/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the promotion_discount */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePromotionDiscount patch /promotion-discount/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount */
          id: string;
        };
        body: components["schemas"]["PromotionDiscount"];
        response: {
          data: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount */
          id: string;
        };
        body: components["schemas"]["PromotionDiscount"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionDiscount"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_discount */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionDiscount"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"];
        };
        responseCode: 200;
      };
  "getPromotionIndividualCodeList get /promotion-individual-code":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PromotionIndividualCode"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PromotionIndividualCode"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /promotion-individual-code?limit=25 */
            first?: unknown;
            /** @example /promotion-individual-code?limit=25&page=11 */
            last?: unknown;
            /** @example /promotion-individual-code?limit=25&page=4 */
            next?: unknown;
            /** @example /promotion-individual-code?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPromotionIndividualCode post /promotion-individual-code":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionIndividualCode"];
        response: {
          data: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionIndividualCode"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionIndividualCode"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionIndividualCode"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      };
  "getPromotionIndividualCode get /promotion-individual-code/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the promotion_individual_code */
          id: string;
        };
        response: {
          data: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the promotion_individual_code */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      };
  "deletePromotionIndividualCode delete /promotion-individual-code/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the promotion_individual_code */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePromotionIndividualCode patch /promotion-individual-code/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_individual_code */
          id: string;
        };
        body: components["schemas"]["PromotionIndividualCode"];
        response: {
          data: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_individual_code */
          id: string;
        };
        body: components["schemas"]["PromotionIndividualCode"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_individual_code */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionIndividualCode"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_individual_code */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionIndividualCode"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"];
        };
        responseCode: 200;
      };
  "getPromotionSalesChannelList get /promotion-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PromotionSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PromotionSalesChannel"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /promotion-sales-channel?limit=25 */
            first?: unknown;
            /** @example /promotion-sales-channel?limit=25&page=11 */
            last?: unknown;
            /** @example /promotion-sales-channel?limit=25&page=4 */
            next?: unknown;
            /** @example /promotion-sales-channel?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPromotionSalesChannel post /promotion-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionSalesChannel"];
        response: {
          data: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      };
  "getPromotionSalesChannel get /promotion-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the promotion_sales_channel */
          id: string;
        };
        response: {
          data: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the promotion_sales_channel */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      };
  "deletePromotionSalesChannel delete /promotion-sales-channel/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the promotion_sales_channel */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePromotionSalesChannel patch /promotion-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_sales_channel */
          id: string;
        };
        body: components["schemas"]["PromotionSalesChannel"];
        response: {
          data: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_sales_channel */
          id: string;
        };
        body: components["schemas"]["PromotionSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"];
        };
        responseCode: 200;
      };
  "getPromotionSetgroupList get /promotion-setgroup":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PromotionSetgroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PromotionSetgroup"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /promotion-setgroup?limit=25 */
            first?: unknown;
            /** @example /promotion-setgroup?limit=25&page=11 */
            last?: unknown;
            /** @example /promotion-setgroup?limit=25&page=4 */
            next?: unknown;
            /** @example /promotion-setgroup?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPromotionSetgroup post /promotion-setgroup":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionSetgroup"];
        response: {
          data: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PromotionSetgroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionSetgroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PromotionSetgroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      };
  "getPromotionSetgroup get /promotion-setgroup/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the promotion_setgroup */
          id: string;
        };
        response: {
          data: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the promotion_setgroup */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      };
  "deletePromotionSetgroup delete /promotion-setgroup/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the promotion_setgroup */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePromotionSetgroup patch /promotion-setgroup/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_setgroup */
          id: string;
        };
        body: components["schemas"]["PromotionSetgroup"];
        response: {
          data: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_setgroup */
          id: string;
        };
        body: components["schemas"]["PromotionSetgroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_setgroup */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionSetgroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion_setgroup */
          id: string;
        };
        body: {
          data?: components["schemas"]["PromotionSetgroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"];
        };
        responseCode: 200;
      };
  "getPromotion get /promotion/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the promotion */
          id: string;
        };
        response: {
          data: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the promotion */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      };
  "deletePromotion delete /promotion/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the promotion */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePromotion patch /promotion/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion */
          id: string;
        };
        body: components["schemas"]["Promotion"];
        response: {
          data: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion */
          id: string;
        };
        body: components["schemas"]["Promotion"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion */
          id: string;
        };
        body: {
          data?: components["schemas"]["Promotion"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the promotion */
          id: string;
        };
        body: {
          data?: components["schemas"]["Promotion"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"];
        };
        responseCode: 200;
      };
  "getPropertyGroupList get /property-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PropertyGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PropertyGroup"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /property-group?limit=25 */
            first?: unknown;
            /** @example /property-group?limit=25&page=11 */
            last?: unknown;
            /** @example /property-group?limit=25&page=4 */
            next?: unknown;
            /** @example /property-group?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPropertyGroup post /property-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PropertyGroup"];
        response: {
          data: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PropertyGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PropertyGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PropertyGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      };
  "getPropertyGroupOptionList get /property-group-option":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["PropertyGroupOption"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["PropertyGroupOption"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /property-group-option?limit=25 */
            first?: unknown;
            /** @example /property-group-option?limit=25&page=11 */
            last?: unknown;
            /** @example /property-group-option?limit=25&page=4 */
            next?: unknown;
            /** @example /property-group-option?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createPropertyGroupOption post /property-group-option":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PropertyGroupOption"];
        response: {
          data: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["PropertyGroupOption"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PropertyGroupOption"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["PropertyGroupOption"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      };
  "getPropertyGroupOption get /property-group-option/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the property_group_option */
          id: string;
        };
        response: {
          data: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the property_group_option */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      };
  "deletePropertyGroupOption delete /property-group-option/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the property_group_option */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePropertyGroupOption patch /property-group-option/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group_option */
          id: string;
        };
        body: components["schemas"]["PropertyGroupOption"];
        response: {
          data: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group_option */
          id: string;
        };
        body: components["schemas"]["PropertyGroupOption"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group_option */
          id: string;
        };
        body: {
          data?: components["schemas"]["PropertyGroupOption"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group_option */
          id: string;
        };
        body: {
          data?: components["schemas"]["PropertyGroupOption"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"];
        };
        responseCode: 200;
      };
  "getPropertyGroup get /property-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the property_group */
          id: string;
        };
        response: {
          data: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the property_group */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      };
  "deletePropertyGroup delete /property-group/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the property_group */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updatePropertyGroup patch /property-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group */
          id: string;
        };
        body: components["schemas"]["PropertyGroup"];
        response: {
          data: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group */
          id: string;
        };
        body: components["schemas"]["PropertyGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["PropertyGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the property_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["PropertyGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"];
        };
        responseCode: 200;
      };
  "getQuoteList get /quote":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Quote"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Quote"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote?limit=25 */
            first?: unknown;
            /** @example /quote?limit=25&page=11 */
            last?: unknown;
            /** @example /quote?limit=25&page=4 */
            next?: unknown;
            /** @example /quote?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuote post /quote":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Quote"];
        response: {
          data: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Quote"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Quote"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Quote"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"];
        };
        responseCode: 200;
      };
  "getQuoteCommentList get /quote-comment":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteComment"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteComment"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-comment?limit=25 */
            first?: unknown;
            /** @example /quote-comment?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-comment?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-comment?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteComment post /quote-comment":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteComment"];
        response: {
          data: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteComment"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteComment"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteComment"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      };
  "getQuoteComment get /quote-comment/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_comment */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_comment */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      };
  "deleteQuoteComment delete /quote-comment/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_comment */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteComment patch /quote-comment/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_comment */
          id: string;
        };
        body: components["schemas"]["QuoteComment"];
        response: {
          data: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_comment */
          id: string;
        };
        body: components["schemas"]["QuoteComment"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_comment */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteComment"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_comment */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteComment"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"];
        };
        responseCode: 200;
      };
  "getQuoteDeliveryList get /quote-delivery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteDelivery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteDelivery"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-delivery?limit=25 */
            first?: unknown;
            /** @example /quote-delivery?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-delivery?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-delivery?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteDelivery post /quote-delivery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteDelivery"];
        response: {
          data: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteDelivery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      };
  "getQuoteDeliveryPositionList get /quote-delivery-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteDeliveryPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteDeliveryPosition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-delivery-position?limit=25 */
            first?: unknown;
            /** @example /quote-delivery-position?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-delivery-position?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-delivery-position?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteDeliveryPosition post /quote-delivery-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteDeliveryPosition"];
        response: {
          data: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteDeliveryPosition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      };
  "getQuoteDeliveryPosition get /quote-delivery-position/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_delivery_position */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_delivery_position */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      };
  "deleteQuoteDeliveryPosition delete /quote-delivery-position/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_delivery_position */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteDeliveryPosition patch /quote-delivery-position/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery_position */
          id: string;
        };
        body: components["schemas"]["QuoteDeliveryPosition"];
        response: {
          data: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery_position */
          id: string;
        };
        body: components["schemas"]["QuoteDeliveryPosition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery_position */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery_position */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteDeliveryPosition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"];
        };
        responseCode: 200;
      };
  "getQuoteDelivery get /quote-delivery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_delivery */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_delivery */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      };
  "deleteQuoteDelivery delete /quote-delivery/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_delivery */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteDelivery patch /quote-delivery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery */
          id: string;
        };
        body: components["schemas"]["QuoteDelivery"];
        response: {
          data: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery */
          id: string;
        };
        body: components["schemas"]["QuoteDelivery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_delivery */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteDelivery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"];
        };
        responseCode: 200;
      };
  "getQuoteDocumentList get /quote-document":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteDocument"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteDocument"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-document?limit=25 */
            first?: unknown;
            /** @example /quote-document?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-document?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-document?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteDocument post /quote-document":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteDocument"];
        response: {
          data: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteDocument"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteDocument"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteDocument"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      };
  "getQuoteDocument get /quote-document/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_document */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_document */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      };
  "deleteQuoteDocument delete /quote-document/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_document */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteDocument patch /quote-document/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_document */
          id: string;
        };
        body: components["schemas"]["QuoteDocument"];
        response: {
          data: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_document */
          id: string;
        };
        body: components["schemas"]["QuoteDocument"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_document */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteDocument"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_document */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteDocument"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"];
        };
        responseCode: 200;
      };
  "getQuoteEmployeeList get /quote-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteEmployee"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-employee?limit=25 */
            first?: unknown;
            /** @example /quote-employee?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-employee?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-employee?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteEmployee post /quote-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteEmployee"];
        response: {
          data: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteEmployee"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      };
  "getQuoteEmployee get /quote-employee/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_employee */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_employee */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      };
  "deleteQuoteEmployee delete /quote-employee/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_employee */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteEmployee patch /quote-employee/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_employee */
          id: string;
        };
        body: components["schemas"]["QuoteEmployee"];
        response: {
          data: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_employee */
          id: string;
        };
        body: components["schemas"]["QuoteEmployee"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_employee */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_employee */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteEmployee"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"];
        };
        responseCode: 200;
      };
  "getQuoteLineItemList get /quote-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteLineItem"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-line-item?limit=25 */
            first?: unknown;
            /** @example /quote-line-item?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-line-item?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-line-item?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteLineItem post /quote-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteLineItem"];
        response: {
          data: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      };
  "getQuoteLineItem get /quote-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_line_item */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_line_item */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      };
  "deleteQuoteLineItem delete /quote-line-item/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_line_item */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteLineItem patch /quote-line-item/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_line_item */
          id: string;
        };
        body: components["schemas"]["QuoteLineItem"];
        response: {
          data: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_line_item */
          id: string;
        };
        body: components["schemas"]["QuoteLineItem"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_line_item */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteLineItem"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"];
        };
        responseCode: 200;
      };
  "getQuoteTransactionList get /quote-transaction":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["QuoteTransaction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["QuoteTransaction"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /quote-transaction?limit=25 */
            first?: unknown;
            /** @example /quote-transaction?limit=25&page=11 */
            last?: unknown;
            /** @example /quote-transaction?limit=25&page=4 */
            next?: unknown;
            /** @example /quote-transaction?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createQuoteTransaction post /quote-transaction":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteTransaction"];
        response: {
          data: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["QuoteTransaction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["QuoteTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      };
  "getQuoteTransaction get /quote-transaction/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote_transaction */
          id: string;
        };
        response: {
          data: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote_transaction */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      };
  "deleteQuoteTransaction delete /quote-transaction/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote_transaction */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuoteTransaction patch /quote-transaction/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_transaction */
          id: string;
        };
        body: components["schemas"]["QuoteTransaction"];
        response: {
          data: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_transaction */
          id: string;
        };
        body: components["schemas"]["QuoteTransaction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_transaction */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote_transaction */
          id: string;
        };
        body: {
          data?: components["schemas"]["QuoteTransaction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"];
        };
        responseCode: 200;
      };
  "getQuote get /quote/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the quote */
          id: string;
        };
        response: {
          data: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the quote */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"];
        };
        responseCode: 200;
      };
  "deleteQuote delete /quote/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the quote */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateQuote patch /quote/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote */
          id: string;
        };
        body: components["schemas"]["Quote"];
        response: {
          data: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote */
          id: string;
        };
        body: components["schemas"]["Quote"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote */
          id: string;
        };
        body: {
          data?: components["schemas"]["Quote"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Quote"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the quote */
          id: string;
        };
        body: {
          data?: components["schemas"]["Quote"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"];
        };
        responseCode: 200;
      };
  "getRuleList get /rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Rule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Rule"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /rule?limit=25 */
            first?: unknown;
            /** @example /rule?limit=25&page=11 */
            last?: unknown;
            /** @example /rule?limit=25&page=4 */
            next?: unknown;
            /** @example /rule?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createRule post /rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Rule"];
        response: {
          data: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Rule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Rule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Rule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"];
        };
        responseCode: 200;
      };
  "getRuleConditionList get /rule-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["RuleCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["RuleCondition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /rule-condition?limit=25 */
            first?: unknown;
            /** @example /rule-condition?limit=25&page=11 */
            last?: unknown;
            /** @example /rule-condition?limit=25&page=4 */
            next?: unknown;
            /** @example /rule-condition?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createRuleCondition post /rule-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["RuleCondition"];
        response: {
          data: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["RuleCondition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["RuleCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["RuleCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      };
  "getRuleCondition get /rule-condition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the rule_condition */
          id: string;
        };
        response: {
          data: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the rule_condition */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      };
  "deleteRuleCondition delete /rule-condition/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the rule_condition */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateRuleCondition patch /rule-condition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule_condition */
          id: string;
        };
        body: components["schemas"]["RuleCondition"];
        response: {
          data: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule_condition */
          id: string;
        };
        body: components["schemas"]["RuleCondition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule_condition */
          id: string;
        };
        body: {
          data?: components["schemas"]["RuleCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule_condition */
          id: string;
        };
        body: {
          data?: components["schemas"]["RuleCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"];
        };
        responseCode: 200;
      };
  "getRule get /rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the rule */
          id: string;
        };
        response: {
          data: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the rule */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"];
        };
        responseCode: 200;
      };
  "deleteRule delete /rule/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the rule */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateRule patch /rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule */
          id: string;
        };
        body: components["schemas"]["Rule"];
        response: {
          data: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule */
          id: string;
        };
        body: components["schemas"]["Rule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["Rule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Rule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["Rule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"];
        };
        responseCode: 200;
      };
  "getSaasAppStorefrontConfigList get /saas-app-storefront-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SaasAppStorefrontConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SaasAppStorefrontConfig"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /saas-app-storefront-config?limit=25 */
            first?: unknown;
            /** @example /saas-app-storefront-config?limit=25&page=11 */
            last?: unknown;
            /** @example /saas-app-storefront-config?limit=25&page=4 */
            next?: unknown;
            /** @example /saas-app-storefront-config?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSaasAppStorefrontConfig post /saas-app-storefront-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasAppStorefrontConfig"];
        response: {
          data: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasAppStorefrontConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      };
  "getSaasAppStorefrontConfig get /saas-app-storefront-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the saas_app_storefront_config */
          id: string;
        };
        response: {
          data: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the saas_app_storefront_config */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      };
  "deleteSaasAppStorefrontConfig delete /saas-app-storefront-config/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the saas_app_storefront_config */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSaasAppStorefrontConfig patch /saas-app-storefront-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_app_storefront_config */
          id: string;
        };
        body: components["schemas"]["SaasAppStorefrontConfig"];
        response: {
          data: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_app_storefront_config */
          id: string;
        };
        body: components["schemas"]["SaasAppStorefrontConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_app_storefront_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_app_storefront_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"];
        };
        responseCode: 200;
      };
  "getSaasSbpUserDataList get /saas-sbp-user-data":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SaasSbpUserData"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SaasSbpUserData"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /saas-sbp-user-data?limit=25 */
            first?: unknown;
            /** @example /saas-sbp-user-data?limit=25&page=11 */
            last?: unknown;
            /** @example /saas-sbp-user-data?limit=25&page=4 */
            next?: unknown;
            /** @example /saas-sbp-user-data?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSaasSbpUserData post /saas-sbp-user-data":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasSbpUserData"];
        response: {
          data: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasSbpUserData"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasSbpUserData"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasSbpUserData"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      };
  "getSaasSbpUserData get /saas-sbp-user-data/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the saas_sbp_user_data */
          id: string;
        };
        response: {
          data: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the saas_sbp_user_data */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      };
  "deleteSaasSbpUserData delete /saas-sbp-user-data/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the saas_sbp_user_data */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSaasSbpUserData patch /saas-sbp-user-data/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_sbp_user_data */
          id: string;
        };
        body: components["schemas"]["SaasSbpUserData"];
        response: {
          data: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_sbp_user_data */
          id: string;
        };
        body: components["schemas"]["SaasSbpUserData"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_sbp_user_data */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasSbpUserData"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_sbp_user_data */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasSbpUserData"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"];
        };
        responseCode: 200;
      };
  "getSaasStorefrontDemoTokenList get /saas-storefront-demo-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SaasStorefrontDemoToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SaasStorefrontDemoToken"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /saas-storefront-demo-token?limit=25 */
            first?: unknown;
            /** @example /saas-storefront-demo-token?limit=25&page=11 */
            last?: unknown;
            /** @example /saas-storefront-demo-token?limit=25&page=4 */
            next?: unknown;
            /** @example /saas-storefront-demo-token?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSaasStorefrontDemoToken post /saas-storefront-demo-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasStorefrontDemoToken"];
        response: {
          data: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasStorefrontDemoToken"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      };
  "getSaasStorefrontDemoToken get /saas-storefront-demo-token/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the saas_storefront_demo_token */
          id: string;
        };
        response: {
          data: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the saas_storefront_demo_token */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      };
  "deleteSaasStorefrontDemoToken delete /saas-storefront-demo-token/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the saas_storefront_demo_token */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSaasStorefrontDemoToken patch /saas-storefront-demo-token/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_storefront_demo_token */
          id: string;
        };
        body: components["schemas"]["SaasStorefrontDemoToken"];
        response: {
          data: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_storefront_demo_token */
          id: string;
        };
        body: components["schemas"]["SaasStorefrontDemoToken"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_storefront_demo_token */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_storefront_demo_token */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"];
        };
        responseCode: 200;
      };
  "getSaasUserLoginTokenList get /saas-user-login-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SaasUserLoginToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SaasUserLoginToken"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /saas-user-login-token?limit=25 */
            first?: unknown;
            /** @example /saas-user-login-token?limit=25&page=11 */
            last?: unknown;
            /** @example /saas-user-login-token?limit=25&page=4 */
            next?: unknown;
            /** @example /saas-user-login-token?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSaasUserLoginToken post /saas-user-login-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasUserLoginToken"];
        response: {
          data: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SaasUserLoginToken"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasUserLoginToken"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SaasUserLoginToken"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      };
  "getSaasUserLoginToken get /saas-user-login-token/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the saas_user_login_token */
          id: string;
        };
        response: {
          data: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the saas_user_login_token */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      };
  "deleteSaasUserLoginToken delete /saas-user-login-token/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the saas_user_login_token */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSaasUserLoginToken patch /saas-user-login-token/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_user_login_token */
          id: string;
        };
        body: components["schemas"]["SaasUserLoginToken"];
        response: {
          data: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_user_login_token */
          id: string;
        };
        body: components["schemas"]["SaasUserLoginToken"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_user_login_token */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasUserLoginToken"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the saas_user_login_token */
          id: string;
        };
        body: {
          data?: components["schemas"]["SaasUserLoginToken"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"];
        };
        responseCode: 200;
      };
  "getSalesChannelList get /sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SalesChannel"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /sales-channel?limit=25 */
            first?: unknown;
            /** @example /sales-channel?limit=25&page=11 */
            last?: unknown;
            /** @example /sales-channel?limit=25&page=4 */
            next?: unknown;
            /** @example /sales-channel?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSalesChannel post /sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannel"];
        response: {
          data: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      };
  "getSalesChannelAnalyticsList get /sales-channel-analytics":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SalesChannelAnalytics"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SalesChannelAnalytics"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /sales-channel-analytics?limit=25 */
            first?: unknown;
            /** @example /sales-channel-analytics?limit=25&page=11 */
            last?: unknown;
            /** @example /sales-channel-analytics?limit=25&page=4 */
            next?: unknown;
            /** @example /sales-channel-analytics?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSalesChannelAnalytics post /sales-channel-analytics":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannelAnalytics"];
        response: {
          data: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannelAnalytics"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannelAnalytics"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannelAnalytics"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      };
  "getSalesChannelAnalytics get /sales-channel-analytics/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the sales_channel_analytics */
          id: string;
        };
        response: {
          data: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the sales_channel_analytics */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      };
  "deleteSalesChannelAnalytics delete /sales-channel-analytics/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the sales_channel_analytics */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSalesChannelAnalytics patch /sales-channel-analytics/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_analytics */
          id: string;
        };
        body: components["schemas"]["SalesChannelAnalytics"];
        response: {
          data: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_analytics */
          id: string;
        };
        body: components["schemas"]["SalesChannelAnalytics"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_analytics */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannelAnalytics"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_analytics */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannelAnalytics"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"];
        };
        responseCode: 200;
      };
  "getSalesChannelDomainList get /sales-channel-domain":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SalesChannelDomain"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SalesChannelDomain"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /sales-channel-domain?limit=25 */
            first?: unknown;
            /** @example /sales-channel-domain?limit=25&page=11 */
            last?: unknown;
            /** @example /sales-channel-domain?limit=25&page=4 */
            next?: unknown;
            /** @example /sales-channel-domain?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSalesChannelDomain post /sales-channel-domain":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannelDomain"];
        response: {
          data: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannelDomain"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannelDomain"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannelDomain"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      };
  "getSalesChannelDomain get /sales-channel-domain/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the sales_channel_domain */
          id: string;
        };
        response: {
          data: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the sales_channel_domain */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      };
  "deleteSalesChannelDomain delete /sales-channel-domain/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the sales_channel_domain */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSalesChannelDomain patch /sales-channel-domain/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_domain */
          id: string;
        };
        body: components["schemas"]["SalesChannelDomain"];
        response: {
          data: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_domain */
          id: string;
        };
        body: components["schemas"]["SalesChannelDomain"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_domain */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannelDomain"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_domain */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannelDomain"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"];
        };
        responseCode: 200;
      };
  "getSalesChannelTypeList get /sales-channel-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SalesChannelType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SalesChannelType"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /sales-channel-type?limit=25 */
            first?: unknown;
            /** @example /sales-channel-type?limit=25&page=11 */
            last?: unknown;
            /** @example /sales-channel-type?limit=25&page=4 */
            next?: unknown;
            /** @example /sales-channel-type?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSalesChannelType post /sales-channel-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannelType"];
        response: {
          data: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SalesChannelType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannelType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SalesChannelType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      };
  "getSalesChannelType get /sales-channel-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the sales_channel_type */
          id: string;
        };
        response: {
          data: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the sales_channel_type */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      };
  "deleteSalesChannelType delete /sales-channel-type/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the sales_channel_type */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSalesChannelType patch /sales-channel-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_type */
          id: string;
        };
        body: components["schemas"]["SalesChannelType"];
        response: {
          data: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_type */
          id: string;
        };
        body: components["schemas"]["SalesChannelType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannelType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannelType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"];
        };
        responseCode: 200;
      };
  "getSalesChannel get /sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the sales_channel */
          id: string;
        };
        response: {
          data: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the sales_channel */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      };
  "deleteSalesChannel delete /sales-channel/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the sales_channel */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSalesChannel patch /sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel */
          id: string;
        };
        body: components["schemas"]["SalesChannel"];
        response: {
          data: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel */
          id: string;
        };
        body: components["schemas"]["SalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["SalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"];
        };
        responseCode: 200;
      };
  "getSalutationList get /salutation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Salutation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Salutation"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /salutation?limit=25 */
            first?: unknown;
            /** @example /salutation?limit=25&page=11 */
            last?: unknown;
            /** @example /salutation?limit=25&page=4 */
            next?: unknown;
            /** @example /salutation?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSalutation post /salutation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Salutation"];
        response: {
          data: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Salutation"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Salutation"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Salutation"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      };
  "getSalutation get /salutation/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the salutation */
          id: string;
        };
        response: {
          data: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the salutation */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      };
  "deleteSalutation delete /salutation/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the salutation */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSalutation patch /salutation/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the salutation */
          id: string;
        };
        body: components["schemas"]["Salutation"];
        response: {
          data: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the salutation */
          id: string;
        };
        body: components["schemas"]["Salutation"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the salutation */
          id: string;
        };
        body: {
          data?: components["schemas"]["Salutation"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the salutation */
          id: string;
        };
        body: {
          data?: components["schemas"]["Salutation"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"];
        };
        responseCode: 200;
      };
  "getScheduledTaskList get /scheduled-task":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ScheduledTask"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ScheduledTask"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /scheduled-task?limit=25 */
            first?: unknown;
            /** @example /scheduled-task?limit=25&page=11 */
            last?: unknown;
            /** @example /scheduled-task?limit=25&page=4 */
            next?: unknown;
            /** @example /scheduled-task?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createScheduledTask post /scheduled-task":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ScheduledTask"];
        response: {
          data: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ScheduledTask"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ScheduledTask"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ScheduledTask"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      };
  "getScheduledTask get /scheduled-task/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the scheduled_task */
          id: string;
        };
        response: {
          data: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the scheduled_task */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      };
  "deleteScheduledTask delete /scheduled-task/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the scheduled_task */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateScheduledTask patch /scheduled-task/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the scheduled_task */
          id: string;
        };
        body: components["schemas"]["ScheduledTask"];
        response: {
          data: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the scheduled_task */
          id: string;
        };
        body: components["schemas"]["ScheduledTask"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the scheduled_task */
          id: string;
        };
        body: {
          data?: components["schemas"]["ScheduledTask"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the scheduled_task */
          id: string;
        };
        body: {
          data?: components["schemas"]["ScheduledTask"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"];
        };
        responseCode: 200;
      };
  "getScriptList get /script":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Script"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Script"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /script?limit=25 */
            first?: unknown;
            /** @example /script?limit=25&page=11 */
            last?: unknown;
            /** @example /script?limit=25&page=4 */
            next?: unknown;
            /** @example /script?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createScript post /script":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Script"];
        response: {
          data: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Script"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Script"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Script"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"];
        };
        responseCode: 200;
      };
  "getScript get /script/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the script */
          id: string;
        };
        response: {
          data: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the script */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"];
        };
        responseCode: 200;
      };
  "deleteScript delete /script/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the script */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateScript patch /script/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the script */
          id: string;
        };
        body: components["schemas"]["Script"];
        response: {
          data: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the script */
          id: string;
        };
        body: components["schemas"]["Script"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the script */
          id: string;
        };
        body: {
          data?: components["schemas"]["Script"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Script"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the script */
          id: string;
        };
        body: {
          data?: components["schemas"]["Script"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"];
        };
        responseCode: 200;
      };
  "searchAclRole post /search/acl-role":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AclRole"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AclRole"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AclRole"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchAction post /search/advanced-search-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchAction"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchActionSearchTerm post /search/advanced-search-action-search-term":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchActionSearchTerm"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchBoosting post /search/advanced-search-boosting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchBoosting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchBoosting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchBoosting"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchConfig post /search/advanced-search-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfig"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchConfigField post /search/advanced-search-config-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchConfigField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchConfigField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchConfigField"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchEntityStream post /search/advanced-search-entity-stream":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchEntityStream"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchEntityStream"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStream"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchEntityStreamFilter post /search/advanced-search-entity-stream-filter":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchEntityStreamFilter"][];
        };
        responseCode: 200;
      };
  "searchAdvancedSearchSynonym post /search/advanced-search-synonym":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchSynonym"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AdvancedSearchSynonym"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AdvancedSearchSynonym"][];
        };
        responseCode: 200;
      };
  "searchApp post /search/app":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["App"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["App"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["App"][];
        };
        responseCode: 200;
      };
  "searchAppActionButton post /search/app-action-button":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppActionButton"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppActionButton"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppActionButton"][];
        };
        responseCode: 200;
      };
  "searchAppAdministrationSnippet post /search/app-administration-snippet":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppAdministrationSnippet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppAdministrationSnippet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppAdministrationSnippet"][];
        };
        responseCode: 200;
      };
  "searchAppCmsBlock post /search/app-cms-block":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppCmsBlock"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppCmsBlock"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppCmsBlock"][];
        };
        responseCode: 200;
      };
  "searchAppFlowAction post /search/app-flow-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppFlowAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppFlowAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowAction"][];
        };
        responseCode: 200;
      };
  "searchAppFlowEvent post /search/app-flow-event":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppFlowEvent"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppFlowEvent"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppFlowEvent"][];
        };
        responseCode: 200;
      };
  "searchAppPaymentMethod post /search/app-payment-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppPaymentMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppPaymentMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppPaymentMethod"][];
        };
        responseCode: 200;
      };
  "searchAppScriptCondition post /search/app-script-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppScriptCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppScriptCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppScriptCondition"][];
        };
        responseCode: 200;
      };
  "searchAppShippingMethod post /search/app-shipping-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppShippingMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppShippingMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppShippingMethod"][];
        };
        responseCode: 200;
      };
  "searchAppTemplate post /search/app-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["AppTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["AppTemplate"][];
        };
        responseCode: 200;
      };
  "searchB2bBusinessPartner post /search/b2b-business-partner":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bBusinessPartner"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bBusinessPartner"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bBusinessPartner"][];
        };
        responseCode: 200;
      };
  "searchB2bComponentsApprovalRule post /search/b2b-components-approval-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsApprovalRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsApprovalRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsApprovalRule"][];
        };
        responseCode: 200;
      };
  "searchB2bComponentsPendingOrder post /search/b2b-components-pending-order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsPendingOrder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsPendingOrder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrder"][];
        };
        responseCode: 200;
      };
  "searchB2bComponentsPendingOrderAddress post /search/b2b-components-pending-order-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsPendingOrderAddress"][];
        };
        responseCode: 200;
      };
  "searchB2bComponentsRole post /search/b2b-components-role":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsRole"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsRole"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsRole"][];
        };
        responseCode: 200;
      };
  "searchB2bComponentsShoppingList post /search/b2b-components-shopping-list":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsShoppingList"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsShoppingList"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingList"][];
        };
        responseCode: 200;
      };
  "searchB2bComponentsShoppingListLineItem post /search/b2b-components-shopping-list-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bComponentsShoppingListLineItem"][];
        };
        responseCode: 200;
      };
  "searchB2bEmployee post /search/b2b-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bEmployee"][];
        };
        responseCode: 200;
      };
  "searchB2bOrderEmployee post /search/b2b-order-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bOrderEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bOrderEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bOrderEmployee"][];
        };
        responseCode: 200;
      };
  "searchB2bPermission post /search/b2b-permission":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bPermission"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["B2bPermission"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["B2bPermission"][];
        };
        responseCode: 200;
      };
  "searchCategory post /search/category":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Category"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Category"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Category"][];
        };
        responseCode: 200;
      };
  "searchCmsBlock post /search/cms-block":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsBlock"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsBlock"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsBlock"][];
        };
        responseCode: 200;
      };
  "searchCmsPage post /search/cms-page":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsPage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsPage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPage"][];
        };
        responseCode: 200;
      };
  "searchCmsPageActivity post /search/cms-page-activity":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsPageActivity"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsPageActivity"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageActivity"][];
        };
        responseCode: 200;
      };
  "searchCmsPageDraft post /search/cms-page-draft":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsPageDraft"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsPageDraft"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsPageDraft"][];
        };
        responseCode: 200;
      };
  "searchCmsSection post /search/cms-section":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsSection"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsSection"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSection"][];
        };
        responseCode: 200;
      };
  "searchCmsSlot post /search/cms-slot":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsSlot"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CmsSlot"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CmsSlot"][];
        };
        responseCode: 200;
      };
  "searchCountry post /search/country":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Country"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Country"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Country"][];
        };
        responseCode: 200;
      };
  "searchCountryState post /search/country-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CountryState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CountryState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CountryState"][];
        };
        responseCode: 200;
      };
  "searchCurrency post /search/currency":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Currency"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Currency"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Currency"][];
        };
        responseCode: 200;
      };
  "searchCurrencyCountryRounding post /search/currency-country-rounding":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CurrencyCountryRounding"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CurrencyCountryRounding"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CurrencyCountryRounding"][];
        };
        responseCode: 200;
      };
  "searchCustomEntity post /search/custom-entity":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomEntity"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomEntity"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomEntity"][];
        };
        responseCode: 200;
      };
  "searchCustomField post /search/custom-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomField"][];
        };
        responseCode: 200;
      };
  "searchCustomFieldSet post /search/custom-field-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomFieldSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomFieldSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSet"][];
        };
        responseCode: 200;
      };
  "searchCustomFieldSetRelation post /search/custom-field-set-relation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomFieldSetRelation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomFieldSetRelation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomFieldSetRelation"][];
        };
        responseCode: 200;
      };
  "searchCustomPrice post /search/custom-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomPrice"][];
        };
        responseCode: 200;
      };
  "searchCustomer post /search/customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Customer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Customer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Customer"][];
        };
        responseCode: 200;
      };
  "searchCustomerAddress post /search/customer-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerAddress"][];
        };
        responseCode: 200;
      };
  "searchCustomerGroup post /search/customer-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerGroup"][];
        };
        responseCode: 200;
      };
  "searchCustomerRecovery post /search/customer-recovery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerRecovery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerRecovery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerRecovery"][];
        };
        responseCode: 200;
      };
  "searchCustomerSpecificFeatures post /search/customer-specific-features":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerSpecificFeatures"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerSpecificFeatures"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerSpecificFeatures"][];
        };
        responseCode: 200;
      };
  "searchCustomerWishlist post /search/customer-wishlist":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerWishlist"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerWishlist"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlist"][];
        };
        responseCode: 200;
      };
  "searchCustomerWishlistProduct post /search/customer-wishlist-product":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerWishlistProduct"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["CustomerWishlistProduct"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["CustomerWishlistProduct"][];
        };
        responseCode: 200;
      };
  "searchDeliveryTime post /search/delivery-time":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DeliveryTime"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DeliveryTime"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DeliveryTime"][];
        };
        responseCode: 200;
      };
  "searchDocument post /search/document":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Document"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Document"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Document"][];
        };
        responseCode: 200;
      };
  "searchDocumentBaseConfig post /search/document-base-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DocumentBaseConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DocumentBaseConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfig"][];
        };
        responseCode: 200;
      };
  "searchDocumentBaseConfigSalesChannel post /search/document-base-config-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentBaseConfigSalesChannel"][];
        };
        responseCode: 200;
      };
  "searchDocumentType post /search/document-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DocumentType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["DocumentType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["DocumentType"][];
        };
        responseCode: 200;
      };
  "searchFlow post /search/flow":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Flow"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Flow"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Flow"][];
        };
        responseCode: 200;
      };
  "searchFlowSequence post /search/flow-sequence":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["FlowSequence"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["FlowSequence"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowSequence"][];
        };
        responseCode: 200;
      };
  "searchFlowTemplate post /search/flow-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["FlowTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["FlowTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["FlowTemplate"][];
        };
        responseCode: 200;
      };
  "searchImportExportFile post /search/import-export-file":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ImportExportFile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ImportExportFile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportFile"][];
        };
        responseCode: 200;
      };
  "searchImportExportLog post /search/import-export-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ImportExportLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ImportExportLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportLog"][];
        };
        responseCode: 200;
      };
  "searchImportExportProfile post /search/import-export-profile":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ImportExportProfile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ImportExportProfile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ImportExportProfile"][];
        };
        responseCode: 200;
      };
  "searchIntegration post /search/integration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Integration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Integration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Integration"][];
        };
        responseCode: 200;
      };
  "searchLandingPage post /search/landing-page":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["LandingPage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["LandingPage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LandingPage"][];
        };
        responseCode: 200;
      };
  "searchLanguage post /search/language":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Language"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Language"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Language"][];
        };
        responseCode: 200;
      };
  "searchLocale post /search/locale":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Locale"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Locale"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Locale"][];
        };
        responseCode: 200;
      };
  "searchLogEntry post /search/log-entry":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["LogEntry"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["LogEntry"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["LogEntry"][];
        };
        responseCode: 200;
      };
  "searchMailHeaderFooter post /search/mail-header-footer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MailHeaderFooter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MailHeaderFooter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailHeaderFooter"][];
        };
        responseCode: 200;
      };
  "searchMailTemplate post /search/mail-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MailTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MailTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplate"][];
        };
        responseCode: 200;
      };
  "searchMailTemplateType post /search/mail-template-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MailTemplateType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MailTemplateType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MailTemplateType"][];
        };
        responseCode: 200;
      };
  "searchMainCategory post /search/main-category":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MainCategory"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MainCategory"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MainCategory"][];
        };
        responseCode: 200;
      };
  "searchMedia post /search/media":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Media"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Media"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Media"][];
        };
        responseCode: 200;
      };
  "searchMediaAiTag post /search/media-ai-tag":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaAiTag"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaAiTag"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaAiTag"][];
        };
        responseCode: 200;
      };
  "searchMediaDefaultFolder post /search/media-default-folder":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaDefaultFolder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaDefaultFolder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaDefaultFolder"][];
        };
        responseCode: 200;
      };
  "searchMediaFolder post /search/media-folder":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaFolder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaFolder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolder"][];
        };
        responseCode: 200;
      };
  "searchMediaFolderConfiguration post /search/media-folder-configuration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaFolderConfiguration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaFolderConfiguration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaFolderConfiguration"][];
        };
        responseCode: 200;
      };
  "searchMediaThumbnail post /search/media-thumbnail":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaThumbnail"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaThumbnail"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnail"][];
        };
        responseCode: 200;
      };
  "searchMediaThumbnailSize post /search/media-thumbnail-size":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaThumbnailSize"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["MediaThumbnailSize"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["MediaThumbnailSize"][];
        };
        responseCode: 200;
      };
  "searchNewsletterRecipient post /search/newsletter-recipient":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NewsletterRecipient"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NewsletterRecipient"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NewsletterRecipient"][];
        };
        responseCode: 200;
      };
  "searchNotification post /search/notification":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Notification"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Notification"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Notification"][];
        };
        responseCode: 200;
      };
  "searchNumberRange post /search/number-range":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRange"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRange"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRange"][];
        };
        responseCode: 200;
      };
  "searchNumberRangeSalesChannel post /search/number-range-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRangeSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRangeSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeSalesChannel"][];
        };
        responseCode: 200;
      };
  "searchNumberRangeState post /search/number-range-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRangeState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRangeState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeState"][];
        };
        responseCode: 200;
      };
  "searchNumberRangeType post /search/number-range-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRangeType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["NumberRangeType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["NumberRangeType"][];
        };
        responseCode: 200;
      };
  "searchOrder post /search/order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Order"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Order"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Order"][];
        };
        responseCode: 200;
      };
  "searchOrderAddress post /search/order-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderAddress"][];
        };
        responseCode: 200;
      };
  "searchOrderCustomer post /search/order-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderCustomer"][];
        };
        responseCode: 200;
      };
  "searchOrderDelivery post /search/order-delivery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderDelivery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderDelivery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDelivery"][];
        };
        responseCode: 200;
      };
  "searchOrderDeliveryPosition post /search/order-delivery-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderDeliveryPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderDeliveryPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderDeliveryPosition"][];
        };
        responseCode: 200;
      };
  "searchOrderLineItem post /search/order-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItem"][];
        };
        responseCode: 200;
      };
  "searchOrderLineItemDownload post /search/order-line-item-download":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderLineItemDownload"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderLineItemDownload"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderLineItemDownload"][];
        };
        responseCode: 200;
      };
  "searchOrderProductWarehouse post /search/order-product-warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderProductWarehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderProductWarehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderProductWarehouse"][];
        };
        responseCode: 200;
      };
  "searchOrderReturn post /search/order-return":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderReturn"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderReturn"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturn"][];
        };
        responseCode: 200;
      };
  "searchOrderReturnLineItem post /search/order-return-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderReturnLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderReturnLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItem"][];
        };
        responseCode: 200;
      };
  "searchOrderReturnLineItemReason post /search/order-return-line-item-reason":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderReturnLineItemReason"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderReturnLineItemReason"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderReturnLineItemReason"][];
        };
        responseCode: 200;
      };
  "searchOrderTransaction post /search/order-transaction":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransaction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransaction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransaction"][];
        };
        responseCode: 200;
      };
  "searchOrderTransactionCapture post /search/order-transaction-capture":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransactionCapture"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransactionCapture"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCapture"][];
        };
        responseCode: 200;
      };
  "searchOrderTransactionCaptureRefund post /search/order-transaction-capture-refund":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransactionCaptureRefund"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefund"][];
        };
        responseCode: 200;
      };
  "searchOrderTransactionCaptureRefundPosition post /search/order-transaction-capture-refund-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderTransactionCaptureRefundPosition"][];
        };
        responseCode: 200;
      };
  "searchOrderWarehouseGroup post /search/order-warehouse-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderWarehouseGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["OrderWarehouseGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["OrderWarehouseGroup"][];
        };
        responseCode: 200;
      };
  "searchPaymentMethod post /search/payment-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PaymentMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PaymentMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PaymentMethod"][];
        };
        responseCode: 200;
      };
  "searchPlugin post /search/plugin":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Plugin"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Plugin"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Plugin"][];
        };
        responseCode: 200;
      };
  "searchProduct post /search/product":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Product"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Product"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Product"][];
        };
        responseCode: 200;
      };
  "searchProductConfiguratorSetting post /search/product-configurator-setting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductConfiguratorSetting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductConfiguratorSetting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductConfiguratorSetting"][];
        };
        responseCode: 200;
      };
  "searchProductCrossSelling post /search/product-cross-selling":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductCrossSelling"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductCrossSelling"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSelling"][];
        };
        responseCode: 200;
      };
  "searchProductCrossSellingAssignedProducts post /search/product-cross-selling-assigned-products":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductCrossSellingAssignedProducts"][];
        };
        responseCode: 200;
      };
  "searchProductDownload post /search/product-download":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductDownload"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductDownload"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductDownload"][];
        };
        responseCode: 200;
      };
  "searchProductExport post /search/product-export":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductExport"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductExport"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductExport"][];
        };
        responseCode: 200;
      };
  "searchProductFeatureSet post /search/product-feature-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductFeatureSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductFeatureSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductFeatureSet"][];
        };
        responseCode: 200;
      };
  "searchProductKeywordDictionary post /search/product-keyword-dictionary":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductKeywordDictionary"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductKeywordDictionary"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductKeywordDictionary"][];
        };
        responseCode: 200;
      };
  "searchProductManufacturer post /search/product-manufacturer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductManufacturer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductManufacturer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductManufacturer"][];
        };
        responseCode: 200;
      };
  "searchProductMedia post /search/product-media":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductMedia"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductMedia"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductMedia"][];
        };
        responseCode: 200;
      };
  "searchProductPrice post /search/product-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductPrice"][];
        };
        responseCode: 200;
      };
  "searchProductReview post /search/product-review":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductReview"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductReview"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReview"][];
        };
        responseCode: 200;
      };
  "searchProductReviewSummary post /search/product-review-summary":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductReviewSummary"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductReviewSummary"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductReviewSummary"][];
        };
        responseCode: 200;
      };
  "searchProductSearchConfig post /search/product-search-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSearchConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSearchConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfig"][];
        };
        responseCode: 200;
      };
  "searchProductSearchConfigField post /search/product-search-config-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSearchConfigField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSearchConfigField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchConfigField"][];
        };
        responseCode: 200;
      };
  "searchProductSearchKeyword post /search/product-search-keyword":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSearchKeyword"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSearchKeyword"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSearchKeyword"][];
        };
        responseCode: 200;
      };
  "searchProductSorting post /search/product-sorting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSorting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductSorting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductSorting"][];
        };
        responseCode: 200;
      };
  "searchProductStream post /search/product-stream":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductStream"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductStream"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStream"][];
        };
        responseCode: 200;
      };
  "searchProductStreamFilter post /search/product-stream-filter":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductStreamFilter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductStreamFilter"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductStreamFilter"][];
        };
        responseCode: 200;
      };
  "searchProductVisibility post /search/product-visibility":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductVisibility"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductVisibility"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductVisibility"][];
        };
        responseCode: 200;
      };
  "searchProductWarehouse post /search/product-warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductWarehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ProductWarehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ProductWarehouse"][];
        };
        responseCode: 200;
      };
  "searchPromotion post /search/promotion":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Promotion"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Promotion"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Promotion"][];
        };
        responseCode: 200;
      };
  "searchPromotionDiscount post /search/promotion-discount":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionDiscount"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionDiscount"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscount"][];
        };
        responseCode: 200;
      };
  "searchPromotionDiscountPrices post /search/promotion-discount-prices":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionDiscountPrices"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionDiscountPrices"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionDiscountPrices"][];
        };
        responseCode: 200;
      };
  "searchPromotionIndividualCode post /search/promotion-individual-code":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionIndividualCode"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionIndividualCode"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionIndividualCode"][];
        };
        responseCode: 200;
      };
  "searchPromotionSalesChannel post /search/promotion-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSalesChannel"][];
        };
        responseCode: 200;
      };
  "searchPromotionSetgroup post /search/promotion-setgroup":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionSetgroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PromotionSetgroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PromotionSetgroup"][];
        };
        responseCode: 200;
      };
  "searchPropertyGroup post /search/property-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PropertyGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PropertyGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroup"][];
        };
        responseCode: 200;
      };
  "searchPropertyGroupOption post /search/property-group-option":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PropertyGroupOption"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["PropertyGroupOption"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["PropertyGroupOption"][];
        };
        responseCode: 200;
      };
  "searchQuote post /search/quote":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Quote"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Quote"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Quote"][];
        };
        responseCode: 200;
      };
  "searchQuoteComment post /search/quote-comment":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteComment"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteComment"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteComment"][];
        };
        responseCode: 200;
      };
  "searchQuoteDelivery post /search/quote-delivery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteDelivery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteDelivery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDelivery"][];
        };
        responseCode: 200;
      };
  "searchQuoteDeliveryPosition post /search/quote-delivery-position":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteDeliveryPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteDeliveryPosition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDeliveryPosition"][];
        };
        responseCode: 200;
      };
  "searchQuoteDocument post /search/quote-document":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteDocument"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteDocument"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteDocument"][];
        };
        responseCode: 200;
      };
  "searchQuoteEmployee post /search/quote-employee":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteEmployee"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteEmployee"][];
        };
        responseCode: 200;
      };
  "searchQuoteLineItem post /search/quote-line-item":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteLineItem"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteLineItem"][];
        };
        responseCode: 200;
      };
  "searchQuoteTransaction post /search/quote-transaction":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteTransaction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["QuoteTransaction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["QuoteTransaction"][];
        };
        responseCode: 200;
      };
  "searchRule post /search/rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Rule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Rule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Rule"][];
        };
        responseCode: 200;
      };
  "searchRuleCondition post /search/rule-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["RuleCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["RuleCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["RuleCondition"][];
        };
        responseCode: 200;
      };
  "searchSaasAppStorefrontConfig post /search/saas-app-storefront-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasAppStorefrontConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasAppStorefrontConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasAppStorefrontConfig"][];
        };
        responseCode: 200;
      };
  "searchSaasSbpUserData post /search/saas-sbp-user-data":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasSbpUserData"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasSbpUserData"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasSbpUserData"][];
        };
        responseCode: 200;
      };
  "searchSaasStorefrontDemoToken post /search/saas-storefront-demo-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasStorefrontDemoToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasStorefrontDemoToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasStorefrontDemoToken"][];
        };
        responseCode: 200;
      };
  "searchSaasUserLoginToken post /search/saas-user-login-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasUserLoginToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SaasUserLoginToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SaasUserLoginToken"][];
        };
        responseCode: 200;
      };
  "searchSalesChannel post /search/sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannel"][];
        };
        responseCode: 200;
      };
  "searchSalesChannelAnalytics post /search/sales-channel-analytics":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannelAnalytics"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannelAnalytics"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelAnalytics"][];
        };
        responseCode: 200;
      };
  "searchSalesChannelDomain post /search/sales-channel-domain":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannelDomain"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannelDomain"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelDomain"][];
        };
        responseCode: 200;
      };
  "searchSalesChannelType post /search/sales-channel-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannelType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SalesChannelType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SalesChannelType"][];
        };
        responseCode: 200;
      };
  "searchSalutation post /search/salutation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Salutation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Salutation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Salutation"][];
        };
        responseCode: 200;
      };
  "searchScheduledTask post /search/scheduled-task":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ScheduledTask"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ScheduledTask"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ScheduledTask"][];
        };
        responseCode: 200;
      };
  "searchScript post /search/script":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Script"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Script"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Script"][];
        };
        responseCode: 200;
      };
  "searchSeoUrl post /search/seo-url":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SeoUrl"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SeoUrl"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"][];
        };
        responseCode: 200;
      };
  "searchSeoUrlTemplate post /search/seo-url-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SeoUrlTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SeoUrlTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"][];
        };
        responseCode: 200;
      };
  "searchShippingMethod post /search/shipping-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ShippingMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ShippingMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"][];
        };
        responseCode: 200;
      };
  "searchShippingMethodPrice post /search/shipping-method-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ShippingMethodPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["ShippingMethodPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"][];
        };
        responseCode: 200;
      };
  "searchSnippet post /search/snippet":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Snippet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Snippet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"][];
        };
        responseCode: 200;
      };
  "searchSnippetSet post /search/snippet-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SnippetSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SnippetSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"][];
        };
        responseCode: 200;
      };
  "searchSsoProvider post /search/sso-provider":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SsoProvider"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SsoProvider"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"][];
        };
        responseCode: 200;
      };
  "searchSsoProviderCustomer post /search/sso-provider-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SsoProviderCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SsoProviderCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"][];
        };
        responseCode: 200;
      };
  "searchStateMachine post /search/state-machine":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachine"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachine"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"][];
        };
        responseCode: 200;
      };
  "searchStateMachineHistory post /search/state-machine-history":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachineHistory"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachineHistory"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"][];
        };
        responseCode: 200;
      };
  "searchStateMachineState post /search/state-machine-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachineState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachineState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"][];
        };
        responseCode: 200;
      };
  "searchStateMachineTransition post /search/state-machine-transition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachineTransition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["StateMachineTransition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"][];
        };
        responseCode: 200;
      };
  "searchSubscription post /search/subscription":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Subscription"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Subscription"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"][];
        };
        responseCode: 200;
      };
  "searchSubscriptionAddress post /search/subscription-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"][];
        };
        responseCode: 200;
      };
  "searchSubscriptionCustomer post /search/subscription-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"][];
        };
        responseCode: 200;
      };
  "searchSubscriptionInterval post /search/subscription-interval":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionInterval"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionInterval"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"][];
        };
        responseCode: 200;
      };
  "searchSubscriptionPlan post /search/subscription-plan":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionPlan"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SubscriptionPlan"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsBlockRule post /search/swag-cms-extensions-block-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsForm post /search/swag-cms-extensions-form":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsForm"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsForm"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsFormGroup post /search/swag-cms-extensions-form-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsFormGroupField post /search/swag-cms-extensions-form-group-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsQuickview post /search/swag-cms-extensions-quickview":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsScrollNavigation post /search/swag-cms-extensions-scroll-navigation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"][];
        };
        responseCode: 200;
      };
  "searchSwagCmsExtensionsScrollNavigationPageSettings post /search/swag-cms-extensions-scroll-navigation-page-settings":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplate post /search/swag-customized-products-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateConfiguration post /search/swag-customized-products-template-configuration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateConfigurationShare post /search/swag-customized-products-template-configuration-share":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateExclusion post /search/swag-customized-products-template-exclusion":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateExclusionCondition post /search/swag-customized-products-template-exclusion-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateExclusionOperator post /search/swag-customized-products-template-exclusion-operator":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateOption post /search/swag-customized-products-template-option":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateOptionPrice post /search/swag-customized-products-template-option-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateOptionValue post /search/swag-customized-products-template-option-value":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
        };
        responseCode: 200;
      };
  "searchSwagCustomizedProductsTemplateOptionValuePrice post /search/swag-customized-products-template-option-value-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
        };
        responseCode: 200;
      };
  "searchSwagDelayAction post /search/swag-delay-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagDelayAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagDelayAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"][];
        };
        responseCode: 200;
      };
  "searchSwagLanguagePackLanguage post /search/swag-language-pack-language":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagLanguagePackLanguage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagLanguagePackLanguage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationConnection post /search/swag-migration-connection":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationConnection"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationConnection"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationData post /search/swag-migration-data":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationData"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationData"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationGeneralSetting post /search/swag-migration-general-setting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationLogging post /search/swag-migration-logging":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationLogging"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationLogging"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationMapping post /search/swag-migration-mapping":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationMapping"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationMapping"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationMediaFile post /search/swag-migration-media-file":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationMediaFile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationMediaFile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"][];
        };
        responseCode: 200;
      };
  "searchSwagMigrationRun post /search/swag-migration-run":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationRun"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagMigrationRun"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"][];
        };
        responseCode: 200;
      };
  "searchSwagPaypalPosSalesChannel post /search/swag-paypal-pos-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"][];
        };
        responseCode: 200;
      };
  "searchSwagPaypalPosSalesChannelRun post /search/swag-paypal-pos-sales-channel-run":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"][];
        };
        responseCode: 200;
      };
  "searchSwagPaypalPosSalesChannelRunLog post /search/swag-paypal-pos-sales-channel-run-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
        };
        responseCode: 200;
      };
  "searchSwagPaypalTransactionReport post /search/swag-paypal-transaction-report":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalTransactionReport"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalTransactionReport"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"][];
        };
        responseCode: 200;
      };
  "searchSwagPaypalVaultToken post /search/swag-paypal-vault-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalVaultToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalVaultToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"][];
        };
        responseCode: 200;
      };
  "searchSwagPaypalVaultTokenMapping post /search/swag-paypal-vault-token-mapping":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"][];
        };
        responseCode: 200;
      };
  "searchSwagSocialShoppingCustomer post /search/swag-social-shopping-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"][];
        };
        responseCode: 200;
      };
  "searchSwagSocialShoppingOrder post /search/swag-social-shopping-order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingOrder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingOrder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"][];
        };
        responseCode: 200;
      };
  "searchSwagSocialShoppingProductError post /search/swag-social-shopping-product-error":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingProductError"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingProductError"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"][];
        };
        responseCode: 200;
      };
  "searchSwagSocialShoppingSalesChannel post /search/swag-social-shopping-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"][];
        };
        responseCode: 200;
      };
  "searchSystemConfig post /search/system-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SystemConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["SystemConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"][];
        };
        responseCode: 200;
      };
  "searchTag post /search/tag":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Tag"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Tag"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"][];
        };
        responseCode: 200;
      };
  "searchTax post /search/tax":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Tax"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Tax"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"][];
        };
        responseCode: 200;
      };
  "searchTaxProvider post /search/tax-provider":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["TaxProvider"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["TaxProvider"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"][];
        };
        responseCode: 200;
      };
  "searchTaxRule post /search/tax-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["TaxRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["TaxRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"][];
        };
        responseCode: 200;
      };
  "searchTaxRuleType post /search/tax-rule-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["TaxRuleType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["TaxRuleType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"][];
        };
        responseCode: 200;
      };
  "searchTheme post /search/theme":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Theme"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Theme"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"][];
        };
        responseCode: 200;
      };
  "searchUnit post /search/unit":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Unit"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Unit"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"][];
        };
        responseCode: 200;
      };
  "searchUser post /search/user":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["User"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["User"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"][];
        };
        responseCode: 200;
      };
  "searchUserAccessKey post /search/user-access-key":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["UserAccessKey"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["UserAccessKey"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"][];
        };
        responseCode: 200;
      };
  "searchUserConfig post /search/user-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["UserConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["UserConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"][];
        };
        responseCode: 200;
      };
  "searchUserRecovery post /search/user-recovery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["UserRecovery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["UserRecovery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"][];
        };
        responseCode: 200;
      };
  "searchWarehouse post /search/warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Warehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Warehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"][];
        };
        responseCode: 200;
      };
  "searchWarehouseGroup post /search/warehouse-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["WarehouseGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["WarehouseGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"][];
        };
        responseCode: 200;
      };
  "searchWebhook post /search/webhook":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Webhook"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["Webhook"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"][];
        };
        responseCode: 200;
      };
  "searchWebhookEventLog post /search/webhook-event-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["WebhookEventLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"][];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        body: components["schemas"]["Criteria"];
        response: {
          data?: components["schemas"]["WebhookEventLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        body: components["schemas"]["Criteria"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"][];
        };
        responseCode: 200;
      };
  "getSeoUrlList get /seo-url":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SeoUrl"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SeoUrl"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /seo-url?limit=25 */
            first?: unknown;
            /** @example /seo-url?limit=25&page=11 */
            last?: unknown;
            /** @example /seo-url?limit=25&page=4 */
            next?: unknown;
            /** @example /seo-url?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSeoUrl post /seo-url":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SeoUrl"];
        response: {
          data: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SeoUrl"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SeoUrl"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SeoUrl"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      };
  "getSeoUrlTemplateList get /seo-url-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SeoUrlTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SeoUrlTemplate"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /seo-url-template?limit=25 */
            first?: unknown;
            /** @example /seo-url-template?limit=25&page=11 */
            last?: unknown;
            /** @example /seo-url-template?limit=25&page=4 */
            next?: unknown;
            /** @example /seo-url-template?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSeoUrlTemplate post /seo-url-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SeoUrlTemplate"];
        response: {
          data: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SeoUrlTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SeoUrlTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SeoUrlTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      };
  "getSeoUrlTemplate get /seo-url-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the seo_url_template */
          id: string;
        };
        response: {
          data: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the seo_url_template */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      };
  "deleteSeoUrlTemplate delete /seo-url-template/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the seo_url_template */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSeoUrlTemplate patch /seo-url-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url_template */
          id: string;
        };
        body: components["schemas"]["SeoUrlTemplate"];
        response: {
          data: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url_template */
          id: string;
        };
        body: components["schemas"]["SeoUrlTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["SeoUrlTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["SeoUrlTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrlTemplate"];
        };
        responseCode: 200;
      };
  "getSeoUrl get /seo-url/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the seo_url */
          id: string;
        };
        response: {
          data: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the seo_url */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      };
  "deleteSeoUrl delete /seo-url/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the seo_url */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSeoUrl patch /seo-url/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url */
          id: string;
        };
        body: components["schemas"]["SeoUrl"];
        response: {
          data: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url */
          id: string;
        };
        body: components["schemas"]["SeoUrl"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url */
          id: string;
        };
        body: {
          data?: components["schemas"]["SeoUrl"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the seo_url */
          id: string;
        };
        body: {
          data?: components["schemas"]["SeoUrl"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SeoUrl"];
        };
        responseCode: 200;
      };
  "getShippingMethodList get /shipping-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ShippingMethod"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ShippingMethod"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /shipping-method?limit=25 */
            first?: unknown;
            /** @example /shipping-method?limit=25&page=11 */
            last?: unknown;
            /** @example /shipping-method?limit=25&page=4 */
            next?: unknown;
            /** @example /shipping-method?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createShippingMethod post /shipping-method":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ShippingMethod"];
        response: {
          data: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ShippingMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      };
  "getShippingMethodPriceList get /shipping-method-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["ShippingMethodPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["ShippingMethodPrice"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /shipping-method-price?limit=25 */
            first?: unknown;
            /** @example /shipping-method-price?limit=25&page=11 */
            last?: unknown;
            /** @example /shipping-method-price?limit=25&page=4 */
            next?: unknown;
            /** @example /shipping-method-price?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createShippingMethodPrice post /shipping-method-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ShippingMethodPrice"];
        response: {
          data: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["ShippingMethodPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ShippingMethodPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["ShippingMethodPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      };
  "getShippingMethodPrice get /shipping-method-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the shipping_method_price */
          id: string;
        };
        response: {
          data: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the shipping_method_price */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      };
  "deleteShippingMethodPrice delete /shipping-method-price/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the shipping_method_price */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateShippingMethodPrice patch /shipping-method-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method_price */
          id: string;
        };
        body: components["schemas"]["ShippingMethodPrice"];
        response: {
          data: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method_price */
          id: string;
        };
        body: components["schemas"]["ShippingMethodPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["ShippingMethodPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["ShippingMethodPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethodPrice"];
        };
        responseCode: 200;
      };
  "getShippingMethod get /shipping-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the shipping_method */
          id: string;
        };
        response: {
          data: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the shipping_method */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      };
  "deleteShippingMethod delete /shipping-method/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the shipping_method */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateShippingMethod patch /shipping-method/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method */
          id: string;
        };
        body: components["schemas"]["ShippingMethod"];
        response: {
          data: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method */
          id: string;
        };
        body: components["schemas"]["ShippingMethod"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["ShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the shipping_method */
          id: string;
        };
        body: {
          data?: components["schemas"]["ShippingMethod"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["ShippingMethod"];
        };
        responseCode: 200;
      };
  "getSnippetList get /snippet":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Snippet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Snippet"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /snippet?limit=25 */
            first?: unknown;
            /** @example /snippet?limit=25&page=11 */
            last?: unknown;
            /** @example /snippet?limit=25&page=4 */
            next?: unknown;
            /** @example /snippet?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSnippet post /snippet":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Snippet"];
        response: {
          data: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Snippet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Snippet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Snippet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      };
  "getSnippetSetList get /snippet-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SnippetSet"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SnippetSet"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /snippet-set?limit=25 */
            first?: unknown;
            /** @example /snippet-set?limit=25&page=11 */
            last?: unknown;
            /** @example /snippet-set?limit=25&page=4 */
            next?: unknown;
            /** @example /snippet-set?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSnippetSet post /snippet-set":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SnippetSet"];
        response: {
          data: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SnippetSet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SnippetSet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SnippetSet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      };
  "getSnippetSet get /snippet-set/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the snippet_set */
          id: string;
        };
        response: {
          data: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the snippet_set */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      };
  "deleteSnippetSet delete /snippet-set/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the snippet_set */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSnippetSet patch /snippet-set/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet_set */
          id: string;
        };
        body: components["schemas"]["SnippetSet"];
        response: {
          data: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet_set */
          id: string;
        };
        body: components["schemas"]["SnippetSet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet_set */
          id: string;
        };
        body: {
          data?: components["schemas"]["SnippetSet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet_set */
          id: string;
        };
        body: {
          data?: components["schemas"]["SnippetSet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SnippetSet"];
        };
        responseCode: 200;
      };
  "getSnippet get /snippet/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the snippet */
          id: string;
        };
        response: {
          data: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the snippet */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      };
  "deleteSnippet delete /snippet/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the snippet */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSnippet patch /snippet/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet */
          id: string;
        };
        body: components["schemas"]["Snippet"];
        response: {
          data: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet */
          id: string;
        };
        body: components["schemas"]["Snippet"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet */
          id: string;
        };
        body: {
          data?: components["schemas"]["Snippet"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the snippet */
          id: string;
        };
        body: {
          data?: components["schemas"]["Snippet"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Snippet"];
        };
        responseCode: 200;
      };
  "getSsoProviderList get /sso-provider":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SsoProvider"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SsoProvider"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /sso-provider?limit=25 */
            first?: unknown;
            /** @example /sso-provider?limit=25&page=11 */
            last?: unknown;
            /** @example /sso-provider?limit=25&page=4 */
            next?: unknown;
            /** @example /sso-provider?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSsoProvider post /sso-provider":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SsoProvider"];
        response: {
          data: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SsoProvider"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SsoProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SsoProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      };
  "getSsoProviderCustomerList get /sso-provider-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SsoProviderCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SsoProviderCustomer"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /sso-provider-customer?limit=25 */
            first?: unknown;
            /** @example /sso-provider-customer?limit=25&page=11 */
            last?: unknown;
            /** @example /sso-provider-customer?limit=25&page=4 */
            next?: unknown;
            /** @example /sso-provider-customer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSsoProviderCustomer post /sso-provider-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SsoProviderCustomer"];
        response: {
          data: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SsoProviderCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SsoProviderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SsoProviderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      };
  "getSsoProviderCustomer get /sso-provider-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the sso_provider_customer */
          id: string;
        };
        response: {
          data: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the sso_provider_customer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      };
  "deleteSsoProviderCustomer delete /sso-provider-customer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the sso_provider_customer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSsoProviderCustomer patch /sso-provider-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider_customer */
          id: string;
        };
        body: components["schemas"]["SsoProviderCustomer"];
        response: {
          data: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider_customer */
          id: string;
        };
        body: components["schemas"]["SsoProviderCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["SsoProviderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["SsoProviderCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProviderCustomer"];
        };
        responseCode: 200;
      };
  "getSsoProvider get /sso-provider/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the sso_provider */
          id: string;
        };
        response: {
          data: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the sso_provider */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      };
  "deleteSsoProvider delete /sso-provider/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the sso_provider */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSsoProvider patch /sso-provider/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider */
          id: string;
        };
        body: components["schemas"]["SsoProvider"];
        response: {
          data: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider */
          id: string;
        };
        body: components["schemas"]["SsoProvider"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider */
          id: string;
        };
        body: {
          data?: components["schemas"]["SsoProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the sso_provider */
          id: string;
        };
        body: {
          data?: components["schemas"]["SsoProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SsoProvider"];
        };
        responseCode: 200;
      };
  "getStateMachineList get /state-machine":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["StateMachine"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["StateMachine"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /state-machine?limit=25 */
            first?: unknown;
            /** @example /state-machine?limit=25&page=11 */
            last?: unknown;
            /** @example /state-machine?limit=25&page=4 */
            next?: unknown;
            /** @example /state-machine?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createStateMachine post /state-machine":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachine"];
        response: {
          data: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachine"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachine"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachine"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      };
  "getStateMachineHistoryList get /state-machine-history":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["StateMachineHistory"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["StateMachineHistory"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /state-machine-history?limit=25 */
            first?: unknown;
            /** @example /state-machine-history?limit=25&page=11 */
            last?: unknown;
            /** @example /state-machine-history?limit=25&page=4 */
            next?: unknown;
            /** @example /state-machine-history?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createStateMachineHistory post /state-machine-history":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachineHistory"];
        response: {
          data: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachineHistory"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachineHistory"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachineHistory"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      };
  "getStateMachineHistory get /state-machine-history/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the state_machine_history */
          id: string;
        };
        response: {
          data: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the state_machine_history */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      };
  "deleteStateMachineHistory delete /state-machine-history/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the state_machine_history */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateStateMachineHistory patch /state-machine-history/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_history */
          id: string;
        };
        body: components["schemas"]["StateMachineHistory"];
        response: {
          data: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_history */
          id: string;
        };
        body: components["schemas"]["StateMachineHistory"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_history */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachineHistory"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_history */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachineHistory"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineHistory"];
        };
        responseCode: 200;
      };
  "getStateMachineStateList get /state-machine-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["StateMachineState"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["StateMachineState"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /state-machine-state?limit=25 */
            first?: unknown;
            /** @example /state-machine-state?limit=25&page=11 */
            last?: unknown;
            /** @example /state-machine-state?limit=25&page=4 */
            next?: unknown;
            /** @example /state-machine-state?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createStateMachineState post /state-machine-state":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachineState"];
        response: {
          data: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachineState"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachineState"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachineState"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      };
  "getStateMachineState get /state-machine-state/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the state_machine_state */
          id: string;
        };
        response: {
          data: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the state_machine_state */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      };
  "deleteStateMachineState delete /state-machine-state/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the state_machine_state */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateStateMachineState patch /state-machine-state/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_state */
          id: string;
        };
        body: components["schemas"]["StateMachineState"];
        response: {
          data: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_state */
          id: string;
        };
        body: components["schemas"]["StateMachineState"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_state */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachineState"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_state */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachineState"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineState"];
        };
        responseCode: 200;
      };
  "getStateMachineTransitionList get /state-machine-transition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["StateMachineTransition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["StateMachineTransition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /state-machine-transition?limit=25 */
            first?: unknown;
            /** @example /state-machine-transition?limit=25&page=11 */
            last?: unknown;
            /** @example /state-machine-transition?limit=25&page=4 */
            next?: unknown;
            /** @example /state-machine-transition?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createStateMachineTransition post /state-machine-transition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachineTransition"];
        response: {
          data: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["StateMachineTransition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachineTransition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["StateMachineTransition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      };
  "getStateMachineTransition get /state-machine-transition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the state_machine_transition */
          id: string;
        };
        response: {
          data: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the state_machine_transition */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      };
  "deleteStateMachineTransition delete /state-machine-transition/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the state_machine_transition */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateStateMachineTransition patch /state-machine-transition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_transition */
          id: string;
        };
        body: components["schemas"]["StateMachineTransition"];
        response: {
          data: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_transition */
          id: string;
        };
        body: components["schemas"]["StateMachineTransition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_transition */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachineTransition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine_transition */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachineTransition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachineTransition"];
        };
        responseCode: 200;
      };
  "getStateMachine get /state-machine/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the state_machine */
          id: string;
        };
        response: {
          data: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the state_machine */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      };
  "deleteStateMachine delete /state-machine/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the state_machine */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateStateMachine patch /state-machine/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine */
          id: string;
        };
        body: components["schemas"]["StateMachine"];
        response: {
          data: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine */
          id: string;
        };
        body: components["schemas"]["StateMachine"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachine"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the state_machine */
          id: string;
        };
        body: {
          data?: components["schemas"]["StateMachine"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["StateMachine"];
        };
        responseCode: 200;
      };
  "getSubscriptionList get /subscription":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Subscription"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Subscription"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /subscription?limit=25 */
            first?: unknown;
            /** @example /subscription?limit=25&page=11 */
            last?: unknown;
            /** @example /subscription?limit=25&page=4 */
            next?: unknown;
            /** @example /subscription?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSubscription post /subscription":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Subscription"];
        response: {
          data: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Subscription"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Subscription"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Subscription"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      };
  "getSubscriptionAddressList get /subscription-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SubscriptionAddress"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SubscriptionAddress"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /subscription-address?limit=25 */
            first?: unknown;
            /** @example /subscription-address?limit=25&page=11 */
            last?: unknown;
            /** @example /subscription-address?limit=25&page=4 */
            next?: unknown;
            /** @example /subscription-address?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSubscriptionAddress post /subscription-address":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionAddress"];
        response: {
          data: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      };
  "getSubscriptionAddress get /subscription-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the subscription_address */
          id: string;
        };
        response: {
          data: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the subscription_address */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      };
  "deleteSubscriptionAddress delete /subscription-address/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the subscription_address */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSubscriptionAddress patch /subscription-address/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_address */
          id: string;
        };
        body: components["schemas"]["SubscriptionAddress"];
        response: {
          data: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_address */
          id: string;
        };
        body: components["schemas"]["SubscriptionAddress"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_address */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionAddress"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionAddress"];
        };
        responseCode: 200;
      };
  "getSubscriptionCustomerList get /subscription-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SubscriptionCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SubscriptionCustomer"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /subscription-customer?limit=25 */
            first?: unknown;
            /** @example /subscription-customer?limit=25&page=11 */
            last?: unknown;
            /** @example /subscription-customer?limit=25&page=4 */
            next?: unknown;
            /** @example /subscription-customer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSubscriptionCustomer post /subscription-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionCustomer"];
        response: {
          data: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      };
  "getSubscriptionCustomer get /subscription-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the subscription_customer */
          id: string;
        };
        response: {
          data: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the subscription_customer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      };
  "deleteSubscriptionCustomer delete /subscription-customer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the subscription_customer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSubscriptionCustomer patch /subscription-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_customer */
          id: string;
        };
        body: components["schemas"]["SubscriptionCustomer"];
        response: {
          data: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_customer */
          id: string;
        };
        body: components["schemas"]["SubscriptionCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionCustomer"];
        };
        responseCode: 200;
      };
  "getSubscriptionIntervalList get /subscription-interval":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SubscriptionInterval"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SubscriptionInterval"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /subscription-interval?limit=25 */
            first?: unknown;
            /** @example /subscription-interval?limit=25&page=11 */
            last?: unknown;
            /** @example /subscription-interval?limit=25&page=4 */
            next?: unknown;
            /** @example /subscription-interval?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSubscriptionInterval post /subscription-interval":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionInterval"];
        response: {
          data: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionInterval"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionInterval"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionInterval"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      };
  "getSubscriptionInterval get /subscription-interval/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the subscription_interval */
          id: string;
        };
        response: {
          data: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the subscription_interval */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      };
  "deleteSubscriptionInterval delete /subscription-interval/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the subscription_interval */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSubscriptionInterval patch /subscription-interval/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_interval */
          id: string;
        };
        body: components["schemas"]["SubscriptionInterval"];
        response: {
          data: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_interval */
          id: string;
        };
        body: components["schemas"]["SubscriptionInterval"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_interval */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionInterval"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_interval */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionInterval"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionInterval"];
        };
        responseCode: 200;
      };
  "getSubscriptionPlanList get /subscription-plan":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SubscriptionPlan"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SubscriptionPlan"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /subscription-plan?limit=25 */
            first?: unknown;
            /** @example /subscription-plan?limit=25&page=11 */
            last?: unknown;
            /** @example /subscription-plan?limit=25&page=4 */
            next?: unknown;
            /** @example /subscription-plan?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSubscriptionPlan post /subscription-plan":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionPlan"];
        response: {
          data: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SubscriptionPlan"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionPlan"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SubscriptionPlan"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      };
  "getSubscriptionPlan get /subscription-plan/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the subscription_plan */
          id: string;
        };
        response: {
          data: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the subscription_plan */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      };
  "deleteSubscriptionPlan delete /subscription-plan/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the subscription_plan */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSubscriptionPlan patch /subscription-plan/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_plan */
          id: string;
        };
        body: components["schemas"]["SubscriptionPlan"];
        response: {
          data: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_plan */
          id: string;
        };
        body: components["schemas"]["SubscriptionPlan"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_plan */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionPlan"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription_plan */
          id: string;
        };
        body: {
          data?: components["schemas"]["SubscriptionPlan"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SubscriptionPlan"];
        };
        responseCode: 200;
      };
  "getSubscription get /subscription/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the subscription */
          id: string;
        };
        response: {
          data: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the subscription */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      };
  "deleteSubscription delete /subscription/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the subscription */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSubscription patch /subscription/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription */
          id: string;
        };
        body: components["schemas"]["Subscription"];
        response: {
          data: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription */
          id: string;
        };
        body: components["schemas"]["Subscription"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription */
          id: string;
        };
        body: {
          data?: components["schemas"]["Subscription"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the subscription */
          id: string;
        };
        body: {
          data?: components["schemas"]["Subscription"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Subscription"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsBlockRuleList get /swag-cms-extensions-block-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsBlockRule"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-block-rule?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-block-rule?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-block-rule?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-block-rule?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsBlockRule post /swag-cms-extensions-block-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsBlockRule"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsBlockRule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsBlockRule get /swag-cms-extensions-block-rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_block_rule */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_block_rule */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsBlockRule delete /swag-cms-extensions-block-rule/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_block_rule */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsBlockRule patch /swag-cms-extensions-block-rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_block_rule */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsBlockRule"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_block_rule */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsBlockRule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_block_rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_block_rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsBlockRule"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsFormList get /swag-cms-extensions-form":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsForm"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsForm"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-form?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-form?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-form?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-form?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsForm post /swag-cms-extensions-form":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsForm"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsForm"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsFormGroupList get /swag-cms-extensions-form-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsFormGroup"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-form-group?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-form-group?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-form-group?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-form-group?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsFormGroup post /swag-cms-extensions-form-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroup"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsFormGroupFieldList get /swag-cms-extensions-form-group-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsFormGroupField"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-form-group-field?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-form-group-field?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-form-group-field?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-form-group-field?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsFormGroupField post /swag-cms-extensions-form-group-field":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsFormGroupField get /swag-cms-extensions-form-group-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group_field */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group_field */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsFormGroupField delete /swag-cms-extensions-form-group-field/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_form_group_field */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsFormGroupField patch /swag-cms-extensions-form-group-field/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group_field */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group_field */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group_field */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroupField"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsFormGroup get /swag-cms-extensions-form-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsFormGroup delete /swag-cms-extensions-form-group/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_form_group */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsFormGroup patch /swag-cms-extensions-form-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroup"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsFormGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsFormGroup"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsForm get /swag-cms-extensions-form/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_form */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_form */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsForm delete /swag-cms-extensions-form/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_form */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsForm patch /swag-cms-extensions-form/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsForm"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsForm"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_form */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsForm"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsQuickviewList get /swag-cms-extensions-quickview":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsQuickview"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-quickview?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-quickview?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-quickview?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-quickview?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsQuickview post /swag-cms-extensions-quickview":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsQuickview"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsQuickview"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsQuickview get /swag-cms-extensions-quickview/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_quickview */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_quickview */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsQuickview delete /swag-cms-extensions-quickview/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_quickview */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsQuickview patch /swag-cms-extensions-quickview/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_quickview */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsQuickview"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_quickview */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsQuickview"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_quickview */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_quickview */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsQuickview"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsScrollNavigationList get /swag-cms-extensions-scroll-navigation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsScrollNavigation"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-scroll-navigation?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-scroll-navigation?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-scroll-navigation?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-scroll-navigation?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsScrollNavigation post /swag-cms-extensions-scroll-navigation":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsScrollNavigationPageSettingsList get /swag-cms-extensions-scroll-navigation-page-settings":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-cms-extensions-scroll-navigation-page-settings?limit=25 */
            first?: unknown;
            /** @example /swag-cms-extensions-scroll-navigation-page-settings?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-cms-extensions-scroll-navigation-page-settings?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-cms-extensions-scroll-navigation-page-settings?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCmsExtensionsScrollNavigationPageSettings post /swag-cms-extensions-scroll-navigation-page-settings":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsScrollNavigationPageSettings get /swag-cms-extensions-scroll-navigation-page-settings/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsScrollNavigationPageSettings delete /swag-cms-extensions-scroll-navigation-page-settings/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsScrollNavigationPageSettings patch /swag-cms-extensions-scroll-navigation-page-settings/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation_page_settings */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigationPageSettings"];
        };
        responseCode: 200;
      };
  "getSwagCmsExtensionsScrollNavigation get /swag-cms-extensions-scroll-navigation/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      };
  "deleteSwagCmsExtensionsScrollNavigation delete /swag-cms-extensions-scroll-navigation/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_cms_extensions_scroll_navigation */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCmsExtensionsScrollNavigation patch /swag-cms-extensions-scroll-navigation/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation */
          id: string;
        };
        body: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_cms_extensions_scroll_navigation */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCmsExtensionsScrollNavigation"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateList get /swag-customized-products-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplate"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplate post /swag-customized-products-template":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplate"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateConfigurationList get /swag-customized-products-template-configuration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateConfiguration"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-configuration?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-configuration?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-configuration?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-configuration?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateConfiguration post /swag-customized-products-template-configuration":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateConfigurationShareList get /swag-customized-products-template-configuration-share":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-configuration-share?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-configuration-share?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-configuration-share?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-configuration-share?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateConfigurationShare post /swag-customized-products-template-configuration-share":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateConfigurationShare get /swag-customized-products-template-configuration-share/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration_share */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration_share */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateConfigurationShare delete /swag-customized-products-template-configuration-share/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_configuration_share */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateConfigurationShare patch /swag-customized-products-template-configuration-share/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration_share */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration_share */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration_share */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration_share */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfigurationShare"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateConfiguration get /swag-customized-products-template-configuration/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateConfiguration delete /swag-customized-products-template-configuration/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_configuration */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateConfiguration patch /swag-customized-products-template-configuration/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_configuration */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateConfiguration"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateExclusionList get /swag-customized-products-template-exclusion":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateExclusion"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-exclusion?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-exclusion?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-exclusion?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-exclusion?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateExclusion post /swag-customized-products-template-exclusion":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateExclusionConditionList get /swag-customized-products-template-exclusion-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-exclusion-condition?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-exclusion-condition?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-exclusion-condition?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-exclusion-condition?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateExclusionCondition post /swag-customized-products-template-exclusion-condition":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateExclusionCondition get /swag-customized-products-template-exclusion-condition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_condition */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_condition */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateExclusionCondition delete /swag-customized-products-template-exclusion-condition/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_exclusion_condition */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateExclusionCondition patch /swag-customized-products-template-exclusion-condition/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_condition */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_condition */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_condition */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_condition */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionCondition"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateExclusionOperatorList get /swag-customized-products-template-exclusion-operator":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-exclusion-operator?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-exclusion-operator?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-exclusion-operator?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-exclusion-operator?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateExclusionOperator post /swag-customized-products-template-exclusion-operator":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateExclusionOperator get /swag-customized-products-template-exclusion-operator/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_operator */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_operator */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateExclusionOperator delete /swag-customized-products-template-exclusion-operator/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_exclusion_operator */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateExclusionOperator patch /swag-customized-products-template-exclusion-operator/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_operator */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_operator */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_operator */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion_operator */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusionOperator"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateExclusion get /swag-customized-products-template-exclusion/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateExclusion delete /swag-customized-products-template-exclusion/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_exclusion */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateExclusion patch /swag-customized-products-template-exclusion/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_exclusion */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateExclusion"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionList get /swag-customized-products-template-option":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateOption"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-option?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-option?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-option?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-option?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateOption post /swag-customized-products-template-option":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionPriceList get /swag-customized-products-template-option-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-option-price?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-option-price?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-option-price?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-option-price?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateOptionPrice post /swag-customized-products-template-option-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionPrice get /swag-customized-products-template-option-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_price */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_price */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateOptionPrice delete /swag-customized-products-template-option-price/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_option_price */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateOptionPrice patch /swag-customized-products-template-option-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_price */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_price */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionPrice"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionValueList get /swag-customized-products-template-option-value":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateOptionValue"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-option-value?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-option-value?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-option-value?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-option-value?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateOptionValue post /swag-customized-products-template-option-value":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionValuePriceList get /swag-customized-products-template-option-value-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-customized-products-template-option-value-price?limit=25 */
            first?: unknown;
            /** @example /swag-customized-products-template-option-value-price?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-customized-products-template-option-value-price?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-customized-products-template-option-value-price?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagCustomizedProductsTemplateOptionValuePrice post /swag-customized-products-template-option-value-price":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionValuePrice get /swag-customized-products-template-option-value-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value_price */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value_price */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateOptionValuePrice delete /swag-customized-products-template-option-value-price/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_option_value_price */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateOptionValuePrice patch /swag-customized-products-template-option-value-price/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value_price */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value_price */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value_price */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValuePrice"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOptionValue get /swag-customized-products-template-option-value/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateOptionValue delete /swag-customized-products-template-option-value/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_option_value */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateOptionValue patch /swag-customized-products-template-option-value/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option_value */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOptionValue"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplateOption get /swag-customized-products-template-option/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template_option */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplateOption delete /swag-customized-products-template-option/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template_option */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplateOption patch /swag-customized-products-template-option/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template_option */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplateOption"];
        };
        responseCode: 200;
      };
  "getSwagCustomizedProductsTemplate get /swag-customized-products-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_customized_products_template */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_customized_products_template */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      };
  "deleteSwagCustomizedProductsTemplate delete /swag-customized-products-template/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_customized_products_template */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagCustomizedProductsTemplate patch /swag-customized-products-template/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplate"];
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template */
          id: string;
        };
        body: components["schemas"]["SwagCustomizedProductsTemplate"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_customized_products_template */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagCustomizedProductsTemplate"];
        };
        responseCode: 200;
      };
  "getSwagDelayActionList get /swag-delay-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagDelayAction"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagDelayAction"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-delay-action?limit=25 */
            first?: unknown;
            /** @example /swag-delay-action?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-delay-action?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-delay-action?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagDelayAction post /swag-delay-action":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagDelayAction"];
        response: {
          data: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagDelayAction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagDelayAction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagDelayAction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      };
  "getSwagDelayAction get /swag-delay-action/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_delay_action */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_delay_action */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      };
  "deleteSwagDelayAction delete /swag-delay-action/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_delay_action */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagDelayAction patch /swag-delay-action/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_delay_action */
          id: string;
        };
        body: components["schemas"]["SwagDelayAction"];
        response: {
          data: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_delay_action */
          id: string;
        };
        body: components["schemas"]["SwagDelayAction"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_delay_action */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagDelayAction"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_delay_action */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagDelayAction"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagDelayAction"];
        };
        responseCode: 200;
      };
  "getSwagLanguagePackLanguageList get /swag-language-pack-language":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagLanguagePackLanguage"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagLanguagePackLanguage"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-language-pack-language?limit=25 */
            first?: unknown;
            /** @example /swag-language-pack-language?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-language-pack-language?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-language-pack-language?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagLanguagePackLanguage post /swag-language-pack-language":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagLanguagePackLanguage"];
        response: {
          data: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagLanguagePackLanguage"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      };
  "getSwagLanguagePackLanguage get /swag-language-pack-language/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_language_pack_language */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_language_pack_language */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      };
  "deleteSwagLanguagePackLanguage delete /swag-language-pack-language/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_language_pack_language */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagLanguagePackLanguage patch /swag-language-pack-language/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_language_pack_language */
          id: string;
        };
        body: components["schemas"]["SwagLanguagePackLanguage"];
        response: {
          data: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_language_pack_language */
          id: string;
        };
        body: components["schemas"]["SwagLanguagePackLanguage"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_language_pack_language */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_language_pack_language */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagLanguagePackLanguage"];
        };
        responseCode: 200;
      };
  "getSwagMigrationConnectionList get /swag-migration-connection":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationConnection"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationConnection"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-connection?limit=25 */
            first?: unknown;
            /** @example /swag-migration-connection?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-connection?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-connection?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationConnection post /swag-migration-connection":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationConnection"];
        response: {
          data: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationConnection"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationConnection"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationConnection"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      };
  "getSwagMigrationConnection get /swag-migration-connection/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_connection */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_connection */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationConnection delete /swag-migration-connection/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_connection */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationConnection patch /swag-migration-connection/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_connection */
          id: string;
        };
        body: components["schemas"]["SwagMigrationConnection"];
        response: {
          data: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_connection */
          id: string;
        };
        body: components["schemas"]["SwagMigrationConnection"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_connection */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationConnection"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_connection */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationConnection"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationConnection"];
        };
        responseCode: 200;
      };
  "getSwagMigrationDataList get /swag-migration-data":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationData"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationData"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-data?limit=25 */
            first?: unknown;
            /** @example /swag-migration-data?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-data?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-data?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationData post /swag-migration-data":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationData"];
        response: {
          data: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationData"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationData"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationData"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      };
  "getSwagMigrationData get /swag-migration-data/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_data */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_data */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationData delete /swag-migration-data/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_data */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationData patch /swag-migration-data/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_data */
          id: string;
        };
        body: components["schemas"]["SwagMigrationData"];
        response: {
          data: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_data */
          id: string;
        };
        body: components["schemas"]["SwagMigrationData"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_data */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationData"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_data */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationData"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationData"];
        };
        responseCode: 200;
      };
  "getSwagMigrationGeneralSettingList get /swag-migration-general-setting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationGeneralSetting"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-general-setting?limit=25 */
            first?: unknown;
            /** @example /swag-migration-general-setting?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-general-setting?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-general-setting?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationGeneralSetting post /swag-migration-general-setting":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationGeneralSetting"];
        response: {
          data: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationGeneralSetting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      };
  "getSwagMigrationGeneralSetting get /swag-migration-general-setting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_general_setting */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_general_setting */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationGeneralSetting delete /swag-migration-general-setting/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_general_setting */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationGeneralSetting patch /swag-migration-general-setting/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_general_setting */
          id: string;
        };
        body: components["schemas"]["SwagMigrationGeneralSetting"];
        response: {
          data: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_general_setting */
          id: string;
        };
        body: components["schemas"]["SwagMigrationGeneralSetting"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_general_setting */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_general_setting */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationGeneralSetting"];
        };
        responseCode: 200;
      };
  "getSwagMigrationLoggingList get /swag-migration-logging":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationLogging"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationLogging"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-logging?limit=25 */
            first?: unknown;
            /** @example /swag-migration-logging?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-logging?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-logging?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationLogging post /swag-migration-logging":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationLogging"];
        response: {
          data: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationLogging"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationLogging"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationLogging"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      };
  "getSwagMigrationLogging get /swag-migration-logging/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_logging */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_logging */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationLogging delete /swag-migration-logging/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_logging */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationLogging patch /swag-migration-logging/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_logging */
          id: string;
        };
        body: components["schemas"]["SwagMigrationLogging"];
        response: {
          data: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_logging */
          id: string;
        };
        body: components["schemas"]["SwagMigrationLogging"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_logging */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationLogging"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_logging */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationLogging"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationLogging"];
        };
        responseCode: 200;
      };
  "getSwagMigrationMappingList get /swag-migration-mapping":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationMapping"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationMapping"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-mapping?limit=25 */
            first?: unknown;
            /** @example /swag-migration-mapping?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-mapping?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-mapping?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationMapping post /swag-migration-mapping":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationMapping"];
        response: {
          data: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationMapping"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      };
  "getSwagMigrationMapping get /swag-migration-mapping/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_mapping */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_mapping */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationMapping delete /swag-migration-mapping/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_mapping */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationMapping patch /swag-migration-mapping/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_mapping */
          id: string;
        };
        body: components["schemas"]["SwagMigrationMapping"];
        response: {
          data: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_mapping */
          id: string;
        };
        body: components["schemas"]["SwagMigrationMapping"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_mapping */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_mapping */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMapping"];
        };
        responseCode: 200;
      };
  "getSwagMigrationMediaFileList get /swag-migration-media-file":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationMediaFile"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationMediaFile"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-media-file?limit=25 */
            first?: unknown;
            /** @example /swag-migration-media-file?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-media-file?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-media-file?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationMediaFile post /swag-migration-media-file":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationMediaFile"];
        response: {
          data: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationMediaFile"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationMediaFile"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationMediaFile"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      };
  "getSwagMigrationMediaFile get /swag-migration-media-file/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_media_file */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_media_file */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationMediaFile delete /swag-migration-media-file/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_media_file */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationMediaFile patch /swag-migration-media-file/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_media_file */
          id: string;
        };
        body: components["schemas"]["SwagMigrationMediaFile"];
        response: {
          data: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_media_file */
          id: string;
        };
        body: components["schemas"]["SwagMigrationMediaFile"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_media_file */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationMediaFile"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_media_file */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationMediaFile"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationMediaFile"];
        };
        responseCode: 200;
      };
  "getSwagMigrationRunList get /swag-migration-run":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagMigrationRun"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagMigrationRun"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-migration-run?limit=25 */
            first?: unknown;
            /** @example /swag-migration-run?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-migration-run?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-migration-run?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagMigrationRun post /swag-migration-run":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationRun"];
        response: {
          data: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagMigrationRun"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationRun"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagMigrationRun"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      };
  "getSwagMigrationRun get /swag-migration-run/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_migration_run */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_migration_run */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      };
  "deleteSwagMigrationRun delete /swag-migration-run/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_migration_run */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagMigrationRun patch /swag-migration-run/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_run */
          id: string;
        };
        body: components["schemas"]["SwagMigrationRun"];
        response: {
          data: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_run */
          id: string;
        };
        body: components["schemas"]["SwagMigrationRun"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_run */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationRun"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_migration_run */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagMigrationRun"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagMigrationRun"];
        };
        responseCode: 200;
      };
  "getSwagPaypalPosSalesChannelList get /swag-paypal-pos-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagPaypalPosSalesChannel"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-paypal-pos-sales-channel?limit=25 */
            first?: unknown;
            /** @example /swag-paypal-pos-sales-channel?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-paypal-pos-sales-channel?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-paypal-pos-sales-channel?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagPaypalPosSalesChannel post /swag-paypal-pos-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalPosSalesChannel"];
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalPosSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      };
  "getSwagPaypalPosSalesChannelRunList get /swag-paypal-pos-sales-channel-run":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagPaypalPosSalesChannelRun"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-paypal-pos-sales-channel-run?limit=25 */
            first?: unknown;
            /** @example /swag-paypal-pos-sales-channel-run?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-paypal-pos-sales-channel-run?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-paypal-pos-sales-channel-run?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagPaypalPosSalesChannelRun post /swag-paypal-pos-sales-channel-run":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      };
  "getSwagPaypalPosSalesChannelRunLogList get /swag-paypal-pos-sales-channel-run-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagPaypalPosSalesChannelRunLog"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-paypal-pos-sales-channel-run-log?limit=25 */
            first?: unknown;
            /** @example /swag-paypal-pos-sales-channel-run-log?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-paypal-pos-sales-channel-run-log?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-paypal-pos-sales-channel-run-log?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagPaypalPosSalesChannelRunLog post /swag-paypal-pos-sales-channel-run-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      };
  "getSwagPaypalPosSalesChannelRunLog get /swag-paypal-pos-sales-channel-run-log/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run_log */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run_log */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      };
  "deleteSwagPaypalPosSalesChannelRunLog delete /swag-paypal-pos-sales-channel-run-log/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_paypal_pos_sales_channel_run_log */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagPaypalPosSalesChannelRunLog patch /swag-paypal-pos-sales-channel-run-log/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run_log */
          id: string;
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run_log */
          id: string;
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run_log */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run_log */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRunLog"];
        };
        responseCode: 200;
      };
  "getSwagPaypalPosSalesChannelRun get /swag-paypal-pos-sales-channel-run/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      };
  "deleteSwagPaypalPosSalesChannelRun delete /swag-paypal-pos-sales-channel-run/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_paypal_pos_sales_channel_run */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagPaypalPosSalesChannelRun patch /swag-paypal-pos-sales-channel-run/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run */
          id: string;
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run */
          id: string;
        };
        body: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel_run */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannelRun"];
        };
        responseCode: 200;
      };
  "getSwagPaypalPosSalesChannel get /swag-paypal-pos-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      };
  "deleteSwagPaypalPosSalesChannel delete /swag-paypal-pos-sales-channel/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_paypal_pos_sales_channel */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagPaypalPosSalesChannel patch /swag-paypal-pos-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel */
          id: string;
        };
        body: components["schemas"]["SwagPaypalPosSalesChannel"];
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel */
          id: string;
        };
        body: components["schemas"]["SwagPaypalPosSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_pos_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalPosSalesChannel"];
        };
        responseCode: 200;
      };
  "getSwagPaypalTransactionReportList get /swag-paypal-transaction-report":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagPaypalTransactionReport"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagPaypalTransactionReport"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-paypal-transaction-report?limit=25 */
            first?: unknown;
            /** @example /swag-paypal-transaction-report?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-paypal-transaction-report?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-paypal-transaction-report?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagPaypalTransactionReport post /swag-paypal-transaction-report":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalTransactionReport"];
        response: {
          data: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalTransactionReport"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      };
  "getSwagPaypalTransactionReport get /swag-paypal-transaction-report/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_paypal_transaction_report */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_paypal_transaction_report */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      };
  "deleteSwagPaypalTransactionReport delete /swag-paypal-transaction-report/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_paypal_transaction_report */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagPaypalTransactionReport patch /swag-paypal-transaction-report/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_transaction_report */
          id: string;
        };
        body: components["schemas"]["SwagPaypalTransactionReport"];
        response: {
          data: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_transaction_report */
          id: string;
        };
        body: components["schemas"]["SwagPaypalTransactionReport"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_transaction_report */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_transaction_report */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalTransactionReport"];
        };
        responseCode: 200;
      };
  "getSwagPaypalVaultTokenList get /swag-paypal-vault-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagPaypalVaultToken"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagPaypalVaultToken"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-paypal-vault-token?limit=25 */
            first?: unknown;
            /** @example /swag-paypal-vault-token?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-paypal-vault-token?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-paypal-vault-token?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagPaypalVaultToken post /swag-paypal-vault-token":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalVaultToken"];
        response: {
          data: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalVaultToken"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultToken"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultToken"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      };
  "getSwagPaypalVaultTokenMappingList get /swag-paypal-vault-token-mapping":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagPaypalVaultTokenMapping"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-paypal-vault-token-mapping?limit=25 */
            first?: unknown;
            /** @example /swag-paypal-vault-token-mapping?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-paypal-vault-token-mapping?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-paypal-vault-token-mapping?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagPaypalVaultTokenMapping post /swag-paypal-vault-token-mapping":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalVaultTokenMapping"];
        response: {
          data: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagPaypalVaultTokenMapping"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      };
  "getSwagPaypalVaultTokenMapping get /swag-paypal-vault-token-mapping/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_paypal_vault_token_mapping */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_paypal_vault_token_mapping */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      };
  "deleteSwagPaypalVaultTokenMapping delete /swag-paypal-vault-token-mapping/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_paypal_vault_token_mapping */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagPaypalVaultTokenMapping patch /swag-paypal-vault-token-mapping/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token_mapping */
          id: string;
        };
        body: components["schemas"]["SwagPaypalVaultTokenMapping"];
        response: {
          data: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token_mapping */
          id: string;
        };
        body: components["schemas"]["SwagPaypalVaultTokenMapping"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token_mapping */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token_mapping */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultTokenMapping"];
        };
        responseCode: 200;
      };
  "getSwagPaypalVaultToken get /swag-paypal-vault-token/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_paypal_vault_token */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_paypal_vault_token */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      };
  "deleteSwagPaypalVaultToken delete /swag-paypal-vault-token/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_paypal_vault_token */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagPaypalVaultToken patch /swag-paypal-vault-token/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token */
          id: string;
        };
        body: components["schemas"]["SwagPaypalVaultToken"];
        response: {
          data: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token */
          id: string;
        };
        body: components["schemas"]["SwagPaypalVaultToken"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultToken"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_paypal_vault_token */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagPaypalVaultToken"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagPaypalVaultToken"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingCustomerList get /swag-social-shopping-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagSocialShoppingCustomer"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-social-shopping-customer?limit=25 */
            first?: unknown;
            /** @example /swag-social-shopping-customer?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-social-shopping-customer?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-social-shopping-customer?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagSocialShoppingCustomer post /swag-social-shopping-customer":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingCustomer"];
        response: {
          data: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingCustomer get /swag-social-shopping-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_social_shopping_customer */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_social_shopping_customer */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      };
  "deleteSwagSocialShoppingCustomer delete /swag-social-shopping-customer/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_social_shopping_customer */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagSocialShoppingCustomer patch /swag-social-shopping-customer/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_customer */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingCustomer"];
        response: {
          data: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_customer */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingCustomer"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_customer */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingCustomer"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingOrderList get /swag-social-shopping-order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagSocialShoppingOrder"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagSocialShoppingOrder"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-social-shopping-order?limit=25 */
            first?: unknown;
            /** @example /swag-social-shopping-order?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-social-shopping-order?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-social-shopping-order?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagSocialShoppingOrder post /swag-social-shopping-order":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingOrder"];
        response: {
          data: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingOrder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingOrder get /swag-social-shopping-order/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_social_shopping_order */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_social_shopping_order */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      };
  "deleteSwagSocialShoppingOrder delete /swag-social-shopping-order/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_social_shopping_order */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagSocialShoppingOrder patch /swag-social-shopping-order/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_order */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingOrder"];
        response: {
          data: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_order */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingOrder"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_order */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_order */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingOrder"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingProductErrorList get /swag-social-shopping-product-error":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagSocialShoppingProductError"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagSocialShoppingProductError"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-social-shopping-product-error?limit=25 */
            first?: unknown;
            /** @example /swag-social-shopping-product-error?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-social-shopping-product-error?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-social-shopping-product-error?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagSocialShoppingProductError post /swag-social-shopping-product-error":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingProductError"];
        response: {
          data: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingProductError"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingProductError get /swag-social-shopping-product-error/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_social_shopping_product_error */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_social_shopping_product_error */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      };
  "deleteSwagSocialShoppingProductError delete /swag-social-shopping-product-error/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_social_shopping_product_error */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagSocialShoppingProductError patch /swag-social-shopping-product-error/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_product_error */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingProductError"];
        response: {
          data: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_product_error */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingProductError"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_product_error */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_product_error */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingProductError"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingSalesChannelList get /swag-social-shopping-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SwagSocialShoppingSalesChannel"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /swag-social-shopping-sales-channel?limit=25 */
            first?: unknown;
            /** @example /swag-social-shopping-sales-channel?limit=25&page=11 */
            last?: unknown;
            /** @example /swag-social-shopping-sales-channel?limit=25&page=4 */
            next?: unknown;
            /** @example /swag-social-shopping-sales-channel?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSwagSocialShoppingSalesChannel post /swag-social-shopping-sales-channel":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingSalesChannel"];
        response: {
          data: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SwagSocialShoppingSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      };
  "getSwagSocialShoppingSalesChannel get /swag-social-shopping-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the swag_social_shopping_sales_channel */
          id: string;
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the swag_social_shopping_sales_channel */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      };
  "deleteSwagSocialShoppingSalesChannel delete /swag-social-shopping-sales-channel/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the swag_social_shopping_sales_channel */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSwagSocialShoppingSalesChannel patch /swag-social-shopping-sales-channel/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_sales_channel */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingSalesChannel"];
        response: {
          data: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_sales_channel */
          id: string;
        };
        body: components["schemas"]["SwagSocialShoppingSalesChannel"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the swag_social_shopping_sales_channel */
          id: string;
        };
        body: {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SwagSocialShoppingSalesChannel"];
        };
        responseCode: 200;
      };
  "getSystemConfigList get /system-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["SystemConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["SystemConfig"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /system-config?limit=25 */
            first?: unknown;
            /** @example /system-config?limit=25&page=11 */
            last?: unknown;
            /** @example /system-config?limit=25&page=4 */
            next?: unknown;
            /** @example /system-config?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createSystemConfig post /system-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SystemConfig"];
        response: {
          data: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["SystemConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SystemConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["SystemConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      };
  "getSystemConfig get /system-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the system_config */
          id: string;
        };
        response: {
          data: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the system_config */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      };
  "deleteSystemConfig delete /system-config/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the system_config */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateSystemConfig patch /system-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the system_config */
          id: string;
        };
        body: components["schemas"]["SystemConfig"];
        response: {
          data: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the system_config */
          id: string;
        };
        body: components["schemas"]["SystemConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the system_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["SystemConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the system_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["SystemConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["SystemConfig"];
        };
        responseCode: 200;
      };
  "getTagList get /tag":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Tag"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] & components["schemas"]["Tag"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /tag?limit=25 */
            first?: unknown;
            /** @example /tag?limit=25&page=11 */
            last?: unknown;
            /** @example /tag?limit=25&page=4 */
            next?: unknown;
            /** @example /tag?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createTag post /tag":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Tag"];
        response: {
          data: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Tag"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Tag"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Tag"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"];
        };
        responseCode: 200;
      };
  "getTag get /tag/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the tag */
          id: string;
        };
        response: {
          data: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the tag */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"];
        };
        responseCode: 200;
      };
  "deleteTag delete /tag/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the tag */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateTag patch /tag/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tag */
          id: string;
        };
        body: components["schemas"]["Tag"];
        response: {
          data: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tag */
          id: string;
        };
        body: components["schemas"]["Tag"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tag */
          id: string;
        };
        body: {
          data?: components["schemas"]["Tag"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Tag"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tag */
          id: string;
        };
        body: {
          data?: components["schemas"]["Tag"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tag"];
        };
        responseCode: 200;
      };
  "getTaxList get /tax":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Tax"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] & components["schemas"]["Tax"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /tax?limit=25 */
            first?: unknown;
            /** @example /tax?limit=25&page=11 */
            last?: unknown;
            /** @example /tax?limit=25&page=4 */
            next?: unknown;
            /** @example /tax?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createTax post /tax":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Tax"];
        response: {
          data: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Tax"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Tax"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Tax"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"];
        };
        responseCode: 200;
      };
  "getTaxProviderList get /tax-provider":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["TaxProvider"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["TaxProvider"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /tax-provider?limit=25 */
            first?: unknown;
            /** @example /tax-provider?limit=25&page=11 */
            last?: unknown;
            /** @example /tax-provider?limit=25&page=4 */
            next?: unknown;
            /** @example /tax-provider?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createTaxProvider post /tax-provider":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["TaxProvider"];
        response: {
          data: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["TaxProvider"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["TaxProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["TaxProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      };
  "getTaxProvider get /tax-provider/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the tax_provider */
          id: string;
        };
        response: {
          data: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the tax_provider */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      };
  "deleteTaxProvider delete /tax-provider/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the tax_provider */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateTaxProvider patch /tax-provider/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_provider */
          id: string;
        };
        body: components["schemas"]["TaxProvider"];
        response: {
          data: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_provider */
          id: string;
        };
        body: components["schemas"]["TaxProvider"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_provider */
          id: string;
        };
        body: {
          data?: components["schemas"]["TaxProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_provider */
          id: string;
        };
        body: {
          data?: components["schemas"]["TaxProvider"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxProvider"];
        };
        responseCode: 200;
      };
  "getTaxRuleList get /tax-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["TaxRule"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["TaxRule"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /tax-rule?limit=25 */
            first?: unknown;
            /** @example /tax-rule?limit=25&page=11 */
            last?: unknown;
            /** @example /tax-rule?limit=25&page=4 */
            next?: unknown;
            /** @example /tax-rule?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createTaxRule post /tax-rule":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["TaxRule"];
        response: {
          data: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["TaxRule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["TaxRule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["TaxRule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      };
  "getTaxRuleTypeList get /tax-rule-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["TaxRuleType"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["TaxRuleType"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /tax-rule-type?limit=25 */
            first?: unknown;
            /** @example /tax-rule-type?limit=25&page=11 */
            last?: unknown;
            /** @example /tax-rule-type?limit=25&page=4 */
            next?: unknown;
            /** @example /tax-rule-type?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createTaxRuleType post /tax-rule-type":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["TaxRuleType"];
        response: {
          data: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["TaxRuleType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["TaxRuleType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["TaxRuleType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      };
  "getTaxRuleType get /tax-rule-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the tax_rule_type */
          id: string;
        };
        response: {
          data: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the tax_rule_type */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      };
  "deleteTaxRuleType delete /tax-rule-type/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the tax_rule_type */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateTaxRuleType patch /tax-rule-type/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule_type */
          id: string;
        };
        body: components["schemas"]["TaxRuleType"];
        response: {
          data: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule_type */
          id: string;
        };
        body: components["schemas"]["TaxRuleType"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["TaxRuleType"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule_type */
          id: string;
        };
        body: {
          data?: components["schemas"]["TaxRuleType"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRuleType"];
        };
        responseCode: 200;
      };
  "getTaxRule get /tax-rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the tax_rule */
          id: string;
        };
        response: {
          data: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the tax_rule */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      };
  "deleteTaxRule delete /tax-rule/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the tax_rule */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateTaxRule patch /tax-rule/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule */
          id: string;
        };
        body: components["schemas"]["TaxRule"];
        response: {
          data: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule */
          id: string;
        };
        body: components["schemas"]["TaxRule"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["TaxRule"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax_rule */
          id: string;
        };
        body: {
          data?: components["schemas"]["TaxRule"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["TaxRule"];
        };
        responseCode: 200;
      };
  "getTax get /tax/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the tax */
          id: string;
        };
        response: {
          data: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the tax */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"];
        };
        responseCode: 200;
      };
  "deleteTax delete /tax/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the tax */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateTax patch /tax/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax */
          id: string;
        };
        body: components["schemas"]["Tax"];
        response: {
          data: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax */
          id: string;
        };
        body: components["schemas"]["Tax"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax */
          id: string;
        };
        body: {
          data?: components["schemas"]["Tax"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Tax"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the tax */
          id: string;
        };
        body: {
          data?: components["schemas"]["Tax"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Tax"];
        };
        responseCode: 200;
      };
  "getThemeList get /theme":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Theme"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Theme"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /theme?limit=25 */
            first?: unknown;
            /** @example /theme?limit=25&page=11 */
            last?: unknown;
            /** @example /theme?limit=25&page=4 */
            next?: unknown;
            /** @example /theme?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createTheme post /theme":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Theme"];
        response: {
          data: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Theme"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Theme"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Theme"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"];
        };
        responseCode: 200;
      };
  "getTheme get /theme/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the theme */
          id: string;
        };
        response: {
          data: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the theme */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"];
        };
        responseCode: 200;
      };
  "deleteTheme delete /theme/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the theme */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateTheme patch /theme/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the theme */
          id: string;
        };
        body: components["schemas"]["Theme"];
        response: {
          data: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the theme */
          id: string;
        };
        body: components["schemas"]["Theme"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the theme */
          id: string;
        };
        body: {
          data?: components["schemas"]["Theme"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Theme"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the theme */
          id: string;
        };
        body: {
          data?: components["schemas"]["Theme"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Theme"];
        };
        responseCode: 200;
      };
  "getUnitList get /unit":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Unit"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Unit"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /unit?limit=25 */
            first?: unknown;
            /** @example /unit?limit=25&page=11 */
            last?: unknown;
            /** @example /unit?limit=25&page=4 */
            next?: unknown;
            /** @example /unit?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createUnit post /unit":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Unit"];
        response: {
          data: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Unit"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Unit"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Unit"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"];
        };
        responseCode: 200;
      };
  "getUnit get /unit/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the unit */
          id: string;
        };
        response: {
          data: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the unit */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"];
        };
        responseCode: 200;
      };
  "deleteUnit delete /unit/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the unit */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateUnit patch /unit/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the unit */
          id: string;
        };
        body: components["schemas"]["Unit"];
        response: {
          data: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the unit */
          id: string;
        };
        body: components["schemas"]["Unit"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the unit */
          id: string;
        };
        body: {
          data?: components["schemas"]["Unit"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Unit"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the unit */
          id: string;
        };
        body: {
          data?: components["schemas"]["Unit"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Unit"];
        };
        responseCode: 200;
      };
  "getUserList get /user":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["User"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["User"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /user?limit=25 */
            first?: unknown;
            /** @example /user?limit=25&page=11 */
            last?: unknown;
            /** @example /user?limit=25&page=4 */
            next?: unknown;
            /** @example /user?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createUser post /user":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["User"];
        response: {
          data: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["User"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["User"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["User"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"];
        };
        responseCode: 200;
      };
  "getUserAccessKeyList get /user-access-key":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["UserAccessKey"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["UserAccessKey"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /user-access-key?limit=25 */
            first?: unknown;
            /** @example /user-access-key?limit=25&page=11 */
            last?: unknown;
            /** @example /user-access-key?limit=25&page=4 */
            next?: unknown;
            /** @example /user-access-key?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createUserAccessKey post /user-access-key":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["UserAccessKey"];
        response: {
          data: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["UserAccessKey"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["UserAccessKey"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["UserAccessKey"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      };
  "getUserAccessKey get /user-access-key/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the user_access_key */
          id: string;
        };
        response: {
          data: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the user_access_key */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      };
  "deleteUserAccessKey delete /user-access-key/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the user_access_key */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateUserAccessKey patch /user-access-key/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_access_key */
          id: string;
        };
        body: components["schemas"]["UserAccessKey"];
        response: {
          data: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_access_key */
          id: string;
        };
        body: components["schemas"]["UserAccessKey"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_access_key */
          id: string;
        };
        body: {
          data?: components["schemas"]["UserAccessKey"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_access_key */
          id: string;
        };
        body: {
          data?: components["schemas"]["UserAccessKey"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserAccessKey"];
        };
        responseCode: 200;
      };
  "getUserConfigList get /user-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["UserConfig"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["UserConfig"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /user-config?limit=25 */
            first?: unknown;
            /** @example /user-config?limit=25&page=11 */
            last?: unknown;
            /** @example /user-config?limit=25&page=4 */
            next?: unknown;
            /** @example /user-config?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createUserConfig post /user-config":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["UserConfig"];
        response: {
          data: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["UserConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["UserConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["UserConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      };
  "getUserConfig get /user-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the user_config */
          id: string;
        };
        response: {
          data: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the user_config */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      };
  "deleteUserConfig delete /user-config/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the user_config */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateUserConfig patch /user-config/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_config */
          id: string;
        };
        body: components["schemas"]["UserConfig"];
        response: {
          data: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_config */
          id: string;
        };
        body: components["schemas"]["UserConfig"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["UserConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_config */
          id: string;
        };
        body: {
          data?: components["schemas"]["UserConfig"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserConfig"];
        };
        responseCode: 200;
      };
  "getUserRecoveryList get /user-recovery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["UserRecovery"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["UserRecovery"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /user-recovery?limit=25 */
            first?: unknown;
            /** @example /user-recovery?limit=25&page=11 */
            last?: unknown;
            /** @example /user-recovery?limit=25&page=4 */
            next?: unknown;
            /** @example /user-recovery?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createUserRecovery post /user-recovery":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["UserRecovery"];
        response: {
          data: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["UserRecovery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["UserRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["UserRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      };
  "getUserRecovery get /user-recovery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the user_recovery */
          id: string;
        };
        response: {
          data: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the user_recovery */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      };
  "deleteUserRecovery delete /user-recovery/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the user_recovery */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateUserRecovery patch /user-recovery/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_recovery */
          id: string;
        };
        body: components["schemas"]["UserRecovery"];
        response: {
          data: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_recovery */
          id: string;
        };
        body: components["schemas"]["UserRecovery"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_recovery */
          id: string;
        };
        body: {
          data?: components["schemas"]["UserRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user_recovery */
          id: string;
        };
        body: {
          data?: components["schemas"]["UserRecovery"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["UserRecovery"];
        };
        responseCode: 200;
      };
  "getUser get /user/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the user */
          id: string;
        };
        response: {
          data: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the user */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"];
        };
        responseCode: 200;
      };
  "deleteUser delete /user/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the user */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateUser patch /user/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user */
          id: string;
        };
        body: components["schemas"]["User"];
        response: {
          data: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user */
          id: string;
        };
        body: components["schemas"]["User"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user */
          id: string;
        };
        body: {
          data?: components["schemas"]["User"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["User"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the user */
          id: string;
        };
        body: {
          data?: components["schemas"]["User"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["User"];
        };
        responseCode: 200;
      };
  "getWarehouseList get /warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Warehouse"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Warehouse"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /warehouse?limit=25 */
            first?: unknown;
            /** @example /warehouse?limit=25&page=11 */
            last?: unknown;
            /** @example /warehouse?limit=25&page=4 */
            next?: unknown;
            /** @example /warehouse?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createWarehouse post /warehouse":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Warehouse"];
        response: {
          data: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Warehouse"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Warehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Warehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      };
  "getWarehouseGroupList get /warehouse-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["WarehouseGroup"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["WarehouseGroup"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /warehouse-group?limit=25 */
            first?: unknown;
            /** @example /warehouse-group?limit=25&page=11 */
            last?: unknown;
            /** @example /warehouse-group?limit=25&page=4 */
            next?: unknown;
            /** @example /warehouse-group?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createWarehouseGroup post /warehouse-group":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["WarehouseGroup"];
        response: {
          data: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["WarehouseGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["WarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["WarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      };
  "getWarehouseGroup get /warehouse-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the warehouse_group */
          id: string;
        };
        response: {
          data: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the warehouse_group */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      };
  "deleteWarehouseGroup delete /warehouse-group/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the warehouse_group */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateWarehouseGroup patch /warehouse-group/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse_group */
          id: string;
        };
        body: components["schemas"]["WarehouseGroup"];
        response: {
          data: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse_group */
          id: string;
        };
        body: components["schemas"]["WarehouseGroup"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["WarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse_group */
          id: string;
        };
        body: {
          data?: components["schemas"]["WarehouseGroup"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WarehouseGroup"];
        };
        responseCode: 200;
      };
  "getWarehouse get /warehouse/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the warehouse */
          id: string;
        };
        response: {
          data: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the warehouse */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      };
  "deleteWarehouse delete /warehouse/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the warehouse */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateWarehouse patch /warehouse/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse */
          id: string;
        };
        body: components["schemas"]["Warehouse"];
        response: {
          data: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse */
          id: string;
        };
        body: components["schemas"]["Warehouse"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse */
          id: string;
        };
        body: {
          data?: components["schemas"]["Warehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the warehouse */
          id: string;
        };
        body: {
          data?: components["schemas"]["Warehouse"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Warehouse"];
        };
        responseCode: 200;
      };
  "getWebhookList get /webhook":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["Webhook"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["Webhook"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /webhook?limit=25 */
            first?: unknown;
            /** @example /webhook?limit=25&page=11 */
            last?: unknown;
            /** @example /webhook?limit=25&page=4 */
            next?: unknown;
            /** @example /webhook?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createWebhook post /webhook":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Webhook"];
        response: {
          data: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["Webhook"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Webhook"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["Webhook"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      };
  "getWebhookEventLogList get /webhook-event-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: {
          data?: components["schemas"]["WebhookEventLog"][];
          total?: number;
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Max amount of resources to be returned in a page */
          limit?: number;
          /** The page to be returned */
          page?: number;
          /** Encoded SwagQL in JSON */
          query?: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["data"] &
            components["schemas"]["WebhookEventLog"][];
          links?: components["schemas"]["pagination"] & {
            /** @example /webhook-event-log?limit=25 */
            first?: unknown;
            /** @example /webhook-event-log?limit=25&page=11 */
            last?: unknown;
            /** @example /webhook-event-log?limit=25&page=4 */
            next?: unknown;
            /** @example /webhook-event-log?limit=25&page=2 */
            prev?: unknown;
          };
        };
        responseCode: 200;
      };
  "createWebhookEventLog post /webhook-event-log":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["WebhookEventLog"];
        response: {
          data: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: components["schemas"]["WebhookEventLog"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["WebhookEventLog"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: "basic" | "detail";
        };
        body: {
          data?: components["schemas"]["WebhookEventLog"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      };
  "getWebhookEventLog get /webhook-event-log/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the webhook_event_log */
          id: string;
        };
        response: {
          data: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the webhook_event_log */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      };
  "deleteWebhookEventLog delete /webhook-event-log/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the webhook_event_log */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateWebhookEventLog patch /webhook-event-log/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook_event_log */
          id: string;
        };
        body: components["schemas"]["WebhookEventLog"];
        response: {
          data: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook_event_log */
          id: string;
        };
        body: components["schemas"]["WebhookEventLog"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook_event_log */
          id: string;
        };
        body: {
          data?: components["schemas"]["WebhookEventLog"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook_event_log */
          id: string;
        };
        body: {
          data?: components["schemas"]["WebhookEventLog"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["WebhookEventLog"];
        };
        responseCode: 200;
      };
  "getWebhook get /webhook/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        pathParams: {
          /** Identifier for the webhook */
          id: string;
        };
        response: {
          data: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        pathParams: {
          /** Identifier for the webhook */
          id: string;
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      };
  "deleteWebhook delete /webhook/{id}": {
    contentType?: "application/json";
    accept?: "application/json";
    query?: {
      /** Data format for response. Empty if none is provided. */
      _response?: string;
    };
    pathParams: {
      /** Identifier for the webhook */
      id: string;
    };
    response: never;
    responseCode: 204;
  };
  "updateWebhook patch /webhook/{id}":
    | {
        contentType?: "application/json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook */
          id: string;
        };
        body: components["schemas"]["Webhook"];
        response: {
          data: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType?: "application/json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook */
          id: string;
        };
        body: components["schemas"]["Webhook"];
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept?: "application/json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook */
          id: string;
        };
        body: {
          data?: components["schemas"]["Webhook"];
          included?: components["schemas"]["resource"][];
        };
        response: {
          data: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      }
    | {
        contentType: "application/vnd.api+json";
        accept: "application/vnd.api+json";
        query?: {
          /** Data format for response. Empty if none is provided. */
          _response?: string;
        };
        pathParams: {
          /** Identifier for the webhook */
          id: string;
        };
        body: {
          data?: components["schemas"]["Webhook"];
          included?: components["schemas"]["resource"][];
        };
        response: components["schemas"]["success"] & {
          data?: components["schemas"]["Webhook"];
        };
        responseCode: 200;
      };
};
