{
  "openapi": "3.0.0",
  "info": {
    "title": "Shopware Store API",
    "description": "This endpoint reference contains an overview of all endpoints comprising the Shopware Store API",
    "license": {
      "name": "MIT",
      "url": "https://github.com/shopware/shopware/blob/trunk/LICENSE"
    },
    "version": "6.6.3.0"
  },
  "servers": [{ "url": "https://demo-frontends.shopware.store/store-api" }],
  "components": {
    "schemas": {
      "success": {
        "required": ["data"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": {
            "description": "Link members related to the primary data.",
            "allOf": [
              { "$ref": "#/components/schemas/links" },
              { "$ref": "#/components/schemas/pagination" }
            ]
          },
          "data": { "$ref": "#/components/schemas/data" },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "type": "array",
            "items": { "$ref": "#/components/schemas/resource" },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "failure": {
        "required": ["errors"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": { "$ref": "#/components/schemas/links" },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/error" },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "info": {
        "required": ["meta"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": { "$ref": "#/components/schemas/links" },
          "jsonapi": { "$ref": "#/components/schemas/jsonapi" }
        },
        "type": "object"
      },
      "meta": {
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object",
        "additionalProperties": true
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/resource" },
            "uniqueItems": true
          }
        ]
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "required": ["type", "id"],
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string" },
          "attributes": { "$ref": "#/components/schemas/attributes" },
          "relationships": { "$ref": "#/components/schemas/relationships" },
          "links": { "$ref": "#/components/schemas/links" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object"
      },
      "relationshipLinks": {
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "properties": {
          "self": {
            "allOf": [
              {
                "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                "type": "array",
                "items": { "type": "object" }
              },
              { "$ref": "#/components/schemas/link" }
            ]
          },
          "related": { "$ref": "#/components/schemas/link" }
        },
        "type": "object",
        "additionalProperties": true
      },
      "links": {
        "type": "object",
        "additionalProperties": { "$ref": "#/components/schemas/link" }
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [
          {
            "description": "A string containing the link's URL.",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": ["href"],
            "properties": {
              "href": {
                "description": "A string containing the link's URL.",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": { "$ref": "#/components/schemas/meta" }
            }
          }
        ]
      },
      "attributes": {
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object",
        "additionalProperties": true
      },
      "relationships": {
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object",
        "anyOf": [
          { "required": ["data"] },
          { "required": ["meta"] },
          { "required": ["links"] },
          {
            "type": "object",
            "properties": {
              "links": { "$ref": "#/components/schemas/relationshipLinks" },
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [
                  { "$ref": "#/components/schemas/relationshipToOne" },
                  { "$ref": "#/components/schemas/relationshipToMany" }
                ]
              }
            }
          }
        ],
        "additionalProperties": false
      },
      "relationshipToOne": {
        "allOf": [
          {
            "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object."
          },
          { "$ref": "#/components/schemas/linkage" }
        ]
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
        "type": "array",
        "items": { "$ref": "#/components/schemas/linkage" },
        "uniqueItems": true
      },
      "linkage": {
        "description": "The \"type\" and \"id\" to non-empty members.",
        "required": ["type", "id"],
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "pagination": {
        "properties": {
          "first": {
            "description": "The first page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "last": {
            "description": "The last page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "prev": {
            "description": "The previous page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "next": {
            "description": "The next page of data",
            "type": "string",
            "format": "uri-reference"
          }
        },
        "type": "object"
      },
      "jsonapi": {
        "description": "An object describing the server's implementation",
        "properties": {
          "version": { "type": "string" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "error": {
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": { "$ref": "#/components/schemas/links" },
          "status": {
            "type": "string",
            "description": "The HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "type": "string",
            "description": "An application-specific error code, expressed as a string value."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "description": {
            "type": "string",
            "description": "A human-readable description of the problem."
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              }
            }
          },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "AclRole": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchAction": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchActionSearchTerm": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchBoosting": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchConfig": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "hitCount": {
            "properties": {
              "product": {
                "properties": {
                  "maxSuggestCount": { "type": "integer", "format": "int64" },
                  "maxSearchCount": { "type": "integer", "format": "int64" }
                },
                "type": "object"
              },
              "product_manufacturer": {
                "properties": {
                  "maxSuggestCount": { "type": "integer", "format": "int64" },
                  "maxSearchCount": { "type": "integer", "format": "int64" }
                },
                "type": "object"
              },
              "category": {
                "properties": {
                  "maxSuggestCount": { "type": "integer", "format": "int64" },
                  "maxSearchCount": { "type": "integer", "format": "int64" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchConfigField": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchEntityStream": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchEntityStreamFilter": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchSynonym": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "App": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppActionButton": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppAdministrationSnippet": {
        "description": "Added since version: 6.4.15.0",
        "required": ["value", "appId", "localeId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "value": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppCmsBlock": {
        "description": "Added since version: 6.4.2.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppFlowAction": {
        "description": "Added since version: 6.4.10.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppFlowEvent": {
        "description": "Added since version: 6.5.2.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppPaymentMethod": {
        "description": "Added since version: 6.4.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppScriptCondition": {
        "description": "Added since version: 6.4.10.3",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppShippingMethod": {
        "description": "Added since version: 6.5.7.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppTemplate": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bBusinessPartner": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bComponentsApprovalRule": {
        "description": "Added since version: 6.6.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "reviewerRoleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "affectedRoleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reviewerRole": { "$ref": "#/components/schemas/B2bComponentsRole" },
          "affectedRole": { "$ref": "#/components/schemas/B2bComponentsRole" }
        },
        "type": "object"
      },
      "B2bComponentsPendingOrder": {
        "description": "Added since version: 6.6.0.0",
        "required": [
          "billingAddressId",
          "customerId",
          "employeeId",
          "stateId",
          "currencyId",
          "countryId",
          "salesChannelId",
          "shippingMethodId",
          "paymentMethodId",
          "languageId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "billingAddressId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "employeeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "decidedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "approvalRuleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "originalPrice": { "type": "number", "format": "float" },
          "taxStatus": { "type": "string", "readOnly": true },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "reason": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "billingAddress": {
            "$ref": "#/components/schemas/B2bComponentsPendingOrderAddress"
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "employee": { "$ref": "#/components/schemas/B2bEmployee" },
          "decidedBy": { "$ref": "#/components/schemas/B2bEmployee" },
          "approvalRule": {
            "$ref": "#/components/schemas/B2bComponentsApprovalRule"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "country": { "$ref": "#/components/schemas/Country" },
          "language": { "$ref": "#/components/schemas/Language" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/B2bComponentsPendingOrderAddress"
            }
          }
        },
        "type": "object"
      },
      "B2bComponentsPendingOrderAddress": {
        "description": "Added since version: 6.6.0.0",
        "required": [
          "id",
          "countryId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "street": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "vatId": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "pendingOrder": {
            "$ref": "#/components/schemas/B2bComponentsPendingOrder"
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "B2bComponentsRole": {
        "required": ["id", "name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "permissions": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bComponentsShoppingListJsonApi": {
        "description": "Added since version: 6.6.2.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "salesChannelId", "customerId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "employeeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "price": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "91ec1f9324753048c0096d036a694f86"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "employee": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/employee"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "b2b_employee"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fa5473530e4d1a5a1e1eb53d2fedb10c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/b2b-components-shopping-list/23cb3bfda723e05b43cb25a427ee5a25/lineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "b2b_components_shopping_list_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "a042af1aa9f3853fe3cd7dabc065568f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "B2bComponentsShoppingList": {
        "description": "Added since version: 6.6.2.0",
        "required": ["id", "salesChannelId", "customerId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "employeeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "price": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "employee": { "$ref": "#/components/schemas/B2bEmployee" },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/B2bComponentsShoppingListLineItem"
            }
          }
        },
        "type": "object"
      },
      "B2bComponentsShoppingListLineItemJsonApi": {
        "description": "Added since version: 6.6.2.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "quantity", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": { "type": "object" },
              "quantity": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/b2b-components-shopping-list-line-item/30d48c8d92682de24e11d3f72c5dd1ea/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "f5bf48aa40cad7891eb709fcf1fde128"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "B2bComponentsShoppingListLineItem": {
        "description": "Added since version: 6.6.2.0",
        "required": ["id", "quantity", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "quantity": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "B2bEmployee": {
        "required": [
          "id",
          "languageId",
          "firstName",
          "lastName",
          "email",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "role": { "$ref": "#/components/schemas/B2bComponentsRole" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "B2bOrderEmployee": {
        "required": ["firstName", "lastName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bPermission": {
        "required": ["id", "name", "group", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "group": { "type": "string" },
          "dependencies": { "type": "array", "items": { "type": "string" } },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CategoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "displayNestedProducts",
              "type",
              "productAssignmentType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "displayNestedProducts": { "type": "boolean" },
              "breadcrumb": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false },
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": { "type": "string", "readOnly": true },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "type": { "type": "string" },
              "productAssignmentType": { "type": "string" },
              "visible": { "type": "boolean" },
              "active": { "type": "boolean" },
              "cmsPageIdSwitched": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "visibleChildCount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "integer",
                "format": "int64"
              },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "linkType": { "type": "string" },
              "internalLink": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "externalLink": { "type": "string" },
              "linkNewTab": { "type": "boolean" },
              "description": { "type": "string" },
              "metaTitle": { "type": "string" },
              "metaDescription": { "type": "string" },
              "keywords": { "type": "string" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customEntityTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d0e45878043844ffc41aac437e86b602"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "268184c12df027f536154d099d497b31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "d57ac45256849d9b13e2422d91580fb9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b1460918b1abb93311108f3dc021c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "5321b5a71127b8b98cdd4b068ad56c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Category": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "breadcrumb",
          "children",
          "childCount",
          "translated",
          "id",
          "displayNestedProducts",
          "type",
          "productAssignmentType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "afterCategoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "afterCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "displayNestedProducts": { "type": "boolean" },
          "breadcrumb": {
            "type": "array",
            "items": { "type": "string", "additionalProperties": false },
            "readOnly": true
          },
          "level": { "type": "integer", "format": "int64", "readOnly": true },
          "path": { "type": "string", "readOnly": true },
          "childCount": {
            "type": "number",
            "format": "int64",
            "readOnly": true
          },
          "type": { "type": "string" },
          "productAssignmentType": { "type": "string" },
          "visible": { "type": "boolean" },
          "active": { "type": "boolean" },
          "cmsPageIdSwitched": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "visibleChildCount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "integer",
            "format": "int64"
          },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "linkType": { "type": "string" },
          "internalLink": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalLink": { "type": "string" },
          "linkNewTab": { "type": "boolean" },
          "description": { "type": "string" },
          "metaTitle": { "type": "string" },
          "metaDescription": { "type": "string" },
          "keywords": { "type": "string" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customEntityTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "breadcrumb": { "type": "array", "items": { "type": "string" } }
            }
          },
          "parent": { "$ref": "#/components/schemas/Category" },
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" },
            "nullable": true
          },
          "media": { "$ref": "#/components/schemas/Media" },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Tag" }
          },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "seoUrls": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SeoUrl" }
          },
          "apiAlias": { "type": "string", "enum": ["category"] }
        },
        "type": "object"
      },
      "CmsBlock": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "apiAlias",
          "slots",
          "position",
          "type",
          "sectionId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "name": { "type": "string" },
          "sectionPosition": { "type": "string" },
          "marginTop": { "type": "string" },
          "marginBottom": { "type": "string" },
          "marginLeft": { "type": "string" },
          "marginRight": { "type": "string" },
          "backgroundColor": { "type": "string" },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "backgroundMediaMode": { "type": "string" },
          "cssClass": { "type": "string" },
          "visibility": {
            "properties": {
              "mobile": { "type": "boolean" },
              "desktop": { "type": "boolean" },
              "tablet": { "type": "boolean" }
            },
            "type": "object"
          },
          "sectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "swagCmsExtensionsQuickview": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-block/9c16ffe823ddccc710bfb336c2ef30b6/swagCmsExtensionsQuickview"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_quickview"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "fae098a43df8714eda5249176ffcf26c"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCmsExtensionsBlockRule": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-block/9c16ffe823ddccc710bfb336c2ef30b6/swagCmsExtensionsBlockRule"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_block_rule"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "c426e9e5d9031b933f89682d49bb02b1"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "backgroundMedia": { "$ref": "#/components/schemas/Media" },
          "slots": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CmsSlot" }
          },
          "apiAlias": { "type": "string", "enum": ["cms_block"] }
        },
        "type": "object"
      },
      "CmsPage": {
        "description": "Added since version: 6.0.0.0",
        "required": ["apiAlias", "sections", "id", "type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "entity": { "type": "string" },
          "cssClass": { "type": "string" },
          "config": {
            "properties": { "backgroundColor": { "type": "string" } },
            "type": "object"
          },
          "previewMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagCmsExtensionsScrollNavigationPageSettings": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-page/64bf107168bcd03626208c1764ce6890/swagCmsExtensionsScrollNavigationPageSettings"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_scroll_navigation_page_settings"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "8b835206d09f3dec1b733f6a78c7ba33"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "sections": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CmsSection" }
          },
          "previewMedia": { "$ref": "#/components/schemas/Media" },
          "landingPages": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LandingPage" }
          },
          "apiAlias": { "type": "string", "enum": ["cms_page"] }
        },
        "type": "object"
      },
      "CmsPageActivity": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CmsPageDraft": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CmsSection": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "apiAlias",
          "blocks",
          "position",
          "type",
          "pageId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "name": { "type": "string" },
          "sizingMode": { "type": "string" },
          "mobileBehavior": { "type": "string" },
          "backgroundColor": { "type": "string" },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "backgroundMediaMode": { "type": "string" },
          "cssClass": { "type": "string" },
          "pageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "visibility": {
            "properties": {
              "mobile": { "type": "boolean" },
              "desktop": { "type": "boolean" },
              "tablet": { "type": "boolean" }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "swagCmsExtensionsScrollNavigation": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-section/d08def49fa8924d6f4a32bdb448d5fba/swagCmsExtensionsScrollNavigation"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_scroll_navigation"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "425b8d6ec722d74191c6d39370af19dc"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "page": { "$ref": "#/components/schemas/CmsPage" },
          "backgroundMedia": { "$ref": "#/components/schemas/Media" },
          "blocks": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CmsBlock" }
          },
          "apiAlias": { "type": "string", "enum": ["cms_section"] }
        },
        "type": "object"
      },
      "CmsSlot": {
        "description": "Added since version: 6.0.0.0",
        "required": ["type", "slot", "blockId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "type": { "type": "string" },
          "slot": { "type": "string" },
          "locked": { "type": "boolean" },
          "config": { "type": "object" },
          "customFields": { "type": "object" },
          "data": { "type": "object", "readOnly": true },
          "blockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fieldConfig": { "type": "object" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "block": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "CountryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "createdAt", "name", "addressFormat"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "iso": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "shippingAvailable": { "type": "boolean" },
              "iso3": { "type": "string" },
              "displayStateInRegistration": { "type": "boolean" },
              "forceStateInRegistration": { "type": "boolean" },
              "checkVatIdPattern": { "type": "boolean" },
              "vatIdRequired": { "type": "boolean" },
              "vatIdPattern": { "type": "string" },
              "customFields": { "type": "object" },
              "customerTax": {
                "required": ["enabled", "currencyId", "amount"],
                "properties": {
                  "enabled": { "type": "boolean" },
                  "currencyId": { "type": "string" },
                  "amount": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "companyTax": {
                "required": ["enabled", "currencyId", "amount"],
                "properties": {
                  "enabled": { "type": "boolean" },
                  "currencyId": { "type": "string" },
                  "amount": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "postalCodeRequired": { "type": "boolean" },
              "checkPostalCodePattern": { "type": "boolean" },
              "checkAdvancedPostalCodePattern": { "type": "boolean" },
              "advancedPostalCodePattern": { "type": "string" },
              "addressFormat": { "type": "object" },
              "defaultPostalCodePattern": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/59716c97497eb9694541f7c3d37b1a4d/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "country_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "34d955a0df5f7af9c9b4e4dccb3c3564"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Country": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "createdAt", "name", "addressFormat"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "iso": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "shippingAvailable": { "type": "boolean" },
          "iso3": { "type": "string" },
          "displayStateInRegistration": { "type": "boolean" },
          "forceStateInRegistration": { "type": "boolean" },
          "checkVatIdPattern": { "type": "boolean" },
          "vatIdRequired": { "type": "boolean" },
          "vatIdPattern": { "type": "string" },
          "customFields": { "type": "object" },
          "customerTax": {
            "required": ["enabled", "currencyId", "amount"],
            "properties": {
              "enabled": { "type": "boolean" },
              "currencyId": { "type": "string" },
              "amount": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "companyTax": {
            "required": ["enabled", "currencyId", "amount"],
            "properties": {
              "enabled": { "type": "boolean" },
              "currencyId": { "type": "string" },
              "amount": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "postalCodeRequired": { "type": "boolean" },
          "checkPostalCodePattern": { "type": "boolean" },
          "checkAdvancedPostalCodePattern": { "type": "boolean" },
          "advancedPostalCodePattern": { "type": "string" },
          "addressFormat": { "type": "object" },
          "defaultPostalCodePattern": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "states": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CountryState" }
          }
        },
        "type": "object"
      },
      "CountryStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "countryId", "shortCode", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "shortCode": { "type": "string" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "CountryState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "countryId", "shortCode", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shortCode": { "type": "string" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "CurrencyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "factor",
              "symbol",
              "isoCode",
              "itemRounding",
              "totalRounding",
              "createdAt",
              "shortName",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "factor": { "type": "number", "format": "float" },
              "symbol": { "type": "string" },
              "isoCode": { "type": "string" },
              "shortName": { "type": "string" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "taxFreeFrom": { "type": "number", "format": "float" },
              "customFields": { "type": "object" },
              "itemRounding": {
                "required": ["decimals", "interval", "roundForNet"],
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "totalRounding": {
                "required": ["decimals", "interval", "roundForNet"],
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "Currency": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "factor",
          "symbol",
          "isoCode",
          "itemRounding",
          "totalRounding",
          "createdAt",
          "shortName",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "factor": { "type": "number", "format": "float" },
          "symbol": { "type": "string" },
          "isoCode": { "type": "string" },
          "shortName": { "type": "string" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "isSystemDefault": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "taxFreeFrom": { "type": "number", "format": "float" },
          "customFields": { "type": "object" },
          "itemRounding": {
            "required": ["decimals", "interval", "roundForNet"],
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "totalRounding": {
            "required": ["decimals", "interval", "roundForNet"],
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "CurrencyCountryRounding": {
        "description": "Added since version: 6.4.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomEntity": {
        "description": "Added since version: 6.4.9.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomField": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldSet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldSetRelation": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomPrice": {
        "required": ["id", "productId", "price", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerGroup": { "$ref": "#/components/schemas/CustomerGroup" },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "Customer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "activeBillingAddress",
          "activeShippingAddress",
          "id",
          "groupId",
          "defaultPaymentMethodId",
          "salesChannelId",
          "languageId",
          "defaultBillingAddressId",
          "defaultShippingAddressId",
          "customerNumber",
          "firstName",
          "lastName",
          "email",
          "accountType",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "defaultPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "lastPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "defaultBillingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "defaultShippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "customerNumber": { "type": "string" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "email": { "type": "string" },
          "title": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "affiliateCode": { "type": "string" },
          "campaignCode": { "type": "string" },
          "active": { "type": "boolean" },
          "doubleOptInRegistration": { "type": "boolean" },
          "doubleOptInEmailSentDate": {
            "type": "string",
            "format": "date-time"
          },
          "doubleOptInConfirmDate": { "type": "string", "format": "date-time" },
          "hash": { "type": "string" },
          "guest": { "type": "boolean" },
          "firstLogin": { "type": "string", "format": "date-time" },
          "lastLogin": { "type": "string", "format": "date-time" },
          "birthday": { "type": "string" },
          "lastOrderDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "orderTotalAmount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "reviewCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "tagIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "accountType": { "type": "string" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "specificFeatures": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/ce26601dac0dea138b7295f02b7620a7/specificFeatures"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "customer_specific_features"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "5cfb6fcb7542e25892e1a35cd6a06c54"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "group": { "$ref": "#/components/schemas/CustomerGroup" },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "lastPaymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "defaultBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "activeBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "activeShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" },
          "addresses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CustomerAddress" }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Tag" }
          },
          "apiAlias": { "type": "string", "enum": ["customer"] }
        },
        "type": "object"
      },
      "CustomerAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "customerId",
          "countryId",
          "firstName",
          "lastName",
          "city",
          "street",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "street": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "CustomerGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["translated", "id", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "displayGross": { "type": "boolean" },
          "customFields": { "type": "object" },
          "registrationActive": { "type": "boolean" },
          "registrationTitle": { "type": "string" },
          "registrationIntroduction": { "type": "string" },
          "registrationOnlyCompanyRegistration": { "type": "boolean" },
          "registrationSeoMetaDescription": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "registrationIntroduction": { "type": "string" },
              "registrationSeoMetaDescription": { "type": "string" },
              "registrationTitle": { "type": "string" }
            }
          }
        },
        "type": "object"
      },
      "CustomerRecovery": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomerSpecificFeatures": {
        "required": ["customerId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" }
        },
        "type": "object"
      },
      "CustomerTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["customerId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "CustomerWishlist": {
        "description": "Added since version: 6.3.4.0",
        "required": ["id", "customerId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomerWishlistProduct": {
        "description": "Added since version: 6.3.4.0",
        "required": ["id", "productId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DeliveryTime": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "name", "min", "max", "unit", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "min": { "type": "integer", "format": "int64" },
          "max": { "type": "integer", "format": "int64" },
          "unit": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Document": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "documentTypeId",
          "fileType",
          "orderId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fileType": { "type": "string" },
          "referencedDocumentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentMediaFileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "config": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "title": { "type": "string" }
            },
            "required": ["name", "title"]
          },
          "sent": { "type": "boolean" },
          "static": { "type": "boolean" },
          "deepLinkCode": { "type": "string" },
          "documentNumber": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": { "$ref": "#/components/schemas/DocumentType" },
          "order": { "$ref": "#/components/schemas/Order" },
          "referencedDocument": { "$ref": "#/components/schemas/Document" },
          "dependentDocuments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Document" }
          },
          "documentMediaFile": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "DocumentBaseConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "documentTypeId", "name", "global", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "logoId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "filenamePrefix": { "type": "string" },
          "filenameSuffix": { "type": "string" },
          "global": { "type": "boolean" },
          "documentNumber": { "type": "string" },
          "config": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "logo": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "DocumentBaseConfigSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "documentBaseConfigId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentBaseConfigId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DocumentType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "technicalName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Flow": {
        "description": "Added since version: 6.4.6.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FlowSequence": {
        "description": "Added since version: 6.4.6.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FlowTemplate": {
        "description": "Added since version: 6.4.18.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportFile": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportLog": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportProfile": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Integration": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "LandingPageJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "createdAt", "name", "url"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "active": { "type": "boolean" },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "slotConfig": { "type": "object" },
              "metaTitle": { "type": "string" },
              "metaDescription": { "type": "string" },
              "keywords": { "type": "string" },
              "url": { "type": "string" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/815c27537bec3b60c50a2ae4d2ce875d/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b1460918b1abb93311108f3dc021c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/815c27537bec3b60c50a2ae4d2ce875d/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "5321b5a71127b8b98cdd4b068ad56c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "LandingPage": {
        "description": "Added since version: 6.4.0.0",
        "required": ["apiAlias", "id", "createdAt", "name", "url"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "slotConfig": { "type": "object" },
          "metaTitle": { "type": "string" },
          "metaDescription": { "type": "string" },
          "keywords": { "type": "string" },
          "url": { "type": "string" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "seoUrls": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SeoUrl" }
          },
          "apiAlias": { "type": "string", "enum": ["landing_page"] }
        },
        "type": "object"
      },
      "LanguageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "localeId", "name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "translationCodeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d0e45878043844ffc41aac437e86b602"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fb216d9e8791e63c8d12bdc420956839"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "translationCode": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/translationCode"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6ef2035242b8fcb7b61c3a41850e60b3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "language" },
                            "id": {
                              "type": "string",
                              "example": "268184c12df027f536154d099d497b31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Language": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "localeId", "name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "translationCodeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": { "$ref": "#/components/schemas/Language" },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "translationCode": { "$ref": "#/components/schemas/Locale" },
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Language" }
          }
        },
        "type": "object"
      },
      "Locale": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "code", "createdAt", "name", "territory"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "code": { "type": "string" },
          "name": { "type": "string" },
          "territory": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "LogEntry": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MailHeaderFooter": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "systemDefault": { "type": "boolean" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "headerHtml": { "type": "string" },
          "headerPlain": { "type": "string" },
          "footerHtml": { "type": "string" },
          "footerPlain": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "MailTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "subject", "contentHtml", "contentPlain"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "systemDefault": { "type": "boolean" },
          "senderName": { "type": "string" },
          "contentHtml": { "type": "string" },
          "contentPlain": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "mailTemplateType": {
            "$ref": "#/components/schemas/MailTemplateType"
          },
          "media": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MailTemplateMedia" }
          }
        },
        "type": "object"
      },
      "MailTemplateMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "mailTemplateId", "languageId", "mediaId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mailTemplateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "MailTemplateType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "technicalName": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "MainCategoryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "productId",
              "categoryId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "categoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "MainCategory": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "id",
          "productId",
          "categoryId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Media": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "apiAlias",
          "fileExtension",
          "fileName",
          "hasFile",
          "path",
          "private",
          "url",
          "id",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mimeType": { "type": "string", "readOnly": true },
          "fileExtension": { "type": "string", "readOnly": true },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fileName": { "type": "string", "readOnly": true },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "metaData": { "type": "object", "readOnly": true },
          "config": { "type": "object" },
          "alt": { "type": "string" },
          "title": { "type": "string" },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "path": { "type": "string" },
          "hasFile": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "private": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "mediaAiTag": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/3b563524fdb17b4a86590470d40bef74/mediaAiTag"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "example": "media_ai_tag" },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "3c88197809d464216a8c40a8db191b38"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "thumbnails": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MediaThumbnail" }
          },
          "apiAlias": { "type": "string", "enum": ["media"] }
        },
        "type": "object"
      },
      "MediaAiTag": {
        "required": ["id", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tags": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "MediaDefaultFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaFolderConfiguration": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mediaId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "media": { "$ref": "#/components/schemas/Media" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "MediaThumbnail": {
        "description": "Added since version: 6.0.0.0",
        "required": ["url", "id", "mediaId", "width", "height", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "width": { "type": "integer", "format": "int64", "readOnly": true },
          "height": { "type": "integer", "format": "int64", "readOnly": true },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "path": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "width", "height", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "width": { "type": "integer", "format": "int64" },
          "height": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NewsletterRecipientJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "NewsletterRecipient": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "Added since version: 6.4.7.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRange": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "NumberRangeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRangeState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRangeType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "typeName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Order": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documents",
          "orderDate",
          "stateMachineState",
          "id",
          "billingAddressId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "orderDateTime",
          "currencyFactor",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderNumber": { "type": "string" },
          "billingAddressId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "billingAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDateTime": { "type": "string", "format": "date-time" },
          "orderDate": { "type": "string", "readOnly": true },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "positionPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "taxStatus": { "type": "string", "readOnly": true },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shippingTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "currencyFactor": { "type": "number", "format": "float" },
          "deepLinkCode": { "type": "string" },
          "affiliateCode": { "type": "string" },
          "campaignCode": { "type": "string" },
          "customerComment": { "type": "string" },
          "source": { "type": "string" },
          "customFields": { "type": "object" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "subscription": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/a240fa27925a635b08dc28c9e4f9216d/subscription"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "example": "subscription" },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "b48b13e73a6ac2a86dc54425dd24d9ff"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "returns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/a240fa27925a635b08dc28c9e4f9216d/returns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "order_return" },
                        "id": {
                          "type": "string",
                          "example": "7fff84525c6516919851a9005373f87e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orderCustomer": { "$ref": "#/components/schemas/OrderCustomer" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "language": { "$ref": "#/components/schemas/Language" },
          "addresses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderAddress" }
          },
          "billingAddress": { "$ref": "#/components/schemas/OrderAddress" },
          "deliveries": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderDelivery" }
          },
          "lineItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderLineItem" }
          },
          "transactions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderTransaction" }
          },
          "documents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Document" }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Tag" }
          }
        },
        "type": "object"
      },
      "OrderAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "countryId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "street": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "vatId": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "OrderCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "email", "firstName", "lastName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "email": { "type": "string" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "title": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "customerNumber": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "OrderDelivery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "orderId",
          "shippingOrderAddressId",
          "shippingMethodId",
          "stateId",
          "trackingCodes",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingOrderAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingOrderAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "trackingCodes": { "type": "array", "items": { "type": "string" } },
          "shippingDateEarliest": { "type": "string", "format": "date-time" },
          "shippingDateLatest": { "type": "string", "format": "date-time" },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "shippingOrderAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "positions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderDeliveryPosition" }
          }
        },
        "type": "object"
      },
      "OrderDeliveryPosition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "orderDeliveryId", "orderLineItemId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDeliveryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDeliveryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "quantity": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderLineItem": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "orderId",
          "identifier",
          "quantity",
          "label",
          "position",
          "states",
          "children",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "identifier": { "type": "string" },
          "referencedId": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "label": { "type": "string" },
          "payload": {
            "type": "object",
            "properties": {
              "categoryIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "customFields": { "type": "object" },
              "features": { "type": "array" },
              "isCloseout": { "type": "boolean" },
              "isNew": { "type": "boolean" },
              "manufacturerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "markAsTopseller": { "type": "boolean" },
              "optionIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "options": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/PropertyGroupOption" }
              },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productNumber": { "type": "string" },
              "propertyIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "purchasePrices": { "type": "string" },
              "releaseDate": { "type": "string", "format": "date-time" },
              "stock": { "type": "integer", "format": "int64" },
              "streamIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "tagIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
            }
          },
          "good": { "type": "boolean" },
          "removable": { "type": "boolean" },
          "stackable": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "states": { "type": "array", "items": { "type": "string" } },
          "priceDefinition": {
            "type": "object",
            "$ref": "#/components/schemas/PriceDefinition"
          },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "description": { "type": "string" },
          "type": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "returns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/returns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_return_line_item"
                        },
                        "id": {
                          "type": "string",
                          "example": "7fff84525c6516919851a9005373f87e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "state": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/state"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "state_machine_state"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "9ed39e2ea931586b6a985a6942ef573e"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "cover": { "$ref": "#/components/schemas/Media" },
          "orderDeliveryPositions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderDeliveryPosition" }
          },
          "downloads": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderLineItemDownload" }
          },
          "parent": { "$ref": "#/components/schemas/OrderLineItem" },
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderLineItem" }
          },
          "apiAlias": { "type": "string", "enum": ["order_line_item"] },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "OrderLineItemDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "media",
          "id",
          "orderLineItemId",
          "mediaId",
          "position",
          "accessGranted",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "accessGranted": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "OrderProductWarehouse": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderReturn": {
        "required": [
          "id",
          "orderId",
          "stateId",
          "returnNumber",
          "requestedAt",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "returnNumber": { "type": "string" },
          "requestedAt": { "type": "string", "format": "date-time" },
          "amountTotal": { "type": "number", "format": "float" },
          "amountNet": { "type": "number", "format": "float" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "state": { "$ref": "#/components/schemas/StateMachineState" },
          "lineItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderReturnLineItem" }
          }
        },
        "type": "object"
      },
      "OrderReturnLineItem": {
        "required": [
          "id",
          "orderReturnId",
          "orderLineItemId",
          "reasonId",
          "quantity",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderReturnId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderReturnVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "reasonId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quantity": { "type": "integer", "format": "int64" },
          "refundAmount": { "type": "number", "format": "float" },
          "restockQuantity": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reason": {
            "$ref": "#/components/schemas/OrderReturnLineItemReason"
          },
          "state": { "$ref": "#/components/schemas/StateMachineState" }
        },
        "type": "object"
      },
      "OrderReturnLineItemReason": {
        "required": ["id", "reasonKey", "createdAt", "content"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "reasonKey": { "type": "string" },
          "content": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "OrderTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["orderId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "order": { "$ref": "#/components/schemas/Order" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "OrderTransaction": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "orderId",
          "paymentMethodId",
          "amount",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "captures": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderTransactionCapture" }
          }
        },
        "type": "object"
      },
      "OrderTransactionCapture": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "id",
          "orderTransactionId",
          "stateId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderTransactionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderTransactionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalReference": { "type": "string" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transaction": { "$ref": "#/components/schemas/OrderTransaction" },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefund": {
        "description": "Added since version: 6.4.12.0",
        "required": ["id", "captureId", "stateId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "captureId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "captureVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalReference": { "type": "string" },
          "reason": { "type": "string" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transactionCapture": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundPosition": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "id",
          "refundId",
          "orderLineItemId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "refundId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "refundVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "externalReference": { "type": "string" },
          "reason": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" },
          "orderTransactionCaptureRefund": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          }
        },
        "type": "object"
      },
      "OrderWarehouseGroup": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PaymentMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "distinguishableName": { "type": "string", "readOnly": true },
              "description": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "afterOrderEnabled": { "type": "boolean" },
              "customFields": { "type": "object" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "synchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "asynchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "prepared": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "refundable": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "recurring": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "shortName": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "technicalName": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/da8da1569e6bef3249a7064261df833f/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "distinguishableName": { "type": "string", "readOnly": true },
          "description": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "afterOrderEnabled": { "type": "boolean" },
          "customFields": { "type": "object" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "synchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "asynchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "prepared": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "refundable": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "recurring": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "shortName": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "technicalName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "Plugin": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "taxId",
              "productNumber",
              "stock",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "manufacturerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productManufacturerVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "unitId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productMediaVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "canonicalProductId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "canonicalProductVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productNumber": { "type": "string" },
              "restockTime": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "available": { "type": "boolean", "readOnly": true },
              "isCloseout": { "type": "boolean" },
              "availableStock": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "stock": { "type": "integer", "format": "int64" },
              "displayGroup": { "type": "string", "readOnly": true },
              "manufacturerNumber": { "type": "string" },
              "ean": { "type": "string" },
              "purchaseSteps": { "type": "integer", "format": "int64" },
              "maxPurchase": { "type": "integer", "format": "int64" },
              "minPurchase": { "type": "integer", "format": "int64" },
              "purchaseUnit": { "type": "number", "format": "float" },
              "referenceUnit": { "type": "number", "format": "float" },
              "shippingFree": { "type": "boolean" },
              "markAsTopseller": { "type": "boolean" },
              "weight": { "type": "number", "format": "float" },
              "width": { "type": "number", "format": "float" },
              "height": { "type": "number", "format": "float" },
              "length": { "type": "number", "format": "float" },
              "releaseDate": { "type": "string", "format": "date-time" },
              "ratingAverage": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "categoryTree": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "propertyIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "optionIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "streamIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "tagIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "categoryIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "sales": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "states": {
                "type": "array",
                "items": { "type": "string" },
                "readOnly": true
              },
              "metaDescription": { "type": "string" },
              "name": { "type": "string" },
              "keywords": { "type": "string" },
              "description": { "type": "string" },
              "metaTitle": { "type": "string" },
              "packUnit": { "type": "string" },
              "packUnitPlural": { "type": "string" },
              "customFields": { "type": "object" },
              "calculatedPrice": { "type": "object" },
              "calculatedPrices": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "calculatedMaxPurchase": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "integer",
                "format": "int64"
              },
              "calculatedCheapestPrice": { "type": "object" },
              "isNew": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "sortedProperties": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "reviewSummaries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/reviewSummaries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review_summary"
                            },
                            "id": {
                              "type": "string",
                              "example": "c9c718522e64ffa5effb26cef94f4849"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagCustomizedProductsTemplate": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/swagCustomizedProductsTemplate"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6e9fad30dd3cb84748a01bb8152f4769"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "d07d50a751bc6ddf12bf3af0efee9b45"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d0e45878043844ffc41aac437e86b602"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "268184c12df027f536154d099d497b31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8c888ae25a7bd42057370e31f7e01044"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "06565e5611f23fdf8cc43e5077b92b54"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "manufacturer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/manufacturer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_manufacturer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c2904bca62b22443d6cf5e9d89cab204"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "unit": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/unit"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "unit" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3e34bdebd9bd5edda27e8728904a2552"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "41d0e299ca1abeb2094852da042165c7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b1460918b1abb93311108f3dc021c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "canonicalProduct": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/canonicalProduct"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "023995a50b56c0de077323e958b2bbcd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/crossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "89936e14544d1b403cecef938101b6b0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/configuratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "c0827fee13725d41f1fd7e292243f5aa"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "01e78541ea343ed72424a5222796a4cd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "1fb731fc4139cbb575429e28846f0c39"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "5321b5a71127b8b98cdd4b068ad56c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "93da65a9fd0004d9477aeac024e08e15"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/properties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "74693d2fc58b46bd06410f278e39aa71"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "b0b5ccb4a195a07fd3eed14affb8695f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "streams": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/streams"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream"
                            },
                            "id": {
                              "type": "string",
                              "example": "2f6f4768f1c2d7c8f1f54823723f1a70"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categoriesRo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/categoriesRo"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "7f0702d3a90d965b8c9158c451f43fdb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "d57ac45256849d9b13e2422d91580fb9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/seoCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9354d004d12e03d35ad8292bf0bb234d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Product": {
        "description": "Represents a product along with detailed information required to display a variant selection.",
        "required": [
          "apiAlias",
          "calculatedPrice",
          "calculatedPrices",
          "seoCategory",
          "id",
          "taxId",
          "productNumber",
          "stock",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "manufacturerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productManufacturerVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "unitId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productMediaVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "deliveryTimeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "canonicalProductId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "canonicalProductVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productNumber": { "type": "string" },
          "restockTime": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "available": { "type": "boolean", "readOnly": true },
          "isCloseout": { "type": "boolean" },
          "availableStock": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "stock": { "type": "integer", "format": "int64" },
          "displayGroup": { "type": "string", "readOnly": true },
          "manufacturerNumber": { "type": "string" },
          "ean": { "type": "string" },
          "purchaseSteps": { "type": "integer", "format": "int64" },
          "maxPurchase": { "type": "integer", "format": "int64" },
          "minPurchase": { "type": "integer", "format": "int64" },
          "purchaseUnit": { "type": "number", "format": "float" },
          "referenceUnit": { "type": "number", "format": "float" },
          "shippingFree": { "type": "boolean" },
          "markAsTopseller": { "type": "boolean" },
          "weight": { "type": "number", "format": "float" },
          "width": { "type": "number", "format": "float" },
          "height": { "type": "number", "format": "float" },
          "length": { "type": "number", "format": "float" },
          "releaseDate": { "type": "string", "format": "date-time" },
          "ratingAverage": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "categoryTree": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "propertyIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "optionIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "streamIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "tagIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "categoryIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "sales": { "type": "integer", "format": "int64", "readOnly": true },
          "states": {
            "type": "array",
            "items": { "type": "string" },
            "readOnly": true
          },
          "metaDescription": { "type": "string" },
          "name": { "type": "string" },
          "keywords": { "type": "string" },
          "description": { "type": "string" },
          "metaTitle": { "type": "string" },
          "packUnit": { "type": "string" },
          "packUnitPlural": { "type": "string" },
          "customFields": { "type": "object" },
          "calculatedPrice": {
            "type": "object",
            "$ref": "#/components/schemas/CalculatedPrice"
          },
          "calculatedPrices": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "allOf": [{ "$ref": "#/components/schemas/CalculatedPrice" }]
            }
          },
          "calculatedMaxPurchase": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "integer",
            "format": "int64"
          },
          "calculatedCheapestPrice": {
            "type": "object",
            "allOf": [
              { "$ref": "#/components/schemas/CalculatedPrice" },
              {
                "type": "object",
                "properties": {
                  "unitPrice": { "type": "number" },
                  "quantity": { "type": "number" },
                  "totalPrice": { "type": "number" },
                  "referencePrice": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/ReferencePrice" },
                      { "type": "null" }
                    ]
                  },
                  "listPrice": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/ListPrice" },
                      { "type": "null" }
                    ]
                  },
                  "regulationPrice": {
                    "type": "object",
                    "properties": { "price": { "type": "number" } },
                    "required": ["price"],
                    "nullable": true
                  },
                  "hasRange": { "type": "boolean" },
                  "variantId": {
                    "type": "string",
                    "format": "",
                    "nullable": true
                  },
                  "apiAlias": {
                    "type": "string",
                    "enum": ["calculated_cheapest_price"]
                  }
                }
              }
            ]
          },
          "isNew": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "sortedProperties": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "reviewSummaries": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/deb10517653c255364175796ace3553f/reviewSummaries"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "product_review_summary"
                        },
                        "id": {
                          "type": "string",
                          "example": "c9c718522e64ffa5effb26cef94f4849"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCustomizedProductsTemplate": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/deb10517653c255364175796ace3553f/swagCustomizedProductsTemplate"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_customized_products_template"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "6e9fad30dd3cb84748a01bb8152f4769"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "downloads": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductDownload" }
          },
          "parent": { "$ref": "#/components/schemas/Product" },
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Product" }
          },
          "deliveryTime": { "$ref": "#/components/schemas/DeliveryTime" },
          "tax": { "$ref": "#/components/schemas/Tax" },
          "manufacturer": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "unit": { "$ref": "#/components/schemas/Unit" },
          "cover": { "$ref": "#/components/schemas/ProductMedia" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "canonicalProduct": { "$ref": "#/components/schemas/Product" },
          "media": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductMedia" }
          },
          "crossSellings": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductCrossSelling" }
          },
          "configuratorSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConfiguratorSetting"
            }
          },
          "productReviews": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductReview" }
          },
          "mainCategories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MainCategory" }
          },
          "seoUrls": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SeoUrl" }
          },
          "options": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyGroupOption" }
          },
          "properties": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyGroupOption" }
          },
          "categories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "streams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductStream" }
          },
          "categoriesRo": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Tag" }
          },
          "seoCategory": { "$ref": "#/components/schemas/Category" },
          "apiAlias": { "type": "string", "enum": ["product"] },
          "variantListingConfig": {
            "nullable": true,
            "type": "object",
            "properties": { "displayParent": { "type": "boolean" } }
          }
        },
        "type": "object"
      },
      "ProductConfiguratorSetting": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "productId", "optionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "optionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" },
          "option": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "ProductCrossSelling": {
        "description": "Added since version: 6.1.0.0",
        "required": ["id", "name", "position", "type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "sortBy": { "type": "string" },
          "sortDirection": { "type": "string" },
          "type": { "type": "string" },
          "active": { "type": "boolean" },
          "limit": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductCrossSellingAssignedProducts": {
        "description": "Added since version: 6.2.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": ["id", "productId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ProductExport": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductFeatureSet": {
        "description": "Added since version: 6.3.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductKeywordDictionary": {
        "description": "Added since version: 6.0.0.0",
        "required": ["languageId", "keyword"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "keyword": { "type": "string" }
        },
        "type": "object"
      },
      "ProductManufacturer": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "link": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ProductMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "productId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" },
          "thumbnails": { "$ref": "#/components/schemas/MediaThumbnail" }
        },
        "type": "object"
      },
      "ProductPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductReview": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "points",
          "id",
          "productId",
          "salesChannelId",
          "languageId",
          "title",
          "content",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "points": { "type": "number", "format": "float" },
          "status": { "type": "boolean" },
          "comment": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductReviewSummary": {
        "required": ["id", "productId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "summary": { "type": "string" },
          "visible": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "product": { "$ref": "#/components/schemas/Product" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "ProductSearchConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchConfigField": {
        "description": "Added since version: 6.3.5.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchKeyword": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSorting": {
        "description": "Added since version: 6.3.2.0",
        "required": ["key", "priority", "createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "key": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "label": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductStream": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductStreamFilter": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductVisibility": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductWarehouse": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Promotion": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "PromotionDiscount": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionDiscountPrices": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionIndividualCode": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionSetgroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PropertyGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "displayType", "sortingType", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "displayType": { "type": "string" },
          "sortingType": { "type": "string" },
          "filterable": { "type": "boolean" },
          "visibleOnProductDetailPage": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "options": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyGroupOption" }
          }
        },
        "type": "object"
      },
      "PropertyGroupOption": {
        "description": "Added since version: 6.0.0.0",
        "required": ["group", "option", "id", "groupId", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "colorHexCode": { "type": "string" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "group": { "$ref": "#/components/schemas/PropertyGroup" },
          "option": { "type": "string" }
        },
        "type": "object"
      },
      "Quote": {
        "description": "Added since version: 6.5.3.0",
        "required": [
          "id",
          "stateId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "customerId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteNumber": { "type": "string" },
          "expirationDate": { "type": "string", "format": "date-time" },
          "sentAt": { "type": "string", "format": "date-time" },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "discount": {
            "properties": {
              "type": { "type": "string" },
              "value": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "taxStatus": { "type": "string", "readOnly": true },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "subtotalNet": { "type": "number", "format": "float" },
          "totalDiscount": { "type": "number", "format": "float" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "language": { "$ref": "#/components/schemas/Language" },
          "lineItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteLineItem" }
          },
          "deliveries": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteDelivery" }
          },
          "transactions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteTransaction" }
          },
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteComment" }
          },
          "documents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteDocument" }
          }
        },
        "type": "object"
      },
      "QuoteComment": {
        "required": ["id", "comment", "quoteId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "comment": { "type": "string" },
          "seenAt": { "type": "string", "format": "date-time" },
          "quoteId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "customer": { "$ref": "#/components/schemas/Customer" }
        },
        "type": "object"
      },
      "QuoteDelivery": {
        "description": "Added since version: 6.5.3.0",
        "required": [
          "id",
          "quoteId",
          "shippingMethodId",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingDateEarliest": { "type": "string", "format": "date-time" },
          "shippingDateLatest": { "type": "string", "format": "date-time" },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "positions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteDeliveryPosition" }
          }
        },
        "type": "object"
      },
      "QuoteDeliveryPosition": {
        "description": "Added since version: 6.5.3.0",
        "required": ["id", "quoteDeliveryId", "quoteLineItemId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteDeliveryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteDeliveryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "quoteLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "quantity": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "QuoteDocument": {
        "required": [
          "id",
          "documentTypeId",
          "fileType",
          "quoteId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentNumber": { "type": "string" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fileType": { "type": "string" },
          "quoteId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "config": { "type": "object" },
          "sent": { "type": "boolean" },
          "static": { "type": "boolean" },
          "active": { "type": "boolean" },
          "deepLinkCode": { "type": "string" },
          "documentMediaFileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": { "$ref": "#/components/schemas/DocumentType" },
          "quote": { "$ref": "#/components/schemas/Quote" },
          "documentMediaFile": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "QuoteEmployee": {
        "required": ["firstName", "lastName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "QuoteLineItem": {
        "description": "Added since version: 6.5.3.0",
        "required": [
          "id",
          "quoteId",
          "identifier",
          "children",
          "states",
          "label",
          "quantity",
          "position",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "identifier": { "type": "string" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "states": { "type": "array", "items": { "type": "string" } },
          "label": { "type": "string" },
          "description": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "payload": { "type": "object" },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "priceDefinition": { "type": "object" },
          "productPrice": { "type": "object" },
          "purchasePrice": { "type": "object" },
          "discount": {
            "properties": {
              "type": { "type": "string" },
              "value": { "type": "integer", "format": "int64" }
            },
            "type": "object"
          },
          "good": { "type": "boolean" },
          "removable": { "type": "boolean" },
          "stackable": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "referencedId": { "type": "string" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": { "$ref": "#/components/schemas/QuoteLineItem" },
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuoteLineItem" }
          },
          "cover": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "QuoteTransaction": {
        "description": "Added since version: 6.5.3.0",
        "required": ["id", "quoteId", "paymentMethodId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quoteVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" }
        },
        "type": "object"
      },
      "Rule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "warehouseGroup": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/ab7a485ebe75b6dd7243ad719f23c7de/warehouseGroup"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "warehouse_group"
                        },
                        "id": {
                          "type": "string",
                          "example": "1768e3071b62161d415e0c24332055ed"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RuleCondition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasAppStorefrontConfig": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasSbpUserData": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasStorefrontDemoToken": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasUserLoginToken": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "languageId",
          "customerGroupId",
          "currencyId",
          "paymentMethodId",
          "shippingMethodId",
          "countryId",
          "navigationCategoryId",
          "createdAt",
          "name",
          "homeEnabled"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "navigationCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "navigationCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "navigationCategoryDepth": { "type": "integer", "format": "int64" },
          "footerCategoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "footerCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "serviceCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "serviceCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mailHeaderFooterId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hreflangDefaultDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": { "type": "string" },
          "shortName": { "type": "string" },
          "taxCalculationType": { "type": "string" },
          "configuration": { "type": "object" },
          "active": { "type": "boolean" },
          "hreflangActive": { "type": "boolean" },
          "maintenance": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "language": { "$ref": "#/components/schemas/Language" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "country": { "$ref": "#/components/schemas/Country" },
          "domains": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SalesChannelDomain" }
          },
          "navigationCategory": { "$ref": "#/components/schemas/Category" },
          "footerCategory": { "$ref": "#/components/schemas/Category" },
          "serviceCategory": { "$ref": "#/components/schemas/Category" },
          "hreflangDefaultDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          }
        },
        "type": "object"
      },
      "SalesChannelAnalytics": {
        "description": "Added since version: 6.2.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SalesChannelDomain": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "url",
          "salesChannelId",
          "languageId",
          "currencyId",
          "snippetSetId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "url": { "type": "string" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "snippetSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "hreflangUseOnlyLocale": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "salesChannelDefaultHreflang": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "SalesChannelType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SalutationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "salutationKey",
              "createdAt",
              "displayName",
              "letterName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salutationKey": { "type": "string" },
              "displayName": { "type": "string" },
              "letterName": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "Salutation": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "salutationKey",
          "createdAt",
          "displayName",
          "letterName"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationKey": { "type": "string" },
          "displayName": { "type": "string" },
          "letterName": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ScheduledTask": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Script": {
        "description": "Added since version: 6.4.7.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SeoUrlJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "languageId",
              "foreignKey",
              "routeName",
              "pathInfo",
              "seoPathInfo",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "foreignKey": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "routeName": { "type": "string" },
              "pathInfo": { "type": "string" },
              "seoPathInfo": { "type": "string" },
              "isCanonical": { "type": "boolean" },
              "isModified": { "type": "boolean" },
              "isDeleted": { "type": "boolean" },
              "error": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrl": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "languageId",
          "foreignKey",
          "routeName",
          "pathInfo",
          "seoPathInfo",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "foreignKey": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "routeName": {
            "type": "string",
            "enum": [
              "frontend.navigation.page",
              "frontend.landing.page",
              "frontend.detail.page"
            ]
          },
          "pathInfo": { "type": "string" },
          "seoPathInfo": { "type": "string" },
          "isCanonical": { "type": "boolean" },
          "isModified": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "error": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SeoUrlTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "isValid": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ShippingMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "deliveryTimeId",
              "taxType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxType": { "type": "string" },
              "description": { "type": "string" },
              "trackingUrl": { "type": "string" },
              "technicalName": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8c888ae25a7bd42057370e31f7e01044"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9fbb7961d1cb158094924c679e1b302c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "afae32efe0f84fece3f96b377b768b33"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "d57ac45256849d9b13e2422d91580fb9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "06565e5611f23fdf8cc43e5077b92b54"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "deliveryTimeId", "taxType", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "deliveryTimeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxType": { "type": "string" },
          "description": { "type": "string" },
          "trackingUrl": { "type": "string" },
          "technicalName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "deliveryTime": { "$ref": "#/components/schemas/DeliveryTime" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "prices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ShippingMethodPrice" }
          },
          "media": { "$ref": "#/components/schemas/Media" },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Tag" }
          },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "ShippingMethodPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "shippingMethodId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "calculation": { "type": "integer", "format": "int64" },
          "calculationRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "quantityStart": { "type": "number", "format": "float" },
          "quantityEnd": { "type": "number", "format": "float" },
          "currencyPrice": { "type": "object" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Snippet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["setId", "translationKey", "value", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "setId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "translationKey": { "type": "string" },
          "value": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SnippetSet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "iso", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "iso": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "snippets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Snippet" }
          }
        },
        "type": "object"
      },
      "SsoProvider": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "SsoProviderCustomer": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "StateMachine": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "states": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StateMachineState" }
          },
          "transitions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StateMachineTransition" }
          }
        },
        "type": "object"
      },
      "StateMachineHistory": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          }
        },
        "type": "object"
      },
      "StateMachineState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "StateMachineTransition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Subscription": {
        "required": [
          "id",
          "convertedOrder",
          "subscriptionNumber",
          "nextSchedule",
          "salesChannelId",
          "subscriptionPlanName",
          "subscriptionIntervalName",
          "dateInterval",
          "cronInterval",
          "initialExecutionCount",
          "remainingExecutionCount",
          "billingAddressId",
          "shippingAddressId",
          "shippingMethodId",
          "paymentMethodId",
          "currencyId",
          "languageId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "convertedOrder": { "type": "object" },
          "subscriptionNumber": { "type": "string" },
          "nextSchedule": { "type": "string", "format": "date-time" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlanName": { "type": "string" },
          "subscriptionIntervalId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionIntervalName": { "type": "string" },
          "dateInterval": { "type": "string" },
          "cronInterval": { "type": "string" },
          "initialExecutionCount": { "type": "integer", "format": "int64" },
          "remainingExecutionCount": { "type": "integer", "format": "int64" },
          "billingAddressId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "subscriptionInterval": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          },
          "subscriptionCustomer": {
            "$ref": "#/components/schemas/SubscriptionCustomer"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/SubscriptionAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/SubscriptionAddress"
          },
          "addresses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SubscriptionAddress" }
          },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orders": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Order" }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Tag" }
          },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "SubscriptionAddress": {
        "required": [
          "id",
          "countryId",
          "subscriptionId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "street": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "vatId": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "billingSubscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "shippingSubscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" },
          "subscription": { "$ref": "#/components/schemas/Subscription" }
        },
        "type": "object"
      },
      "SubscriptionCustomer": {
        "required": [
          "id",
          "salutationId",
          "email",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "title": { "type": "string" },
          "customerNumber": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "SubscriptionInterval": {
        "required": [
          "id",
          "name",
          "active",
          "dateInterval",
          "cronInterval",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "dateInterval": { "type": "string" },
          "cronInterval": { "type": "string" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "subscriptions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Subscription" }
          }
        },
        "type": "object"
      },
      "SubscriptionPlanJsonApi": {
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "name",
              "active",
              "activeStorefrontLabel",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "boolean" },
              "minimumExecutionCount": { "type": "integer", "format": "int64" },
              "activeStorefrontLabel": { "type": "boolean" },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "discountPercentage": { "type": "number", "format": "float" },
              "label": { "type": "string" },
              "discountPrice": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-plan/5e63f9057837020694081b9412211bfb/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "2d5d14f95af035cbd8437948de61f94c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SubscriptionPlan": {
        "required": [
          "id",
          "name",
          "active",
          "activeStorefrontLabel",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" },
          "minimumExecutionCount": { "type": "integer", "format": "int64" },
          "activeStorefrontLabel": { "type": "boolean" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "discountPercentage": { "type": "number", "format": "float" },
          "label": { "type": "string" },
          "discountPrice": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "subscriptions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Subscription" }
          }
        },
        "type": "object"
      },
      "SubscriptionPlanIntervalMapping": {
        "required": ["subscriptionIntervalId", "subscriptionPlanId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionIntervalId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "subscriptionInterval": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          }
        },
        "type": "object"
      },
      "SubscriptionPlanProductMapping": {
        "required": ["productId", "subscriptionPlanId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "SubscriptionTagMapping": {
        "required": ["subscriptionId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscription": { "$ref": "#/components/schemas/Subscription" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsBlockRule": {
        "required": ["id", "cmsBlockId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "inverted": { "type": "boolean" },
          "visibilityRuleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "visibilityRule": { "$ref": "#/components/schemas/Rule" },
          "cmsBlock": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsForm": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormGroup": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormGroupField": {
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsQuickview": {
        "required": ["id", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsBlock": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsScrollNavigation": {
        "required": ["id", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "displayName": { "type": "string" },
          "cmsSectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "cmsSection": { "$ref": "#/components/schemas/CmsSection" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsScrollNavigationPageSettings": {
        "required": [
          "id",
          "active",
          "duration",
          "easing",
          "bouncy",
          "easingDegree",
          "nativeScrolling",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "duration": { "type": "integer", "format": "int64" },
          "easing": { "type": "string" },
          "bouncy": { "type": "boolean" },
          "easingDegree": { "type": "integer", "format": "int64" },
          "nativeScrolling": { "type": "boolean" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateJsonApi": {
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["id", "internalName", "createdAt", "displayName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "internalName": { "type": "string" },
              "displayName": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "boolean" },
              "stepByStep": { "type": "boolean" },
              "confirmInput": { "type": "boolean" },
              "optionsAutoCollapse": { "type": "boolean" },
              "decisionTree": { "type": "object", "readOnly": true },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "93da65a9fd0004d9477aeac024e08e15"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "86024cad1e83101d97359d7351051156"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "exclusions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/exclusions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion"
                            },
                            "id": {
                              "type": "string",
                              "example": "c6fc0a7508c1a1fe9e233e81d31133b8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configurations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/4751e4cb483e992aa073494b9cfa9be6/configurations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_configuration"
                            },
                            "id": {
                              "type": "string",
                              "example": "86f23519571eb918e8812e1979d55409"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplate": {
        "required": ["id", "internalName", "createdAt", "displayName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "internalName": { "type": "string" },
          "displayName": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" },
          "stepByStep": { "type": "boolean" },
          "confirmInput": { "type": "boolean" },
          "optionsAutoCollapse": { "type": "boolean" },
          "decisionTree": { "type": "object", "readOnly": true },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
            }
          },
          "products": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Product" }
          },
          "exclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
            }
          },
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
            }
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateConfigurationJsonApi": {
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "hash",
              "configuration",
              "templateId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hash": { "type": "string" },
              "configuration": { "type": "object" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration/ab78fa5f6df63876a7c6575bdf517fe2/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "66f6181bcb4cff4cd38fbc804a036db6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateConfigurationShares": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration/ab78fa5f6df63876a7c6575bdf517fe2/templateConfigurationShares"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_configuration_share"
                            },
                            "id": {
                              "type": "string",
                              "example": "81a31c81fde24f296e176502d32baa6d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateConfiguration": {
        "required": ["id", "hash", "configuration", "templateId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hash": { "type": "string" },
          "configuration": { "type": "object" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          },
          "templateConfigurationShares": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
            }
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateConfigurationShare": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusion": {
        "required": ["id", "name", "templateId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
            }
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionCondition": {
        "required": [
          "id",
          "templateExclusionId",
          "templateOptionId",
          "templateExclusionOperatorId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateExclusionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateExclusionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateExclusionOperatorId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateExclusion": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "templateExclusionOperator": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
          },
          "templateOptionValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
            }
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionOperator": {
        "required": [
          "id",
          "operator",
          "templateOptionType",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "operator": { "type": "string" },
          "templateOptionType": { "type": "string" },
          "label": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "templateExclusionConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
            }
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionJsonApi": {
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "type",
              "templateId",
              "createdAt",
              "displayName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "type": { "type": "string" },
              "displayName": { "type": "string" },
              "description": { "type": "string" },
              "placeholder": { "type": "string" },
              "typeProperties": { "type": "object" },
              "itemNumber": { "type": "string" },
              "required": { "type": "boolean" },
              "oneTimeSurcharge": { "type": "boolean" },
              "relativeSurcharge": { "type": "boolean" },
              "advancedSurcharge": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "price": { "type": "object" },
              "calculatedPrice": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "afae32efe0f84fece3f96b377b768b33"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "values": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/values"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value"
                            },
                            "id": {
                              "type": "string",
                              "example": "f09cc7ee3a9a93273f4b80601cafb00c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "57e853a74b92e339ec2e302b015e60f3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "66f6181bcb4cff4cd38fbc804a036db6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6342f0c20b443cb5408ec0fc12430bcb/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "06565e5611f23fdf8cc43e5077b92b54"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOption": {
        "required": ["id", "type", "templateId", "createdAt", "displayName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "type": { "type": "string" },
          "displayName": { "type": "string" },
          "description": { "type": "string" },
          "placeholder": { "type": "string" },
          "typeProperties": { "type": "object" },
          "itemNumber": { "type": "string" },
          "required": { "type": "boolean" },
          "oneTimeSurcharge": { "type": "boolean" },
          "relativeSurcharge": { "type": "boolean" },
          "advancedSurcharge": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "price": { "type": "object" },
          "calculatedPrice": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
            }
          },
          "templateExclusionConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
            }
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionPrice": {
        "required": ["id", "templateOptionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionValueJsonApi": {
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "id",
              "templateOptionId",
              "position",
              "createdAt",
              "displayName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateOptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "value": { "type": "object" },
              "displayName": { "type": "string" },
              "itemNumber": { "type": "string" },
              "default": { "type": "boolean" },
              "oneTimeSurcharge": { "type": "boolean" },
              "relativeSurcharge": { "type": "boolean" },
              "advancedSurcharge": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "price": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "afae32efe0f84fece3f96b377b768b33"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateOption": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/templateOption"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6891a002a90a39e71e67c4fc148db8df"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "06565e5611f23fdf8cc43e5077b92b54"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/b57f26a8362182be3e67a815927b7f37/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "57e853a74b92e339ec2e302b015e60f3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOptionValue": {
        "required": [
          "id",
          "templateOptionId",
          "position",
          "createdAt",
          "displayName"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "value": { "type": "object" },
          "displayName": { "type": "string" },
          "itemNumber": { "type": "string" },
          "default": { "type": "boolean" },
          "oneTimeSurcharge": { "type": "boolean" },
          "relativeSurcharge": { "type": "boolean" },
          "advancedSurcharge": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
            }
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "tax": { "$ref": "#/components/schemas/Tax" },
          "templateExclusionConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
            }
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionValuePrice": {
        "required": ["id", "templateOptionValueId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionValueId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionValueVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateOptionValue": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDelayAction": {
        "required": ["id", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagDynamicAccessLandingPageRule": {
        "required": ["landingPageId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPage": { "$ref": "#/components/schemas/LandingPage" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDynamicAccessProductRule": {
        "required": ["productId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagLanguagePackLanguage": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationConnection": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationData": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationGeneralSetting": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationLogging": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationMapping": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationMediaFile": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationRun": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannel": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelRun": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelRunLog": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalTransactionReport": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalVaultTokenMapping": {
        "required": ["customerId", "paymentMethodId", "tokenId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tokenId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "token": { "$ref": "#/components/schemas/SwagPaypalVaultToken" }
        },
        "type": "object"
      },
      "SwagSocialShoppingCustomer": {
        "required": ["id", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingOrder": {
        "required": ["id", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingProductError": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingSalesChannel": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SystemConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "id",
          "configurationKey",
          "configurationValue",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "configurationKey": { "type": "string" },
          "configurationValue": {
            "properties": { "_value": { "type": "object" } },
            "type": "object"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "Tag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Tax": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "taxRate", "name", "position", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxRate": { "type": "number", "format": "float" },
          "name": { "type": "string" },
          "position": {
            "description": "Added since version: 6.4.0.0.",
            "type": "integer",
            "format": "int64"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "TaxProvider": {
        "description": "Added since version: 6.5.0.0",
        "required": ["id", "priority", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "name": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "processUrl": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "TaxRule": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "TaxRuleType": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt", "typeName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Theme": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "name", "author", "active", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "author": { "type": "string" },
          "description": { "type": "string" },
          "labels": { "type": "object" },
          "helpTexts": { "type": "object" },
          "customFields": { "type": "object" },
          "previewMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentThemeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "baseConfig": { "type": "object" },
          "configValues": { "type": "object" },
          "active": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Media" }
          }
        },
        "type": "object"
      },
      "Unit": {
        "description": "Added since version: 6.0.0.0",
        "required": ["id", "createdAt", "shortCode", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shortCode": { "type": "string" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "User": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserAccessKey": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserRecovery": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Warehouse": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WarehouseGroup": {
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Webhook": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WebhookEventLog": {
        "description": "Added since version: 6.4.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AccountNewsletterRecipientResult": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["undefined", "notSet", "direct", "optIn", "optOut"]
          },
          "apiAlias": {
            "type": "string",
            "enum": ["account_newsletter_recipient"]
          }
        },
        "required": ["status", "apiAlias"]
      },
      "AggregationEntity": {
        "title": "AggregationEntity",
        "type": "object",
        "properties": {
          "name": {
            "description": "Give your aggregation an identifier, so you can find it easier",
            "type": "string"
          },
          "type": {
            "description": "The type of aggregation",
            "type": "string",
            "enum": ["entity"]
          },
          "field": {
            "description": "The field you want to aggregate over.",
            "type": "string"
          },
          "definition": {
            "description": "The entity definition e.g \"product_manufacturer\".",
            "type": "string"
          }
        },
        "required": ["name", "type", "field", "definition"]
      },
      "AggregationFilter": {
        "title": "AggregationFilter",
        "type": "object",
        "properties": {
          "name": {
            "description": "Give your aggregation an identifier, so you can find it easier",
            "type": "string"
          },
          "type": {
            "description": "The type of aggregation",
            "type": "string",
            "enum": ["filter"]
          },
          "filter": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Filters" }
          }
        },
        "required": ["name", "type", "filter"]
      },
      "AggregationTerms": {
        "title": "AggregationTerms",
        "type": "object",
        "properties": {
          "name": {
            "description": "Give your aggregation an identifier, so you can find it easier",
            "type": "string"
          },
          "type": {
            "description": "The type of aggregation",
            "type": "string",
            "enum": ["terms"]
          },
          "field": {
            "description": "The field you want to aggregate over.",
            "type": "string"
          },
          "limit": {
            "description": "The number of terms to return",
            "type": "number"
          },
          "sort": {
            "type": "array",
            "description": "Sorting the aggregation result.",
            "items": { "$ref": "#/components/schemas/Sort" }
          }
        },
        "required": ["name", "type", "field"]
      },
      "AggregationHistogram": {
        "title": "AggregationHistogram",
        "type": "object",
        "properties": {
          "name": {
            "description": "Give your aggregation an identifier, so you can find it easier",
            "type": "string"
          },
          "type": {
            "description": "The type of aggregation",
            "type": "string",
            "enum": ["histogram"]
          },
          "field": {
            "description": "The field you want to aggregate over.",
            "type": "string"
          },
          "interval": {
            "description": "The interval of the histogram",
            "type": "number"
          },
          "format": {
            "description": "The format of the histogram",
            "type": "string"
          },
          "timeZone": {
            "description": "The timezone of the histogram",
            "type": "string"
          }
        },
        "required": ["name", "type", "field"]
      },
      "AggregationRange": {
        "title": "AggregationRange",
        "description": "For more information, see [Aggregations Reference > Range Aggregation](https://developer.shopware.com/docs/resources/references/core-reference/dal-reference/aggregations-reference.html#range-aggregations)",
        "type": "object",
        "properties": {
          "name": {
            "description": "Give your aggregation an identifier, so you can find it easier",
            "type": "string"
          },
          "type": {
            "description": "The type of aggregation",
            "type": "string",
            "enum": ["range"]
          },
          "field": {
            "description": "The field you want to aggregate over.",
            "type": "string"
          },
          "ranges": {
            "description": "The ranges of the aggregation",
            "type": "array",
            "items": {
              "type": "object",
              "anyOf": [
                {
                  "type": "object",
                  "title": "From and to",
                  "properties": {
                    "from": {
                      "type": "number",
                      "description": "The lower bound of the range"
                    },
                    "to": {
                      "type": "number",
                      "description": "The upper bound of the range"
                    }
                  },
                  "required": ["from", "to"]
                },
                {
                  "type": "object",
                  "title": "From only",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "The lower bound of the range"
                    }
                  },
                  "required": ["from"]
                },
                {
                  "type": "object",
                  "title": "To only",
                  "properties": {
                    "to": {
                      "type": "string",
                      "description": "The upper bound of the range"
                    }
                  },
                  "required": ["to"]
                }
              ]
            }
          }
        },
        "required": ["name", "type", "field", "ranges"]
      },
      "AggregationMetrics": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["avg", "count", "max", "min", "stats", "sum"]
          },
          "field": { "type": "string" }
        },
        "required": ["name", "type", "field"]
      },
      "ArrayStruct": { "$ref": "#/components/schemas/Struct" },
      "CalculatedPrice": {
        "type": "object",
        "description": "Represents a product along with detailed information required to display a variant selection.",
        "properties": {
          "unitPrice": { "type": "number" },
          "quantity": { "type": "number" },
          "totalPrice": { "type": "number" },
          "calculatedTaxes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "apiAlias": {
                  "type": "string",
                  "enum": ["cart_tax_calculated"]
                },
                "tax": { "type": "number" },
                "taxRate": { "type": "number" },
                "price": { "type": "number" }
              },
              "required": ["apiAlias", "tax", "taxRate", "price"]
            }
          },
          "referencePrice": {
            "oneOf": [
              { "$ref": "#/components/schemas/ReferencePrice" },
              { "type": "null" }
            ]
          },
          "listPrice": {
            "oneOf": [
              { "$ref": "#/components/schemas/ListPrice" },
              { "type": "null" }
            ]
          },
          "regulationPrice": {
            "type": "object",
            "properties": {
              "price": { "type": "number" },
              "apiAlias": {
                "type": "string",
                "enum": ["cart_regulation_price"]
              }
            },
            "nullable": true
          },
          "hasRange": { "type": "boolean" },
          "variantId": {
            "type": "string",
            "format": "^[0-9a-f]{32}$",
            "nullable": true
          },
          "apiAlias": { "type": "string", "enum": ["calculated_price"] },
          "taxRules": {
            "type": "array",
            "description": "Currently active tax rules and/or rates",
            "items": {
              "type": "object",
              "properties": {
                "taxRate": { "type": "number", "format": "float" },
                "name": { "type": "string" }
              }
            }
          }
        },
        "required": [
          "apiAlias",
          "hasRange",
          "regulationPrice",
          "listPrice",
          "referencePrice",
          "calculatedTaxes",
          "totalPrice",
          "quantity",
          "unitPrice"
        ]
      },
      "Cart": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the cart - for example `guest-cart`",
            "type": "string"
          },
          "token": {
            "description": "Context token identifying the cart and the user session",
            "type": "string"
          },
          "price": { "$ref": "#/components/schemas/CalculatedPrice" },
          "lineItems": {
            "description": "All items within the cart",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LineItem" }
          },
          "errors": {
            "type": "array",
            "description": "A list of all cart errors, such as insufficient stocks, invalid addresses or vouchers.",
            "items": { "$ref": "#/components/schemas/CartError" }
          },
          "deliveries": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CartDelivery" }
          },
          "transactions": {
            "description": "A list of all payment transactions associated with the current cart.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "paymentMethodId": { "type": "string" },
                "amount": { "$ref": "#/components/schemas/CalculatedPrice" }
              }
            }
          },
          "modified": { "type": "boolean" },
          "customerComment": {
            "type": "string",
            "description": "A comment that can be added to the cart.",
            "nullable": true
          },
          "affiliateCode": {
            "type": "string",
            "description": "An affiliate tracking code",
            "nullable": true
          },
          "campaignCode": {
            "type": "string",
            "description": "A campaign tracking code",
            "nullable": true
          }
        }
      },
      "CartDelivery": {
        "type": "object",
        "description": "A list of all cart errors, such as insufficient stocks, invalid addresses or vouchers.",
        "properties": {
          "deliveryDate": {
            "type": "object",
            "properties": {
              "earliest": { "type": "string", "format": "date-time" },
              "latest": { "type": "string", "format": "date-time" }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "apiAlias": {
                "type": "string",
                "enum": ["cart_delivery_shipping_location"]
              },
              "country": { "$ref": "#/components/schemas/Country" },
              "address": { "$ref": "#/components/schemas/CustomerAddress" },
              "state": { "$ref": "#/components/schemas/CountryState" }
            }
          },
          "positions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CartDeliveryPosition" }
          },
          "shippingCosts": { "$ref": "#/components/schemas/CalculatedPrice" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" }
        }
      },
      "CartDeliveryPosition": {
        "type": "object",
        "description": "A list of all cart errors, such as insufficient stocks, invalid addresses or vouchers.",
        "properties": {
          "deliveryDate": {
            "type": "object",
            "properties": {
              "earliest": { "type": "string", "format": "date-time" },
              "latest": { "type": "string", "format": "date-time" }
            }
          },
          "identifier": { "type": "string" },
          "lineItem": { "$ref": "#/components/schemas/LineItem" },
          "price": { "$ref": "#/components/schemas/CalculatedPrice" }
        }
      },
      "CartError": {
        "type": "object",
        "description": "A list of all cart errors, such as insufficient stocks, invalid addresses or vouchers.",
        "properties": {
          "items": {
            "type": "object",
            "properties": {
              "key": { "type": "string" },
              "level": {
                "type": "number",
                "enum": [0, 10, 20],
                "description": "* `0` - notice,\n* `10` - warning,\n* `20` - error"
              },
              "message": { "type": "string" },
              "messageKey": { "type": "string" }
            }
          }
        }
      },
      "CartItems": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LineItem" }
          }
        }
      },
      "Criteria": {
        "type": "object",
        "description": "Search parameters. For more information, see our documentation on [Search Queries](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#structure)",
        "properties": {
          "page": { "description": "Search result page", "type": "integer" },
          "term": { "description": "Search term", "type": "string" },
          "limit": {
            "description": "Number of items per result page",
            "type": "integer"
          },
          "filter": {
            "type": "array",
            "description": "List of filters to restrict the search result. For more information, see [Search Queries > Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#filter)",
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/SimpleFilter" },
                { "$ref": "#/components/schemas/EqualsFilter" },
                { "$ref": "#/components/schemas/MultiNotFilter" },
                { "$ref": "#/components/schemas/RangeFilter" }
              ]
            }
          },
          "ids": {
            "type": "array",
            "description": "List of ids to search for",
            "items": { "type": "string" }
          },
          "query": {
            "type": "array",
            "description": "List of queries to restrict the search result. For more information, see [Search Queries > Query](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#query)",
            "items": { "$ref": "#/components/schemas/Query" }
          },
          "associations": {
            "type": "array",
            "description": "Associations to include. For more information, see [Search Queries > Associations](https://shopware.stoplight.io/docs/store-api/cf710bf73d0cd-search-queries#associations)",
            "items": { "$ref": "#/components/schemas/Association" }
          },
          "post-filter": {
            "type": "array",
            "description": "Filters that applied without affecting aggregations. For more information, see [Search Queries > Post Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#post-filter)",
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/SimpleFilter" },
                { "$ref": "#/components/schemas/EqualsFilter" },
                { "$ref": "#/components/schemas/MultiNotFilter" },
                { "$ref": "#/components/schemas/RangeFilter" }
              ]
            }
          },
          "sort": {
            "type": "array",
            "description": "Sorting in the search result.",
            "items": { "$ref": "#/components/schemas/Sort" }
          },
          "aggregations": { "$ref": "#/components/schemas/Aggregations" },
          "fields": {
            "type": "array",
            "description": "Fields which should be returned in the search result.",
            "items": { "type": "string", "description": "Name of a field" }
          },
          "grouping": {
            "type": "array",
            "description": "Perform groupings over certain fields",
            "items": { "type": "string", "description": "Name of a field" }
          },
          "total-count-mode": { "$ref": "#/components/schemas/TotalCountMode" },
          "includes": { "$ref": "#/components/schemas/Include" }
        }
      },
      "Association": {
        "type": "object",
        "additionalProperties": { "$ref": "#/components/schemas/Criteria" }
      },
      "Include": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "Aggregations": {
        "type": "array",
        "items": {
          "anyOf": [
            { "$ref": "#/components/schemas/AggregationMetrics" },
            {
              "title": "AggregationEntity",
              "allOf": [
                { "$ref": "#/components/schemas/AggregationEntity" },
                { "$ref": "#/components/schemas/SubAggregations" }
              ]
            },
            {
              "title": "AggregationFilter",
              "allOf": [
                { "$ref": "#/components/schemas/AggregationFilter" },
                { "$ref": "#/components/schemas/SubAggregations" }
              ]
            },
            {
              "title": "AggregationTerms",
              "allOf": [
                { "$ref": "#/components/schemas/AggregationTerms" },
                { "$ref": "#/components/schemas/SubAggregations" }
              ]
            },
            {
              "title": "AggregationHistogram",
              "allOf": [
                { "$ref": "#/components/schemas/AggregationHistogram" },
                { "$ref": "#/components/schemas/SubAggregations" }
              ]
            },
            {
              "title": "AggregationRange",
              "allOf": [
                { "$ref": "#/components/schemas/AggregationRange" },
                { "$ref": "#/components/schemas/SubAggregations" }
              ]
            }
          ]
        }
      },
      "SubAggregations": {
        "type": "object",
        "properties": {
          "aggregation": {
            "anyOf": [
              { "$ref": "#/components/schemas/AggregationMetrics" },
              { "$ref": "#/components/schemas/AggregationEntity" },
              { "$ref": "#/components/schemas/AggregationFilter" },
              { "$ref": "#/components/schemas/AggregationTerms" },
              { "$ref": "#/components/schemas/AggregationHistogram" },
              { "$ref": "#/components/schemas/AggregationRange" }
            ]
          }
        }
      },
      "TotalCountMode": {
        "description": "Whether the total for the total number of hits should be determined for the search query. none = disabled total count, exact = calculate exact total amount (slow), next-pages = calculate only for next page (fast)",
        "type": "string",
        "default": "none",
        "enum": ["none", "exact", "next-pages"]
      },
      "Query": {
        "type": "object",
        "properties": {
          "score": { "type": "number" },
          "query": {
            "oneOf": [
              { "$ref": "#/components/schemas/SimpleFilter" },
              { "$ref": "#/components/schemas/EqualsFilter" },
              { "$ref": "#/components/schemas/MultiNotFilter" },
              { "$ref": "#/components/schemas/RangeFilter" }
            ]
          }
        },
        "additionalProperties": true
      },
      "Sort": {
        "type": "object",
        "properties": {
          "field": { "type": "string" },
          "order": { "type": "string", "enum": ["ASC", "DESC"] },
          "naturalSorting": { "type": "boolean" },
          "type": { "type": "string" }
        },
        "required": ["field", "order"]
      },
      "Filters": {
        "type": "array",
        "items": {
          "anyOf": [
            { "$ref": "#/components/schemas/SimpleFilter" },
            { "$ref": "#/components/schemas/EqualsFilter" },
            { "$ref": "#/components/schemas/MultiNotFilter" },
            { "$ref": "#/components/schemas/RangeFilter" }
          ]
        }
      },
      "SimpleFilter": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["contains", "equalsAny", "prefix", "suffix"]
          },
          "field": { "type": "string" },
          "value": { "type": "string" }
        },
        "required": ["type", "field", "value"]
      },
      "EqualsFilter": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["equals"] },
          "field": { "type": "string" },
          "value": {
            "oneOf": [
              { "type": "string" },
              { "type": "number" },
              { "type": "boolean" },
              { "type": "null" }
            ]
          }
        },
        "required": ["type", "field", "value"]
      },
      "MultiNotFilter": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["multi", "not"] },
          "operator": { "type": "string", "enum": ["AND", "and", "OR", "or"] },
          "queries": { "$ref": "#/components/schemas/Filters" }
        },
        "required": ["type", "operator", "queries"]
      },
      "RangeFilter": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["range"] },
          "field": { "type": "string" },
          "parameters": {
            "type": "object",
            "properties": {
              "gte": { "type": "number" },
              "gt": { "type": "number" },
              "lte": { "type": "number" },
              "lt": { "type": "number" }
            }
          }
        },
        "required": ["type", "field", "parameters"]
      },
      "CrossSellingElement": {
        "type": "object",
        "properties": {
          "crossSelling": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "products": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Product" }
          },
          "total": { "type": "integer", "format": "int32" },
          "streamId": { "type": "string", "format": "uuid" },
          "apiAlias": { "type": "string", "enum": ["cross_selling_element"] }
        },
        "required": ["crossSelling", "products", "total", "apiAlias"]
      },
      "CrossSellingElementCollection": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/CrossSellingElement" }
      },
      "CustomerAddressBody": {
        "description": "Added since version: 6.0.0.0",
        "required": ["countryId", "firstName", "lastName", "city", "street"],
        "properties": {
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "street": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "CustomerAddressRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": {
            "$ref": "#/components/schemas/CountryState",
            "nullable": true
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "required": [
          "customerId",
          "createdAt",
          "updatedAt",
          "country",
          "salutation"
        ]
      },
      "DeliveryInformation": {
        "type": "object",
        "properties": {
          "apiAlias": {
            "type": "string",
            "enum": ["cart_delivery_information"]
          },
          "freeDelivery": { "type": "boolean" },
          "deliveryTime": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "min": { "type": "integer" },
              "max": { "type": "integer" },
              "unit": { "type": "string" },
              "apiAlias": { "type": "string", "enum": ["cart_delivery_time"] }
            }
          },
          "height": { "type": "integer" },
          "length": { "type": "integer" },
          "restockTime": { "type": "integer" },
          "stock": { "type": "integer" },
          "weight": { "type": "integer" },
          "width": { "type": "integer" }
        }
      },
      "EntitySearchResult": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "entity": { "type": "string" },
              "total": {
                "type": "integer",
                "description": "The total number of found entities"
              },
              "aggregations": {
                "type": "array",
                "description": "Contains aggregated data. A simple example is the determination of the average price from a product search query.",
                "items": { "type": "object" }
              },
              "page": {
                "type": "integer",
                "description": "The actual page. This can be used for pagination."
              },
              "limit": {
                "type": "integer",
                "description": "The actual limit. This is used for pagination and goes together with the page."
              }
            }
          }
        ]
      },
      "FindProductVariantRouteResponse": {
        "type": "object",
        "properties": {
          "foundCombination": {
            "type": "object",
            "properties": {
              "variantId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "options": { "type": "array", "items": { "type": "string" } }
            }
          }
        }
      },
      "LineItemType": {
        "type": "string",
        "enum": [
          "product",
          "credit",
          "custom",
          "promotion",
          "discount",
          "container",
          "quantity"
        ]
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LineItem" }
          },
          "cover": { "$ref": "#/components/schemas/ProductMedia" },
          "dataContextHash": { "type": "string" },
          "dataTimestamp": { "type": "string" },
          "deliveryInformation": {
            "$ref": "#/components/schemas/DeliveryInformation"
          },
          "description": { "type": "string" },
          "good": { "type": "boolean" },
          "id": { "type": "string" },
          "label": { "type": "string" },
          "modified": { "type": "boolean" },
          "modifiedByApp": { "type": "boolean" },
          "payload": { "$ref": "#/components/schemas/ProductJsonApi" },
          "price": {
            "type": "object",
            "properties": {
              "apiAlias": { "type": "string", "enum": ["calculated_price"] },
              "calculatedTaxes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "apiAlias": {
                      "type": "string",
                      "enum": ["cart_tax_calculated"]
                    },
                    "tax": { "type": "number" },
                    "taxRate": { "type": "number" },
                    "price": { "type": "number" }
                  },
                  "required": ["apiAlias", "tax", "taxRate", "price"]
                }
              },
              "listPrice": {
                "oneOf": [
                  { "$ref": "#/components/schemas/ListPrice" },
                  { "type": "null" }
                ]
              },
              "quantity": { "type": "number" },
              "referencePrice": {
                "oneOf": [
                  { "$ref": "#/components/schemas/ReferencePrice" },
                  { "type": "null" }
                ]
              },
              "regulationPrice": {
                "type": "object",
                "properties": {
                  "price": { "type": "number" },
                  "apiAlias": {
                    "type": "string",
                    "enum": ["cart_regulation_price"]
                  }
                },
                "nullable": true
              },
              "totalPrice": { "type": "number" },
              "unitPrice": { "type": "number" },
              "taxRules": {
                "type": "array",
                "description": "Currently active tax rules and/or rates",
                "items": {
                  "type": "object",
                  "properties": {
                    "taxRate": { "type": "number", "format": "float" },
                    "name": { "type": "string" }
                  }
                }
              }
            },
            "required": ["apiAlias", "totalPrice", "quantity", "unitPrice"]
          },
          "priceDefinition": { "$ref": "#/components/schemas/PriceDefinition" },
          "quantity": { "type": "number" },
          "quantityInformation": {
            "type": "object",
            "properties": {
              "maxPurchase": { "type": "number" },
              "minPurchase": { "type": "number" },
              "purchaseSteps": { "type": "number" }
            }
          },
          "referencedId": { "type": "string" },
          "removable": { "type": "boolean" },
          "stackable": { "type": "boolean" },
          "states": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["is-physical", "is-download"]
            }
          },
          "type": { "$ref": "#/components/schemas/LineItemType" },
          "uniqueIdentifier": { "type": "string" }
        },
        "required": ["id", "type"]
      },
      "ListPrice": {
        "type": "object",
        "description": "",
        "properties": {
          "discount": { "type": "number" },
          "percentage": { "type": "number" },
          "price": { "type": "number" },
          "apiAlias": { "type": "string", "enum": ["cart_list_price"] }
        },
        "required": ["apiAlias"]
      },
      "NavigationRouteResponse": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/Category" }
      },
      "NavigationType": {
        "type": "string",
        "enum": ["main-navigation", "footer-navigation", "service-navigation"]
      },
      "OrderRouteResponse": {
        "type": "object",
        "properties": {
          "orders": {
            "allOf": [
              {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Order" }
              },
              { "$ref": "#/components/schemas/EntitySearchResult" }
            ]
          },
          "paymentChangeable": {
            "type": "object",
            "description": "The key-value pairs contain the uuid of the order as key and a boolean as value, indicating that the payment method can still be changed.",
            "additionalProperties": { "type": "boolean" }
          }
        },
        "required": ["orders"]
      },
      "PriceDefinition": {
        "type": "object",
        "properties": {
          "apiAlias": { "type": "string", "enum": ["cart_price_quantity"] },
          "isCalculated": { "type": "boolean" },
          "listPrice": { "$ref": "#/components/schemas/ListPrice" },
          "price": { "type": "number" },
          "quantity": { "type": "number" },
          "regulationPrice": {
            "properties": { "price": { "type": "number", "format": "float" } },
            "type": "object"
          },
          "taxRules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taxRate": { "type": "number", "format": "float" },
                "name": { "type": "string" }
              }
            }
          },
          "type": { "type": "string" }
        }
      },
      "ProductDetailResponse": {
        "type": "object",
        "description": "Represents a product along with detailed information required to display a variant selection.",
        "properties": {
          "product": { "$ref": "#/components/schemas/Product" },
          "configurator": {
            "type": "array",
            "description": "List of property groups with their corresponding options and information on how to display them.",
            "items": { "$ref": "#/components/schemas/PropertyGroup" }
          }
        },
        "required": ["product"]
      },
      "ProductListingCriteria": {
        "allOf": [
          { "$ref": "#/components/schemas/Criteria" },
          {
            "type": "object",
            "description": "Additional search parameters for product listings",
            "properties": {
              "order": {
                "description": "Specifies the sorting of the products by `availableSortings`. If not set, the default sorting will be set according to the shop settings. The available sorting options are sent within the response under the `availableSortings` key. In order to sort by a field, consider using the `sort` parameter from the listing criteria. Do not use both parameters together, as it might lead to unexpected results.",
                "type": "string"
              },
              "limit": {
                "description": "Number of items per result page. If not set, the limit will be set according to the default products per page, defined in the system settings.",
                "type": "integer",
                "minimum": 0
              },
              "p": {
                "description": "Search result page",
                "type": "integer",
                "default": 1
              },
              "manufacturer": {
                "description": "Filter by manufacturers. List of manufacturer identifiers separated by a `|`.",
                "type": "string"
              },
              "min-price": {
                "description": "Filters by a minimum product price. Has to be lower than the `max-price` filter.",
                "type": "integer",
                "minimum": 0,
                "default": 0
              },
              "max-price": {
                "description": "Filters by a maximum product price. Has to be higher than the `min-price` filter.",
                "type": "integer",
                "minimum": 0,
                "default": 0
              },
              "rating": {
                "description": "Filter products with a minimum average rating.",
                "type": "integer"
              },
              "shipping-free": {
                "description": "Filters products that are marked as shipping-free.",
                "type": "boolean",
                "default": false
              },
              "properties": {
                "description": "Filters products by their properties. List of property identifiers separated by a `|`.",
                "type": "string"
              },
              "manufacturer-filter": {
                "description": "Enables/disabled filtering by manufacturer. If set to false, the `manufacturer` filter will be ignored. Also the `aggregations[manufacturer]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "price-filter": {
                "description": "Enables/disabled filtering by price. If set to false, the `min-price` and `max-price` filter will be ignored. Also the `aggregations[price]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "rating-filter": {
                "description": "Enables/disabled filtering by rating. If set to false, the `rating` filter will be ignored. Also the `aggregations[rating]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "shipping-free-filter": {
                "description": "Enables/disabled filtering by shipping-free products. If set to false, the `shipping-free` filter will be ignored. Also the `aggregations[shipping-free]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "property-filter": {
                "description": "Enables/disabled filtering by properties products. If set to false, the `properties` filter will be ignored. Also the `aggregations[properties]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "property-whitelist": {
                "description": "A whitelist of property identifiers which can be used for filtering. List of property identifiers separated by a `|`. The `property-filter` must be `true`, otherwise the whitelist has no effect.",
                "type": "string"
              },
              "reduce-aggregations": {
                "description": "By sending the parameter `reduce-aggregations` , the post-filters that were applied by the customer, are also applied to the aggregations. This has the consequence that only values are returned in the aggregations that would lead to further filter results. This parameter is a flag, the value has no effect.",
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ProductListingFlags": {
        "type": "object",
        "description": "Additional flags for product listings",
        "properties": {
          "no-aggregations": {
            "description": "Resets all aggregations in the criteria. This parameter is a flag, the value has no effect.",
            "type": "string",
            "nullable": true
          },
          "only-aggregations": {
            "description": "If this flag is set, no products are fetched. Sorting and associations are also ignored. This parameter is a flag, the value has no effect.",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductListingResult": {
        "allOf": [
          { "$ref": "#/components/schemas/EntitySearchResult" },
          {
            "type": "object",
            "properties": {
              "currentFilters": {
                "type": "object",
                "description": "Contains the state of the filters. These can be used to create listing filters.",
                "properties": {
                  "navigationId": { "type": "string" },
                  "manufacturer": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "price": {
                    "type": "object",
                    "properties": {
                      "min": { "type": "integer", "default": 0 },
                      "max": { "type": "integer", "default": 0 }
                    },
                    "required": ["min", "max"]
                  },
                  "rating": { "type": "integer", "nullable": true },
                  "shipping-free": { "type": "boolean", "default": false },
                  "properties": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "search": { "type": "string" }
                },
                "required": [
                  "manufacturer",
                  "navigationId",
                  "price",
                  "properties",
                  "rating",
                  "shipping-free"
                ]
              },
              "availableSortings": {
                "type": "array",
                "description": "Contains the available sorting. These can be used to show a sorting select-box in the product listing.",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": { "type": "string" },
                    "translated": {
                      "type": "object",
                      "properties": { "label": { "type": "string" } },
                      "required": ["label"]
                    },
                    "key": { "type": "string" },
                    "priority": { "type": "number" },
                    "apiAlias": {
                      "type": "string",
                      "enum": ["product_sorting"]
                    }
                  },
                  "required": [
                    "label",
                    "translated",
                    "key",
                    "priority",
                    "apiAlias"
                  ]
                }
              },
              "sorting": { "type": "string" },
              "elements": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Product" }
              },
              "entity": { "type": "string", "enum": ["product"] },
              "apiAlias": { "type": "string", "enum": ["product_listing"] }
            },
            "required": [
              "elements",
              "availableSortings",
              "currentFilters",
              "apiAlias"
            ]
          }
        ]
      },
      "ReferencePrice": {
        "type": "object",
        "properties": {
          "purchaseUnit": { "type": "number" },
          "referenceUnit": { "type": "number" },
          "unitName": { "type": "string" },
          "price": { "type": "number" },
          "apiAlias": { "type": "string", "enum": ["cart_price_reference"] },
          "listPrice": {
            "oneOf": [
              { "$ref": "#/components/schemas/ListPrice" },
              { "type": "null" }
            ]
          },
          "regulationPrice": {
            "type": "object",
            "properties": {
              "price": { "type": "number" },
              "apiAlias": {
                "type": "string",
                "enum": ["cart_regulation_price"]
              }
            },
            "nullable": true
          },
          "hasRange": { "type": "boolean" },
          "variantId": {
            "type": "string",
            "format": "^[0-9a-f]{32}$",
            "nullable": true
          }
        },
        "required": [
          "hasRange",
          "regulationPrice",
          "listPrice",
          "calculatedTaxes",
          "totalPrice",
          "quantity",
          "unitName"
        ]
      },
      "SalesChannelContext": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "token": {
                "description": "Context the user session",
                "type": "string"
              },
              "currentCustomerGroup": {
                "type": "object",
                "description": "Customer group of the current user",
                "properties": {
                  "name": { "type": "string" },
                  "displayGross": { "type": "boolean" }
                }
              },
              "fallbackCustomerGroup": {
                "description": "Fallback group if the default customer group is not applicable",
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "displayGross": { "type": "boolean" }
                }
              },
              "currency": { "$ref": "#/components/schemas/Currency" },
              "salesChannel": {
                "description": "Information about the current sales channel",
                "type": "object",
                "properties": {
                  "typeId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "paymentMethodId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "countryId": { "type": "string" },
                  "navigationCategoryId": { "type": "string" },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": { "type": "string" },
                  "serviceCategoryId": { "type": "string" },
                  "name": { "type": "string" },
                  "shortName": { "type": "string" },
                  "accessKey": { "type": "string" },
                  "active": { "type": "boolean" },
                  "maintenance": { "type": "boolean" },
                  "maintenanceIpWhitelist": { "type": "string" },
                  "mailHeaderFooterId": { "type": "string" },
                  "customerGroupId": { "type": "string" },
                  "hreflangActive": { "type": "boolean" },
                  "hreflangDefaultDomainId": { "type": "string" },
                  "analyticsId": { "type": "string" }
                }
              },
              "taxRules": {
                "type": "array",
                "description": "Currently active tax rules and/or rates",
                "items": {
                  "type": "object",
                  "properties": {
                    "taxRate": { "type": "number", "format": "float" },
                    "name": { "type": "string" }
                  }
                }
              },
              "customer": { "$ref": "#/components/schemas/Customer" },
              "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
              "shippingLocation": {
                "type": "object",
                "properties": {
                  "apiAlias": {
                    "type": "string",
                    "enum": ["cart_delivery_shipping_location"]
                  },
                  "country": { "$ref": "#/components/schemas/Country" },
                  "address": { "$ref": "#/components/schemas/CustomerAddress" }
                }
              },
              "shippingMethod": {
                "$ref": "#/components/schemas/ShippingMethod"
              },
              "context": {
                "description": "Core context with general configuration values and state",
                "type": "object",
                "properties": {
                  "versionId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "currencyFactor": { "type": "integer" },
                  "currencyPrecision": { "type": "integer", "format": "int32" },
                  "languageIdChain": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "scope": { "type": "string" },
                  "source": { "type": "string" },
                  "taxState": { "type": "string" },
                  "useCache": { "type": "boolean" }
                }
              }
            }
          }
        ]
      },
      "ShippingMethodPageRouteResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "active": { "type": "boolean" },
            "description": { "type": "string" },
            "deliveryTimeId": { "type": "string" },
            "deliveryTime": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "min": { "type": "integer", "format": "int32" },
                "max": { "type": "integer", "format": "int32" },
                "unit": { "type": "string" }
              }
            },
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shippingMethodId": { "type": "string" },
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            },
            "orderDeliveries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "orderId": { "type": "string" },
                  "shippingOrderAddressId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "shippingDateEarliest": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shippingDateLatest": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "stateId": { "type": "string" }
                }
              }
            },
            "salesChannelDefaultAssignments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "typeId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "paymentMethodId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "countryId": { "type": "string" },
                  "navigationCategoryId": { "type": "string" },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": { "type": "string" },
                  "serviceCategoryId": { "type": "string" },
                  "name": { "type": "string" },
                  "shortName": { "type": "string" },
                  "accessKey": { "type": "string" },
                  "active": { "type": "boolean" },
                  "maintenance": { "type": "boolean" },
                  "maintenanceIpWhitelist": { "type": "string" },
                  "mailHeaderFooterId": { "type": "string" },
                  "customerGroupId": { "type": "string" },
                  "hreflangActive": { "type": "boolean" },
                  "hreflangDefaultDomainId": { "type": "string" }
                }
              }
            },
            "salesChannels": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "typeId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "paymentMethodId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "countryId": { "type": "string" },
                  "navigationCategoryId": { "type": "string" },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": { "type": "string" },
                  "serviceCategoryId": { "type": "string" },
                  "name": { "type": "string" },
                  "shortName": { "type": "string" },
                  "accessKey": { "type": "string" },
                  "active": { "type": "boolean" },
                  "maintenance": { "type": "boolean" },
                  "maintenanceIpWhitelist": { "type": "string" },
                  "mailHeaderFooterId": { "type": "string" },
                  "customerGroupId": { "type": "string" },
                  "hreflangActive": { "type": "boolean" },
                  "hreflangDefaultDomainId": { "type": "string" }
                }
              }
            },
            "availabilityRule": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "description": { "type": "string" },
                "priority": { "type": "integer", "format": "int32" },
                "invalid": { "type": "boolean" }
              }
            },
            "availabilityRuleId": { "type": "string" },
            "prices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shippingMethodId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "ruleId": { "type": "string" },
                  "calculation": { "type": "integer", "format": "int32" },
                  "quantityStart": { "type": "number", "format": "float" },
                  "quantityEnd": { "type": "number", "format": "float" },
                  "price": { "type": "number", "format": "float" },
                  "calculationRuleId": { "type": "string" }
                }
              }
            },
            "mediaId": { "type": "string" },
            "media": {
              "type": "object",
              "properties": {
                "userId": { "type": "string" },
                "mimeType": { "type": "string" },
                "fileExtension": { "type": "string" },
                "fileSize": { "type": "integer", "format": "int32" },
                "title": { "type": "string" },
                "metaDataRaw": { "type": "string" },
                "mediaTypeRaw": { "type": "string" },
                "uploadedAt": { "type": "string", "format": "date-time" },
                "alt": { "type": "string" },
                "url": { "type": "string" },
                "fileName": { "type": "string" },
                "mediaFolderId": { "type": "string" },
                "private": { "type": "boolean" },
                "thumbnailsRo": { "type": "string" }
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": { "name": { "type": "string" } }
              }
            }
          }
        }
      },
      "Sitemap": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "filename": { "type": "string" },
              "created": { "type": "string", "format": "date-time" }
            },
            "required": ["filename", "created"]
          }
        ]
      },
      "Struct": {
        "type": "object",
        "properties": {
          "apiAlias": {
            "type": "string",
            "description": "Alias which can be used to restrict response fields. For more information see [includes](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#includes-apialias)."
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" } }
      },
      "WishlistLoadRouteResponse": {
        "type": "object",
        "properties": {
          "wishlist": {
            "type": "object",
            "properties": {
              "customerId": { "type": "string" },
              "salesChannelId": { "type": "string" }
            }
          },
          "products": { "$ref": "#/components/schemas/ProductListingResult" }
        }
      },
      "NaturalLanguageSearchTermResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["term", "reason", "apiAlias"],
          "properties": {
            "term": { "type": "string" },
            "reason": { "type": "string" },
            "apiAlias": {
              "type": "string",
              "enum": ["product_natural_language_search_term"]
            }
          }
        }
      },
      "SearchByImageSearchTermResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["term", "apiAlias"],
          "properties": {
            "term": { "type": "string" },
            "apiAlias": {
              "type": "string",
              "enum": ["product_image_upload_search_term"]
            },
            "extensions": { "type": "array", "items": { "type": "object" } }
          }
        }
      },
      "ApprovalRule": {
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "businessPartnerCustomerId": { "type": "string" },
          "name": { "type": "string" },
          "priority": { "type": "integer" },
          "description": { "type": "string" },
          "active": { "type": "boolean" },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "value": { "type": "string" }
              }
            }
          }
        },
        "type": "object"
      },
      "PendingOrder": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "number": { "type": "string" },
          "reason": { "type": "string" },
          "cartPayload": {
            "oneOf": [{ "type": "object" }, { "type": "string" }]
          },
          "price": { "type": "object" },
          "lineItemCount": { "type": "integer" },
          "employeeId": { "type": "string" },
          "decidedById": { "type": "string" },
          "customerId": { "type": "string" },
          "stateId": { "type": "string" },
          "currencyId": { "type": "string" },
          "shippingMethodId": { "type": "string" },
          "paymentMethodId": { "type": "string" },
          "countryId": { "type": "string" },
          "salesChannelId": { "type": "string" },
          "languageId": { "type": "string" },
          "billingAddress": { "type": "object", "nullable": true },
          "language": { "type": "object", "nullable": true },
          "country": { "type": "object", "nullable": true },
          "currency": { "type": "object", "nullable": true },
          "salesChannel": { "type": "object", "nullable": true },
          "approvalRuleId": { "type": "string" },
          "itemRounding": { "type": "object", "nullable": true },
          "totalRounding": { "type": "object", "nullable": true },
          "taxStatus": { "type": "string" },
          "amountTotal": { "type": "number", "nullable": true },
          "amountNet": { "type": "number", "nullable": true },
          "originalPrice": { "type": "number", "nullable": true }
        }
      }
    },
    "responses": {
      "204": { "description": "No Content" },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          }
        }
      },
      "ContextTokenResponse": {
        "description": "Returns the context token. Use that as your `sw-context-token` header for subsequent requests. Redirect if getRedirectUrl is set.",
        "headers": {
          "sw-context-token": {
            "description": "Contains sw-context-token value",
            "schema": { "type": "string" }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "redirectUrl": {
                  "description": "Define the URL which browser will be redirected to",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "OpenApi3": {
        "description": "Returns information about the store API.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "openapi": { "type": "string" },
                "info": {
                  "type": "object",
                  "properties": {
                    "title": { "type": "string" },
                    "summary": { "type": "string" },
                    "description": { "type": "string" },
                    "termsOfService": { "type": "string", "format": "uri" },
                    "contact": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "url": { "type": "string", "format": "uri" },
                        "email": { "type": "string", "format": "email" }
                      }
                    },
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "identifier": { "type": "string" },
                        "url": { "type": "string", "format": "uri" }
                      },
                      "required": ["name"]
                    },
                    "version": { "type": "string" }
                  },
                  "required": ["title", "version"]
                },
                "jsonSchemaDialect": { "type": "string" },
                "webhooks": { "type": "object" },
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": { "url": { "type": "string" } },
                    "required": ["url"]
                  }
                },
                "components": {
                  "type": "object",
                  "properties": {
                    "schemas": { "type": "object" },
                    "responses": { "type": "object" },
                    "parameters": { "type": "object" },
                    "examples": { "type": "object" },
                    "requestBodies": { "type": "object" },
                    "headers": { "type": "object" },
                    "securitySchemes": { "type": "object" },
                    "links": { "type": "object" },
                    "callbacks": { "type": "object" },
                    "pathItems": { "type": "object" }
                  }
                },
                "security": { "type": "array", "items": { "type": "object" } },
                "paths": { "type": "object" },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "externalDocs": {
                        "type": "object",
                        "properties": {
                          "description": { "type": "string" },
                          "url": { "type": "string", "format": "uri" }
                        },
                        "required": ["url"]
                      }
                    },
                    "required": ["name"]
                  }
                },
                "externalDocs": {
                  "type": "object",
                  "properties": {
                    "description": { "type": "string" },
                    "url": { "type": "string", "format": "uri" }
                  },
                  "required": ["url"]
                }
              },
              "type": "object",
              "required": ["openapi", "info"]
            }
          }
        }
      }
    },
    "parameters": {
      "contentType": {
        "name": "Content-Type",
        "in": "header",
        "description": "Content type of the request",
        "required": true,
        "schema": { "type": "string", "default": "application/json" }
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Accepted response content types",
        "required": true,
        "schema": { "type": "string", "default": "application/json" }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "Identifies the sales channel you want to access the API through",
        "name": "sw-access-key",
        "in": "header"
      },
      "ContextToken": {
        "type": "apiKey",
        "description": "Identifies an anonymous or identified user session",
        "name": "sw-context-token",
        "in": "header"
      }
    }
  },
  "security": [{ "ApiKey": [] }],
  "paths": {
    "/account/newsletter-recipient": {
      "post": {
        "tags": ["Profile", "Newsletter", "Endpoints supporting Criteria"],
        "summary": "Fetch newsletter recipients",
        "description": "Perform a filtered search for newsletter recipients.",
        "operationId": "readNewsletterRecipient",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNewsletterRecipientResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/change-profile": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's information",
        "description": "Make changes to a customer's account, like changing their name, salutation or title.",
        "operationId": "changeProfile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["salutationId", "firstName", "lastName"],
                "properties": {
                  "salutationId": {
                    "description": "Id of the salutation for the customer account. Fetch options using `salutation` endpoint.",
                    "type": "string"
                  },
                  "title": {
                    "description": "(Academic) title of the customer",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer first name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer last name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "company": {
                    "description": "Company of the customer. Only required when `accountType` is `business`.",
                    "type": "string"
                  },
                  "birthdayDay": {
                    "description": "Birthday day",
                    "type": "integer"
                  },
                  "birthdayMonth": {
                    "description": "Birthday month",
                    "type": "integer"
                  },
                  "birthdayYear": {
                    "description": "Birthday year",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/change-email": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's email address",
        "description": "Changes a customer's email address to a new email address, using their current password as a validation.",
        "operationId": "changeEmail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "emailConfirmation", "password"],
                "properties": {
                  "email": {
                    "description": "New email address. Has to be unique amongst all customers",
                    "type": "string"
                  },
                  "emailConfirmation": {
                    "description": "Confirmation of the new email address.",
                    "type": "string"
                  },
                  "password": {
                    "description": "Customer's current password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/change-language": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's language.",
        "description": "Changes the language of the logged in customer",
        "operationId": "changeLanguage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["languageId"],
                "properties": {
                  "language": {
                    "description": "New languageId",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/change-password": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's password",
        "description": "Changes a customer's password using their current password as a validation.",
        "operationId": "changePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["password", "newPassword", "newPasswordConfirm"],
                "properties": {
                  "password": {
                    "description": "Current password of the customer",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New Password for the customer",
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "description": "Confirmation of the new password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/change-payment-method/{paymentMethodId}": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's default payment method",
        "description": "Changes a customer's default (preselected) payment method.",
        "operationId": "changePaymentMethod",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "description": "Identifier of the desired default payment method",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/customer-recovery-is-expired": {
      "post": {
        "tags": ["Profile"],
        "summary": "Checks if the customer recovery entry for a given hash is expired.",
        "description": "This can be used to validate a provided hash has a valid and not expired customer recovery hash.",
        "operationId": "getCustomerRecoveryIsExpired",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash"],
                "properties": {
                  "hash": {
                    "description": "Parameter from the link in the confirmation mail sent in Step 1",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a CustomerRecoveryIsExpiredResponse that indicates if the hash is expired or not.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArrayStruct" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/customer": {
      "post": {
        "tags": ["Profile", "Endpoints supporting Criteria "],
        "summary": "Get information about current customer",
        "description": "Returns information about the current customer.",
        "operationId": "readCustomer",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the logged in customer, also for guest sessions. Check for the value of `guest` field to see whether the customer is a guest.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Delete the customer's profile",
        "description": "Deletes a customer profile along with their addresses, wishlists and associated data. Created orders and their payment/shipping information (addresses) and reviews are not deleted.",
        "operationId": "deleteCustomer",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful removal of the customer profile"
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/address/{addressId}": {
      "delete": {
        "tags": ["Address"],
        "summary": "Delete an address of a customer",
        "description": "Delete an address of customer.\n\n    Only addresses which are not set as default addresses for shipping or billing can be deleted. You can check the current default addresses of your customer using the profile information endpoint and change them using the default address endpoint.\n\n    **A customer must have at least one address (which can be used for shipping and billing).**\n\n    An automatic fallback is not applied.",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address to be deleted.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response, when the address has been deleted"
          },
          "400": {
            "description": "Response containing a list of errors, most likely due to the address being in use"
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      },
      "patch": {
        "tags": ["Address"],
        "summary": "Modify an address of a customer",
        "description": "Modifies an existing address of a customer.",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerAddressBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/CustomerAddress" },
                    { "$ref": "#/components/schemas/CustomerAddressRead" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/list-address": {
      "post": {
        "tags": ["Address", "Endpoints supporting Criteria "],
        "summary": "Fetch addresses of a customer",
        "description": "Lists all addresses of the current customer and allows filtering them based on a criteria.",
        "operationId": "listAddress",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CustomerAddress" }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/login": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Log in a customer",
        "description": "Logs in customers given their credentials.",
        "operationId": "loginCustomer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["username", "password"],
                "properties": {
                  "username": { "description": "Email", "type": "string" },
                  "password": { "description": "Password", "type": "string" }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/ContextTokenResponse" },
          "401": {
            "description": "If credentials are incorrect an error is returned",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/failure" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/logout": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Log out a customer",
        "description": "Logs out a customer.",
        "operationId": "logoutCustomer",
        "responses": {
          "200": { "$ref": "#/components/responses/ContextTokenResponse" },
          "403": { "$ref": "#/components/responses/403" }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/register-confirm": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Confirm a customer registration",
        "description": "Confirms a customer registration when double opt-in is activated.\n\nLearn more about double opt-in registration in our guide \"Register a customer\".",
        "operationId": "registerConfirm",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash", "em"],
                "properties": {
                  "hash": {
                    "description": "Hash from the email received",
                    "type": "string"
                  },
                  "em": {
                    "description": "Email hash from the email received",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the logged in customer. The customer is automatically logged in with the `sw-context-token` header provided, which can be reused for subsequent requests."
          },
          "404": { "description": "No hash provided" },
          "412": { "description": "The customer has already been confirmed" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/register": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Register a customer",
        "description": "Registers a customer. Used both for normal customers and guest customers.See the Guide \"Register a customer\" for more information on customer registration.",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "Email of the customer. Has to be unique, unless `guest` is `true`",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for the customer. Required, unless `guest` is `true`",
                    "type": "string"
                  },
                  "salutationId": {
                    "description": "Id of the salutation for the customer account. Fetch options using `salutation` endpoint.",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer first name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer last name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "acceptedDataProtection": {
                    "description": "Flag indicating accepted data protection",
                    "type": "boolean"
                  },
                  "storefrontUrl": {
                    "description": "URL of the storefront for that registration. Used in confirmation emails. Has to be one of the configured domains of the sales channel.",
                    "type": "string"
                  },
                  "billingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "shippingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "accountType": {
                    "description": "Account type of the customer which can be either `private` or `business`.",
                    "type": "string",
                    "default": "private"
                  },
                  "guest": {
                    "description": "If set, will create a guest customer. Guest customers can re-use an email address and don't need a password.",
                    "type": "boolean",
                    "default": false
                  },
                  "birthdayDay": {
                    "description": "Birthday day",
                    "type": "integer"
                  },
                  "birthdayMonth": {
                    "description": "Birthday month",
                    "type": "integer"
                  },
                  "birthdayYear": {
                    "description": "Birthday year",
                    "type": "integer"
                  },
                  "title": {
                    "description": "(Academic) title of the customer",
                    "type": "string"
                  },
                  "affiliateCode": {
                    "description": "Field can be used to store an affiliate tracking code",
                    "type": "string"
                  },
                  "campaignCode": {
                    "description": "Field can be used to store a campaign tracking code",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "salutationId",
                  "firstName",
                  "lastName",
                  "acceptedDataProtection",
                  "storefrontUrl",
                  "billingAddress"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/recovery-password-confirm": {
      "post": {
        "tags": ["Profile"],
        "summary": "Reset a password with recovery credentials",
        "description": "This operation is Step 2 of the password reset flow. It is required to conduct Step 1 \"Send a password recovery mail\" in order to obtain the required credentials for this step.Resets a customer's password using credentials from a password recovery mail as a validation.",
        "operationId": "recoveryPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash", "newPassword", "newPasswordConfirm"],
                "properties": {
                  "hash": {
                    "description": "Parameter from the link in the confirmation mail sent in Step 1",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New password for the customer",
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "description": "Confirmation of the new password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/recovery-password": {
      "post": {
        "tags": ["Profile"],
        "summary": "Send a password recovery mail",
        "description": "This operation is Step 1 of the password reset flow. Make sure to implement Step 2 \"Reset password with recovery credentials\" in order to allow for the complete flow in your application. Sends a recovery mail containing a link with credentials that allows a customer to reset their password.",
        "operationId": "sendRecoveryMail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "storefrontUrl"],
                "properties": {
                  "email": {
                    "description": "E-Mail address to identify the customer",
                    "type": "string"
                  },
                  "storefrontUrl": {
                    "description": "URL of the storefront to use for the generated reset link. It has to be a domain that is configured in the sales channel domain settings.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If email corresponds to an existing customer, a mail will be sent out to that customer containing a link assembled using the following schema:\n\nReturns a success indicating a successful initialisation of the reset flow.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/address/default-shipping/{addressId}": {
      "patch": {
        "tags": ["Address"],
        "summary": "Change a customer's default shipping address",
        "description": "Updates the default (preselected) shipping addresses of a customer.",
        "operationId": "defaultShippingAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/address/default-billing/{addressId}": {
      "patch": {
        "tags": ["Address"],
        "summary": "Change a customer's default billing address",
        "description": "Updates the default (preselected) billing addresses of a customer.",
        "operationId": "defaultBillingAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/account/address": {
      "post": {
        "tags": ["Address"],
        "summary": "Create a new address for a customer",
        "description": "Creates a new address for a customer.",
        "operationId": "createCustomerAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/CustomerAddress" },
                    { "$ref": "#/components/schemas/CustomerAddressRead" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/app-system/{name}/generate-token": {
      "post": {
        "tags": ["App system"],
        "summary": "Generate JWT token for app system backend",
        "description": "Generate JWT token for authenticated communication with the app server",
        "operationId": "generateJWTAppSystemAppServer",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the app",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": { "application/json": { "schema": { "type": "object" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "expires": { "type": "string", "format": "date-time" },
                    "shopId": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/category": {
      "post": {
        "tags": ["Category", "Endpoints supporting Criteria "],
        "summary": "Fetch a list of categories",
        "description": "Perform a filtered search for categories.",
        "operationId": "readCategoryList",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing categories.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Category" }
                        }
                      }
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/category/{navigationId}": {
      "post": {
        "tags": ["Category", "Endpoints supporting Criteria "],
        "summary": "Fetch a single category",
        "description": "This endpoint returns information about the category, as well as a fully resolved (hydrated with mapping values) CMS page, if one is assigned to the category. You can pass slots which should be resolved exclusively.",
        "operationId": "readCategory",
        "parameters": [
          {
            "name": "sw-include-seo-urls",
            "in": "header",
            "description": "Instructs Shopware to try and resolve SEO URLs for the given navigation item",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "navigationId",
            "in": "path",
            "description": "Identifier of the category to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "slots",
            "in": "query",
            "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a '|' character",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  { "$ref": "#/components/schemas/ProductListingCriteria" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded category with cms page",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Fetch or create a cart",
        "description": "Used to fetch the current cart or for creating a new one.",
        "operationId": "readCart",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete a cart",
        "description": "This route deletes the cart of the customer.",
        "operationId": "deleteCart",
        "responses": {
          "204": {
            "description": "Successfully deleted the cart",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/cart/line-item": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add items to the cart",
        "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)",
        "operationId": "addLineItem",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CartItems" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove items from the cart",
        "description": "DEPRECATED: use removeLineItem instead. This route removes items from the cart and recalculates it.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#deleting-items-in-the-cart)",
        "operationId": "removeLineItemDeprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A list of product identifiers.",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
            }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["Cart"],
        "summary": "Update items in the cart",
        "description": "This route updates items in the cart. A typical example is updating the quantity of an item.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#updating-items-in-the-cart)",
        "operationId": "updateLineItem",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CartItems" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/cart/line-item/delete": {
      "post": {
        "tags": ["Cart"],
        "summary": "Remove items from the cart",
        "description": "This route removes items from the cart and recalculates it.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#deleting-items-in-the-cart)",
        "operationId": "removeLineItem",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["ids"],
                "properties": {
                  "ids": {
                    "description": "A list of product identifiers.",
                    "type": "array",
                    "minItems": 1,
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/order": {
      "post": {
        "tags": ["Order"],
        "summary": "Create an order from a cart",
        "description": "Creates a new order from the current cart and deletes the cart.\n\nIf you are using the [prepared payment flow](https://developer.shopware.com/docs/concepts/commerce/checkout-concept/payments#2.1-prepare-payment-optional), this endpoint also receives additional transaction details. The exact name of the parameters depends on the implementation of the corresponding *payment handler*.",
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "description": "Contains additional metadata which is stored together with the order. It can also contain payment transaction details.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerComment": {
                    "description": "Adds a comment from the customer to the order.",
                    "type": "string"
                  },
                  "affiliateCode": {
                    "description": "The affiliate code can be used to track which referrer the customer came through. An example could be `Price-comparison-company-XY`.",
                    "type": "string"
                  },
                  "campaignCode": {
                    "description": "The campaign code is used to track which action the customer came from. An example could be `Summer-Deals`",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/checkout/gateway": {
      "get": {
        "tags": ["Gateway"],
        "summary": "Call the checkout gateway",
        "description": "Call the checkout gateway, which is used to manipulate certain aspects of the checkout process (e.g. available payment methods).",
        "operationId": "checkoutGateway",
        "responses": {
          "200": {
            "description": "Checkout gateway response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "paymentMethods": {
                      "properties": {
                        "total": {
                          "description": "Total amount",
                          "type": "integer"
                        },
                        "aggregations": {
                          "description": "aggregation result",
                          "type": "object"
                        },
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaymentMethod"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "shippingMethods": {
                      "properties": {
                        "total": {
                          "description": "Total amount",
                          "type": "integer"
                        },
                        "aggregations": {
                          "description": "aggregation result",
                          "type": "object"
                        },
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShippingMethod"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Error code",
                            "type": "string"
                          },
                          "detail": {
                            "description": "Error detail",
                            "type": "string"
                          },
                          "blocking": {
                            "description": "If the error is blocking",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/cms/{id}": {
      "post": {
        "tags": ["Content"],
        "summary": "Fetch and resolve a CMS page",
        "description": "Loads a content management page by its identifier and resolve the slot data. This could be media files, product listing and so on.\n\n**Important notice**\n\nThe criteria passed with this route also affects the listing, if there is one within the cms page.",
        "operationId": "readCms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the CMS page to be resolved",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "slots": {
                        "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a `|` character.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/ProductListingCriteria" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded cms page",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPage" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/contact-form": {
      "post": {
        "tags": ["Content"],
        "summary": "Submit a contact form message",
        "description": "Used for submitting contact forms. Be aware that there can be more required fields, depending on the system settings.",
        "operationId": "sendContactMail",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["salutationId", "email", "subject", "comment"],
                "properties": {
                  "salutationId": {
                    "description": "Identifier of the salutation. Use `/api/salutation` endpoint to fetch possible values.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "firstName": {
                    "description": "Firstname. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Lastname. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "email": { "description": "Email address", "type": "string" },
                  "phone": {
                    "description": "Phone. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "The subject of the contact form.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The message of the contact form",
                    "type": "string"
                  },
                  "navigationId": {
                    "description": "Identifier of the navigation page. Can be used to override the configuration.\nTake a look at the settings of a category containing a concact form in the administration.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "slotId": {
                    "description": "Identifier of the cms element",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "cmsPageType": {
                    "description": "Type of the content management page",
                    "type": "string"
                  },
                  "entityName": {
                    "description": "Entity name for slot config",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "200": { "description": "Message sent successful." } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/context": {
      "get": {
        "tags": ["System & Context"],
        "summary": "Fetch the current context",
        "description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more.",
        "operationId": "readContext",
        "responses": {
          "200": {
            "description": "Returns the current context.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelContext" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["System & Context"],
        "summary": "Modify the current context",
        "description": "Used for switching the context. A typical example would be changing the language or changing the currency.",
        "operationId": "updateContext",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currencyId": {
                    "description": "Currency",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "languageId": {
                    "description": "Language",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "billingAddressId": {
                    "description": "Billing Address",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "shippingAddressId": {
                    "description": "Shipping Address",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "paymentMethodId": {
                    "description": "Payment Method",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "shippingMethodId": {
                    "description": "Shipping Method",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "countryId": {
                    "description": "Country",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "countryStateId": {
                    "description": "Country State",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/ContextTokenResponse" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/country-state/{countryId}": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch the states of a country",
        "description": "Perform a filtered search the states for a country",
        "operationId": "readCountryState",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing countries.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CountryState"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/country": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch countries",
        "description": "Perform a filtered search for countries",
        "operationId": "readCountry",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing countries.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Country" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/currency": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch currencies",
        "description": "Perform a filtered search for currencies.",
        "operationId": "readCurrency",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing currencies.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Currency" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer-group-registration/config/{customerGroupId}": {
      "get": {
        "tags": ["Login & Registration"],
        "summary": "Fetch registration settings for customer group",
        "operationId": "getCustomerGroupRegistrationInfo",
        "parameters": [
          {
            "name": "customerGroupId",
            "in": "path",
            "description": "Customer group id",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the customer group including registration settings.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerGroup" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer/wishlist/add/{productId}": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add a product to a wishlist",
        "description": "Adds a product to a customers wishlist.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "addProductOnWishlist",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product to be added.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/customer/wishlist": {
      "post": {
        "tags": ["Wishlist", "Endpoints supporting Criteria "],
        "summary": "Fetch a wishlist",
        "description": "Fetch a customer's wishlist. Products on the wishlist can be filtered using a criteria object.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "readCustomerWishlist",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WishlistLoadRouteResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/customer/wishlist/merge": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Create a wishlist for a customer",
        "description": "Create a new wishlist for a logged in customer or extend the existing wishlist given a set of products.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * A customer can only have a single wishlist.\n    * The wishlist feature has to be activated.",
        "operationId": "mergeProductOnWishlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "productIds": {
                    "description": "List product id",
                    "type": "array",
                    "items": {
                      "description": "product id",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/customer/wishlist/delete/{productId}": {
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Remove a product from a wishlist",
        "description": "Removes a product from a customer's wishlist.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "deleteProductOnWishlist",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The identifier of the product to be removed from the wishlist.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful removal.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          },
          "404": {
            "description": "The removal of the product failed. Probably because the product could not be found on the wishlist.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/failure" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/document/download/{documentId}/{deepLinkCode}": {
      "post": {
        "tags": ["Document", "Endpoints supporting Criteria "],
        "summary": "Download generated document",
        "description": "Returns blob file of a generated document to download.",
        "operationId": "download",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "deepLinkCode",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the document information and blob to download.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/handle-payment": {
      "post": {
        "tags": ["Payment & Shipping"],
        "summary": "Initiate a payment for an order",
        "description": "This generic endpoint is should be called to initiate a payment flow after an order has been created. The details of the payment flow can differ depending on the payment integration and might require calling additional operations or the setup of webhooks.\n\nThe endpoint internally calls the payment handler of the payment method currently set for the order.",
        "operationId": "handlePaymentMethod",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["orderId"],
                "properties": {
                  "orderId": {
                    "description": "Identifier of an order",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "finishUrl": {
                    "description": "URL to which the client should be redirected after successful payment",
                    "type": "string"
                  },
                  "errorUrl": {
                    "description": "URL to which the client should be redirected after erroneous payment",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Redirect to external payment provider",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "redirectUrl": { "type": "string", "nullable": true }
                  },
                  "required": ["redirectUrl"]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/landing-page/{landingPageId}": {
      "post": {
        "tags": ["Content", "Endpoints supporting Criteria "],
        "summary": "Fetch a landing page with the resolved CMS page",
        "description": "Loads a landing page by its identifier and resolves the CMS page.\n\n**Important notice**\n\nThe criteria passed with this route also affects the listing, if there is one within the cms page.",
        "operationId": "readLandingPage",
        "parameters": [
          {
            "name": "landingPageId",
            "in": "path",
            "description": "Identifier of the landing page.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "slots": {
                            "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a `|` character.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      { "$ref": "#/components/schemas/ProductListingCriteria" }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded landing page with cms page",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LandingPage" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/language": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch languages",
        "description": "Perform a filtered search for languages.",
        "operationId": "readLanguages",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing languages.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Language" }
                        }
                      },
                      "required": ["elements"],
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/media": {
      "post": {
        "tags": ["Content"],
        "summary": "Fetch and resolve Media Entities",
        "description": "Fetch one or multiple Media Entities with the corresponding Identifier.",
        "operationId": "readMedia",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "description": "Identifier (UUID) of the media entity to be fetched.",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  }
                },
                "type": "object",
                "required": ["ids"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded MediaCollection containing the requested Media Entities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Media" }
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/navigation/{activeId}/{rootId}": {
      "post": {
        "tags": ["Category", "Endpoints supporting Criteria "],
        "summary": "Fetch a navigation menu",
        "description": "This endpoint returns categories that can be used as a page navigation. You can either return them as a tree or as a flat list. You can also control the depth of the tree.\n\n    Instead of passing uuids, you can also use one of the following aliases for the activeId and rootId parameters to get the respective navigations of your sales channel.\n\n     * main-navigation\n     * service-navigation\n     * footer-navigation",
        "operationId": "readNavigation",
        "parameters": [
          {
            "name": "sw-include-seo-urls",
            "in": "header",
            "description": "Instructs Shopware to try and resolve SEO URLs for the given navigation item",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "activeId",
            "in": "path",
            "description": "Identifier of the active category in the navigation tree (if not used, just set to the same as rootId).",
            "required": true,
            "schema": {
              "oneOf": [
                { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                { "$ref": "#/components/schemas/NavigationType" }
              ]
            }
          },
          {
            "name": "rootId",
            "in": "path",
            "description": "Identifier of the root category for your desired navigation tree. You can use it to fetch sub-trees of your navigation tree.",
            "required": true,
            "schema": {
              "oneOf": [
                { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                { "$ref": "#/components/schemas/NavigationType" }
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "properties": {
                      "depth": {
                        "description": "Determines the depth of fetched navigation levels.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "buildTree": {
                        "description": "Return the categories as a tree or as a flat list.",
                        "type": "array",
                        "items": { "type": "object" }
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All available navigations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationRouteResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/newsletter/confirm": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Confirm a newsletter registration",
        "description": "You have to use the hash from the link sent out via email to confirm the user registration.",
        "operationId": "confirmNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash", "em"],
                "properties": {
                  "hash": {
                    "description": "Hash parameter from link the in the confirmation mail",
                    "type": "string"
                  },
                  "em": {
                    "description": "Email hash parameter from the link in the confirmation mail",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The newsletter confirmation was successful."
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/newsletter/subscribe": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Create or remove a newsletter subscription",
        "description": "This route is used to create/remove/confirm a newsletter subscription.\n\nThe `option` property controls what should happen:\n* `direct`: The subscription is directly active and does not need a confirmation.\n* `subscribe`: An email will be send to the provided email addrees containing a link to the /newsletter/confirm route.\nThe subscription is only successful, if the /newsletter/confirm route is called with the generated hashes.\n* `unsubscribe`: The email address will be removed from the newsletter subscriptions.\n* `confirmSubscribe`: Confirmes the newsletter subscription for the provided email address.",
        "operationId": "subscribeToNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "option", "storefrontUrl"],
                "properties": {
                  "email": {
                    "description": "Email address that will receive the confirmation and the newsletter.",
                    "type": "string"
                  },
                  "option": {
                    "description": "Defines what should be done.",
                    "type": "string"
                  },
                  "storefrontUrl": {
                    "description": "Url of the storefront of the shop. This will be used for generating the link to the /newsletter/confirm inside the confirm email.",
                    "type": "string"
                  },
                  "salutationId": {
                    "description": "Identifier of the salutation.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "firstName": {
                    "description": "First name",
                    "type": "string"
                  },
                  "lastName": { "description": "Last name", "type": "string" },
                  "street": { "description": "Street", "type": "string" },
                  "city": { "description": "City", "type": "string" },
                  "zipCode": { "description": "Zip code", "type": "string" },
                  "tags": { "description": "Zip code", "type": "string" },
                  "languageId": {
                    "description": "Identifier of the language.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "customFields": {
                    "description": "Custom field data that should be added to the subscription.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/newsletter/unsubscribe": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Remove a newsletter subscription",
        "description": "Removes a newsletter recipient from the mailing lists.",
        "operationId": "unsubscribeToNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "properties": {
                  "email": {
                    "description": "Email address that should be removed from the mailing lists.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Unsubscribing was successful." }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/_info/openapi3.json": {
      "get": {
        "tags": ["System Info & Healthcheck"],
        "summary": "Get OpenAPI Specification",
        "description": "Get information about the store API in OpenAPI format.",
        "operationId": "api-info",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the api",
            "schema": { "type": "string", "enum": ["jsonapi", "json"] }
          }
        ],
        "responses": { "200": { "$ref": "#/components/responses/OpenApi3" } }
      }
    },
    "/order/state/cancel": {
      "post": {
        "tags": ["Order"],
        "summary": "Cancel an order",
        "description": "Cancels an order. The order state will be set to 'cancelled'.",
        "operationId": "cancelOrder",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "orderId": {
                    "description": "The identifier of the order to be canceled.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object",
                "required": ["orderId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the state of the state machine\n\n    example: More information about the state machine can be found in the corresponding guide: [Using the state machine](https://developer.shopware.com/docs/guides/plugins/plugins/checkout/order/using-the-state-machine)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineState" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/order": {
      "post": {
        "tags": ["Order", "Endpoints supporting Criteria "],
        "summary": "Fetch a list of orders",
        "description": "List orders of a customer.",
        "operationId": "readOrder",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "properties": {
                      "checkPromotion": {
                        "description": "Check if the payment method of the order is still changeable.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of orders and an indicator if the payment of the order can be changed.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderRouteResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/order/payment": {
      "post": {
        "tags": ["Order"],
        "summary": "Update the payment method of an order",
        "description": "Changes the payment method of a specific order. You can use the /order route to find out if the payment method of an order can be changed - take a look at the `paymentChangeable`- array in the response.",
        "operationId": "orderSetPayment",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["paymentMethodId", "orderId"],
                "properties": {
                  "paymentMethodId": {
                    "description": "The identifier of the paymentMethod to be set",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "orderId": {
                    "description": "The identifier of the order.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the payment method of the order.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/order/download/{orderId}/{downloadId}": {
      "get": {
        "tags": ["Order"],
        "summary": "Download a purchased file",
        "description": "Download a file included in the given order and with the given id. Access must be granted.",
        "operationId": "orderDownloadFile",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "downloadId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "An arbitrary binary file.",
            "content": {
              "application/octet-stream": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/payment-method": {
      "post": {
        "tags": ["Payment Method", "Endpoints supporting Criteria "],
        "summary": "Loads all available payment methods",
        "operationId": "readPaymentMethod",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "properties": {
                      "onlyAvailable": {
                        "description": "List only available",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "description": "Total amount",
                      "type": "integer"
                    },
                    "aggregations": {
                      "description": "aggregation result",
                      "type": "object"
                    },
                    "elements": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/PaymentMethod" }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product-export/{accessKey}/{fileName}": {
      "get": {
        "tags": ["Product"],
        "summary": "Export product export",
        "operationId": "readProductExport",
        "parameters": [
          {
            "name": "accessKey",
            "in": "path",
            "description": "Access Key",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "File Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product-listing/{categoryId}": {
      "post": {
        "tags": ["Product"],
        "summary": "Fetch a product listing by category",
        "description": "Fetches a product listing for a specific category. It also provides filters, sortings and property aggregations, analogous to the /search endpoint.",
        "operationId": "readProductListing",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Identifier of a category.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sw-include-seo-urls",
            "in": "header",
            "description": "Determines if the response must contain a SeoUrl entity for a product entity",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/ProductListingCriteria" },
                  { "$ref": "#/components/schemas/ProductListingFlags" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields to display a listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/cross-selling": {
      "post": {
        "tags": ["Product"],
        "summary": "Fetch cross-selling groups of a product",
        "description": "This route is used to load the cross sellings for a product. A product has several cross selling definitions in which several products are linked. The route returns the cross sellings together with the linked products",
        "operationId": "readProductCrossSellings",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Found cross sellings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrossSellingElementCollection"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}": {
      "post": {
        "tags": ["Product"],
        "summary": "Fetch a single product",
        "description": "This route is used to load a single product with the corresponding details. In addition to loading the data, the best variant of the product is determined when a parent id is passed.",
        "operationId": "readProductDetail",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$'" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product information along with variant groups and options",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product": {
      "post": {
        "tags": ["Product", "Endpoints supporting Criteria "],
        "summary": "Fetch a list of products",
        "description": "List products that match the given criteria. For performance reasons a limit should always be set.",
        "operationId": "readProduct",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing products",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Product" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/reviews": {
      "post": {
        "tags": ["Product", "Endpoints supporting Criteria "],
        "summary": "Fetch product reviews",
        "description": "Perform a filtered search for product reviews.",
        "operationId": "readProductReviews",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/review": {
      "post": {
        "tags": ["Product"],
        "summary": "Save a product review",
        "description": "Saves a review for a product. Reviews have to be activated in the settings.",
        "operationId": "saveProductReview",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product which is reviewed.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["title", "content", "points"],
                "properties": {
                  "name": {
                    "description": "The name of the review author. If not set, the first name of the customer is chosen.",
                    "type": "string"
                  },
                  "email": {
                    "description": "The email address of the review author. If not set, the email of the customer is chosen.",
                    "type": "string"
                  },
                  "title": {
                    "description": "The title of the review.",
                    "type": "string"
                  },
                  "content": {
                    "description": "The content of review.",
                    "type": "string"
                  },
                  "points": {
                    "description": "The review rating for the product.",
                    "type": "number",
                    "format": "double"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response indicating the review was saved successfuly."
          }
        },
        "security": [{ "ApiKey": [], "ContextToken": [] }]
      }
    },
    "/product/{productId}/find-variant": {
      "post": {
        "tags": ["Product"],
        "summary": "Search for a matching variant by product options.",
        "description": "Performs a search for product variants and returns the best matching variant.",
        "operationId": "searchProductVariantIds",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["options"],
                "properties": {
                  "options": {
                    "description": "The options parameter for the variant to find.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "switchedGroup": {
                    "description": "The id of the option group that has been switched.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an FoundCombination struct containing the ids matching the search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindProductVariantRouteResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/salutation": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch salutations",
        "description": "Perform a filtered search for salutations.",
        "operationId": "readSalutation",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing salutations.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Salutation" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/script/{hook}": {
      "get": {
        "tags": ["API", "Script", "App"],
        "summary": "Access point for different api logics which are provided by apps over script hooks",
        "operationId": "getScriptStoreApiRoute",
        "parameters": [
          {
            "name": "hook",
            "in": "path",
            "description": "Dynamic hook which used to build the hook name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns different structures of results based on the called script.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "nullable": true
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "nullable": true
                }
              }
            }
          },
          "204": { "description": "No data by default" }
        },
        "security": [{ "ApiKey": [] }]
      },
      "post": {
        "tags": ["API", "Script", "App"],
        "summary": "Access point for different api logics which are provided by apps over script hooks",
        "operationId": "postScriptStoreApiRoute",
        "parameters": [
          {
            "name": "hook",
            "in": "path",
            "description": "Dynamic hook which used to build the hook name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns different structures of results based on the called script.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "nullable": true
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "nullable": true
                }
              }
            }
          },
          "204": { "description": "No data by default" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/search-suggest": {
      "post": {
        "tags": ["Product"],
        "summary": "Search for products (suggest)",
        "description": "Can be used to implement search previews or suggestion listings, that don’t require any interaction.",
        "operationId": "searchSuggest",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": ["search"],
                    "properties": {
                      "search": {
                        "description": "Using the search parameter, the server performs a text search on all records based on their data model and weighting as defined in the entity definition using the SearchRanking flag.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/ProductListingFlags" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields.\n\nNote: Aggregations, currentFilters and availableSortings are empty in this response. If you need them to display a listing, use the /search route instead.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/search": {
      "post": {
        "tags": ["Product"],
        "summary": "Search for products",
        "description": "Performs a search for products which can be used to display a product listing.",
        "operationId": "searchPage",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": ["search"],
                    "properties": {
                      "search": {
                        "description": "Using the search parameter, the server performs a text search on all records based on their data model and weighting as defined in the entity definition using the SearchRanking flag.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/ProductListingCriteria" },
                  { "$ref": "#/components/schemas/ProductListingFlags" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields to display a listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/seo-url": {
      "post": {
        "tags": ["Sitemap & Routes", "Endpoints supporting Criteria "],
        "summary": "Fetch SEO routes",
        "description": "Perform a filtered search for seo urls.",
        "operationId": "readSeoUrl",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing seo urls.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/SeoUrl" }
                        }
                      },
                      "type": "object",
                      "required": ["elements"]
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/shipping-method": {
      "post": {
        "tags": ["Payment & Shipping", "Endpoints supporting Criteria "],
        "summary": "Fetch shipping methods",
        "description": "Perform a filtered search for shipping methods.",
        "operationId": "readShippingMethod",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "onlyAvailable",
            "in": "query",
            "description": "List only available shipping methods. This filters shipping methods methods which can not be used in the actual context because of their availability rule.",
            "schema": { "type": "boolean" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "total": {
                          "description": "Total amount",
                          "type": "integer"
                        },
                        "aggregations": {
                          "description": "aggregation result",
                          "type": "object"
                        },
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShippingMethod"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/sitemap": {
      "get": {
        "tags": ["Sitemap & Routes"],
        "summary": "Fetch sitemaps",
        "description": "Fetches a list of compressed sitemap files, which are often used by search engines.",
        "operationId": "readSitemap",
        "parameters": [
          {
            "name": "sw-language-id",
            "in": "header",
            "description": "Instructs Shopware to return the response in the given language.",
            "required": false,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of available sitemaps.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Sitemap" }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/employee/create": {
      "post": {
        "tags": ["B2B Employee Management"],
        "summary": "Create a single employee and returns the employee",
        "description": "This route is used to create and return an employee",
        "operationId": "createEmployee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "description": "First name of the new employee",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Last name of the new employee",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email of the new employee",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "Id of the role of the new employee",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "required": ["firstName", "lastName", "email"],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bEmployee" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/employee": {
      "post": {
        "tags": ["B2B Employee Management"],
        "summary": "Fetch a list of employees",
        "description": "This route is used to load employees",
        "operationId": "readEmployees",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bEmployee"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/employee/{id}": {
      "post": {
        "tags": ["B2B Employee Management"],
        "summary": "Fetch a one employee by id",
        "description": "This route is used to fetch one employee by id",
        "operationId": "readEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bEmployee" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["B2B"],
        "summary": "Update a one employee by id",
        "description": "This route is used to update one employee by id",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be updated",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "description": "New first name of the employee",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "New last name of the employee",
                    "type": "string"
                  },
                  "email": {
                    "description": "New email of the employee",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "New id of the role of the employee",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bEmployee" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["B2B"],
        "summary": "Delete an employee by id",
        "description": "This route is used to delete one employee by id",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be deleted",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/employee/reinvite/{id}": {
      "post": {
        "tags": ["B2B Employee Management"],
        "summary": "Reinvite employee by id",
        "description": "This route is used to reinvite an employee via email by id",
        "operationId": "reinviteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be reinvited",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "storefrontUrl": {
                    "description": "URL of the storefront domain",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bEmployee" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/role/create": {
      "post": {
        "tags": ["B2B Employee Management"],
        "summary": "Create a single role and returns the role",
        "description": "This route is used to create and return an role",
        "operationId": "createRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name of the new role",
                    "type": "string"
                  },
                  "permissions": {
                    "description": "Permissions of the new role",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "isDefaultRole": {
                    "description": "Ability to set the new role as default",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bComponentsRole" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/role": {
      "get": {
        "tags": ["B2B Employee Management"],
        "summary": "Fetch a list of roles",
        "description": "This route is used to load roles",
        "operationId": "readRoles",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bComponentsRole"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "post": {
        "tags": ["B2B"],
        "summary": "Fetch a list of roles",
        "description": "This route is used to load roles",
        "operationId": "readRolesPOST",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bComponentsRole"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/role/{id}": {
      "get": {
        "tags": ["B2B Employee Management"],
        "summary": "Fetch a one role by id",
        "description": "This route is used to fetch one role by id",
        "operationId": "readRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the role to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Role entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bComponentsRole" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["B2B"],
        "summary": "Update a one role by id",
        "description": "This route is used to update one role by id",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the role to be updated",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "New name of the role",
                    "type": "string"
                  },
                  "permissions": {
                    "description": "New permissions of the role",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "isDefaultRole": {
                    "description": "Ability to set the role as default",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/B2bComponentsRole" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["B2B"],
        "summary": "Delete an role by id",
        "description": "This route is used to delete one role by id",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the role to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/role/permissions": {
      "get": {
        "tags": ["B2B Employee Management"],
        "summary": "Fetch a available permissions",
        "description": "This route is used to fetch all available permissions",
        "operationId": "readPermissions",
        "responses": {
          "200": {
            "description": "Permission collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "permissionName": { "type": "string" },
                              "permissionDependencies": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "permissionGroupName": { "type": "string" }
                            }
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/role/default": {
      "post": {
        "tags": ["B2B Employee Management"],
        "summary": "Sets the default role Id for new employees",
        "description": "This route is used to update the defaultRoleId for new employees",
        "operationId": "updateDefaultRoleId",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id of the roleId to be set as default",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/sso/auth/{providerId}": {
      "post": {
        "tags": ["Sso"],
        "summary": "Authenticates via SSO",
        "description": "Authenticates login via a given SSO provider ID",
        "operationId": "auth",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Identifier of the SSO provider used to authenticate",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully authenticated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/sso/redirect/{providerId}": {
      "post": {
        "tags": ["Sso"],
        "summary": "Redirects after authentication",
        "description": "Redirects after authenticated login via a given SSO provider ID",
        "operationId": "redirect",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Identifier of the SSO provider used to authenticate",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully authenticated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quote/request": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Request new quote",
        "description": "This route is used to request a new quote from the store",
        "operationId": "requestQuote",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quote entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Quote" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quotes": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Fetch a list of quotes",
        "description": "This route is used to load quotes",
        "operationId": "readQuotes",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Quote" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quote/detail/{id}": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Fetch a one quote by id",
        "description": "This route is used to fetch one quote by id",
        "operationId": "readQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the quote to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Quote" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quote/{id}/decline": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Decline a quote by id",
        "description": "This route is used to decline a quote from the store by id",
        "operationId": "declineQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the quote to be reinvited",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quote/{id}/request-change": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Request change a quote by id",
        "description": "This route is used to request change a quote from the store by id",
        "operationId": "requestChangeQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the quote to be reinvited",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quote/{id}/configure": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Change payment or shipping method",
        "description": "This route is used to change a payment or shipping method when place a order ",
        "operationId": "switchPaymentOrShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the quote to be reinvited",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "paymentMethodId": {
                    "description": "Id of the payment method",
                    "type": "string"
                  },
                  "shippingMethodId": {
                    "description": "Id of the shipping method",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/quote/order/{id}": {
      "post": {
        "tags": ["B2B Quote Management"],
        "summary": "Create a order from a quote",
        "description": "This route is used to create a order from a quote",
        "operationId": "createOrderFromQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the quote to be reinvited",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerComment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/natural-language/search-term": {
      "post": {
        "tags": ["Natural language search", "AI Search", "Experimental"],
        "summary": "Fetch search terms by natural language search query",
        "description": "<b>Experimental until v6.7.0</b>\n\nFetch search terms by natural search language query",
        "operationId": "naturalLanguageSearchTerm",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "description": "Natural language query",
                    "type": "string",
                    "example": "I'm looking for a present for my wife"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A collection of search terms, with an associated 'reason' based on search context",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NaturalLanguageSearchTermResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product/image-upload-search/search-term": {
      "post": {
        "tags": ["Search by Image", "AI Search", "Experimental"],
        "summary": "Fetch product search terms by uploading an image.",
        "description": "<b>Experimental until v6.7.0</b>\n\nFetch product search terms by uploading an image.",
        "operationId": "searchByImageSearchTerm",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Base-64 encoded image",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A collection of search terms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchByImageSearchTermResponse"
                }
              }
            }
          }
        }
      }
    },
    "/approval-rule": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "List all approval rules",
        "description": "This route is used to list all approval rules from the store",
        "operationId": "listApprovalRules",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing approval rules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApprovalRule"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "get": {
        "tags": ["B2B Order Approval"],
        "summary": "Fetch a list of approval rules",
        "description": "This route is used to load approval rules",
        "operationId": "readApprovalRules",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity search result containing approval rules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApprovalRule"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/approval-rule/create": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "Create a new approval rule",
        "description": "This route is used to create a new approval rule",
        "operationId": "createApprovalRule",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "approvalRuleName": {
                    "description": "Name of the approval rule",
                    "type": "string"
                  },
                  "approvalRuleApprove": {
                    "description": "ID of the role that can approve the rule",
                    "type": "string"
                  },
                  "approvalRuleRole": {
                    "description": "ID of the role that is affected by the rule",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Priority of the approval rule",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description of the approval rule",
                    "type": "string"
                  },
                  "active": {
                    "description": "Active status of the approval rule",
                    "type": "boolean"
                  },
                  "approvalRuleCondition": {
                    "description": "List of rules",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Type of the rule",
                        "type": "string"
                      },
                      "value": { "description": "Value", "type": "string" }
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Approval rule entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApprovalRule" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/approval-rule/{id}": {
      "get": {
        "tags": ["B2B Order Approval"],
        "summary": "Fetch one approval rule by id",
        "description": "This route is used to fetch a approval rule from the store by id",
        "operationId": "readApprovalRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the approval rule to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Approval rule entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApprovalRule" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["B2B Order Approval"],
        "summary": "Update a approval rule by id",
        "description": "This route is used to update a approval rule from the store by id",
        "operationId": "updateApprovalRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the approval rule to be updated",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "approvalRuleName": {
                    "description": "Name of the approval rule",
                    "type": "string"
                  },
                  "approvalRuleApprove": {
                    "description": "ID of the role that can approve the rule",
                    "type": "string"
                  },
                  "approvalRuleRole": {
                    "description": "ID of the role that is affected by the rule",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Priority of the approval rule",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description of the approval rule",
                    "type": "string"
                  },
                  "active": {
                    "description": "Active status of the approval rule",
                    "type": "boolean"
                  },
                  "approvalRuleCondition": {
                    "description": "List of rules",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Type of the rule",
                        "type": "string"
                      },
                      "value": { "description": "Value", "type": "string" }
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Approval rule entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApprovalRule" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/pending-order/request": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "Request new order approval",
        "description": "This route is used to request a new order approval",
        "operationId": "requestOrderApproval",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pending order entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PendingOrder" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/pending-order/{id}": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "Fetch one pending order by id",
        "description": "This route is used to fetch a pending order from the store by id",
        "operationId": "fetchPendingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the pending order to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pending order entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PendingOrder" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/pending-order/{id}/decline": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "Decline a pending order by id",
        "description": "This route is used to decline a pending order from the store by id",
        "operationId": "declinePendingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the pending order to be declined",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/pending-order/{id}/approve": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "Approve a pending order by id",
        "description": "This route is used to approve a pending order from the store by id",
        "operationId": "approvePendingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the pending order to be approved",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/pending-order/{id}/checkout/order": {
      "post": {
        "tags": ["B2B Order Approval"],
        "summary": "Create a order from a pending order",
        "description": "This route is used to create a order from a pending order",
        "operationId": "createOrderFromPendingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the pending order to be used to create a order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerComment": {
                    "description": "Message content",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order entity",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list": {
      "post": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Create new shopping list",
        "description": "This route is used to create a new shopping list from the store",
        "operationId": "createShoppingList",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Shopping list name",
                    "type": "string"
                  },
                  "lineItems": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Product id",
                          "type": "string",
                          "pattern": "^[0-9a-f]{32}$"
                        },
                        "quantity": {
                          "description": "Quantity of the product",
                          "type": "integer"
                        }
                      },
                      "required": ["id", "quantity"]
                    }
                  }
                },
                "type": "object",
                "required": ["name"]
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Delete shopping lists",
        "description": "This route is used to delete shopping lists",
        "operationId": "removeShoppingLists",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ids"],
                "properties": {
                  "ids": {
                    "description": "Shopping list ids",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  }
                }
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-lists": {
      "post": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Load shopping lists",
        "description": "This route is used to load all shopping lists",
        "operationId": "readShoppingLists",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Criteria" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing shopping lists",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bComponentsShoppingList"
                          }
                        }
                      }
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/{id}": {
      "post": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Load one shopping list",
        "description": "This route is used to load one shopping list",
        "operationId": "readShoppingList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the shopping list to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Shopping list entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bComponentsShoppingList"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/{id}/change-name": {
      "patch": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Update shopping list name",
        "description": "This route is used to update shopping list name",
        "operationId": "updateShoppingList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the shopping list to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Shopping list name",
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/{id}/duplicate": {
      "post": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Duplicate new shopping list",
        "description": "This route is used to duplicate a new shopping list from the store",
        "operationId": "duplicateShoppingList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the shopping list to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Shopping list name",
                    "type": "string",
                    "required": true
                  }
                },
                "type": "object",
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated id of the duplicated shopping list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The generated id of the duplicated shopping list",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/{id}/summary": {
      "get": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Price summary for shopping list",
        "description": "This route is used to get a price summary for shopping list",
        "operationId": "summaryShoppingList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the shopping list to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Shopping list summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "object",
                      "properties": {
                        "netPrice": {
                          "description": "Net price of the cart",
                          "type": "number",
                          "format": "float"
                        },
                        "totalPrice": {
                          "description": "Total price of the cart, including shipping costs, discounts and taxes",
                          "type": "number",
                          "format": "float"
                        },
                        "positionPrice": {
                          "description": "Price for all line items in the cart",
                          "type": "number",
                          "format": "float"
                        },
                        "taxStatus": {
                          "description": "Tax calculation for the cart. One of `gross`, `net` or `tax-free`",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/line-item/{id}/add": {
      "post": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Add more product to shopping list",
        "description": "This route is used to add more products to shopping list",
        "operationId": "addLineItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the shopping list to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lineItems": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Product id",
                          "type": "string",
                          "pattern": "^[0-9a-f]{32}$"
                        },
                        "quantity": {
                          "description": "Quantity of the product",
                          "type": "integer"
                        }
                      },
                      "required": ["id", "quantity"]
                    }
                  }
                },
                "required": ["lineItems"]
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/line-item/remove": {
      "delete": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Delete shopping list line items",
        "description": "This route is used to delete shopping list line items",
        "operationId": "removeLineItems",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ids"],
                "properties": {
                  "ids": {
                    "description": "Line items ids",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  }
                }
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/shopping-list/line-item/{id}/change-quantity": {
      "patch": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Update shopping list line item quantity",
        "description": "This route is used to update shopping list line item quantity",
        "operationId": "updateLineItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the shopping list line item to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "description": "new line item quantity",
                    "type": "integer"
                  }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/shopping-lists/add-to-cart": {
      "post": {
        "tags": ["B2B Shopping Lists"],
        "summary": "Add shopping lists to cart",
        "description": "This route is used to add shopping lists to cart",
        "operationId": "addShoppingListsToCart",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ids"],
                "properties": {
                  "ids": {
                    "description": "Shopping list ids",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  }
                }
              }
            }
          }
        },
        "responses": { "204": { "description": "No content response" } },
        "security": [{ "ApiKey": [] }]
      }
    }
  },
  "tags": [
    {
      "name": "Experimental",
      "description": "Experimental API, not part of our backwards compatibility promise, thus this API can introduce breaking changes at any time.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/shopware/platform/blob/trunk/adr/2023-05-10-experimental-features.md"
      }
    }
  ]
}