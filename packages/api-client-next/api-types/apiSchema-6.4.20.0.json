{
  "openapi": "3.0.0",
  "info": {
    "title": "Shopware Store API",
    "description": "This endpoint reference contains an overview of all endpoints comprising the Shopware Store API",
    "version": "6.4.20.0"
  },
  "servers": [{ "url": "https://demo-frontends.shopware.store/store-api" }],
  "paths": {
    "/script/{hook}": {
      "post": {
        "tags": ["API", "Script", "App"],
        "summary": "Access point for different api logics which are provided by apps over script hooks",
        "operationId": "postScriptStoreApiRoute",
        "parameters": [
          {
            "name": "hook",
            "in": "path",
            "description": "Dynamic hook which used to build the hook name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns different structures of results based on the called script."
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/newsletter-recipient": {
      "post": {
        "tags": ["Profile", "Newsletter", "Endpoints supporting Criteria "],
        "summary": "Fetch newsletter recipients",
        "description": "Perform a filtered search for newsletter recipients.",
        "operationId": "readNewsletterRecipient",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountNewsletterRecipientResult"
                  }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/change-profile": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's information",
        "description": "Make changes to a customer's account, like changing their name, salutation or title.",
        "operationId": "changeProfile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["salutationId", "firstName", "lastName"],
                "properties": {
                  "salutationId": {
                    "description": "Id of the salutation for the customer account. Fetch options using `salutation` endpoint.",
                    "type": "string"
                  },
                  "title": {
                    "description": "(Academic) title of the customer",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer first name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer last name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "company": {
                    "description": "Company of the customer. Only required when `accountType` is `business`.",
                    "type": "string"
                  },
                  "birthdayDay": {
                    "description": "Birthday day",
                    "type": "integer"
                  },
                  "birthdayMonth": {
                    "description": "Birthday month",
                    "type": "integer"
                  },
                  "birthdayYear": {
                    "description": "Birthday year",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/change-email": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's email address",
        "description": "Changes a customer's email address to a new email address, using their current password as a validation.",
        "operationId": "changeEmail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "emailConfirmation", "password"],
                "properties": {
                  "email": {
                    "description": "New email address. Has to be unique amongst all customers",
                    "type": "string"
                  },
                  "emailConfirmation": {
                    "description": "Confirmation of the new email address.",
                    "type": "string"
                  },
                  "password": {
                    "description": "Customer's current password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/change-language": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's language.",
        "description": "Changes the language of the logged in customer",
        "operationId": "changeLanguage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["languageId"],
                "properties": {
                  "language": {
                    "description": "New languageId",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/change-password": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's password",
        "description": "Changes a customer's password using their current password as a validation.",
        "operationId": "changePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["password", "newPassword", "newPasswordConfirm"],
                "properties": {
                  "password": {
                    "description": "Current password of the customer",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New Password for the customer",
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "description": "Confirmation of the new password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/change-payment-method/{paymentMethodId}": {
      "post": {
        "tags": ["Profile"],
        "summary": "Change the customer's default payment method",
        "description": "Changes a customer's default (preselected) payment method.",
        "operationId": "changePaymentMethod",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "description": "Identifier of the desired default payment method",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/customer-recovery-is-expired": {
      "post": {
        "tags": ["Profile"],
        "summary": "Checks if the customer recovery entry for a given hash is expired.",
        "description": "This can be used to validate a provided hash has a valid and not expired customer recovery hash.",
        "operationId": "getCustomerRecoveryIsExpired",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash"],
                "properties": {
                  "hash": {
                    "description": "Parameter from the link in the confirmation mail sent in Step 1",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a CustomerRecoveryIsExpiredResponse that indicates if the hash is expired or not.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArrayStruct" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/customer": {
      "post": {
        "tags": ["Profile", "Endpoints supporting Criteria "],
        "summary": "Get information about current customer",
        "description": "Returns information about the current customer.",
        "operationId": "readCustomer",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the logged in customer, also for guest sessions. Check for the value of `guest` field to see whether the customer is a guest.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Delete the customer's profile",
        "description": "Deletes a customer profile along with their addresses, wishlists and associated data. Created orders and their payment/shipping information (addresses) and reviews are not deleted.",
        "operationId": "deleteCustomer",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful removal of the customer profile"
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/address/{addressId}": {
      "delete": {
        "tags": ["Address"],
        "summary": "Delete an address of a customer",
        "description": "Delete an address of customer.\n\n    Only addresses which are not set as default addresses for shipping or billing can be deleted. You can check the current default addresses of your customer using the profile information endpoint and change them using the default address endpoint.\n\n    **A customer must have at least one address (which can be used for shipping and billing).**\n\n    An automatic fallback is not applied.",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address to be deleted.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response, when the address has been deleted"
          },
          "400": {
            "description": "Response containing a list of errors, most likely due to the address being in use"
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["Address"],
        "summary": "Modify an address of a customer",
        "description": "Modifies an existing address of a customer.",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerAddress" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/list-address": {
      "post": {
        "tags": ["Address", "Endpoints supporting Criteria "],
        "summary": "Fetch addresses of a customer",
        "description": "Lists all addresses of the current customer and allows filtering them based on a criteria.",
        "operationId": "listAddress",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CustomerAddress" }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/login": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Log in a customer",
        "description": "Logs in customers given their credentials.",
        "operationId": "loginCustomer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["username", "password"],
                "properties": {
                  "username": { "description": "Email", "type": "string" },
                  "password": { "description": "Password", "type": "string" }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "If credentials are incorrect an error is returned",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/failure" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/logout": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Log out a customer",
        "description": "Logs out a customer.",
        "operationId": "logoutCustomer",
        "responses": {
          "200": {
            "description": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextTokenResponse"
                }
              }
            }
          },
          "403": { "$ref": "#/components/responses/403" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/register-confirm": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Confirm a customer registration",
        "description": "Confirms a customer registration when double opt-in is activated.\n\nLearn more about double opt-in registration in our guide \"Register a customer\".",
        "operationId": "registerConfirm",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash", "em"],
                "properties": {
                  "hash": {
                    "description": "Hash from the email received",
                    "type": "string"
                  },
                  "em": {
                    "description": "Email hash from the email received",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the logged in customer. The customer is automatically logged in with the `sw-context-token` header provided, which can be reused for subsequent requests."
          },
          "404": { "description": "No hash provided" },
          "412": { "description": "The customer has already been confirmed" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/register": {
      "post": {
        "tags": ["Login & Registration"],
        "summary": "Register a customer",
        "description": "Registers a customer. Used both for normal customers and guest customers.See the Guide \"Register a customer\" for more information on customer registration.",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password",
                  "salutationId",
                  "firstName",
                  "lastName",
                  "acceptedDataProtection",
                  "storefrontUrl",
                  "billingAddress"
                ],
                "properties": {
                  "email": {
                    "description": "Email of the customer. Has to be unique, unless `guest` is `true`",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for the customer. Required, unless `guest` is `true`",
                    "type": "string"
                  },
                  "salutationId": {
                    "description": "Id of the salutation for the customer account. Fetch options using `salutation` endpoint.",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer first name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer last name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "acceptedDataProtection": {
                    "description": "Flag indicating accepted data protection",
                    "type": "boolean"
                  },
                  "storefrontUrl": {
                    "description": "URL of the storefront for that registration. Used in confirmation emails. Has to be one of the configured domains of the sales channel.",
                    "type": "string"
                  },
                  "billingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "shippingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "accountType": {
                    "description": "Account type of the customer which can be either `private` or `business`.",
                    "type": "string",
                    "default": "private"
                  },
                  "guest": {
                    "description": "If set, will create a guest customer. Guest customers can re-use an email address and don't need a password.",
                    "type": "boolean",
                    "default": false
                  },
                  "birthdayDay": {
                    "description": "Birthday day",
                    "type": "integer"
                  },
                  "birthdayMonth": {
                    "description": "Birthday month",
                    "type": "integer"
                  },
                  "birthdayYear": {
                    "description": "Birthday year",
                    "type": "integer"
                  },
                  "title": {
                    "description": "(Academic) title of the customer",
                    "type": "string"
                  },
                  "affiliateCode": {
                    "description": "Field can be used to store an affiliate tracking code",
                    "type": "string"
                  },
                  "campaignCode": {
                    "description": "Field can be used to store a campaign tracking code",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/recovery-password-confirm": {
      "post": {
        "tags": ["Profile"],
        "summary": "Reset a password with recovery credentials",
        "description": "This operation is Step 2 of the password reset flow. It is required to conduct Step 1 \"Send a password recovery mail\" in order to obtain the required credentials for this step.Resets a customer's password using credentials from a password recovery mail as a validation.",
        "operationId": "recoveryPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash", "newPassword", "newPasswordConfirm"],
                "properties": {
                  "hash": {
                    "description": "Parameter from the link in the confirmation mail sent in Step 1",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New password for the customer",
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "description": "Confirmation of the new password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/recovery-password": {
      "post": {
        "tags": ["Profile"],
        "summary": "Send a password recovery mail",
        "description": "This operation is Step 1 of the password reset flow. Make sure to implement Step 2 \"Reset password with recovery credentials\" in order to allow for the complete flow in your application. Sends a recovery mail containing a link with credentials that allows a customer to reset their password.",
        "operationId": "sendRecoveryMail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "storefrontUrl"],
                "properties": {
                  "email": {
                    "description": "E-Mail address to identify the customer",
                    "type": "string"
                  },
                  "storefrontUrl": {
                    "description": "URL of the storefront to use for the generated reset link. It has to be a domain that is configured in the sales channel domain settings.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If email corresponds to an existing customer, a mail will be sent out to that customer containing a link assembled using the following schema:\n\nReturns a success indicating a successful initialisation of the reset flow.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/address/default-shipping/{addressId}": {
      "patch": {
        "tags": ["Address"],
        "summary": "Change a customer's default shipping address",
        "description": "Updates the default (preselected) shipping addresses of a customer.",
        "operationId": "defaultShippingAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/address/default-billing/{addressId}": {
      "patch": {
        "tags": ["Address"],
        "summary": "Change a customer's default billing address",
        "description": "Updates the default (preselected) billing addresses of a customer.",
        "operationId": "defaultBillingAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/account/address": {
      "post": {
        "tags": ["Address"],
        "summary": "Create a new address for a customer",
        "description": "Creates a new address for a customer.",
        "operationId": "createCustomerAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerAddress" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/context": {
      "get": {
        "tags": ["System & Context"],
        "summary": "Fetch the current context",
        "description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more.",
        "operationId": "readContext",
        "responses": {
          "200": {
            "description": "Returns the current context.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelContext" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["System & Context"],
        "summary": "Modify the current context",
        "description": "Used for switching the context. A typical example would be changing the language or changing the currency.",
        "operationId": "updateContext",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currencyId": {
                    "description": "Currency",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "languageId": {
                    "description": "Language",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "billingAddressId": {
                    "description": "Billing Address",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "shippingAddressId": {
                    "description": "Shipping Address",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "paymentMethodId": {
                    "description": "Payment Method",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "shippingMethodId": {
                    "description": "Shipping Method",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "countryId": {
                    "description": "Country",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "countryStateId": {
                    "description": "Country State",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the context token. Use that as your `sw-context-token` header for subsequent requests. Redirect if getRedirectUrl is set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextTokenResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/document/download/{documentId}/{deepLinkCode}": {
      "post": {
        "tags": ["Document", "Endpoints supporting Criteria "],
        "summary": "Download generated document",
        "description": "Returns blob file of a generated document to download.",
        "operationId": "download",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "deepLinkCode",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the document information and blob to download.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Fetch or create a cart",
        "description": "Used to fetch the current cart or for creating a new one.",
        "operationId": "readCart",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the new cart. This parameter will only be used when creating a new cart.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete a cart",
        "description": "This route deletes the cart of the customer.",
        "operationId": "deleteCart",
        "responses": {
          "204": {
            "description": "Successfully deleted the cart",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/cart/line-item": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add items to the cart",
        "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)",
        "operationId": "addLineItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CartItems" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove items from the cart",
        "description": "This route removes items from the cart and recalculates it.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#deleting-items-in-the-cart)",
        "operationId": "removeLineItem",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A list of product identifiers.",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      },
      "patch": {
        "tags": ["Cart"],
        "summary": "Update items in the cart",
        "description": "This route updates items in the cart. A typical example is updating the quantity of an item.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#updating-items-in-the-cart)",
        "operationId": "updateLineItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CartItems" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Cart" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/checkout/order": {
      "post": {
        "tags": ["Order"],
        "summary": "Create an order from a cart",
        "description": "Creates a new order from the current cart and deletes the cart.\n\nIf you are using the [prepared payment flow](https://developer.shopware.com/docs/concepts/commerce/checkout-concept/payments#2.1-prepare-payment-optional), this endpoint also receives additional transaction details. The exact name of the parameters depends on the implementation of the corresponding *payment handler*.",
        "operationId": "createOrder",
        "requestBody": {
          "description": "Contains additional metadata which is stored together with the order. It can also contain payment transaction details.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerComment": {
                    "description": "Adds a comment from the customer to the order.",
                    "type": "string"
                  },
                  "affiliateCode": {
                    "description": "The affiliate code can be used to track which referrer the customer came through. An example could be `Price-comparison-company-XY`.",
                    "type": "string"
                  },
                  "campaignCode": {
                    "description": "The campaign code is used to track which action the customer came from. An example could be `Summer-Deals`",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/contact-form": {
      "post": {
        "tags": ["Content"],
        "summary": "Submit a contact form message",
        "description": "Used for submitting contact forms. Be aware that there can be more required fields, depending on the system settings.",
        "operationId": "sendContactMail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["salutationId", "email", "subject", "comment"],
                "properties": {
                  "salutationId": {
                    "description": "Identifier of the salutation. Use `/api/salutation` endpoint to fetch possible values.",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Firstname. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Lastname. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "email": { "description": "Email address", "type": "string" },
                  "phone": {
                    "description": "Phone. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "The subject of the contact form.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The message of the contact form",
                    "type": "string"
                  },
                  "navigationId": {
                    "description": "Identifier of the navigation page. Can be used to override the configuration.\nTake a look at the settings of a category containing a concact form in the administration.",
                    "type": "string"
                  },
                  "slotId": {
                    "description": "Identifier of the cms element",
                    "type": "string"
                  },
                  "cmsPageType": {
                    "description": "Type of the content management page",
                    "type": "string"
                  },
                  "entityName": {
                    "description": "Entity name for slot config",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "200": { "description": "Message sent successful." } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/category": {
      "post": {
        "tags": ["Category", "Endpoints supporting Criteria "],
        "summary": "Fetch a list of categories",
        "description": "Perform a filtered search for categories.",
        "operationId": "readCategoryList",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Category" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/category/{navigationId}": {
      "post": {
        "tags": ["Category", "Endpoints supporting Criteria "],
        "summary": "Fetch a single category",
        "description": "This endpoint returns information about the category, as well as a fully resolved (hydrated with mapping values) CMS page, if one is assigned to the category. You can pass slots which should be resolved exclusively.",
        "operationId": "readCategory",
        "parameters": [
          {
            "name": "navigationId",
            "in": "path",
            "description": "Identifier of the category to be fetched",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "slots",
            "in": "query",
            "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a '|' character",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  { "$ref": "#/components/schemas/ProductListingCriteria" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded category with cms page",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer-group-registration/config/{customerGroupId}": {
      "get": {
        "tags": ["Login & Registration"],
        "summary": "Fetch registration settings for customer group",
        "operationId": "getCustomerGroupRegistrationInfo",
        "parameters": [
          {
            "name": "customerGroupId",
            "in": "path",
            "description": "Customer group id",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the customer group including registration settings.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerGroup" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/language": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch languages",
        "description": "Perform a filtered search for languages.",
        "operationId": "readLanguages",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing languages.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Language" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer/wishlist/add/{productId}": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add a product to a wishlist",
        "description": "Adds a product to a customers wishlist.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "addProductOnWishlist",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product to be added.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer/wishlist": {
      "post": {
        "tags": ["Wishlist", "Endpoints supporting Criteria "],
        "summary": "Fetch a wishlist",
        "description": "Fetch a customer's wishlist. Products on the wishlist can be filtered using a criteria object.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "readCustomerWishlist",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WishlistLoadRouteResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer/wishlist/merge": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Create a wishlist for a customer",
        "description": "Create a new wishlist for a logged in customer or extend the existing wishlist given a set of products.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * A customer can only have a single wishlist.\n    * The wishlist feature has to be activated.",
        "operationId": "mergeProductOnWishlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "productIds": {
                    "description": "List product id",
                    "type": "array",
                    "items": {
                      "description": "product id",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/customer/wishlist/delete/{productId}": {
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Remove a product from a wishlist",
        "description": "Removes a product from a customer's wishlist.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "deleteProductOnWishlist",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The identifier of the product to be removed from the wishlist.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful removal.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          },
          "404": {
            "description": "The removal of the product failed. Probably because the product could not be found on the wishlist.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/failure" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/currency": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch currencies",
        "description": "Perform a filtered search for currencies.",
        "operationId": "readCurrency",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing currencies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Currency" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/salutation": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch salutations",
        "description": "Perform a filtered search for salutations.",
        "operationId": "readSalutation",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing salutations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Salutation" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/search-suggest": {
      "post": {
        "tags": ["Product"],
        "summary": "Search for products (suggest)",
        "description": "Can be used to implement search previews or suggestion listings, that don’t require any interaction.",
        "operationId": "searchSuggest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "required": ["search"],
                    "properties": {
                      "search": {
                        "description": "Using the search parameter, the server performs a text search on all records based on their data model and weighting as defined in the entity definition using the SearchRanking flag.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/ProductListingFlags" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields.\n\nNote: Aggregations, currentFilters and availableSortings are empty in this response. If you need them to display a listing, use the /search route instead.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/navigation/{activeId}/{rootId}": {
      "post": {
        "tags": ["Category", "Endpoints supporting Criteria "],
        "summary": "Fetch a navigation menu",
        "description": "This endpoint returns categories that can be used as a page navigation. You can either return them as a tree or as a flat list. You can also control the depth of the tree.\n\n    Instead of passing uuids, you can also use one of the following aliases for the activeId and rootId parameters to get the respective navigations of your sales channel.\n\n     * main-navigation\n     * service-navigation\n     * footer-navigation",
        "operationId": "readNavigation",
        "parameters": [
          {
            "name": "sw-include-seo-urls",
            "in": "header",
            "description": "Instructs Shopware to try and resolve SEO URLs for the given navigation item",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "activeId",
            "in": "path",
            "description": "Identifier of the active category in the navigation tree (if not used, just set to the same as rootId).",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "rootId",
            "in": "path",
            "description": "Identifier of the root category for your desired navigation tree. You can use it to fetch sub-trees of your navigation tree.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "properties": {
                      "depth": {
                        "description": "Determines the depth of fetched navigation levels."
                      },
                      "buildTree": {
                        "description": "Return the categories as a tree or as a flat list."
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All available navigations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationRouteResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/cross-selling": {
      "post": {
        "tags": ["Product"],
        "summary": "Fetch cross-selling groups of a product",
        "description": "This route is used to load the cross sellings for a product. A product has several cross selling definitions in which several products are linked. The route returns the cross sellings together with the linked products",
        "operationId": "readProductCrossSellings",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Found cross sellings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrossSellingElementCollection"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}": {
      "post": {
        "tags": ["Product"],
        "summary": "Fetch a single product",
        "description": "This route is used to load a single product with the corresponding details. In addition to loading the data, the best variant of the product is determined when a parent id is passed.",
        "operationId": "readProductDetail",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Product information along with variant groups and options",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product": {
      "post": {
        "tags": ["Product", "Endpoints supporting Criteria "],
        "summary": "Fetch a list of products",
        "description": "List products that match the given criteria. For performance ressons a limit should always be set.",
        "operationId": "readProduct",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Product" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/reviews": {
      "post": {
        "tags": ["Product", "Endpoints supporting Criteria "],
        "summary": "Fetch product reviews",
        "description": "Perform a filtered search for product reviews.",
        "operationId": "readProductReviews",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/review": {
      "post": {
        "tags": ["Product"],
        "summary": "Save a product review",
        "description": "Saves a review for a product. Reviews have to be activated in the settings.",
        "operationId": "saveProductReview",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product which is reviewed.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["title", "content", "points"],
                "properties": {
                  "name": {
                    "description": "The name of the review author. If not set, the first name of the customer is chosen.",
                    "type": "string"
                  },
                  "email": {
                    "description": "The email address of the review author. If not set, the email of the customer is chosen.",
                    "type": "string"
                  },
                  "title": { "description": "The title of the review." },
                  "content": { "description": "The content of review." },
                  "points": {
                    "description": "The review rating for the product."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response indicating the review was saved successfuly."
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product/{productId}/find-variant": {
      "post": {
        "tags": ["Product"],
        "summary": "Search for a matching variant by product options.",
        "description": "Performs a search for product variants and returns the best matching variant.",
        "operationId": "searchProductVariantIds",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["options"],
                "properties": {
                  "options": {
                    "description": "The options parameter for the variant to find.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "switchedGroup": {
                    "description": "The id of the option group that has been switched.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an FoundCombination struct containing the ids matching the search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindProductVariantRouteResponse"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/country-state/{countryId}": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch the states of a country",
        "description": "Perform a filtered search the states for a country",
        "operationId": "readCountryState",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing countries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CountryState"
                          }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/seo-url": {
      "post": {
        "tags": ["Sitemap & Routes", "Endpoints supporting Criteria "],
        "summary": "Fetch SEO routes",
        "description": "Perform a filtered search for seo urls.",
        "operationId": "readSeoUrl",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing seo urls.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/SeoUrl" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/newsletter/confirm": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Confirm a newsletter registration",
        "description": "You have to use the hash from the link sent out via email to confirm the user registration.",
        "operationId": "confirmNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["hash", "em"],
                "properties": {
                  "hash": {
                    "description": "Hash parameter from link the in the confirmation mail",
                    "type": "string"
                  },
                  "em": {
                    "description": "Email hash parameter from the link in the confirmation mail",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The newsletter confirmation was successful."
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/newsletter/subscribe": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Create or remove a newsletter subscription",
        "description": "This route is used to create/remove/confirm a newsletter subscription.\n\nThe `option` property controls what should happen:\n* `direct`: The subscription is directly active and does not need a confirmation.\n* `subscribe`: An email will be send to the provided email addrees containing a link to the /newsletter/confirm route.\nThe subscription is only successful, if the /newsletter/confirm route is called with the generated hashes.\n* `unsubscribe`: The email address will be removed from the newsletter subscriptions.\n* `confirmSubscribe`: Confirmes the newsletter subscription for the provided email address.",
        "operationId": "subscribeToNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "option", "storefrontUrl"],
                "properties": {
                  "email": {
                    "description": "Email address that will receive the confirmation and the newsletter.",
                    "type": "string"
                  },
                  "option": { "description": "Defines what should be done." },
                  "storefrontUrl": {
                    "description": "Url of the storefront of the shop. This will be used for generating the link to the /newsletter/confirm inside the confirm email.",
                    "type": "string"
                  },
                  "salutationId": {
                    "description": "Identifier of the salutation."
                  },
                  "firstName": {
                    "description": "First name",
                    "type": "string"
                  },
                  "lastName": { "description": "Last name", "type": "string" },
                  "street": { "description": "Street", "type": "string" },
                  "city": { "description": "City", "type": "string" },
                  "zipCode": { "description": "Zip code", "type": "string" },
                  "tags": { "description": "Zip code", "type": "string" },
                  "languageId": {
                    "description": "Identifier of the language."
                  },
                  "customFields": {
                    "description": "Custom field data that should be added to the subscription.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/newsletter/unsubscribe": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Remove a newsletter subscription",
        "description": "Removes a newsletter recipient from the mailing lists.",
        "operationId": "unsubscribeToNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "properties": {
                  "email": {
                    "description": "Email address that should be removed from the mailing lists.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Unsubscribing was successful." }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/payment-method": {
      "post": {
        "tags": ["Payment Method", "Endpoints supporting Criteria "],
        "summary": "Loads all available payment methods",
        "operationId": "readPaymentMethod",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "properties": {
                      "onlyAvailable": {
                        "description": "List only available",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "description": "Total amount",
                      "type": "integer"
                    },
                    "aggregations": {
                      "description": "aggregation result",
                      "type": "object"
                    },
                    "elements": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/PaymentMethod" }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/sitemap": {
      "get": {
        "tags": ["Sitemap & Routes"],
        "summary": "Fetch sitemaps",
        "description": "Fetches a list of compressed sitemap files, which are often used by search engines.",
        "operationId": "readSitemap",
        "responses": {
          "200": {
            "description": "Returns a list of available sitemaps.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Sitemap" }
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/cms/{id}": {
      "post": {
        "tags": ["Content"],
        "summary": "Fetch and resolve a CMS page",
        "description": "Loads a content management page by its identifier and resolve the slot data. This could be media files, product listing and so on.\n\n**Important notice**\n\nThe criteria passed with this route also affects the listing, if there is one within the cms page.",
        "operationId": "readCms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the CMS page to be resolved",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "properties": {
                      "slots": {
                        "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a `|` character.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/ProductListingCriteria" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded cms page",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPage" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/landing-page/{landingPageId}": {
      "post": {
        "tags": ["Content", "Endpoints supporting Criteria "],
        "summary": "Fetch a landing page with the resolved CMS page",
        "description": "Loads a landing page by its identifier and resolves the CMS page.\n\n**Important notice**\n\nThe criteria passed with this route also affects the listing, if there is one within the cms page.",
        "operationId": "readLandingPage",
        "parameters": [
          {
            "name": "landingPageId",
            "in": "path",
            "description": "Identifier of the landing page.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "properties": {
                          "slots": {
                            "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a `|` character.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      { "$ref": "#/components/schemas/ProductListingCriteria" }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded landing page with cms page",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LandingPage" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/404" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/country": {
      "post": {
        "tags": ["System & Context", "Endpoints supporting Criteria "],
        "summary": "Fetch countries",
        "description": "Perform a filtered search for countries",
        "operationId": "readCountry",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing countries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Country" }
                        }
                      },
                      "type": "object"
                    },
                    { "$ref": "#/components/schemas/EntitySearchResult" }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product-export/{accessKey}/{fileName}": {
      "get": {
        "tags": ["Product"],
        "summary": "Export product export",
        "operationId": "readProductExport",
        "parameters": [
          {
            "name": "accessKey",
            "in": "path",
            "description": "Access Key",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "File Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/product-listing/{categoryId}": {
      "post": {
        "tags": ["Product"],
        "summary": "Fetch a product listing by category",
        "description": "Fetches a product listing for a specific category. It also provides filters, sortings and property aggregations, analogous to the /search endpoint.",
        "operationId": "readProductListing",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Identifier of a category.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  { "$ref": "#/components/schemas/ProductListingCriteria" },
                  { "$ref": "#/components/schemas/ProductListingFlags" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields to display a listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/handle-payment": {
      "post": {
        "tags": ["Payment & Shipping"],
        "summary": "Initiate a payment for an order",
        "description": "This generic endpoint is should be called to initiate a payment flow after an order has been created. The details of the payment flow can differ depending on the payment integration and might require calling additional operations or the setup of webhooks.\n\nThe endpoint internally calls the payment handler of the payment method currently set for the order.",
        "operationId": "handlePaymentMethod",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["orderId"],
                "properties": {
                  "orderId": {
                    "description": "Identifier of an order",
                    "type": "string"
                  },
                  "finishUrl": {
                    "description": "URL to which the client should be redirected after successful payment",
                    "type": "string"
                  },
                  "errorUrl": {
                    "description": "URL to which the client should be redirected after erroneous payment",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Redirect to external payment provider" }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/order/state/cancel": {
      "post": {
        "tags": ["Order"],
        "summary": "Cancel an order",
        "description": "Cancels an order. The order state will be set to 'cancelled'.",
        "operationId": "cancelOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "orderId": {
                    "description": "The identifier of the order to be canceled.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the state of the state machine\n\n    example: More information about the state machine can be found in the corresponding guide: [Using the state machine](https://developer.shopware.com/docs/guides/plugins/plugins/checkout/order/using-the-state-machine)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineState" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/order": {
      "post": {
        "tags": ["Order", "Endpoints supporting Criteria "],
        "summary": "Fetch a list of orders",
        "description": "List orders of a customer.",
        "operationId": "readOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/Criteria" },
                  {
                    "properties": {
                      "checkPromotion": {
                        "description": "Check if the payment method of the order is still changeable.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of orders and an indicator if the payment of the order can be changed.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderRouteResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/order/payment": {
      "post": {
        "tags": ["Order"],
        "summary": "Update the payment method of an order",
        "description": "Changes the payment method of a specific order. You can use the /order route to find out if the payment method of an order can be changed - take a look at the `paymentChangeable`- array in the response.",
        "operationId": "orderSetPayment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["paymentMethodId", "orderId"],
                "properties": {
                  "paymentMethodId": {
                    "description": "The identifier of the paymentMethod to be set",
                    "type": "string"
                  },
                  "orderId": {
                    "description": "The identifier of the order.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the payment method of the order.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/order/download/{orderId}/{downloadId}": {
      "get": {
        "tags": ["Order"],
        "summary": "Download a purchased file",
        "description": "Download a file included in the given order and with the given id. Access must be granted.",
        "operationId": "orderDownloadFile",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "downloadId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "An arbitrary binary file.",
            "content": { "application/octet-stream": [] }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/shipping-method": {
      "post": {
        "tags": ["Payment & Shipping", "Endpoints supporting Criteria "],
        "summary": "Fetch shipping methods",
        "description": "Perform a filtered search for shipping methods.",
        "operationId": "readShippingMethod",
        "parameters": [
          {
            "name": "onlyAvailable",
            "in": "query",
            "description": "List only available shipping methods. This filters shipping methods methods which can not be used in the actual context because of their availability rule.",
            "schema": { "type": "boolean" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [{ "$ref": "#/components/schemas/Criteria" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "description": "Total amount",
                      "type": "integer"
                    },
                    "aggregations": {
                      "description": "aggregation result",
                      "type": "object"
                    },
                    "elements": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ShippingMethod" }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    },
    "/search": {
      "post": {
        "tags": ["Product"],
        "summary": "Search for products",
        "description": "Performs a search for products which can be used to display a product listing.",
        "operationId": "searchPage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "required": ["search"],
                    "properties": {
                      "search": {
                        "description": "Using the search parameter, the server performs a text search on all records based on their data model and weighting as defined in the entity definition using the SearchRanking flag.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  { "$ref": "#/components/schemas/ProductListingCriteria" },
                  { "$ref": "#/components/schemas/ProductListingFlags" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields to display a listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [{ "ApiKey": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "swag_paypal_v1_capture": {
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_amount"
          },
          "isFinalCapture": { "type": "boolean" },
          "id": { "type": "string" },
          "state": { "type": "string" },
          "reasonCode": { "type": "string" },
          "parentPayment": { "type": "string" },
          "transactionFee": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_value"
          },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_client_token": {
        "properties": {
          "clientToken": { "type": "string" },
          "expiresIn": {
            "description": "The lifetime of the access token, in seconds.",
            "type": "integer"
          },
          "expireDateTime": {
            "description": "Calculated expiration date",
            "type": "date"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_common_address": {
        "properties": {
          "line1": { "type": "string" },
          "line2": { "type": "string", "nullable": true },
          "city": { "type": "string" },
          "countryCode": { "type": "string" },
          "postalCode": { "type": "string" },
          "state": { "type": "string", "nullable": true },
          "phone": { "type": "string", "nullable": true }
        },
        "type": "object"
      },
      "swag_paypal_v1_common_amount": {
        "properties": {
          "total": { "type": "string" },
          "currency": { "type": "string" },
          "details": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_details"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_common_details": {
        "properties": {
          "subtotal": { "type": "string" },
          "shipping": { "type": "string" },
          "tax": { "type": "string" },
          "handlingFee": { "type": "string" },
          "shippingDiscount": { "type": "string" },
          "discount": { "type": "string" },
          "insurance": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_common_link": {
        "properties": {
          "href": { "type": "string" },
          "rel": { "type": "string" },
          "method": { "type": "string" },
          "encType": { "type": "string", "nullable": true }
        },
        "type": "object"
      },
      "swag_paypal_v1_common_money": {
        "properties": {
          "value": { "type": "string" },
          "currencyCode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_common_value": {
        "properties": {
          "currency": { "type": "string" },
          "value": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_create_webhooks": {
        "properties": {
          "url": { "type": "string" },
          "eventTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_create_webhooks_event_type"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_create_webhooks_event_type": {
        "properties": { "name": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_disputes": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_item"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_buyer": {
        "properties": { "name": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_item": {
        "properties": {
          "itemId": { "type": "string" },
          "itemDescription": { "type": "string" },
          "itemQuantity": { "type": "string" },
          "partnerTransactionId": { "type": "string" },
          "reason": { "type": "string" },
          "disputeAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "notes": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_product_details": {
        "properties": {
          "productReceived": { "type": "string" },
          "productReceivedTime": { "type": "string" },
          "subReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_sub_reason"
            }
          },
          "purchaseUrl": { "type": "string" },
          "returnDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_return_details"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_return_details": {
        "properties": {
          "returnTime": { "type": "string" },
          "mode": { "type": "string" },
          "receipt": { "type": "boolean" },
          "returnConfirmationNumber": { "type": "string" },
          "returned": { "type": "boolean" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_seller": {
        "properties": {
          "email": { "type": "string" },
          "merchantId": { "type": "string" },
          "name": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_service_details": {
        "properties": {
          "description": { "type": "string" },
          "serviceStarted": { "type": "string" },
          "note": { "type": "string" },
          "subReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_sub_reason"
            }
          },
          "purchaseUrl": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_sub_reason": {
        "properties": { "subReason": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_disputes_common_transaction": {
        "properties": {
          "buyerTransactionId": { "type": "string" },
          "sellerTransactionId": { "type": "string" },
          "referenceId": { "type": "string" },
          "createTime": { "type": "string" },
          "transactionStatus": { "type": "string" },
          "grossAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "invoiceNumber": { "type": "string" },
          "custom": { "type": "string" },
          "buyer": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_buyer"
          },
          "seller": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_seller"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_item"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_item": {
        "properties": {
          "disputeId": { "type": "string" },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "disputedTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_disputed_transaction"
            },
            "nullable": true
          },
          "reason": { "type": "string" },
          "status": { "type": "string" },
          "disputeState": { "type": "string", "nullable": true },
          "disputeAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "externalReasonCode": { "type": "string", "nullable": true },
          "disputeOutcome": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_dispute_outcome"
          },
          "adjudications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_adjudication"
            }
          },
          "moneyMovements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_money_movement"
            }
          },
          "disputeLifeCycleStage": { "type": "string" },
          "disputeChannel": { "type": "string", "nullable": true },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_message"
            },
            "nullable": true
          },
          "extensions": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions"
          },
          "evidences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_evidence"
            },
            "nullable": true
          },
          "buyerResponseDueDate": { "type": "string", "nullable": true },
          "sellerResponseDueDate": { "type": "string", "nullable": true },
          "offer": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_offer"
          },
          "refundDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_refund_details"
          },
          "communicationDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_communication_details"
          },
          "partnerActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_partner_action"
            },
            "nullable": true
          },
          "supportingInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_supporting_info"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_adjudication": {
        "properties": {
          "type": { "type": "string" },
          "adjudicationTime": { "type": "string" },
          "reason": { "type": "string" },
          "disputeLifeCycleStage": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_communication_details": {
        "properties": {
          "email": { "type": "string" },
          "note": { "type": "string" },
          "timePosted": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_dispute_outcome": {
        "properties": {
          "outcomeCode": { "type": "string" },
          "amountRefunded": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_disputed_transaction": {
        "allOf": [
          {
            "properties": { "sellerProtectionEligible": { "type": "boolean" } }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_transaction"
          }
        ]
      },
      "swag_paypal_v1_disputes_evidence": {
        "properties": {
          "evidenceType": { "type": "string" },
          "evidenceInfo": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_evidence_info"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_evidence_document"
            }
          },
          "notes": { "type": "string" },
          "itemId": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_evidence_document": {
        "properties": { "name": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_disputes_evidence_info": {
        "properties": {
          "trackingInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_evidence_tracking_info"
            }
          },
          "refundIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_evidence_refund_id"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_evidence_refund_id": {
        "properties": { "refundId": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_disputes_evidence_tracking_info": {
        "properties": {
          "carrierName": { "type": "string" },
          "carrierNameOther": { "type": "string" },
          "trackingUrl": { "type": "string" },
          "trackingNumber": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions": {
        "properties": {
          "merchantContacted": { "type": "boolean" },
          "merchantContactedOutcome": { "type": "string" },
          "merchantContactedTime": { "type": "string" },
          "merchantContactedMode": { "type": "string" },
          "buyerContactedTime": { "type": "string" },
          "buyerContactedChannel": { "type": "string" },
          "billingDisputeProperties": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_billing_dispute_properties"
          },
          "merchandizeDisputeProperties": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_merchandize_dispute_properties"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_billing_dispute_properties": {
        "properties": {
          "duplicateTransaction": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_duplicate_transaction"
          },
          "incorrectTransactionAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_incorrect_transaction_amount"
          },
          "paymentByOtherMeans": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_payment_by_other_means"
          },
          "creditNotProcessed": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_cretid_not_processed"
          },
          "canceledRecurringBilling": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_canceled_recurring_billing"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_canceled_recurring_billing": {
        "properties": {
          "expectedRefund": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "cancellationDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_cancellation_details"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_cancellation_details": {
        "properties": {
          "cancellationDate": { "type": "string" },
          "cancellationNumber": { "type": "string" },
          "cancelled": { "type": "boolean" },
          "cancellationMode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_cretid_not_processed": {
        "properties": {
          "issueType": { "type": "string" },
          "expectedRefund": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "cancellationDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_cancellation_details"
          },
          "productDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_product_details"
          },
          "serviceDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_service_details"
          },
          "agreedRefundDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_extensions_aggred_refund_details"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_aggred_refund_details": {
        "properties": {
          "merchantAgreedRefund": { "type": "boolean" },
          "merchantAgreedRefundTime": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_duplicate_transaction": {
        "properties": {
          "receivedDuplicate": { "type": "boolean" },
          "originalTransaction": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_transaction"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_incorrect_transaction_amount": {
        "properties": {
          "correctTransactionAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "correctTransactionTime": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_payment_by_other_means": {
        "properties": {
          "chargeDifferentFromOriginal": { "type": "boolean" },
          "receivedDuplicate": { "type": "boolean" },
          "paymentMethod": { "type": "string" },
          "paymentInstrumentSuffix": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_extensions_merchandize_dispute_properties": {
        "properties": {
          "issueType": { "type": "string" },
          "productDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_product_details"
          },
          "serviceDetails": {
            "$ref": "#/components/schemas/swag_paypal_v1_disputes_common_service_details"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_message": {
        "properties": {
          "postedBy": { "type": "string" },
          "timePosted": { "type": "string" },
          "content": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_money_movement": {
        "properties": {
          "affectedParty": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "initiatedTime": { "type": "string" },
          "type": { "type": "string" },
          "reason": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_offer": {
        "properties": {
          "buyerRequestedAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "sellerOfferedAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "offerType": { "type": "string" },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_disputes_offer_history"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_offer_history": {
        "properties": {
          "offerTime": { "type": "string" },
          "actor": { "type": "string" },
          "eventType": { "type": "string" },
          "offerType": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_partner_action": {
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "dueTime": { "type": "string" },
          "status": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_refund_details": {
        "properties": {
          "allowedRefundAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_disputes_supporting_info": {
        "properties": {
          "notes": { "type": "string" },
          "source": { "type": "string" },
          "providedTime": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_do_void": {
        "properties": {
          "id": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_amount"
          },
          "state": { "type": "string" },
          "parentPayment": { "type": "string" },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_merchant_integrations": {
        "properties": {
          "merchantId": { "type": "string" },
          "trackingId": { "type": "string" },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_merchant_integrations_product"
            }
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_merchant_integrations_capability"
            }
          },
          "oauthIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_merchant_integrations_oauth_integration"
            }
          },
          "grantedPermissions": {
            "type": "array",
            "items": { "type": "string" }
          },
          "paymentsReceivable": { "type": "boolean" },
          "legalName": { "type": "string" },
          "primaryEmail": { "type": "string" },
          "primaryEmailConfirmed": { "type": "boolean" }
        },
        "type": "object"
      },
      "swag_paypal_v1_merchant_integrations_capability": {
        "properties": {
          "name": { "type": "string" },
          "status": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_merchant_integrations_oauth_integration": {
        "properties": {
          "integrationMethod": { "type": "string" },
          "integrationType": { "type": "string" },
          "status": { "type": "string" },
          "oauthThirdParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_merchant_integrations_oauth_integration_third_party"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_merchant_integrations_oauth_integration_third_party": {
        "properties": {
          "accessToken": { "type": "string" },
          "merchantClientId": { "type": "string" },
          "partnerClientId": { "type": "string" },
          "refreshToken": { "type": "string" },
          "scopes": { "type": "array", "items": { "type": "string" } }
        },
        "type": "object"
      },
      "swag_paypal_v1_merchant_integrations_product": {
        "properties": {
          "name": { "type": "string" },
          "vettingStatus": { "type": "string" },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_merchant_integrations_capability"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_merchant_status": {
        "properties": {
          "paymentsReceivable": { "type": "boolean" },
          "primaryEmail": { "type": "string" },
          "primaryEmailConfirmed": { "type": "boolean" }
        },
        "type": "object"
      },
      "swag_paypal_v1_oauth_credentials": {
        "properties": {
          "restId": { "type": "string" },
          "restSecret": { "type": "string" },
          "url": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_patch": {
        "properties": {
          "op": { "type": "string" },
          "path": { "type": "string" },
          "value": { "oneOf": [{ "type": "string" }, { "type": "array" }] }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment": {
        "properties": {
          "id": { "type": "string" },
          "intent": { "type": "string", "default": "sale" },
          "state": { "type": "string" },
          "cart": { "type": "string" },
          "payer": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_payer"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction"
            }
          },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          },
          "redirectUrls": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_redirect_urls"
          },
          "applicationContext": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_application_context"
          },
          "paymentInstruction": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_payment_instruction"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_application_context": {
        "properties": {
          "brandName": { "type": "string" },
          "locale": { "type": "string" },
          "landingPage": { "type": "string" },
          "shippingPreference": {
            "type": "string",
            "default": "SET_PROVIDED_ADDRESS"
          },
          "userAction": { "type": "string", "default": "commit" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_payer": {
        "properties": {
          "paymentMethod": { "type": "string" },
          "status": { "type": "string" },
          "payerInfo": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_payer_info"
          },
          "externalSelectedFundingInstrumentType": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_execute_payer_info": {
        "properties": { "payerId": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_payment_payer_info": {
        "allOf": [
          {
            "properties": {
              "email": { "type": "string" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "billingAddress": {
                "$ref": "#/components/schemas/swag_paypal_v1_common_address"
              },
              "shippingAddress": {
                "$ref": "#/components/schemas/swag_paypal_v1_payment_payer_info_shipping_address"
              },
              "phone": { "type": "string" },
              "countryCode": { "type": "string" }
            }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_execute_payer_info"
          }
        ]
      },
      "swag_paypal_v1_payment_payer_info_shipping_address": {
        "allOf": [
          { "properties": { "recipientName": { "type": "string" } } },
          { "$ref": "#/components/schemas/swag_paypal_v1_common_address" }
        ]
      },
      "swag_paypal_v1_payment_payment_instruction": {
        "properties": {
          "referenceNumber": { "type": "string" },
          "recipientBankingInstruction": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_recipient_banking_instruction"
          },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_value"
          },
          "paymentDueDate": { "type": "string" },
          "instructionType": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_recipient_banking_instruction": {
        "properties": {
          "bankName": { "type": "string" },
          "accountHolderName": { "type": "string" },
          "internationalBankAccountNumber": { "type": "string" },
          "bankIdentifierCode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_redirect_urls": {
        "properties": {
          "returnUrl": { "type": "string" },
          "cancelUrl": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction": {
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_amount"
          },
          "payee": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_payee"
          },
          "itemList": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_item_list"
          },
          "relatedResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_related_resource"
            }
          },
          "invoiceNumber": { "type": "string", "nullable": true },
          "softDescriptor": { "type": "string" },
          "description": { "type": "string" },
          "custom": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction_item_list": {
        "properties": {
          "shippingAddress": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_shipping_address"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_item"
            }
          },
          "shippingOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_shipping_option"
            }
          },
          "shippingPhoneNumber": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction_item": {
        "properties": {
          "name": { "type": "string" },
          "currency": { "type": "string" },
          "price": { "type": "string" },
          "quantity": { "type": "integer" },
          "sku": { "type": "string", "nullable": true },
          "tax": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction_shipping_address": {
        "allOf": [
          { "properties": { "recipientName": { "type": "string" } } },
          { "$ref": "#/components/schemas/swag_paypal_v1_common_address" }
        ]
      },
      "swag_paypal_v1_payment_transaction_shipping_option": [],
      "swag_paypal_v1_payment_transaction_payee": {
        "properties": {
          "merchantId": { "type": "string" },
          "email": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction_related_resource": {
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_sale"
          },
          "authorization": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_authorization"
          },
          "order": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_order"
          },
          "refund": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_refund"
          },
          "capture": {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_capture"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction_authorization": {
        "allOf": [
          {
            "properties": {
              "reasonCode": { "type": "string" },
              "validUntil": { "type": "string" }
            }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_abstract_related_resource"
          }
        ]
      },
      "swag_paypal_v1_payment_transaction_capture": {
        "allOf": [
          {
            "properties": {
              "custom": { "type": "string" },
              "transactionFee": {
                "$ref": "#/components/schemas/swag_paypal_v1_common_value"
              },
              "invoiceNumber": { "type": "string" }
            }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_abstract_related_resource"
          }
        ]
      },
      "swag_paypal_v1_payment_transaction_order": {
        "allOf": [
          { "properties": { "reasonCode": { "type": "string" } } },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_abstract_related_resource"
          }
        ]
      },
      "swag_paypal_v1_payment_transaction_refund": {
        "allOf": [
          {
            "properties": {
              "saleId": { "type": "string" },
              "captureId": { "type": "string" }
            }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_abstract_related_resource"
          }
        ]
      },
      "swag_paypal_v1_payment_transaction_abstract_related_resource": {
        "properties": {
          "id": { "type": "string" },
          "state": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_amount"
          },
          "paymentMode": { "type": "string" },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "protectionEligibility": { "type": "string" },
          "protectionEligibilityType": { "type": "string" },
          "receiptId": { "type": "string" },
          "parentPayment": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_payment_transaction_sale": {
        "allOf": [
          {
            "properties": {
              "transactionFee": {
                "$ref": "#/components/schemas/swag_paypal_v1_common_value"
              }
            }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v1_payment_transaction_abstract_related_resource"
          }
        ]
      },
      "swag_paypal_v1_plan": {
        "properties": {
          "productId": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string", "nullable": true },
          "status": { "type": "string" },
          "billingCycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_plan_billing_cycle"
            }
          },
          "paymentPreferences": {
            "$ref": "#/components/schemas/swag_paypal_v1_plan_payment_preferences"
          },
          "taxes": { "$ref": "#/components/schemas/swag_paypal_v1_plan_taxes" }
        },
        "type": "object"
      },
      "swag_paypal_v1_plan_billing_cycle": {
        "properties": {
          "frequency": {
            "$ref": "#/components/schemas/swag_paypal_v1_plan_frequency"
          },
          "tenureType": { "type": "string" },
          "sequence": { "type": "integer" },
          "pricingScheme": {
            "$ref": "#/components/schemas/swag_paypal_v1_plan_pricing_scheme"
          },
          "totalCycles": { "type": "integer" }
        },
        "type": "object"
      },
      "swag_paypal_v1_plan_frequency": {
        "properties": {
          "intervalUnit": { "type": "string" },
          "intervalCount": { "type": "integer" }
        },
        "type": "object"
      },
      "swag_paypal_v1_plan_pricing_scheme": {
        "properties": {
          "fixedPrice": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_plan_payment_preferences": {
        "properties": {
          "autoBillOutstanding": { "type": "boolean" },
          "paymentFailureThreshold": { "type": "integer" }
        },
        "type": "object"
      },
      "swag_paypal_v1_plan_taxes": {
        "properties": {
          "percentage": { "type": "string" },
          "inclusive": { "type": "boolean" }
        },
        "type": "object"
      },
      "swag_paypal_v1_product": {
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "type": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_refund": {
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_amount"
          },
          "invoiceNumber": { "type": "string" },
          "description": { "type": "string" },
          "reason": { "type": "string" },
          "id": { "type": "string" },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "state": { "type": "string" },
          "refundFromTransactionFee": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_value"
          },
          "totalRefundedAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_value"
          },
          "refundFromReceivedAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_value"
          },
          "saleId": { "type": "string" },
          "captureId": { "type": "string" },
          "parentPayment": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_shipping_batch": {
        "properties": {
          "trackers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_shipping_tracker": {
        "properties": {
          "transactionId": { "type": "string" },
          "trackingNumber": { "type": "string" },
          "status": { "type": "string" },
          "carrier": { "type": "string" },
          "notifyBuyer": { "type": "boolean" },
          "shipmentDate": {
            "description": "Pattern: '2022-08-15'",
            "type": "string"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription": {
        "properties": {
          "id": { "type": "string" },
          "planId": { "type": "string" },
          "startTime": { "type": "string" },
          "quantity": { "type": "string" },
          "shippingAmount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "subscriber": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_subscriber"
          },
          "billingInfo": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_billing_info"
          },
          "applicationContext": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_application_context"
          },
          "status": { "type": "string" },
          "statusUpdateTime": { "type": "string" },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_application_context": {
        "properties": {
          "userAction": { "type": "string", "default": "SUBSCRIBE_NOW" },
          "brandName": { "type": "string" },
          "locale": { "type": "string" },
          "shippingPreference": {
            "type": "string",
            "default": "SET_PROVIDED_ADDRESS"
          },
          "returnUrl": { "type": "string" },
          "cancelUrl": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_billing_info": {
        "properties": {
          "outstandingBalance": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "cycleExecutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_subscription_cycle_execution"
            }
          },
          "lastPayment": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_last_payment"
          },
          "nextBillingTime": { "type": "string", "nullable": true },
          "failedPaymentsCount": { "type": "integer" }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_cycle_execution": {
        "properties": {
          "tenureType": { "type": "string" },
          "sequence": { "type": "integer" },
          "cyclesCompleted": { "type": "integer" },
          "cyclesRemaining": { "type": "integer" },
          "totalCycles": { "type": "integer" }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_last_payment": {
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_money"
          },
          "time": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_subscriber": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_name"
          },
          "emailAddress": { "type": "string" },
          "payerId": { "type": "string" },
          "shippingAddress": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_shipping_address"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_name": {
        "properties": {
          "givenName": { "type": "string" },
          "surname": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_shipping_address": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_shipping_address_name"
          },
          "address": {
            "$ref": "#/components/schemas/swag_paypal_v1_subscription_shipping_address_address"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_shipping_address_address": {
        "properties": {
          "addressLine_1": { "type": "string", "nullable": true },
          "addressLine_2": { "type": "string", "nullable": true },
          "adminArea_1": { "type": "string", "nullable": true },
          "adminArea_2": { "type": "string", "nullable": true },
          "postalCode": { "type": "string", "nullable": true },
          "countryCode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_subscription_shipping_address_name": {
        "properties": { "fullName": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v1_token": {
        "properties": {
          "scope": {
            "description": "Scopes expressed in the form of resource URL endpoints. The value of the scope parameter\nis expressed as a list of space-delimited, case-sensitive strings.",
            "type": "string"
          },
          "nonce": { "type": "string" },
          "accessToken": {
            "description": "The access token issued by PayPal. After the access token\nexpires (see $expiresIn), you must request a new access token.",
            "type": "string"
          },
          "tokenType": {
            "description": "The type of the token issued as described in OAuth2.0 RFC6749,\nSection 7.1. Value is case insensitive.",
            "type": "string"
          },
          "appId": { "type": "string" },
          "expiresIn": {
            "description": "The lifetime of the access token, in seconds.",
            "type": "integer"
          },
          "expireDateTime": {
            "description": "Calculated expiration date",
            "type": "date"
          }
        },
        "type": "object"
      },
      "swag_paypal_v1_webhook": {
        "properties": {
          "id": { "type": "string" },
          "resourceType": { "type": "string" },
          "eventType": { "type": "string" },
          "summary": { "type": "string" },
          "resource": {
            "$ref": "#/components/schemas/swag_paypal_v1_webhook_resource"
          },
          "createTime": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          },
          "eventVersion": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v1_webhook_resource": {
        "properties": {
          "id": { "type": "string" },
          "parentPayment": { "type": "string", "nullable": true },
          "billingAgreementId": { "type": "string", "nullable": true },
          "saleId": { "type": "string", "nullable": true },
          "refundReasonCode": { "type": "string", "nullable": true },
          "updateTime": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_amount"
          },
          "paymentMode": { "type": "string" },
          "createTime": { "type": "string" },
          "clearingTime": { "type": "string" },
          "protectionEligibilityType": { "type": "string" },
          "protectionEligibility": { "type": "string" },
          "transactionFee": {
            "$ref": "#/components/schemas/swag_paypal_v1_common_value"
          },
          "invoiceNumber": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v1_common_link"
            }
          },
          "state": { "type": "string" },
          "merchantId": { "type": "string", "nullable": true }
        },
        "type": "object"
      },
      "swag_paypal_v2_common_address": {
        "properties": {
          "addressLine_1": {
            "description": "The first line of the address. For example, number or street. For example, 173 Drury Lane.\nRequired for data entry and compliance and risk checks. Must contain the full address.",
            "type": "string",
            "nullable": true
          },
          "addressLine_2": {
            "description": "The second line of the address. For example, suite or apartment number.",
            "type": "string",
            "nullable": true
          },
          "adminArea_2": {
            "description": "A city, town, or village. Smaller than $adminArea1",
            "type": "string",
            "nullable": true
          },
          "adminArea_1": {
            "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision.\nFormat for postal delivery. For example, CA and not California.",
            "type": "string",
            "nullable": true
          },
          "postalCode": { "type": "string", "nullable": true },
          "countryCode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_common_link": {
        "properties": {
          "href": { "type": "string" },
          "rel": { "type": "string" },
          "method": { "type": "string" },
          "encType": { "type": "string", "nullable": true }
        },
        "type": "object"
      },
      "swag_paypal_v2_common_money": {
        "properties": {
          "currencyCode": { "type": "string" },
          "value": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_common_name": {
        "properties": {
          "givenName": { "type": "string" },
          "surname": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_common_phone_number": {
        "properties": {
          "nationalNumber": { "type": "string" },
          "countryCode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order": {
        "properties": {
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" },
          "id": { "type": "string" },
          "intent": { "type": "string" },
          "payer": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payer"
          },
          "purchaseUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_order_purchase_unit"
            }
          },
          "applicationContext": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_application_context"
          },
          "paymentSource": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source"
          },
          "status": { "type": "string" },
          "processingInstruction": { "type": "string" },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_application_context": {
        "properties": {
          "brandName": { "type": "string" },
          "landingPage": { "type": "string", "default": "NO_PREFERENCE" },
          "shippingPreference": {
            "type": "string",
            "default": "SET_PROVIDED_ADDRESS"
          },
          "userAction": { "type": "string", "default": "PAY_NOW" },
          "returnUrl": { "type": "string" },
          "cancelUrl": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payer": {
        "properties": {
          "name": { "type": "string" },
          "emailAddress": { "type": "string" },
          "payerId": { "type": "string" },
          "phone": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_phone"
          },
          "address": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_address"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_phone": {
        "properties": {
          "phoneType": { "type": "string" },
          "phoneNumber": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source": {
        "properties": {
          "payUponInvoice": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_pay_upon_invoice"
          },
          "bancontact": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_bancontact"
          },
          "blik": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_blik"
          },
          "boletobancario": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_boletobancario"
          },
          "card": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_card"
          },
          "eps": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_eps"
          },
          "giropay": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_giropay"
          },
          "ideal": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_ideal"
          },
          "multibanco": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_multibanco"
          },
          "myBank": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_mybank"
          },
          "oxxo": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_p24"
          },
          "sofort": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_sofort"
          },
          "trustly": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_trustly"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_common": {
        "properties": {
          "name": { "type": "string" },
          "countryCode": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_bancontact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_blik": {
        "allOf": [
          { "properties": { "email": { "type": "string" } } },
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_boletobancario": {
        "allOf": [
          {
            "properties": {
              "email": { "type": "string" },
              "expiryDate": { "type": "string" },
              "taxInfo": {
                "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_boletobancario_taxinfo"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/swag_paypal_v2_common_address"
              }
            }
          },
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_boletobancario_taxinfo": {
        "properties": {
          "taxId": { "type": "string" },
          "taxIdType": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_card": {
        "properties": {
          "lastDigits": { "type": "string" },
          "brand": { "type": "string" },
          "type": { "type": "string" },
          "authenticationResult": {
            "type": "swag_paypal_v2_order_payment_source_card_authentication_result",
            "nullable": true
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_card_authentication_result": {
        "properties": {
          "liabilityShift": { "type": "string" },
          "threeDSecure": { "type": "string", "nullable": true }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_card_authentication_result_3d_secure": {
        "properties": {
          "enrollmentStatus": { "type": "string" },
          "authenticationStatus": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_eps": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_giropay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_ideal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_multibanco": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_mybank": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_oxxo": {
        "allOf": [
          { "properties": { "email": { "type": "string" } } },
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_p24": {
        "allOf": [
          { "properties": { "email": { "type": "string" } } },
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_pay_upon_invoice": {
        "properties": {
          "name": { "$ref": "#/components/schemas/swag_paypal_v2_common_name" },
          "email": { "type": "string" },
          "birthDate": { "type": "string" },
          "phone": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_phone_number"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_address"
          },
          "paymentReference": { "type": "string" },
          "depositBankDetails": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_pay_upon_invoice_deposit_bank_details"
          },
          "experienceContext": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_pay_upon_invoice_experience_context"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_pay_upon_invoice_deposit_bank_details": {
        "properties": {
          "bic": { "type": "string" },
          "bankName": { "type": "string" },
          "iban": { "type": "string" },
          "accountHolderName": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_pay_upon_invoice_experience_context": {
        "properties": {
          "locale": { "type": "string" },
          "brandName": { "type": "string" },
          "logoUrl": { "type": "string" },
          "customerServiceInstructions": { "type": "array", "items": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment_source_sofort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_payment_source_trustly": {
        "allOf": [
          {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payment_source_common"
          }
        ]
      },
      "swag_paypal_v2_order_purchase_unit": {
        "properties": {
          "referenceId": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_amount"
          },
          "payee": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payee"
          },
          "description": { "type": "string" },
          "customId": { "type": "string", "nullable": true },
          "invoiceId": { "type": "string", "nullable": true },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_order_item"
            },
            "nullable": true
          },
          "shipping": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_shipping"
          },
          "payments": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_payments"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_amount": {
        "allOf": [
          {
            "properties": {
              "breakdown": {
                "$ref": "#/components/schemas/swag_paypal_v2_order_breakdown"
              }
            }
          },
          { "$ref": "#/components/schemas/swag_paypal_v2_common_money" }
        ]
      },
      "swag_paypal_v2_order_breakdown": {
        "properties": {
          "itemTotal": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "shipping": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "handling": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "taxTotal": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "insurance": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "shippingDiscount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "discount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_item": {
        "properties": {
          "name": { "type": "string" },
          "unitAmount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "tax": { "$ref": "#/components/schemas/swag_paypal_v2_common_money" },
          "taxRate": {
            "oneOf": [
              { "type": "integer" },
              { "type": "float" },
              { "type": "string" }
            ]
          },
          "category": { "type": "string" },
          "quantity": { "type": "integer" },
          "sku": { "type": "string", "nullable": true }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payee": {
        "properties": {
          "emailAddress": { "type": "string" },
          "merchantId": { "type": "string" },
          "displayData": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_display_data"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_display_data": {
        "properties": { "brandName": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v2_order_payments": {
        "properties": {
          "authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_order_authorization"
            },
            "nullable": true
          },
          "captures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_order_capture"
            },
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_order_refund"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_authorization": {
        "allOf": [
          {
            "properties": {
              "sellerProtection": {
                "$ref": "#/components/schemas/swag_paypal_v2_order_authorization_seller_protection"
              },
              "expirationTime": { "type": "string" }
            }
          },
          { "$ref": "#/components/schemas/swag_paypal_v2_order_payment" }
        ]
      },
      "swag_paypal_v2_order_authorization_seller_protection": {
        "properties": {
          "status": { "type": "string" },
          "disputeCategories": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_capture": {
        "allOf": [
          {
            "properties": {
              "invoiceId": { "type": "string", "nullable": true },
              "noteToPayer": { "type": "string", "nullable": true },
              "sellerProtection": {
                "$ref": "#/components/schemas/swag_paypal_v2_order_capture_seller_protection"
              },
              "finalCapture": { "type": "boolean" },
              "sellerReceivableBreakdown": {
                "$ref": "#/components/schemas/swag_paypal_v2_order_capture_seller_receivable_breakdown"
              },
              "disbursementMode": { "type": "string" }
            }
          },
          { "$ref": "#/components/schemas/swag_paypal_v2_order_payment" }
        ]
      },
      "swag_paypal_v2_order_capture_seller_protection": {
        "properties": {
          "status": { "type": "string" },
          "disputeCategories": { "type": "array", "items": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_capture_seller_receivable_breakdown": {
        "properties": {
          "grossAmount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "paypalFee": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "netAmount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_payment": {
        "properties": {
          "status": { "type": "string" },
          "id": { "type": "string" },
          "amount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "customId": { "type": "string", "nullable": true },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_common_link"
            }
          },
          "createTime": { "type": "string" },
          "updateTime": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_refund": {
        "allOf": [
          {
            "properties": {
              "invoiceId": { "type": "string", "nullable": true },
              "noteToPayer": { "type": "string", "nullable": true },
              "sellerPayableBreakdown": {
                "$ref": "#/components/schemas/swag_paypal_v2_order_refund_seller_paypable_breakdown"
              }
            }
          },
          { "$ref": "#/components/schemas/swag_paypal_v2_order_payment" }
        ]
      },
      "swag_paypal_v2_order_refund_seller_paypable_breakdown": {
        "properties": {
          "grossAmount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "paypalFee": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "netAmount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          },
          "totalRefundedAmount": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_money"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_shipping": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/swag_paypal_v2_order_shipping_name"
          },
          "address": {
            "$ref": "#/components/schemas/swag_paypal_v2_common_address"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_order_shipping_name": {
        "properties": { "fullName": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v2_patch": {
        "properties": {
          "op": { "type": "string" },
          "path": { "type": "string" },
          "value": {
            "nullable": true,
            "oneOf": [
              { "type": "integer" },
              { "type": "float" },
              { "type": "string" },
              { "type": "boolean" },
              { "type": "array" }
            ]
          },
          "from": { "type": "string" }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral": {
        "properties": {
          "businessEntity": {
            "$ref": "#/components/schemas/swag_paypal_v2_referral_business_entity"
          },
          "preferredLanguageCode": { "type": "string" },
          "trackingId": { "type": "string" },
          "partnerConfigOverride": {
            "$ref": "#/components/schemas/swag_paypal_v2_referral_partner_config_override"
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_referral_operation"
            }
          },
          "products": { "type": "array", "items": { "type": "string" } },
          "capabilities": { "type": "array", "items": { "type": "string" } },
          "legalConsents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_referral_legal_consent"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_common_link"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_business_entity": {
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_referral_address"
            }
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_address": {
        "properties": {
          "countryCode": { "type": "string" },
          "type": { "type": "string", "default": "WORK" }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_legal_consent": {
        "properties": {
          "type": { "type": "string", "default": "SHARE_DATA_CONSENT" },
          "granted": { "type": "boolean" }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_operation": {
        "properties": {
          "operation": { "type": "string", "default": "API_INTEGRATION" },
          "apiIntegrationPreference": {
            "$ref": "#/components/schemas/swag_paypal_v2_referral_api_integration_preference"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_api_integration_preference": {
        "properties": {
          "restApiIntegration": {
            "$ref": "#/components/schemas/swag_paypal_v2_referral_rest_api_integration"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_rest_api_integration": {
        "properties": {
          "integrationMethod": { "type": "string", "default": "PAYPAL" },
          "integrationType": { "type": "string", "default": "THIRD_PARTY" },
          "thirdPartyDetails": {
            "$ref": "#/components/schemas/swag_paypal_v2_referral_third_party_details"
          }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_third_party_details": {
        "properties": {
          "features": { "type": "array", "items": { "type": "string" } }
        },
        "type": "object"
      },
      "swag_paypal_v2_referral_partner_config_override": {
        "properties": { "returnUrl": { "type": "string" } },
        "type": "object"
      },
      "swag_paypal_v2_webhook": {
        "properties": {
          "id": { "type": "string" },
          "createTime": { "type": "string" },
          "resourceType": { "type": "string" },
          "eventType": { "type": "string" },
          "summary": { "type": "string" },
          "resource": { "nullable": true, "oneOf": [{ "type": "string" }] },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/swag_paypal_v2_common_link"
            }
          },
          "eventVersion": { "type": "string" },
          "resourceVersion": { "type": "string" }
        },
        "type": "object"
      },
      "success": {
        "required": ["data"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": {
            "description": "Link members related to the primary data.",
            "allOf": [
              { "$ref": "#/components/schemas/links" },
              { "$ref": "#/components/schemas/pagination" }
            ]
          },
          "data": { "$ref": "#/components/schemas/data" },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "type": "array",
            "items": { "$ref": "#/components/schemas/resource" },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "failure": {
        "required": ["errors"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": { "$ref": "#/components/schemas/links" },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/error" },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "info": {
        "required": ["meta"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": { "$ref": "#/components/schemas/links" },
          "jsonapi": { "$ref": "#/components/schemas/jsonapi" }
        },
        "type": "object"
      },
      "meta": {
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object",
        "additionalProperties": true
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/resource" },
            "uniqueItems": true
          }
        ]
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "required": ["type", "id"],
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string" },
          "attributes": { "$ref": "#/components/schemas/attributes" },
          "relationships": { "$ref": "#/components/schemas/relationships" },
          "links": { "$ref": "#/components/schemas/links" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object"
      },
      "relationshipLinks": {
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "properties": {
          "self": {
            "allOf": [
              {
                "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                "type": "array",
                "items": { "type": "object" }
              },
              { "$ref": "#/components/schemas/link" }
            ]
          },
          "related": { "$ref": "#/components/schemas/link" }
        },
        "type": "object",
        "additionalProperties": true
      },
      "links": {
        "type": "object",
        "additionalProperties": { "$ref": "#/components/schemas/link" }
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [
          {
            "description": "A string containing the link's URL.",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": ["href"],
            "properties": {
              "href": {
                "description": "A string containing the link's URL.",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": { "$ref": "#/components/schemas/meta" }
            }
          }
        ]
      },
      "attributes": {
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object",
        "additionalProperties": true
      },
      "relationships": {
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object",
        "anyOf": [
          { "required": ["data"] },
          { "required": ["meta"] },
          { "required": ["links"] },
          {
            "type": "object",
            "properties": {
              "links": { "$ref": "#/components/schemas/relationshipLinks" },
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [
                  { "$ref": "#/components/schemas/relationshipToOne" },
                  { "$ref": "#/components/schemas/relationshipToMany" }
                ]
              }
            }
          }
        ],
        "additionalProperties": false
      },
      "relationshipToOne": {
        "allOf": [
          {
            "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object."
          },
          { "$ref": "#/components/schemas/linkage" }
        ]
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
        "type": "array",
        "items": { "$ref": "#/components/schemas/linkage" },
        "uniqueItems": true
      },
      "linkage": {
        "description": "The \"type\" and \"id\" to non-empty members.",
        "required": ["type", "id"],
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "pagination": {
        "properties": {
          "first": {
            "description": "The first page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "last": {
            "description": "The last page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "prev": {
            "description": "The previous page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "next": {
            "description": "The next page of data",
            "type": "string",
            "format": "uri-reference"
          }
        },
        "type": "object"
      },
      "jsonapi": {
        "description": "An object describing the server's implementation",
        "properties": {
          "version": { "type": "string" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "error": {
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": { "$ref": "#/components/schemas/links" },
          "status": {
            "type": "string",
            "description": "The HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "type": "string",
            "description": "An application-specific error code, expressed as a string value."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              }
            }
          },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "AclRole": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "App": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppActionButton": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppAdministrationSnippet": {
        "description": "Added since version: 6.4.15.0",
        "required": ["value", "appId", "localeId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "value": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppCmsBlock": {
        "description": "Added since version: 6.4.2.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppFlowAction": {
        "description": "Added since version: 6.4.10.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppPaymentMethod": {
        "description": "Added since version: 6.4.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppScriptCondition": {
        "description": "Added since version: 6.4.10.3",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "AppTemplate": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CategoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "displayNestedProducts",
              "type",
              "productAssignmentType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "displayNestedProducts": { "type": "boolean" },
              "breadcrumb": {
                "type": "array",
                "items": { "additionalProperties": false },
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": { "type": "string", "readOnly": true },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "type": { "type": "string" },
              "productAssignmentType": { "type": "string" },
              "visible": { "type": "boolean" },
              "active": { "type": "boolean" },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "linkType": { "type": "string" },
              "internalLink": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "externalLink": { "type": "string" },
              "linkNewTab": { "type": "boolean" },
              "description": { "type": "string" },
              "metaTitle": { "type": "string" },
              "metaDescription": { "type": "string" },
              "keywords": { "type": "string" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/ff9040d67f6d4118bde68fc62cff023c/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5304b82323cc438da7c930cf09cd7a08"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/ff9040d67f6d4118bde68fc62cff023c/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "806e9d28fe34484e833b933a58863368"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/ff9040d67f6d4118bde68fc62cff023c/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "906b6bfbba0a48c4833f85cc357d8d1d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/ff9040d67f6d4118bde68fc62cff023c/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1a99108241154bc5a5ebbb639fc166b9"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/ff9040d67f6d4118bde68fc62cff023c/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "d02466d9612343fa97945dc419560f8d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Category": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "displayNestedProducts",
          "type",
          "productAssignmentType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "afterCategoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "afterCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "displayNestedProducts": { "type": "boolean" },
          "breadcrumb": {
            "type": "array",
            "items": { "additionalProperties": false },
            "readOnly": true
          },
          "level": { "type": "integer", "format": "int64", "readOnly": true },
          "path": { "type": "string", "readOnly": true },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "type": { "type": "string" },
          "productAssignmentType": { "type": "string" },
          "visible": { "type": "boolean" },
          "active": { "type": "boolean" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "linkType": { "type": "string" },
          "internalLink": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalLink": { "type": "string" },
          "linkNewTab": { "type": "boolean" },
          "description": { "type": "string" },
          "metaTitle": { "type": "string" },
          "metaDescription": { "type": "string" },
          "keywords": { "type": "string" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "parent": { "$ref": "#/components/schemas/Category" },
          "children": { "$ref": "#/components/schemas/Category" },
          "media": { "$ref": "#/components/schemas/Media" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" }
        },
        "type": "object"
      },
      "CmsBlock": {
        "description": "Added since version: 6.0.0.0",
        "required": ["position", "type", "sectionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "name": { "type": "string" },
          "sectionPosition": { "type": "string" },
          "marginTop": { "type": "string" },
          "marginBottom": { "type": "string" },
          "marginLeft": { "type": "string" },
          "marginRight": { "type": "string" },
          "backgroundColor": { "type": "string" },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "backgroundMediaMode": { "type": "string" },
          "cssClass": { "type": "string" },
          "visibility": {
            "properties": {
              "mobile": { "type": "boolean" },
              "desktop": { "type": "boolean" },
              "tablet": { "type": "boolean" }
            },
            "type": "object"
          },
          "sectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "swagCmsExtensionsQuickview": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-block/3d0eb38e0d4a41559d84530a47edf564/swagCmsExtensionsQuickview"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_quickview"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "1a1280b7a2b045b0870ecb46d2065339"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCmsExtensionsBlockRule": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-block/3d0eb38e0d4a41559d84530a47edf564/swagCmsExtensionsBlockRule"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_block_rule"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "b8715d2617a44e1fb19b8c917ac74fea"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "backgroundMedia": { "$ref": "#/components/schemas/Media" },
          "slots": { "$ref": "#/components/schemas/CmsSlot" }
        },
        "type": "object"
      },
      "CmsPage": {
        "description": "Added since version: 6.0.0.0",
        "required": ["type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "entity": { "type": "string" },
          "cssClass": { "type": "string" },
          "config": {
            "properties": { "backgroundColor": { "type": "string" } },
            "type": "object"
          },
          "previewMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagCmsExtensionsScrollNavigationPageSettings": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-page/177e5013eb5a406b8184c2827276a3f9/swagCmsExtensionsScrollNavigationPageSettings"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_scroll_navigation_page_settings"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "3890c59e5d9b465f99f32b758ad4994c"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "sections": { "$ref": "#/components/schemas/CmsSection" },
          "previewMedia": { "$ref": "#/components/schemas/Media" },
          "landingPages": { "$ref": "#/components/schemas/LandingPage" }
        },
        "type": "object"
      },
      "CmsPageActivity": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CmsPageDraft": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CmsSection": {
        "description": "Added since version: 6.0.0.0",
        "required": ["position", "type", "pageId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "name": { "type": "string" },
          "sizingMode": { "type": "string" },
          "mobileBehavior": { "type": "string" },
          "backgroundColor": { "type": "string" },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "backgroundMediaMode": { "type": "string" },
          "cssClass": { "type": "string" },
          "pageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "visibility": {
            "properties": {
              "mobile": { "type": "boolean" },
              "desktop": { "type": "boolean" },
              "tablet": { "type": "boolean" }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "swagCmsExtensionsScrollNavigation": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-section/32f37a73e0304d6fbb9444e169fa9dca/swagCmsExtensionsScrollNavigation"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_scroll_navigation"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "795cfecd53ad472785a91cf0bb097231"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "page": { "$ref": "#/components/schemas/CmsPage" },
          "backgroundMedia": { "$ref": "#/components/schemas/Media" },
          "blocks": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "CmsSlot": {
        "description": "Added since version: 6.0.0.0",
        "required": ["type", "slot", "blockId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "type": { "type": "string" },
          "slot": { "type": "string" },
          "locked": { "type": "boolean" },
          "config": { "type": "object" },
          "customFields": { "type": "object" },
          "data": { "type": "object", "readOnly": true },
          "blockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "block": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "CountryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name", "addressFormat"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "iso": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "shippingAvailable": { "type": "boolean" },
              "iso3": { "type": "string" },
              "displayStateInRegistration": { "type": "boolean" },
              "forceStateInRegistration": { "type": "boolean" },
              "companyTaxFree": { "type": "boolean", "deprecated": true },
              "checkVatIdPattern": { "type": "boolean" },
              "vatIdRequired": { "type": "boolean" },
              "taxFree": { "type": "boolean", "deprecated": true },
              "vatIdPattern": { "type": "string" },
              "customFields": { "type": "object" },
              "customerTax": {
                "required": ["enabled", "currencyId", "amount"],
                "properties": {
                  "enabled": { "type": "boolean" },
                  "currencyId": { "type": "string" },
                  "amount": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "companyTax": {
                "required": ["enabled", "currencyId", "amount"],
                "properties": {
                  "enabled": { "type": "boolean" },
                  "currencyId": { "type": "string" },
                  "amount": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "postalCodeRequired": { "type": "boolean" },
              "checkPostalCodePattern": { "type": "boolean" },
              "checkAdvancedPostalCodePattern": { "type": "boolean" },
              "advancedPostalCodePattern": { "type": "string" },
              "addressFormat": { "type": "object" },
              "defaultPostalCodePattern": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/fe404cbdce6344048a347ac92a138a46/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "country_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "2216c25075f0481a94e2d853569dc2a6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Country": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name", "addressFormat"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "iso": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "shippingAvailable": { "type": "boolean" },
          "iso3": { "type": "string" },
          "displayStateInRegistration": { "type": "boolean" },
          "forceStateInRegistration": { "type": "boolean" },
          "companyTaxFree": { "type": "boolean", "deprecated": true },
          "checkVatIdPattern": { "type": "boolean" },
          "vatIdRequired": { "type": "boolean" },
          "taxFree": { "type": "boolean", "deprecated": true },
          "vatIdPattern": { "type": "string" },
          "customFields": { "type": "object" },
          "customerTax": {
            "required": ["enabled", "currencyId", "amount"],
            "properties": {
              "enabled": { "type": "boolean" },
              "currencyId": { "type": "string" },
              "amount": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "companyTax": {
            "required": ["enabled", "currencyId", "amount"],
            "properties": {
              "enabled": { "type": "boolean" },
              "currencyId": { "type": "string" },
              "amount": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "postalCodeRequired": { "type": "boolean" },
          "checkPostalCodePattern": { "type": "boolean" },
          "checkAdvancedPostalCodePattern": { "type": "boolean" },
          "advancedPostalCodePattern": { "type": "string" },
          "addressFormat": { "type": "object" },
          "defaultPostalCodePattern": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "states": { "$ref": "#/components/schemas/CountryState" }
        },
        "type": "object"
      },
      "CountryStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["countryId", "shortCode", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "shortCode": { "type": "string" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "CountryState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["countryId", "shortCode", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shortCode": { "type": "string" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "CurrencyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "factor",
              "symbol",
              "isoCode",
              "itemRounding",
              "totalRounding",
              "createdAt",
              "shortName",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "factor": { "type": "number", "format": "float" },
              "symbol": { "type": "string" },
              "isoCode": { "type": "string" },
              "shortName": { "type": "string" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "customFields": { "type": "object" },
              "itemRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "taxFreeFrom": { "type": "number", "format": "float" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "Currency": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "factor",
          "symbol",
          "isoCode",
          "itemRounding",
          "totalRounding",
          "createdAt",
          "shortName",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "factor": { "type": "number", "format": "float" },
          "symbol": { "type": "string" },
          "isoCode": { "type": "string" },
          "shortName": { "type": "string" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "isSystemDefault": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "customFields": { "type": "object" },
          "itemRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "taxFreeFrom": { "type": "number", "format": "float" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "CurrencyCountryRounding": {
        "description": "Added since version: 6.4.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomEntity": {
        "description": "Added since version: 6.4.9.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomField": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldSet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldSetRelation": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomPrice": {
        "description": "Added since version: ",
        "required": ["productId", "price", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerGroup": { "$ref": "#/components/schemas/CustomerGroup" },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "Customer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "groupId",
          "defaultPaymentMethodId",
          "salesChannelId",
          "languageId",
          "defaultBillingAddressId",
          "defaultShippingAddressId",
          "customerNumber",
          "firstName",
          "lastName",
          "email",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "defaultPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "lastPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "defaultBillingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "defaultShippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "customerNumber": { "type": "string" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "email": { "type": "string" },
          "title": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "affiliateCode": { "type": "string" },
          "campaignCode": { "type": "string" },
          "active": { "type": "boolean" },
          "doubleOptInRegistration": { "type": "boolean" },
          "doubleOptInEmailSentDate": {
            "type": "string",
            "format": "date-time"
          },
          "doubleOptInConfirmDate": { "type": "string", "format": "date-time" },
          "hash": { "type": "string" },
          "guest": { "type": "boolean" },
          "firstLogin": { "type": "string", "format": "date-time" },
          "lastLogin": { "type": "string", "format": "date-time" },
          "newsletter": { "type": "boolean" },
          "birthday": { "type": "string" },
          "lastOrderDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "orderTotalAmount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "tagIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "group": { "$ref": "#/components/schemas/CustomerGroup" },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "lastPaymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "defaultBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" },
          "addresses": { "$ref": "#/components/schemas/CustomerAddress" }
        },
        "type": "object"
      },
      "CustomerAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customerId",
          "countryId",
          "firstName",
          "lastName",
          "city",
          "street",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "street": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "CustomerGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "displayGross": { "type": "boolean" },
          "customFields": { "type": "object" },
          "registrationActive": { "type": "boolean" },
          "registrationTitle": { "type": "string" },
          "registrationIntroduction": { "type": "string" },
          "registrationOnlyCompanyRegistration": { "type": "boolean" },
          "registrationSeoMetaDescription": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "CustomerRecovery": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomerTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["customerId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "CustomerWishlist": {
        "description": "Added since version: 6.3.4.0",
        "required": ["customerId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomerWishlistProduct": {
        "description": "Added since version: 6.3.4.0",
        "required": ["productId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DeadMessage": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DeliveryTime": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "min", "max", "unit", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "min": { "type": "integer", "format": "int64" },
          "max": { "type": "integer", "format": "int64" },
          "unit": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Document": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentTypeId",
          "fileType",
          "orderId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fileType": { "type": "string" },
          "referencedDocumentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentMediaFileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "config": { "type": "object" },
          "sent": { "type": "boolean" },
          "static": { "type": "boolean" },
          "deepLinkCode": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": { "$ref": "#/components/schemas/DocumentType" },
          "order": { "$ref": "#/components/schemas/Order" },
          "referencedDocument": { "$ref": "#/components/schemas/Document" },
          "dependentDocuments": { "$ref": "#/components/schemas/Document" },
          "documentMediaFile": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "DocumentBaseConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": ["documentTypeId", "name", "global", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "logoId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "filenamePrefix": { "type": "string" },
          "filenameSuffix": { "type": "string" },
          "global": { "type": "boolean" },
          "documentNumber": { "type": "string" },
          "config": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "logo": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "DocumentBaseConfigSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["documentBaseConfigId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentBaseConfigId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DocumentType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "technicalName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "EventAction": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Flow": {
        "description": "Added since version: 6.4.6.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FlowSequence": {
        "description": "Added since version: 6.4.6.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FlowTemplate": {
        "description": "Added since version: 6.4.18.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportFile": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportLog": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportProfile": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Integration": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "LandingPageJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name", "url"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "active": { "type": "boolean" },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "slotConfig": { "type": "object" },
              "metaTitle": { "type": "string" },
              "metaDescription": { "type": "string" },
              "keywords": { "type": "string" },
              "url": { "type": "string" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/ac71e090e7714ea0b3d90f8f3b95eeeb/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1fe2d22d23b644ac9efdbb9fd5a1ec12"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/ac71e090e7714ea0b3d90f8f3b95eeeb/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "d8315e8c040648268f5e34d82bbfa2e3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "LandingPage": {
        "description": "Added since version: 6.4.0.0",
        "required": ["createdAt", "name", "url"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "slotConfig": { "type": "object" },
          "metaTitle": { "type": "string" },
          "metaDescription": { "type": "string" },
          "keywords": { "type": "string" },
          "url": { "type": "string" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" }
        },
        "type": "object"
      },
      "LanguageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["localeId", "name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "translationCodeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/7e0e3b9ee3f74dff8e39f308175948df/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "b798024a87e241548adaf07a7c2a53bb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/7e0e3b9ee3f74dff8e39f308175948df/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fbe095c1567b4519a09c47b92b3a7a48"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "translationCode": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/7e0e3b9ee3f74dff8e39f308175948df/translationCode"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6a431fcbb536435ba3e1006eb4bdbdf0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/7e0e3b9ee3f74dff8e39f308175948df/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "language" },
                            "id": {
                              "type": "string",
                              "example": "303df159831345a8b24b29156157c409"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Language": {
        "description": "Added since version: 6.0.0.0",
        "required": ["localeId", "name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "translationCodeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": { "$ref": "#/components/schemas/Language" },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "translationCode": { "$ref": "#/components/schemas/Locale" },
          "children": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "Locale": {
        "description": "Added since version: 6.0.0.0",
        "required": ["code", "createdAt", "name", "territory"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "code": { "type": "string" },
          "name": { "type": "string" },
          "territory": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "LogEntry": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MailHeaderFooter": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "systemDefault": { "type": "boolean" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "headerHtml": { "type": "string" },
          "headerPlain": { "type": "string" },
          "footerHtml": { "type": "string" },
          "footerPlain": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "MailTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "subject", "contentHtml", "contentPlain"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "systemDefault": { "type": "boolean" },
          "senderName": { "type": "string" },
          "contentHtml": { "type": "string" },
          "contentPlain": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "mailTemplateType": {
            "$ref": "#/components/schemas/MailTemplateType"
          },
          "media": { "$ref": "#/components/schemas/MailTemplateMedia" }
        },
        "type": "object"
      },
      "MailTemplateMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mailTemplateId", "languageId", "mediaId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mailTemplateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "MailTemplateType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "technicalName": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "MainCategoryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "productId",
              "categoryId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "categoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "MainCategory": {
        "description": "Added since version: 6.1.0.0",
        "required": ["productId", "categoryId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Media": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mimeType": { "type": "string", "readOnly": true },
          "fileExtension": { "type": "string", "readOnly": true },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fileName": { "type": "string", "readOnly": true },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "metaData": { "type": "object", "readOnly": true },
          "alt": { "type": "string" },
          "title": { "type": "string" },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "hasFile": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "private": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "thumbnails": { "$ref": "#/components/schemas/MediaThumbnail" }
        },
        "type": "object"
      },
      "MediaDefaultFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaFolderConfiguration": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mediaId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "media": { "$ref": "#/components/schemas/Media" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "MediaThumbnail": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mediaId", "width", "height", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "width": { "type": "integer", "format": "int64", "readOnly": true },
          "height": { "type": "integer", "format": "int64", "readOnly": true },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": ["width", "height", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "width": { "type": "integer", "format": "int64" },
          "height": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MessageQueueStats": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NewsletterRecipientJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "NewsletterRecipient": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "Added since version: 6.4.7.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRange": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "NumberRangeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRangeState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRangeType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "typeName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Order": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "billingAddressId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "orderDateTime",
          "currencyFactor",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderNumber": { "type": "string" },
          "billingAddressId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "billingAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDateTime": { "type": "string", "format": "date-time" },
          "orderDate": { "type": "string", "readOnly": true },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "positionPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "taxStatus": { "type": "string", "readOnly": true },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shippingTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "currencyFactor": { "type": "number", "format": "float" },
          "deepLinkCode": { "type": "string" },
          "affiliateCode": { "type": "string" },
          "campaignCode": { "type": "string" },
          "customerComment": { "type": "string" },
          "customFields": { "type": "object" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orderCustomer": { "$ref": "#/components/schemas/OrderCustomer" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "language": { "$ref": "#/components/schemas/Language" },
          "addresses": { "$ref": "#/components/schemas/OrderAddress" },
          "billingAddress": { "$ref": "#/components/schemas/OrderAddress" },
          "deliveries": { "$ref": "#/components/schemas/OrderDelivery" },
          "lineItems": { "$ref": "#/components/schemas/OrderLineItem" },
          "transactions": { "$ref": "#/components/schemas/OrderTransaction" },
          "documents": { "$ref": "#/components/schemas/Document" },
          "tags": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "OrderAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "countryId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "street": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "vatId": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "OrderCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "email",
          "salutationId",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "email": { "type": "string" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "title": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "customerNumber": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "OrderDelivery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "shippingOrderAddressId",
          "shippingMethodId",
          "stateId",
          "trackingCodes",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingOrderAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingOrderAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "trackingCodes": { "type": "array", "items": { "type": "string" } },
          "shippingDateEarliest": { "type": "string", "format": "date-time" },
          "shippingDateLatest": { "type": "string", "format": "date-time" },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "shippingOrderAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "positions": { "$ref": "#/components/schemas/OrderDeliveryPosition" }
        },
        "type": "object"
      },
      "OrderDeliveryPosition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["orderDeliveryId", "orderLineItemId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDeliveryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDeliveryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "quantity": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderLineItem": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "identifier",
          "quantity",
          "label",
          "position",
          "states",
          "children",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "identifier": { "type": "string" },
          "referencedId": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "label": { "type": "string" },
          "payload": { "type": "object" },
          "good": { "type": "boolean" },
          "removable": { "type": "boolean" },
          "stackable": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "states": { "type": "array", "items": { "type": "string" } },
          "priceDefinition": { "type": "object" },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "description": { "type": "string" },
          "type": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cover": { "$ref": "#/components/schemas/Media" },
          "orderDeliveryPositions": {
            "$ref": "#/components/schemas/OrderDeliveryPosition"
          },
          "downloads": { "$ref": "#/components/schemas/OrderLineItemDownload" },
          "parent": { "$ref": "#/components/schemas/OrderLineItem" },
          "children": { "$ref": "#/components/schemas/OrderLineItem" }
        },
        "type": "object"
      },
      "OrderLineItemDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "orderLineItemId",
          "mediaId",
          "position",
          "accessGranted",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "accessGranted": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "OrderProductWarehouse": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["orderId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "order": { "$ref": "#/components/schemas/Order" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "OrderTransaction": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "paymentMethodId",
          "amount",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "captures": { "$ref": "#/components/schemas/OrderTransactionCapture" }
        },
        "type": "object"
      },
      "OrderTransactionCapture": {
        "description": "Added since version: 6.4.12.0",
        "required": ["orderTransactionId", "stateId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderTransactionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderTransactionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalReference": { "type": "string" },
          "totalAmount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "number",
            "format": "float"
          },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transaction": { "$ref": "#/components/schemas/OrderTransaction" },
          "refunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefund": {
        "description": "Added since version: 6.4.12.0",
        "required": ["captureId", "stateId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "captureId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalReference": { "type": "string" },
          "reason": { "type": "string" },
          "totalAmount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "number",
            "format": "float"
          },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transactionCapture": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "positions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundPosition": {
        "description": "Added since version: 6.4.12.0",
        "required": ["refundId", "orderLineItemId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "refundId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "externalReference": { "type": "string" },
          "reason": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "refundPrice": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "number",
            "format": "float"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" },
          "orderTransactionCaptureRefund": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          }
        },
        "type": "object"
      },
      "OrderWarehouseGroup": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PaymentMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "distinguishableName": { "type": "string", "readOnly": true },
              "description": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "afterOrderEnabled": { "type": "boolean" },
              "customFields": { "type": "object" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "synchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "asynchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "prepared": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "refundable": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/f7127fe35d1641669070452975c6e3b9/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "1de2ec7ef7c445b682bd53c8e1932e0c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "PaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "distinguishableName": { "type": "string", "readOnly": true },
          "description": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "afterOrderEnabled": { "type": "boolean" },
          "customFields": { "type": "object" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "synchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "asynchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "prepared": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "refundable": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "Plugin": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "taxId",
              "productNumber",
              "stock",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "manufacturerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productManufacturerVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "unitId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productMediaVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "canonicalProductId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productNumber": { "type": "string" },
              "stock": { "type": "integer", "format": "int64" },
              "restockTime": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "availableStock": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "available": { "type": "boolean", "readOnly": true },
              "isCloseout": { "type": "boolean" },
              "displayGroup": { "type": "string", "readOnly": true },
              "mainVariantId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "deprecated": true
              },
              "manufacturerNumber": { "type": "string" },
              "ean": { "type": "string" },
              "purchaseSteps": { "type": "integer", "format": "int64" },
              "maxPurchase": { "type": "integer", "format": "int64" },
              "minPurchase": { "type": "integer", "format": "int64" },
              "purchaseUnit": { "type": "number", "format": "float" },
              "referenceUnit": { "type": "number", "format": "float" },
              "shippingFree": { "type": "boolean" },
              "markAsTopseller": { "type": "boolean" },
              "weight": { "type": "number", "format": "float" },
              "width": { "type": "number", "format": "float" },
              "height": { "type": "number", "format": "float" },
              "length": { "type": "number", "format": "float" },
              "releaseDate": { "type": "string", "format": "date-time" },
              "ratingAverage": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "categoryTree": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "propertyIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "optionIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "streamIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "categoryIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "sales": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "states": {
                "type": "array",
                "items": { "type": "string" },
                "readOnly": true
              },
              "metaDescription": { "type": "string" },
              "name": { "type": "string" },
              "keywords": { "type": "string" },
              "description": { "type": "string" },
              "metaTitle": { "type": "string" },
              "packUnit": { "type": "string" },
              "packUnitPlural": { "type": "string" },
              "customFields": { "type": "object" },
              "calculatedPrice": { "type": "object" },
              "calculatedPrices": {
                "type": "array",
                "items": { "additionalProperties": false }
              },
              "calculatedMaxPurchase": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "integer",
                "format": "int64"
              },
              "calculatedCheapestPrice": { "type": "object" },
              "isNew": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "swagCustomizedProductsTemplate": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/swagCustomizedProductsTemplate"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "0fdd76f113b3420f98012690a1473d58"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "8ef51b037552437c856937f941cb531f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e3947e6b18194864ba9c8d486e1840e8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "83fa4aa08c6a47cb8b926c04783b7e09"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "20e2a21242e0422091bc8b846e40fa07"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "83a0180b5c2c4a65985e3efdffd9d44b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "manufacturer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/manufacturer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_manufacturer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "4ff3da256ff24876a72c152e7a108b91"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "unit": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/unit"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "unit" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "bdf743b4ccb54753bcfa35c3b46f621b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e3633d4473c045a48185170106ce2b8e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "721df120334b4065a447d0810aefd235"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "canonicalProduct": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/canonicalProduct"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "37667f3454794c12b3bb4d0387b214c8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "7b97b681c4a746a1bd6ecb108ad272f0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/crossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "0f6ef1a0d78a47a9a2da3816c0b4fa55"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/configuratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "843bd179e7154b9891ccf9b2f216fb35"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "a18029dacd114c6ea2b678309b09ff59"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "87ccebff614c48c68b2b5cf3fc71cead"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "2fdb5135e6dc4451ae9f1cd077f8bf7f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "f01875c004764e2a874a179d7a435d6e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/properties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "15c45876b4474363835aa533ce3c297c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "ade46d7131a7416d9c1d0d8f46b54838"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "streams": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/streams"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream"
                            },
                            "id": {
                              "type": "string",
                              "example": "d0aa0d5f5eaf4059874fc116e980124a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categoriesRo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/categoriesRo"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "a947597773694114b094780d72ab0209"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/3a88191860144b50a4f0c21a42ea7314/seoCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "415da925a2a44de1b637813e61d5fc47"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Product": {
        "description": "Added since version: 6.0.0.0",
        "required": ["taxId", "productNumber", "stock", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "manufacturerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productManufacturerVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "unitId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productMediaVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "deliveryTimeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "canonicalProductId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productNumber": { "type": "string" },
          "stock": { "type": "integer", "format": "int64" },
          "restockTime": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "availableStock": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "available": { "type": "boolean", "readOnly": true },
          "isCloseout": { "type": "boolean" },
          "displayGroup": { "type": "string", "readOnly": true },
          "mainVariantId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "deprecated": true
          },
          "manufacturerNumber": { "type": "string" },
          "ean": { "type": "string" },
          "purchaseSteps": { "type": "integer", "format": "int64" },
          "maxPurchase": { "type": "integer", "format": "int64" },
          "minPurchase": { "type": "integer", "format": "int64" },
          "purchaseUnit": { "type": "number", "format": "float" },
          "referenceUnit": { "type": "number", "format": "float" },
          "shippingFree": { "type": "boolean" },
          "markAsTopseller": { "type": "boolean" },
          "weight": { "type": "number", "format": "float" },
          "width": { "type": "number", "format": "float" },
          "height": { "type": "number", "format": "float" },
          "length": { "type": "number", "format": "float" },
          "releaseDate": { "type": "string", "format": "date-time" },
          "ratingAverage": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "categoryTree": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "propertyIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "optionIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "streamIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "categoryIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "sales": { "type": "integer", "format": "int64", "readOnly": true },
          "states": {
            "type": "array",
            "items": { "type": "string" },
            "readOnly": true
          },
          "metaDescription": { "type": "string" },
          "name": { "type": "string" },
          "keywords": { "type": "string" },
          "description": { "type": "string" },
          "metaTitle": { "type": "string" },
          "packUnit": { "type": "string" },
          "packUnitPlural": { "type": "string" },
          "customFields": { "type": "object" },
          "calculatedPrice": { "type": "object" },
          "calculatedPrices": {
            "type": "array",
            "items": { "additionalProperties": false }
          },
          "calculatedMaxPurchase": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "integer",
            "format": "int64"
          },
          "calculatedCheapestPrice": { "type": "object" },
          "isNew": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagCustomizedProductsTemplate": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/3a88191860144b50a4f0c21a42ea7314/swagCustomizedProductsTemplate"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_customized_products_template"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "0fdd76f113b3420f98012690a1473d58"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "downloads": { "$ref": "#/components/schemas/ProductDownload" },
          "parent": { "$ref": "#/components/schemas/Product" },
          "children": { "$ref": "#/components/schemas/Product" },
          "deliveryTime": { "$ref": "#/components/schemas/DeliveryTime" },
          "tax": { "$ref": "#/components/schemas/Tax" },
          "manufacturer": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "unit": { "$ref": "#/components/schemas/Unit" },
          "cover": { "$ref": "#/components/schemas/ProductMedia" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "canonicalProduct": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/ProductMedia" },
          "crossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "configuratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "productReviews": { "$ref": "#/components/schemas/ProductReview" },
          "mainCategories": { "$ref": "#/components/schemas/MainCategory" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" },
          "options": { "$ref": "#/components/schemas/PropertyGroupOption" },
          "properties": { "$ref": "#/components/schemas/PropertyGroupOption" },
          "categories": { "$ref": "#/components/schemas/Category" },
          "streams": { "$ref": "#/components/schemas/ProductStream" },
          "categoriesRo": { "$ref": "#/components/schemas/Category" },
          "seoCategory": { "$ref": "#/components/schemas/Category" }
        },
        "type": "object"
      },
      "ProductConfiguratorSetting": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "optionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "optionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" },
          "option": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "ProductCrossSelling": {
        "description": "Added since version: 6.1.0.0",
        "required": ["name", "position", "type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "sortBy": { "type": "string" },
          "sortDirection": { "type": "string" },
          "type": { "type": "string" },
          "active": { "type": "boolean" },
          "limit": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductCrossSellingAssignedProducts": {
        "description": "Added since version: 6.2.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": ["productId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ProductExport": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductFeatureSet": {
        "description": "Added since version: 6.3.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductKeywordDictionary": {
        "description": "Added since version: 6.0.0.0",
        "required": ["languageId", "keyword"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "keyword": { "type": "string" }
        },
        "type": "object"
      },
      "ProductManufacturer": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "link": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ProductMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ProductPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductReview": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "salesChannelId",
          "languageId",
          "title",
          "content",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "points": { "type": "number", "format": "float" },
          "status": { "type": "boolean" },
          "comment": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchConfigField": {
        "description": "Added since version: 6.3.5.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchKeyword": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSorting": {
        "description": "Added since version: 6.3.2.0",
        "required": ["key", "priority", "createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "key": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "label": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductStream": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductStreamFilter": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductVisibility": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductWarehouse": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Promotion": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "PromotionDiscount": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionDiscountPrices": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionIndividualCode": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionSetgroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PropertyGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["displayType", "sortingType", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "displayType": { "type": "string" },
          "sortingType": { "type": "string" },
          "filterable": { "type": "boolean" },
          "visibleOnProductDetailPage": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "options": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "PropertyGroupOption": {
        "description": "Added since version: 6.0.0.0",
        "required": ["groupId", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "colorHexCode": { "type": "string" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "group": { "$ref": "#/components/schemas/PropertyGroup" }
        },
        "type": "object"
      },
      "Rule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "warehouseGroup": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/49853843d9324c03b6e2b82252dac83b/warehouseGroup"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "warehouse_group"
                        },
                        "id": {
                          "type": "string",
                          "example": "39233f18203947d69ada9fbb2a03900e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RuleCondition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasAppStorefrontConfig": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasSbpUserData": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasStorefrontDemoToken": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SaasUserLoginToken": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "customerGroupId",
          "currencyId",
          "paymentMethodId",
          "shippingMethodId",
          "countryId",
          "navigationCategoryId",
          "createdAt",
          "name",
          "homeEnabled"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "navigationCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "navigationCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "navigationCategoryDepth": { "type": "integer", "format": "int64" },
          "footerCategoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "footerCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "serviceCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "serviceCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mailHeaderFooterId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hreflangDefaultDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": { "type": "string" },
          "shortName": { "type": "string" },
          "taxCalculationType": { "type": "string" },
          "configuration": { "type": "object" },
          "active": { "type": "boolean" },
          "hreflangActive": { "type": "boolean" },
          "maintenance": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "language": { "$ref": "#/components/schemas/Language" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "country": { "$ref": "#/components/schemas/Country" },
          "domains": { "$ref": "#/components/schemas/SalesChannelDomain" },
          "navigationCategory": { "$ref": "#/components/schemas/Category" },
          "footerCategory": { "$ref": "#/components/schemas/Category" },
          "serviceCategory": { "$ref": "#/components/schemas/Category" },
          "hreflangDefaultDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          }
        },
        "type": "object"
      },
      "SalesChannelAnalytics": {
        "description": "Added since version: 6.2.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SalesChannelDomain": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "url",
          "salesChannelId",
          "languageId",
          "currencyId",
          "snippetSetId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "url": { "type": "string" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "snippetSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "hreflangUseOnlyLocale": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "salesChannelDefaultHreflang": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "SalesChannelType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SalutationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "salutationKey",
              "createdAt",
              "displayName",
              "letterName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salutationKey": { "type": "string" },
              "displayName": { "type": "string" },
              "letterName": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "Salutation": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salutationKey", "createdAt", "displayName", "letterName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationKey": { "type": "string" },
          "displayName": { "type": "string" },
          "letterName": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ScheduledTask": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Script": {
        "description": "Added since version: 6.4.7.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SeoUrlJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "languageId",
              "foreignKey",
              "routeName",
              "pathInfo",
              "seoPathInfo",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "foreignKey": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "routeName": { "type": "string" },
              "pathInfo": { "type": "string" },
              "seoPathInfo": { "type": "string" },
              "isCanonical": { "type": "boolean" },
              "isModified": { "type": "boolean" },
              "isDeleted": { "type": "boolean" },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrl": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "foreignKey",
          "routeName",
          "pathInfo",
          "seoPathInfo",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "foreignKey": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "routeName": { "type": "string" },
          "pathInfo": { "type": "string" },
          "seoPathInfo": { "type": "string" },
          "isCanonical": { "type": "boolean" },
          "isModified": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SeoUrlTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "isValid": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ShippingMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["deliveryTimeId", "taxType", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxType": { "type": "string" },
              "description": { "type": "string" },
              "trackingUrl": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/20532ecda54b401b820e714473a2985c/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6db0540ffc7943ecaed575928fb155a6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/20532ecda54b401b820e714473a2985c/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "20b883775992468aa88173bc1add169c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/20532ecda54b401b820e714473a2985c/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "6f213aba163344adb6a81100cccf260b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/20532ecda54b401b820e714473a2985c/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e9fbd85ce3674041a19ac61339e5cb27"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/20532ecda54b401b820e714473a2985c/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "cb065e3c5dd14365b61347073a48b18c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/20532ecda54b401b820e714473a2985c/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "5403a802a66d402a98f4816a7393a027"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["deliveryTimeId", "taxType", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "deliveryTimeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxType": { "type": "string" },
          "description": { "type": "string" },
          "trackingUrl": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "deliveryTime": { "$ref": "#/components/schemas/DeliveryTime" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "prices": { "$ref": "#/components/schemas/ShippingMethodPrice" },
          "media": { "$ref": "#/components/schemas/Media" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "ShippingMethodPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": ["shippingMethodId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "calculation": { "type": "integer", "format": "int64" },
          "calculationRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "quantityStart": { "type": "number", "format": "float" },
          "quantityEnd": { "type": "number", "format": "float" },
          "currencyPrice": { "type": "object" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Snippet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["setId", "translationKey", "value", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "setId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "translationKey": { "type": "string" },
          "value": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SnippetSet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "iso", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "iso": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "snippets": { "$ref": "#/components/schemas/Snippet" }
        },
        "type": "object"
      },
      "StateMachine": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "states": { "$ref": "#/components/schemas/StateMachineState" },
          "transitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          }
        },
        "type": "object"
      },
      "StateMachineHistory": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          }
        },
        "type": "object"
      },
      "StateMachineState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "StateMachineTransition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagCmsExtensionsBlockRule": {
        "description": "Added since version: ",
        "required": ["cmsBlockId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "inverted": { "type": "boolean" },
          "visibilityRuleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "visibilityRule": { "$ref": "#/components/schemas/Rule" },
          "cmsBlock": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsForm": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormGroup": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormGroupField": {
        "description": "Added since version: ",
        "required": ["createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsQuickview": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsBlock": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsScrollNavigation": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "displayName": { "type": "string" },
          "cmsSectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "cmsSection": { "$ref": "#/components/schemas/CmsSection" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsScrollNavigationPageSettings": {
        "description": "Added since version: ",
        "required": [
          "active",
          "duration",
          "easing",
          "bouncy",
          "easingDegree",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "duration": { "type": "integer", "format": "int64" },
          "easing": { "type": "string" },
          "bouncy": { "type": "boolean" },
          "easingDegree": { "type": "integer", "format": "int64" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["internalName", "createdAt", "displayName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "internalName": { "type": "string" },
              "displayName": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "boolean" },
              "stepByStep": { "type": "boolean" },
              "confirmInput": { "type": "boolean" },
              "optionsAutoCollapse": { "type": "boolean" },
              "decisionTree": { "type": "object", "readOnly": true },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/39d3e59adb784037bcc28e88d4e99696/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "97a0b01c55274240948944fe4931f02e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/39d3e59adb784037bcc28e88d4e99696/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "00e0b7bbb5bf4f1f93d441470c90b99f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/39d3e59adb784037bcc28e88d4e99696/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "4873a64a34d64b34ad2790e50f0edcef"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "exclusions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/39d3e59adb784037bcc28e88d4e99696/exclusions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion"
                            },
                            "id": {
                              "type": "string",
                              "example": "ecffa2a08fcc4b62b176fabc94fb8f08"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configurations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/39d3e59adb784037bcc28e88d4e99696/configurations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_configuration"
                            },
                            "id": {
                              "type": "string",
                              "example": "0ef7fbae66bf427db8411120fc5dc7c9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplate": {
        "description": "Added since version: ",
        "required": ["internalName", "createdAt", "displayName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "internalName": { "type": "string" },
          "displayName": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" },
          "stepByStep": { "type": "boolean" },
          "confirmInput": { "type": "boolean" },
          "optionsAutoCollapse": { "type": "boolean" },
          "decisionTree": { "type": "object", "readOnly": true },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "options": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "products": { "$ref": "#/components/schemas/Product" },
          "exclusions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
          },
          "configurations": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateConfigurationJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["hash", "configuration", "templateId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hash": { "type": "string" },
              "configuration": { "type": "object" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration/d63e5f6400a3441c94f32381a47f9d50/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "59fe319417f04ace83ae53c1c1a65730"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateConfigurationShares": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration/d63e5f6400a3441c94f32381a47f9d50/templateConfigurationShares"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_configuration_share"
                            },
                            "id": {
                              "type": "string",
                              "example": "f2090113500b45b1ab43edf2bd834a3c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateConfiguration": {
        "description": "Added since version: ",
        "required": ["hash", "configuration", "templateId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hash": { "type": "string" },
          "configuration": { "type": "object" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          },
          "templateConfigurationShares": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateConfigurationShare": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusion": {
        "description": "Added since version: ",
        "required": ["name", "templateId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "conditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionCondition": {
        "description": "Added since version: ",
        "required": [
          "templateExclusionId",
          "templateOptionId",
          "templateExclusionOperatorId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateExclusionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateExclusionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateExclusionOperatorId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateExclusion": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "templateExclusionOperator": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
          },
          "templateOptionValues": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionOperator": {
        "description": "Added since version: ",
        "required": ["operator", "templateOptionType", "createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "operator": { "type": "string" },
          "templateOptionType": { "type": "string" },
          "label": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "templateExclusionConditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["type", "templateId", "createdAt", "displayName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "type": { "type": "string" },
              "displayName": { "type": "string" },
              "description": { "type": "string" },
              "placeholder": { "type": "string" },
              "typeProperties": { "type": "object" },
              "itemNumber": { "type": "string" },
              "required": { "type": "boolean" },
              "oneTimeSurcharge": { "type": "boolean" },
              "relativeSurcharge": { "type": "boolean" },
              "advancedSurcharge": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "price": { "type": "object" },
              "calculatedPrice": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6c4ce2a4b71a4176842edffe0aa2d2e3/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "c4edf046a0764b4c8b5573f5c7b32e8a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "values": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6c4ce2a4b71a4176842edffe0aa2d2e3/values"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value"
                            },
                            "id": {
                              "type": "string",
                              "example": "e7b39840aa964234a62a31722254fec0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6c4ce2a4b71a4176842edffe0aa2d2e3/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "69fc903980f645f1a840a08611e63a97"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6c4ce2a4b71a4176842edffe0aa2d2e3/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "47fd7a555aed4ffcbde7bba084d102de"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/6c4ce2a4b71a4176842edffe0aa2d2e3/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8a37eaa21742410e895301ef33e918a1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOption": {
        "description": "Added since version: ",
        "required": ["type", "templateId", "createdAt", "displayName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "type": { "type": "string" },
          "displayName": { "type": "string" },
          "description": { "type": "string" },
          "placeholder": { "type": "string" },
          "typeProperties": { "type": "object" },
          "itemNumber": { "type": "string" },
          "required": { "type": "boolean" },
          "oneTimeSurcharge": { "type": "boolean" },
          "relativeSurcharge": { "type": "boolean" },
          "advancedSurcharge": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "price": { "type": "object" },
          "calculatedPrice": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "prices": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
          },
          "values": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          },
          "templateExclusionConditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionPrice": {
        "description": "Added since version: ",
        "required": ["templateOptionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionValueJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "templateOptionId",
              "position",
              "createdAt",
              "displayName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateOptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "value": { "type": "object" },
              "displayName": { "type": "string" },
              "itemNumber": { "type": "string" },
              "default": { "type": "boolean" },
              "oneTimeSurcharge": { "type": "boolean" },
              "relativeSurcharge": { "type": "boolean" },
              "advancedSurcharge": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "price": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/c0461e57c4bc44be926f41bc15601309/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "206ffece26b84527b187cac180212ff3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateOption": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/c0461e57c4bc44be926f41bc15601309/templateOption"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "e236fd362e2145e8bf2506b49b311d88"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/c0461e57c4bc44be926f41bc15601309/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "84115d3798fa4b9a81c93e5f7a0ca4e3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/c0461e57c4bc44be926f41bc15601309/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "38cf1bc4b3da4552bb4e301e3459a89c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOptionValue": {
        "description": "Added since version: ",
        "required": [
          "templateOptionId",
          "position",
          "createdAt",
          "displayName"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "value": { "type": "object" },
          "displayName": { "type": "string" },
          "itemNumber": { "type": "string" },
          "default": { "type": "boolean" },
          "oneTimeSurcharge": { "type": "boolean" },
          "relativeSurcharge": { "type": "boolean" },
          "advancedSurcharge": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "prices": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "tax": { "$ref": "#/components/schemas/Tax" },
          "templateExclusionConditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionValuePrice": {
        "description": "Added since version: ",
        "required": ["templateOptionValueId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionValueId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionValueVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateOptionValue": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDynamicAccessLandingPageRule": {
        "description": "Added since version: ",
        "required": ["landingPageId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPage": { "$ref": "#/components/schemas/LandingPage" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDynamicAccessProductRule": {
        "description": "Added since version: ",
        "required": ["productId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagLanguagePackLanguage": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationConnection": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationData": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationGeneralSetting": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationLogging": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationMapping": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationMediaFile": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagMigrationRun": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannel": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelRun": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelRunLog": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingCustomer": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingOrder": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingProductError": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SwagSocialShoppingSalesChannel": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SystemConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": ["configurationKey", "configurationValue", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "configurationKey": { "type": "string" },
          "configurationValue": {
            "properties": { "_value": { "type": "object" } },
            "type": "object"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "Tag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Tax": {
        "description": "Added since version: 6.0.0.0",
        "required": ["taxRate", "name", "position", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxRate": { "type": "number", "format": "float" },
          "name": { "type": "string" },
          "position": {
            "description": "Added since version: 6.4.0.0.",
            "type": "integer",
            "format": "int64"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "TaxRule": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "TaxRuleType": {
        "description": "Added since version: 6.1.0.0",
        "required": ["createdAt", "typeName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "Theme": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "author", "active", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "author": { "type": "string" },
          "description": { "type": "string" },
          "labels": { "type": "object" },
          "helpTexts": { "type": "object" },
          "customFields": { "type": "object" },
          "previewMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentThemeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "baseConfig": { "type": "object" },
          "configValues": { "type": "object" },
          "active": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "Unit": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "shortCode", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shortCode": { "type": "string" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "User": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserAccessKey": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserRecovery": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Warehouse": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WarehouseGroup": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Webhook": {
        "description": "Added since version: 6.3.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WebhookEventLog": {
        "description": "Added since version: 6.4.1.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductDetailResponse": {
        "type": "object",
        "description": "Represents a product along with detailed information required to display a variant selection.",
        "properties": {
          "product": { "$ref": "#/components/schemas/Product" },
          "configurator": {
            "type": "array",
            "description": "List of property groups with their corresponding options and information on how to display them.",
            "items": { "$ref": "#/components/schemas/PropertyGroup" }
          }
        }
      },
      "CrossSellingElementCollection": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "crossSelling": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "position": { "type": "integer", "format": "int32" },
                "sortBy": { "type": "string" },
                "sortDirection": { "type": "string" },
                "limit": { "type": "integer", "format": "int32" },
                "active": { "type": "boolean" },
                "productId": { "type": "string" },
                "productStreamId": { "type": "string" },
                "type": { "type": "string" }
              }
            },
            "products": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/Product" }
            },
            "total": { "type": "integer", "format": "int32" }
          }
        }
      },
      "Criteria": {
        "type": "object",
        "description": "Search parameters. For more information, see our documentation on [Search Queries](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#structure)",
        "properties": {
          "page": { "description": "Search result page", "type": "integer" },
          "limit": {
            "description": "Number of items per result page",
            "type": "integer"
          },
          "filter": {
            "type": "array",
            "description": "List of filters to restrict the search result. For more information, see [Search Queries > Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#filter)",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "field": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["type", "field", "value"]
            }
          },
          "sort": {
            "type": "array",
            "description": "Sorting in the search result.",
            "items": {
              "type": "object",
              "properties": {
                "field": { "type": "string" },
                "order": { "type": "string" },
                "naturalSorting": { "type": "boolean" }
              },
              "required": ["field"]
            }
          },
          "post-filter": {
            "type": "array",
            "description": "Filters that applied without affecting aggregations. For more information, see [Search Queries > Post Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#post-filter)",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "field": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["type", "field", "value"]
            }
          },
          "associations": {
            "type": "object",
            "description": "Used to fetch associations which are not fetched by default."
          },
          "aggregations": {
            "type": "array",
            "description": "Used to perform aggregations on the search result. For more information, see [Search Queries > Aggregations](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#aggregations)",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Give your aggregation an identifier, so you can find it easier",
                  "type": "string"
                },
                "type": {
                  "description": "The type of aggregation",
                  "type": "string"
                },
                "field": {
                  "description": "The field you want to aggregate over.",
                  "type": "string"
                }
              },
              "required": ["name", "type", "field"]
            }
          },
          "grouping": {
            "type": "array",
            "description": "Perform groupings over certain fields",
            "items": { "type": "string", "description": "Name of a field" }
          },
          "fields": {
            "type": "array",
            "description": "Fields which should be returned in the search result.",
            "items": { "type": "string", "description": "Name of a field" }
          },
          "total-count-mode": {
            "description": "Whether the total for the total number of hits should be determined for the search query. 0 = disabled total count, 1 = calculate exact total amount (slow), 2 = calculate only for next page (fast)",
            "type": "integer",
            "default": 0,
            "enum": [0, 1, 2]
          }
        }
      },
      "Cart": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the cart - for example `guest-cart`",
                "type": "string"
              },
              "token": {
                "description": "Context token identifying the cart and the user session",
                "type": "string"
              },
              "price": {
                "type": "object",
                "properties": {
                  "netPrice": {
                    "description": "Net price of the cart",
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "description": "Total price of the cart, including shipping costs, discounts and taxes",
                    "type": "number",
                    "format": "float"
                  },
                  "positionPrice": {
                    "description": "Price for all line items in the cart",
                    "type": "number",
                    "format": "float"
                  },
                  "taxStatus": {
                    "description": "Tax calculation for the cart. One of `gross`, `net` or `tax-free`",
                    "type": "string"
                  }
                }
              },
              "lineItems": {
                "description": "All items within the cart",
                "type": "array",
                "items": { "$ref": "#/components/schemas/LineItem" }
              },
              "errors": {
                "type": "array",
                "description": "A list of all cart errors, such as insufficient stocks, invalid addresses or vouchers.",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": { "type": "string" },
                    "level": { "type": "string" },
                    "message": { "type": "string" }
                  }
                }
              },
              "transactions": {
                "description": "A list of all payment transactions associated with the current cart.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": { "paymentMethodId": { "type": "string" } }
                }
              },
              "modified": { "type": "boolean" },
              "customerComment": {
                "type": "string",
                "description": "A comment that can be added to the cart."
              },
              "affiliateCode": {
                "type": "string",
                "description": "An affiliate tracking code"
              },
              "campaignCode": {
                "type": "string",
                "description": "A campaign tracking code"
              }
            }
          }
        ]
      },
      "EntitySearchResult": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "entity": { "type": "string" },
              "total": {
                "type": "integer",
                "description": "The total number of found entities"
              },
              "aggregations": {
                "type": "array",
                "description": "Contains aggregated data. A simple example is the determination of the average price from a product search query.",
                "items": { "type": "object" }
              },
              "page": {
                "type": "integer",
                "description": "The actual page. This can be used for pagination."
              },
              "limit": {
                "type": "integer",
                "description": "The actual limit. This is used for pagination and goes together with the page."
              }
            }
          }
        ]
      },
      "SalesChannelContext": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "token": {
                "description": "Context the user session",
                "type": "string"
              },
              "currentCustomerGroup": {
                "type": "object",
                "description": "Customer group of the current user",
                "properties": {
                  "name": { "type": "string" },
                  "displayGross": { "type": "boolean" }
                }
              },
              "fallbackCustomerGroup": {
                "description": "Fallback group if the default customer group is not applicable",
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "displayGross": { "type": "boolean" }
                }
              },
              "currency": {
                "type": "object",
                "description": "Currency associated with the current user",
                "properties": {
                  "isoCode": { "type": "string" },
                  "factor": { "type": "integer" },
                  "symbol": { "type": "string" },
                  "shortName": { "type": "string" },
                  "name": { "type": "string" },
                  "position": { "type": "integer", "format": "int32" },
                  "decimalPrecision": { "type": "integer", "format": "int32" },
                  "isSystemDefault": { "type": "boolean" }
                }
              },
              "salesChannel": {
                "description": "Information about the current sales channel",
                "type": "object",
                "properties": {
                  "typeId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "paymentMethodId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "countryId": { "type": "string" },
                  "navigationCategoryId": { "type": "string" },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": { "type": "string" },
                  "serviceCategoryId": { "type": "string" },
                  "name": { "type": "string" },
                  "shortName": { "type": "string" },
                  "accessKey": { "type": "string" },
                  "active": { "type": "boolean" },
                  "maintenance": { "type": "boolean" },
                  "maintenanceIpWhitelist": { "type": "string" },
                  "mailHeaderFooterId": { "type": "string" },
                  "customerGroupId": { "type": "string" },
                  "hreflangActive": { "type": "boolean" },
                  "hreflangDefaultDomainId": { "type": "string" },
                  "analyticsId": { "type": "string" }
                }
              },
              "taxRules": {
                "type": "array",
                "description": "Currently active tax rules and/or rates",
                "items": {
                  "type": "object",
                  "properties": {
                    "taxRate": { "type": "number", "format": "float" },
                    "name": { "type": "string" }
                  }
                }
              },
              "customer": {
                "type": "object",
                "description": "Information about the current customer - `null` if the customer is not logged in",
                "properties": {
                  "groupId": { "type": "string" },
                  "defaultPaymentMethodId": { "type": "string" },
                  "salesChannelId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "lastPaymentMethodId": { "type": "string" },
                  "defaultBillingAddressId": { "type": "string" },
                  "defaultShippingAddressId": { "type": "string" },
                  "customerNumber": { "type": "string" },
                  "salutationId": { "type": "string" },
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "company": { "type": "string" },
                  "password": { "type": "string" },
                  "email": { "type": "string" },
                  "title": { "type": "string" },
                  "affiliateCode": { "type": "string" },
                  "campaignCode": { "type": "string" },
                  "active": { "type": "boolean" },
                  "doubleOptInRegistration": { "type": "boolean" },
                  "doubleOptInEmailSentDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "doubleOptInConfirmDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hash": { "type": "string" },
                  "guest": { "type": "boolean" },
                  "firstLogin": { "type": "string", "format": "date-time" },
                  "lastLogin": { "type": "string", "format": "date-time" },
                  "newsletter": { "type": "boolean" },
                  "birthday": { "type": "string", "format": "date-time" },
                  "lastOrderDate": { "type": "string", "format": "date-time" },
                  "orderCount": { "type": "integer", "format": "int32" },
                  "legacyEncoder": { "type": "string" },
                  "legacyPassword": { "type": "string" },
                  "autoIncrement": { "type": "integer", "format": "int32" },
                  "remoteAddress": { "type": "string" }
                }
              },
              "paymentMethod": {
                "type": "object",
                "description": "Selected payment method",
                "properties": {
                  "pluginId": { "type": "string" },
                  "handlerIdentifier": { "type": "string" },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "position": { "type": "integer", "format": "int32" },
                  "active": { "type": "boolean" },
                  "availabilityRuleId": { "type": "string" },
                  "mediaId": { "type": "string" },
                  "formattedHandlerIdentifier": { "type": "string" }
                }
              },
              "shippingMethod": {
                "type": "object",
                "description": "Selected shipping method",
                "properties": {
                  "name": { "type": "string" },
                  "active": { "type": "boolean" },
                  "description": { "type": "string" },
                  "trackingUrl": { "type": "string" },
                  "deliveryTimeId": { "type": "string" },
                  "availabilityRuleId": { "type": "string" },
                  "mediaId": { "type": "string" }
                }
              },
              "context": {
                "description": "Core context with general configuration values and state",
                "type": "object",
                "properties": {
                  "versionId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "currencyFactor": { "type": "integer" },
                  "currencyPrecision": { "type": "integer", "format": "int32" },
                  "scope": { "type": "string" },
                  "source": { "type": "string" },
                  "taxState": { "type": "string" },
                  "useCache": { "type": "boolean" }
                }
              }
            }
          }
        ]
      },
      "NavigationRouteResponse": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/Category" }
      },
      "ShippingMethodPageRouteResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "active": { "type": "boolean" },
            "description": { "type": "string" },
            "deliveryTimeId": { "type": "string" },
            "deliveryTime": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "min": { "type": "integer", "format": "int32" },
                "max": { "type": "integer", "format": "int32" },
                "unit": { "type": "string" }
              }
            },
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shippingMethodId": { "type": "string" },
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            },
            "orderDeliveries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "orderId": { "type": "string" },
                  "shippingOrderAddressId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "shippingDateEarliest": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shippingDateLatest": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "stateId": { "type": "string" }
                }
              }
            },
            "salesChannelDefaultAssignments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "typeId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "paymentMethodId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "countryId": { "type": "string" },
                  "navigationCategoryId": { "type": "string" },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": { "type": "string" },
                  "serviceCategoryId": { "type": "string" },
                  "name": { "type": "string" },
                  "shortName": { "type": "string" },
                  "accessKey": { "type": "string" },
                  "active": { "type": "boolean" },
                  "maintenance": { "type": "boolean" },
                  "maintenanceIpWhitelist": { "type": "string" },
                  "mailHeaderFooterId": { "type": "string" },
                  "customerGroupId": { "type": "string" },
                  "hreflangActive": { "type": "boolean" },
                  "hreflangDefaultDomainId": { "type": "string" }
                }
              }
            },
            "salesChannels": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "typeId": { "type": "string" },
                  "languageId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "paymentMethodId": { "type": "string" },
                  "shippingMethodId": { "type": "string" },
                  "countryId": { "type": "string" },
                  "navigationCategoryId": { "type": "string" },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": { "type": "string" },
                  "serviceCategoryId": { "type": "string" },
                  "name": { "type": "string" },
                  "shortName": { "type": "string" },
                  "accessKey": { "type": "string" },
                  "active": { "type": "boolean" },
                  "maintenance": { "type": "boolean" },
                  "maintenanceIpWhitelist": { "type": "string" },
                  "mailHeaderFooterId": { "type": "string" },
                  "customerGroupId": { "type": "string" },
                  "hreflangActive": { "type": "boolean" },
                  "hreflangDefaultDomainId": { "type": "string" }
                }
              }
            },
            "availabilityRule": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "description": { "type": "string" },
                "priority": { "type": "integer", "format": "int32" },
                "invalid": { "type": "boolean" }
              }
            },
            "availabilityRuleId": { "type": "string" },
            "prices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shippingMethodId": { "type": "string" },
                  "currencyId": { "type": "string" },
                  "ruleId": { "type": "string" },
                  "calculation": { "type": "integer", "format": "int32" },
                  "quantityStart": { "type": "number", "format": "float" },
                  "quantityEnd": { "type": "number", "format": "float" },
                  "price": { "type": "number", "format": "float" },
                  "calculationRuleId": { "type": "string" }
                }
              }
            },
            "mediaId": { "type": "string" },
            "media": {
              "type": "object",
              "properties": {
                "userId": { "type": "string" },
                "mimeType": { "type": "string" },
                "fileExtension": { "type": "string" },
                "fileSize": { "type": "integer", "format": "int32" },
                "title": { "type": "string" },
                "metaDataRaw": { "type": "string" },
                "mediaTypeRaw": { "type": "string" },
                "uploadedAt": { "type": "string", "format": "date-time" },
                "alt": { "type": "string" },
                "url": { "type": "string" },
                "fileName": { "type": "string" },
                "mediaFolderId": { "type": "string" },
                "private": { "type": "boolean" },
                "thumbnailsRo": { "type": "string" }
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": { "name": { "type": "string" } }
              }
            }
          }
        }
      },
      "ProductListingResult": {
        "allOf": [
          { "$ref": "#/components/schemas/EntitySearchResult" },
          {
            "type": "object",
            "properties": {
              "currentFilters": {
                "type": "object",
                "description": "Contains the state of the filters. These can be used to create listing filters.",
                "properties": {
                  "navigationId": { "type": "string" },
                  "manufacturer": {
                    "type": "array",
                    "items": { "type": "object" }
                  },
                  "price": {
                    "type": "object",
                    "properties": {
                      "min": { "type": "integer" },
                      "max": { "type": "integer" }
                    }
                  },
                  "rating": { "type": "integer" },
                  "shipping-free": { "type": "boolean" },
                  "properties": {
                    "type": "array",
                    "items": { "type": "object" }
                  }
                }
              },
              "availableSortings": {
                "type": "array",
                "description": "Contains the available sorting. These can be used to show a sorting select-box in the product listing.",
                "items": { "type": "object" }
              },
              "sorting": { "type": "string" },
              "elements": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Product" }
              }
            }
          }
        ]
      },
      "ProductListingFlags": {
        "type": "object",
        "description": "Additional flags for product listings",
        "properties": {
          "no-aggregations": {
            "description": "Resets all aggregations in the criteria. This parameter is a flag, the value has no effect.",
            "type": "string",
            "nullable": true
          },
          "only-aggregations": {
            "description": "If this flag is set, no products are fetched. Sorting and associations are also ignored. This parameter is a flag, the value has no effect.",
            "type": "string",
            "nullable": true
          }
        }
      },
      "WishlistLoadRouteResponse": {
        "type": "object",
        "properties": {
          "wishlist": {
            "type": "object",
            "properties": {
              "customerId": { "type": "string" },
              "salesChannelId": { "type": "string" }
            }
          },
          "products": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductListingResult" }
          }
        }
      },
      "ArrayStruct": { "$ref": "#/components/schemas/Struct" },
      "Struct": {
        "type": "object",
        "properties": {
          "apiAlias": {
            "type": "string",
            "description": "Alias which can be used to restrict response fields. For more information see [includes](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#includes-apialias)."
          }
        }
      },
      "ProductListingCriteria": {
        "allOf": [
          { "$ref": "#/components/schemas/Criteria" },
          {
            "type": "object",
            "description": "Additional search parameters for product listings",
            "properties": {
              "order": {
                "description": "Specifies the sorting of the products by `availableSortings`. If not set, the default sorting will be set according to the shop settings. The available sorting options are sent within the response under the `availableSortings` key. In order to sort by a field, consider using the `sort` parameter from the listing criteria. Do not use both parameters together, as it might lead to unexpected results.",
                "type": "string"
              },
              "limit": {
                "description": "Number of items per result page. If not set, the limit will be set according to the default products per page, defined in the system settings.",
                "type": "integer",
                "minimum": 0
              },
              "p": {
                "description": "Search result page",
                "type": "integer",
                "default": 1
              },
              "manufacturer": {
                "description": "Filter by manufacturers. List of manufacturer identifiers separated by a `|`.",
                "type": "string"
              },
              "min-price": {
                "description": "Filters by a minimum product price. Has to be lower than the `max-price` filter.",
                "type": "integer",
                "minimum": 0,
                "default": 0
              },
              "max-price": {
                "description": "Filters by a maximum product price. Has to be higher than the `min-price` filter.",
                "type": "integer",
                "minimum": 0,
                "default": 0
              },
              "rating": {
                "description": "Filter products with a minimum average rating.",
                "type": "integer"
              },
              "shipping-free": {
                "description": "Filters products that are marked as shipping-free.",
                "type": "boolean",
                "default": false
              },
              "properties": {
                "description": "Filters products by their properties. List of property identifiers separated by a `|`.",
                "type": "string"
              },
              "manufacturer-filter": {
                "description": "Enables/disabled filtering by manufacturer. If set to false, the `manufacturer` filter will be ignored. Also the `aggregations[manufacturer]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "price-filter": {
                "description": "Enables/disabled filtering by price. If set to false, the `min-price` and `max-price` filter will be ignored. Also the `aggregations[price]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "rating-filter": {
                "description": "Enables/disabled filtering by rating. If set to false, the `rating` filter will be ignored. Also the `aggregations[rating]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "shipping-free-filter": {
                "description": "Enables/disabled filtering by shipping-free products. If set to false, the `shipping-free` filter will be ignored. Also the `aggregations[shipping-free]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "property-filter": {
                "description": "Enables/disabled filtering by properties products. If set to false, the `properties` filter will be ignored. Also the `aggregations[properties]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "property-whitelist": {
                "description": "A whitelist of property identifiers which can be used for filtering. List of property identifiers separated by a `|`. The `property-filter` must be `true`, otherwise the whitelist has no effect.",
                "type": "string"
              },
              "reduce-aggregations": {
                "description": "By sending the parameter `reduce-aggregations` , the post-filters that were applied by the customer, are also applied to the aggregations. This has the consequence that only values are returned in the aggregations that would lead to further filter results. This parameter is a flag, the value has no effect.",
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OrderRouteResponse": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "object",
            "items": { "$ref": "#/components/schemas/Order" }
          },
          "paymentChangeable": {
            "type": "object",
            "description": "The key-value pairs contain the uuid of the order as key and a boolean as value, indicating that the payment method can still be changed.",
            "additionalProperties": { "type": "boolean" }
          }
        }
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "referencedId": { "type": "string" },
          "label": { "type": "string" },
          "quantity": { "type": "integer", "format": "int32" },
          "type": { "type": "string" },
          "good": { "type": "boolean" },
          "description": { "type": "string" },
          "removable": { "type": "boolean" },
          "stackable": { "type": "boolean" },
          "modified": { "type": "boolean" }
        }
      },
      "AccountNewsletterRecipientResult": {
        "allOf": [
          { "$ref": "#/components/schemas/Struct" },
          { "type": "object", "properties": { "status": { "type": "string" } } }
        ]
      },
      "Sitemap": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "filename": { "type": "string" },
              "created": { "type": "string", "format": "date-time" }
            }
          }
        ]
      },
      "FindProductVariantRouteResponse": {
        "type": "object",
        "properties": {
          "foundCombination": {
            "type": "object",
            "properties": {
              "variantId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "options": { "type": "array", "items": { "type": "string" } }
            }
          }
        }
      },
      "CartItems": {
        "allOf": [
          { "$ref": "#/components/schemas/ArrayStruct" },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/LineItem" }
              }
            }
          }
        ]
      },
      "ContextTokenResponse": {
        "type": "object",
        "properties": {
          "contextToken": {
            "description": "Context token identifying the current user session.",
            "type": "string"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" } }
      }
    },
    "responses": {
      "204": { "description": "No Content" },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "contentType": {
        "name": "Content-Type",
        "in": "header",
        "description": "Content type of the request",
        "required": true,
        "schema": { "type": "string", "default": "application/json" }
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Accepted response content types",
        "required": true,
        "schema": { "type": "string", "default": "application/json" }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "Identifies the sales channel you want to access the API through",
        "name": "sw-access-key",
        "in": "header"
      },
      "ContextToken": {
        "type": "apiKey",
        "description": "Identifies an anonymous or identified user session",
        "name": "sw-context-token",
        "in": "header"
      }
    }
  },
  "security": [{ "ApiKey": [] }]
}
