{
  "openapi": "3.0.0",
  "info": {
    "title": "Shopware Admin API",
    "description": "This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.\n\nFor a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints\nadd the query parameter `type=jsonapi`.",
    "version": "6.5.3.0"
  },
  "servers": [{ "url": "https://demo-frontends.shopware.store/api" }],
  "paths": {
    "/acl-role": {
      "get": {
        "tags": ["Acl Role"],
        "summary": "List with basic information of Acl Role resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getAclRoleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Acl Role resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AclRole"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/acl-role?limit=25" },
                                "last": {
                                  "example": "/acl-role?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/acl-role?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/acl-role?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/AclRole" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Acl Role"],
        "summary": "Create a new Acl Role resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createAclRole",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AclRole" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AclRole" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AclRole",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AclRole" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AclRole" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/acl-role/{id}": {
      "get": {
        "tags": ["Acl Role"],
        "summary": "Detailed information about a Acl Role resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getAclRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the acl_role",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AclRole",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AclRole" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AclRole" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Acl Role"],
        "summary": "Delete a Acl Role resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteAclRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the acl_role",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Acl Role"],
        "summary": "Partially update information about a Acl Role resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateAclRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the acl_role",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Acl Role resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AclRole" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AclRole" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AclRole",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AclRole" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AclRole" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app": {
      "get": {
        "tags": ["App"],
        "summary": "List with basic information of App resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/App" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/app?limit=25" },
                                "last": { "example": "/app?limit=25&page=11" },
                                "next": { "example": "/app?limit=25&page=4" },
                                "prev": { "example": "/app?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/App" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App"],
        "summary": "Create a new App resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "createApp",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/App" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/App" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of App",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/App" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/App" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app/{id}": {
      "get": {
        "tags": ["App"],
        "summary": "Detailed information about a App resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getApp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of App",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/App" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/App" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App"],
        "summary": "Delete a App resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteApp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App"],
        "summary": "Partially update information about a App resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateApp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/App" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/App" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of App",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/App" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/App" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-action-button": {
      "get": {
        "tags": ["App Action Button"],
        "summary": "List with basic information of App Action Button resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppActionButtonList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Action Button resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppActionButton"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-action-button?limit=25"
                                },
                                "last": {
                                  "example": "/app-action-button?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-action-button?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-action-button?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppActionButton"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Action Button"],
        "summary": "Create a new App Action Button resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "createAppActionButton",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppActionButton" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppActionButton" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppActionButton",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppActionButton" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-action-button/{id}": {
      "get": {
        "tags": ["App Action Button"],
        "summary": "Detailed information about a App Action Button resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppActionButton",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_action_button",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppActionButton",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppActionButton" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Action Button"],
        "summary": "Delete a App Action Button resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteAppActionButton",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_action_button",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Action Button"],
        "summary": "Partially update information about a App Action Button resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateAppActionButton",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_action_button",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Action Button resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppActionButton" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppActionButton" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppActionButton",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppActionButton" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-administration-snippet": {
      "get": {
        "tags": ["App Administration Snippet"],
        "summary": "List with basic information of App Administration Snippet resources.",
        "description": "Available since: 6.4.15.0",
        "operationId": "getAppAdministrationSnippetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Administration Snippet resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppAdministrationSnippet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-administration-snippet?limit=25"
                                },
                                "last": {
                                  "example": "/app-administration-snippet?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-administration-snippet?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-administration-snippet?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppAdministrationSnippet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Administration Snippet"],
        "summary": "Create a new App Administration Snippet resources.",
        "description": "Available since: 6.4.15.0",
        "operationId": "createAppAdministrationSnippet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppAdministrationSnippet"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAdministrationSnippet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppAdministrationSnippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-administration-snippet/{id}": {
      "get": {
        "tags": ["App Administration Snippet"],
        "summary": "Detailed information about a App Administration Snippet resource.",
        "description": "Available since: 6.4.15.0",
        "operationId": "getAppAdministrationSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_administration_snippet",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppAdministrationSnippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Administration Snippet"],
        "summary": "Delete a App Administration Snippet resource.",
        "description": "Available since: 6.4.15.0",
        "operationId": "deleteAppAdministrationSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_administration_snippet",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Administration Snippet"],
        "summary": "Partially update information about a App Administration Snippet resource.",
        "description": "Available since: 6.4.15.0",
        "operationId": "updateAppAdministrationSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_administration_snippet",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Administration Snippet resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppAdministrationSnippet"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAdministrationSnippet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppAdministrationSnippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-cms-block": {
      "get": {
        "tags": ["App Cms Block"],
        "summary": "List with basic information of App Cms Block resources.",
        "description": "Available since: 6.4.2.0",
        "operationId": "getAppCmsBlockList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Cms Block resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppCmsBlock"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-cms-block?limit=25"
                                },
                                "last": {
                                  "example": "/app-cms-block?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-cms-block?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-cms-block?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/AppCmsBlock" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Cms Block"],
        "summary": "Create a new App Cms Block resources.",
        "description": "Available since: 6.4.2.0",
        "operationId": "createAppCmsBlock",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppCmsBlock" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppCmsBlock" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppCmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppCmsBlock" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppCmsBlock" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-cms-block/{id}": {
      "get": {
        "tags": ["App Cms Block"],
        "summary": "Detailed information about a App Cms Block resource.",
        "description": "Available since: 6.4.2.0",
        "operationId": "getAppCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_cms_block",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppCmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppCmsBlock" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppCmsBlock" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Cms Block"],
        "summary": "Delete a App Cms Block resource.",
        "description": "Available since: 6.4.2.0",
        "operationId": "deleteAppCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_cms_block",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Cms Block"],
        "summary": "Partially update information about a App Cms Block resource.",
        "description": "Available since: 6.4.2.0",
        "operationId": "updateAppCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_cms_block",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Cms Block resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppCmsBlock" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppCmsBlock" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppCmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppCmsBlock" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppCmsBlock" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-flow-action": {
      "get": {
        "tags": ["App Flow Action"],
        "summary": "List with basic information of App Flow Action resources.",
        "description": "Available since: 6.4.10.0",
        "operationId": "getAppFlowActionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Flow Action resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppFlowAction"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-flow-action?limit=25"
                                },
                                "last": {
                                  "example": "/app-flow-action?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-flow-action?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-flow-action?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/AppFlowAction" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Flow Action"],
        "summary": "Create a new App Flow Action resources.",
        "description": "Available since: 6.4.10.0",
        "operationId": "createAppFlowAction",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppFlowAction" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppFlowAction" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppFlowAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppFlowAction" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppFlowAction" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-flow-action/{id}": {
      "get": {
        "tags": ["App Flow Action"],
        "summary": "Detailed information about a App Flow Action resource.",
        "description": "Available since: 6.4.10.0",
        "operationId": "getAppFlowAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_action",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppFlowAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppFlowAction" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppFlowAction" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Flow Action"],
        "summary": "Delete a App Flow Action resource.",
        "description": "Available since: 6.4.10.0",
        "operationId": "deleteAppFlowAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_action",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Flow Action"],
        "summary": "Partially update information about a App Flow Action resource.",
        "description": "Available since: 6.4.10.0",
        "operationId": "updateAppFlowAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_action",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Flow Action resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppFlowAction" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppFlowAction" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppFlowAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppFlowAction" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppFlowAction" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-flow-event": {
      "get": {
        "tags": ["App Flow Event"],
        "summary": "List with basic information of App Flow Event resources.",
        "description": "Available since: 6.5.2.0",
        "operationId": "getAppFlowEventList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Flow Event resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppFlowEvent"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-flow-event?limit=25"
                                },
                                "last": {
                                  "example": "/app-flow-event?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-flow-event?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-flow-event?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/AppFlowEvent" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Flow Event"],
        "summary": "Create a new App Flow Event resources.",
        "description": "Available since: 6.5.2.0",
        "operationId": "createAppFlowEvent",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppFlowEvent" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppFlowEvent" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppFlowEvent",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppFlowEvent" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppFlowEvent" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-flow-event/{id}": {
      "get": {
        "tags": ["App Flow Event"],
        "summary": "Detailed information about a App Flow Event resource.",
        "description": "Available since: 6.5.2.0",
        "operationId": "getAppFlowEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_event",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppFlowEvent",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppFlowEvent" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppFlowEvent" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Flow Event"],
        "summary": "Delete a App Flow Event resource.",
        "description": "Available since: 6.5.2.0",
        "operationId": "deleteAppFlowEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_event",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Flow Event"],
        "summary": "Partially update information about a App Flow Event resource.",
        "description": "Available since: 6.5.2.0",
        "operationId": "updateAppFlowEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_flow_event",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Flow Event resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppFlowEvent" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppFlowEvent" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppFlowEvent",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppFlowEvent" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppFlowEvent" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-payment-method": {
      "get": {
        "tags": ["App Payment Method"],
        "summary": "List with basic information of App Payment Method resources.",
        "description": "Available since: 6.4.1.0",
        "operationId": "getAppPaymentMethodList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Payment Method resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppPaymentMethod"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-payment-method?limit=25"
                                },
                                "last": {
                                  "example": "/app-payment-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-payment-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-payment-method?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppPaymentMethod"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Payment Method"],
        "summary": "Create a new App Payment Method resources.",
        "description": "Available since: 6.4.1.0",
        "operationId": "createAppPaymentMethod",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppPaymentMethod" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppPaymentMethod" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppPaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppPaymentMethod" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-payment-method/{id}": {
      "get": {
        "tags": ["App Payment Method"],
        "summary": "Detailed information about a App Payment Method resource.",
        "description": "Available since: 6.4.1.0",
        "operationId": "getAppPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_payment_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppPaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppPaymentMethod" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Payment Method"],
        "summary": "Delete a App Payment Method resource.",
        "description": "Available since: 6.4.1.0",
        "operationId": "deleteAppPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_payment_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Payment Method"],
        "summary": "Partially update information about a App Payment Method resource.",
        "description": "Available since: 6.4.1.0",
        "operationId": "updateAppPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_payment_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Payment Method resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppPaymentMethod" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppPaymentMethod" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppPaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppPaymentMethod" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-script-condition": {
      "get": {
        "tags": ["App Script Condition"],
        "summary": "List with basic information of App Script Condition resources.",
        "description": "Available since: 6.4.10.3",
        "operationId": "getAppScriptConditionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Script Condition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppScriptCondition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-script-condition?limit=25"
                                },
                                "last": {
                                  "example": "/app-script-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-script-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-script-condition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppScriptCondition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Script Condition"],
        "summary": "Create a new App Script Condition resources.",
        "description": "Available since: 6.4.10.3",
        "operationId": "createAppScriptCondition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppScriptCondition" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppScriptCondition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppScriptCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppScriptCondition" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-script-condition/{id}": {
      "get": {
        "tags": ["App Script Condition"],
        "summary": "Detailed information about a App Script Condition resource.",
        "description": "Available since: 6.4.10.3",
        "operationId": "getAppScriptCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_script_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppScriptCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppScriptCondition" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Script Condition"],
        "summary": "Delete a App Script Condition resource.",
        "description": "Available since: 6.4.10.3",
        "operationId": "deleteAppScriptCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_script_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Script Condition"],
        "summary": "Partially update information about a App Script Condition resource.",
        "description": "Available since: 6.4.10.3",
        "operationId": "updateAppScriptCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_script_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Script Condition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppScriptCondition" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppScriptCondition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppScriptCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppScriptCondition" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/app-template": {
      "get": {
        "tags": ["App Template"],
        "summary": "List with basic information of App Template resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of App Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/AppTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/app-template?limit=25"
                                },
                                "last": {
                                  "example": "/app-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/AppTemplate" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["App Template"],
        "summary": "Create a new App Template resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "createAppTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/app-template/{id}": {
      "get": {
        "tags": ["App Template"],
        "summary": "Detailed information about a App Template resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of AppTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppTemplate" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["App Template"],
        "summary": "Delete a App Template resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteAppTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["App Template"],
        "summary": "Partially update information about a App Template resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateAppTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the app_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a App Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/AppTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of AppTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/AppTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/category": {
      "get": {
        "tags": ["Category"],
        "summary": "List with basic information of Category resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCategoryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Category resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Category"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/category?limit=25" },
                                "last": {
                                  "example": "/category?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/category?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/category?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Category" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Category"],
        "summary": "Create a new Category resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCategory",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Category" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Category",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Category" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "tags": ["Category"],
        "summary": "Detailed information about a Category resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the category",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Category",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Category" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "Delete a Category resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the category",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Category"],
        "summary": "Partially update information about a Category resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the category",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Category resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Category" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Category",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Category" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/cms-block": {
      "get": {
        "tags": ["Cms Block"],
        "summary": "List with basic information of Cms Block resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsBlockList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Block resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsBlock"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/cms-block?limit=25" },
                                "last": {
                                  "example": "/cms-block?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-block?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-block?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CmsBlock" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Cms Block"],
        "summary": "Create a new Cms Block resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsBlock",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsBlock" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsBlock" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsBlock" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsBlock" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/cms-block/{id}": {
      "get": {
        "tags": ["Cms Block"],
        "summary": "Detailed information about a Cms Block resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_block",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsBlock" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsBlock" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Cms Block"],
        "summary": "Delete a Cms Block resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_block",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Cms Block"],
        "summary": "Partially update information about a Cms Block resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsBlock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_block",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Block resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsBlock" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsBlock" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsBlock",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsBlock" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsBlock" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/cms-page": {
      "get": {
        "tags": ["Cms Page"],
        "summary": "List with basic information of Cms Page resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsPageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Page resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsPage"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/cms-page?limit=25" },
                                "last": {
                                  "example": "/cms-page?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-page?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-page?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CmsPage" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Cms Page"],
        "summary": "Create a new Cms Page resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsPage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsPage" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsPage" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsPage" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPage" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/cms-page/{id}": {
      "get": {
        "tags": ["Cms Page"],
        "summary": "Detailed information about a Cms Page resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsPage" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPage" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Cms Page"],
        "summary": "Delete a Cms Page resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Cms Page"],
        "summary": "Partially update information about a Cms Page resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Page resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsPage" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsPage" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsPage" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPage" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/cms-page-activity": {
      "get": {
        "tags": ["Cms Page Activity"],
        "summary": "List with basic information of Cms Page Activity resources.",
        "description": "",
        "operationId": "getCmsPageActivityList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Page Activity resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsPageActivity"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/cms-page-activity?limit=25"
                                },
                                "last": {
                                  "example": "/cms-page-activity?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-page-activity?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-page-activity?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CmsPageActivity"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Cms Page Activity"],
        "summary": "Create a new Cms Page Activity resources.",
        "description": "",
        "operationId": "createCmsPageActivity",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsPageActivity" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsPageActivity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPageActivity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPageActivity"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPageActivity" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/cms-page-activity/{id}": {
      "get": {
        "tags": ["Cms Page Activity"],
        "summary": "Detailed information about a Cms Page Activity resource.",
        "description": "",
        "operationId": "getCmsPageActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page_activity",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsPageActivity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPageActivity"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPageActivity" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Cms Page Activity"],
        "summary": "Delete a Cms Page Activity resource.",
        "description": "",
        "operationId": "deleteCmsPageActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page_activity",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Cms Page Activity"],
        "summary": "Partially update information about a Cms Page Activity resource.",
        "description": "",
        "operationId": "updateCmsPageActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page_activity",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Page Activity resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsPageActivity" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsPageActivity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPageActivity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPageActivity"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPageActivity" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/cms-page-draft": {
      "get": {
        "tags": ["Cms Page Draft"],
        "summary": "List with basic information of Cms Page Draft resources.",
        "description": "",
        "operationId": "getCmsPageDraftList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Page Draft resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsPageDraft"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/cms-page-draft?limit=25"
                                },
                                "last": {
                                  "example": "/cms-page-draft?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-page-draft?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-page-draft?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CmsPageDraft" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Cms Page Draft"],
        "summary": "Create a new Cms Page Draft resources.",
        "description": "",
        "operationId": "createCmsPageDraft",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsPageDraft" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsPageDraft" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPageDraft",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsPageDraft" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPageDraft" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/cms-page-draft/{id}": {
      "get": {
        "tags": ["Cms Page Draft"],
        "summary": "Detailed information about a Cms Page Draft resource.",
        "description": "",
        "operationId": "getCmsPageDraft",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page_draft",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsPageDraft",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsPageDraft" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPageDraft" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Cms Page Draft"],
        "summary": "Delete a Cms Page Draft resource.",
        "description": "",
        "operationId": "deleteCmsPageDraft",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page_draft",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Cms Page Draft"],
        "summary": "Partially update information about a Cms Page Draft resource.",
        "description": "",
        "operationId": "updateCmsPageDraft",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_page_draft",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Page Draft resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsPageDraft" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsPageDraft" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsPageDraft",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsPageDraft" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsPageDraft" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/cms-section": {
      "get": {
        "tags": ["Cms Section"],
        "summary": "List with basic information of Cms Section resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSectionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Section resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsSection"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/cms-section?limit=25" },
                                "last": {
                                  "example": "/cms-section?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-section?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-section?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CmsSection" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Cms Section"],
        "summary": "Create a new Cms Section resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsSection",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsSection" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsSection" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsSection" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsSection" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/cms-section/{id}": {
      "get": {
        "tags": ["Cms Section"],
        "summary": "Detailed information about a Cms Section resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_section",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsSection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsSection" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsSection" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Cms Section"],
        "summary": "Delete a Cms Section resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_section",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Cms Section"],
        "summary": "Partially update information about a Cms Section resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_section",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Section resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsSection" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsSection" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsSection" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsSection" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/cms-slot": {
      "get": {
        "tags": ["Cms Slot"],
        "summary": "List with basic information of Cms Slot resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSlotList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cms Slot resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CmsSlot"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/cms-slot?limit=25" },
                                "last": {
                                  "example": "/cms-slot?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-slot?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-slot?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CmsSlot" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Cms Slot"],
        "summary": "Create a new Cms Slot resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsSlot",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsSlot" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsSlot" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSlot",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsSlot" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsSlot" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/cms-slot/{id}": {
      "get": {
        "tags": ["Cms Slot"],
        "summary": "Detailed information about a Cms Slot resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSlot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_slot",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CmsSlot",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsSlot" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsSlot" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Cms Slot"],
        "summary": "Delete a Cms Slot resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsSlot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_slot",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Cms Slot"],
        "summary": "Partially update information about a Cms Slot resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsSlot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the cms_slot",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Cms Slot resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CmsSlot" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CmsSlot" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CmsSlot",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CmsSlot" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CmsSlot" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/country": {
      "get": {
        "tags": ["Country"],
        "summary": "List with basic information of Country resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Country resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Country"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/country?limit=25" },
                                "last": {
                                  "example": "/country?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/country?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/country?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Country" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Country"],
        "summary": "Create a new Country resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCountry",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Country" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Country" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Country",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Country" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/country/{id}": {
      "get": {
        "tags": ["Country"],
        "summary": "Detailed information about a Country resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Country",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Country" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Country"],
        "summary": "Delete a Country resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Country"],
        "summary": "Partially update information about a Country resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Country resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Country" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Country" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Country",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Country" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/country-state": {
      "get": {
        "tags": ["Country State"],
        "summary": "List with basic information of Country State resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryStateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Country State resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CountryState"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/country-state?limit=25"
                                },
                                "last": {
                                  "example": "/country-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/country-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/country-state?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CountryState" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Country State"],
        "summary": "Create a new Country State resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCountryState",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CountryState" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CountryState" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CountryState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CountryState" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CountryState" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/country-state/{id}": {
      "get": {
        "tags": ["Country State"],
        "summary": "Detailed information about a Country State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CountryState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CountryState" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CountryState" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Country State"],
        "summary": "Delete a Country State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCountryState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Country State"],
        "summary": "Partially update information about a Country State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCountryState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the country_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Country State resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CountryState" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CountryState" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CountryState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CountryState" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CountryState" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/currency": {
      "get": {
        "tags": ["Currency"],
        "summary": "List with basic information of Currency resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCurrencyList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Currency resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Currency"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/currency?limit=25" },
                                "last": {
                                  "example": "/currency?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/currency?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/currency?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Currency" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Currency"],
        "summary": "Create a new Currency resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCurrency",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Currency" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Currency" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Currency",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Currency" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Currency" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/currency/{id}": {
      "get": {
        "tags": ["Currency"],
        "summary": "Detailed information about a Currency resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Currency",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Currency" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Currency" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Currency"],
        "summary": "Delete a Currency resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Currency"],
        "summary": "Partially update information about a Currency resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Currency resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Currency" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Currency" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Currency",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Currency" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Currency" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/currency-country-rounding": {
      "get": {
        "tags": ["Currency Country Rounding"],
        "summary": "List with basic information of Currency Country Rounding resources.",
        "description": "Available since: 6.4.0.0",
        "operationId": "getCurrencyCountryRoundingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Currency Country Rounding resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CurrencyCountryRounding"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/currency-country-rounding?limit=25"
                                },
                                "last": {
                                  "example": "/currency-country-rounding?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/currency-country-rounding?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/currency-country-rounding?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyCountryRounding"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Currency Country Rounding"],
        "summary": "Create a new Currency Country Rounding resources.",
        "description": "Available since: 6.4.0.0",
        "operationId": "createCurrencyCountryRounding",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CurrencyCountryRounding"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCountryRounding"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CurrencyCountryRounding",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/currency-country-rounding/{id}": {
      "get": {
        "tags": ["Currency Country Rounding"],
        "summary": "Detailed information about a Currency Country Rounding resource.",
        "description": "Available since: 6.4.0.0",
        "operationId": "getCurrencyCountryRounding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency_country_rounding",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CurrencyCountryRounding",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Currency Country Rounding"],
        "summary": "Delete a Currency Country Rounding resource.",
        "description": "Available since: 6.4.0.0",
        "operationId": "deleteCurrencyCountryRounding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency_country_rounding",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Currency Country Rounding"],
        "summary": "Partially update information about a Currency Country Rounding resource.",
        "description": "Available since: 6.4.0.0",
        "operationId": "updateCurrencyCountryRounding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the currency_country_rounding",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Currency Country Rounding resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CurrencyCountryRounding"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCountryRounding"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CurrencyCountryRounding",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/custom-entity": {
      "get": {
        "tags": ["Custom Entity"],
        "summary": "List with basic information of Custom Entity resources.",
        "description": "Available since: 6.4.9.0",
        "operationId": "getCustomEntityList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Entity resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomEntity"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-entity?limit=25"
                                },
                                "last": {
                                  "example": "/custom-entity?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-entity?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-entity?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CustomEntity" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Custom Entity"],
        "summary": "Create a new Custom Entity resources.",
        "description": "Available since: 6.4.9.0",
        "operationId": "createCustomEntity",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomEntity" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomEntity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomEntity" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomEntity" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/custom-entity/{id}": {
      "get": {
        "tags": ["Custom Entity"],
        "summary": "Detailed information about a Custom Entity resource.",
        "description": "Available since: 6.4.9.0",
        "operationId": "getCustomEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_entity",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomEntity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomEntity" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomEntity" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Custom Entity"],
        "summary": "Delete a Custom Entity resource.",
        "description": "Available since: 6.4.9.0",
        "operationId": "deleteCustomEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_entity",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Custom Entity"],
        "summary": "Partially update information about a Custom Entity resource.",
        "description": "Available since: 6.4.9.0",
        "operationId": "updateCustomEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_entity",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Entity resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomEntity" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomEntity",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomEntity" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomEntity" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/custom-field": {
      "get": {
        "tags": ["Custom Field"],
        "summary": "List with basic information of Custom Field resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Field resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomField"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-field?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CustomField" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Custom Field"],
        "summary": "Create a new Custom Field resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomField",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomField" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomField" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomField" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomField" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/custom-field/{id}": {
      "get": {
        "tags": ["Custom Field"],
        "summary": "Detailed information about a Custom Field resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomField" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomField" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Custom Field"],
        "summary": "Delete a Custom Field resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Custom Field"],
        "summary": "Partially update information about a Custom Field resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Field resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomField" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomField" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomField" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomField" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/custom-field-set": {
      "get": {
        "tags": ["Custom Field Set"],
        "summary": "List with basic information of Custom Field Set resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Field Set resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomFieldSet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-field-set?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field-set?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CustomFieldSet" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Custom Field Set"],
        "summary": "Create a new Custom Field Set resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomFieldSet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomFieldSet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomFieldSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomFieldSet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/custom-field-set/{id}": {
      "get": {
        "tags": ["Custom Field Set"],
        "summary": "Detailed information about a Custom Field Set resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomFieldSet" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Custom Field Set"],
        "summary": "Delete a Custom Field Set resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomFieldSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Custom Field Set"],
        "summary": "Partially update information about a Custom Field Set resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomFieldSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Field Set resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomFieldSet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomFieldSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomFieldSet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/custom-field-set-relation": {
      "get": {
        "tags": ["Custom Field Set Relation"],
        "summary": "List with basic information of Custom Field Set Relation resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetRelationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Field Set Relation resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomFieldSetRelation"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-field-set-relation?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field-set-relation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field-set-relation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field-set-relation?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomFieldSetRelation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Custom Field Set Relation"],
        "summary": "Create a new Custom Field Set Relation resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomFieldSetRelation",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSetRelation"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSetRelation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSetRelation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/custom-field-set-relation/{id}": {
      "get": {
        "tags": ["Custom Field Set Relation"],
        "summary": "Detailed information about a Custom Field Set Relation resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set_relation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSetRelation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Custom Field Set Relation"],
        "summary": "Delete a Custom Field Set Relation resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomFieldSetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set_relation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Custom Field Set Relation"],
        "summary": "Partially update information about a Custom Field Set Relation resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomFieldSetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_field_set_relation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Field Set Relation resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSetRelation"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSetRelation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomFieldSetRelation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/custom-price": {
      "get": {
        "tags": ["Custom Price"],
        "summary": "List with basic information of Custom Price resources.",
        "description": "",
        "operationId": "getCustomPriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomPrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/custom-price?limit=25"
                                },
                                "last": {
                                  "example": "/custom-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CustomPrice" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Custom Price"],
        "summary": "Create a new Custom Price resources.",
        "description": "",
        "operationId": "createCustomPrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomPrice" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomPrice" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomPrice" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomPrice" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/custom-price/{id}": {
      "get": {
        "tags": ["Custom Price"],
        "summary": "Detailed information about a Custom Price resource.",
        "description": "",
        "operationId": "getCustomPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomPrice" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomPrice" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Custom Price"],
        "summary": "Delete a Custom Price resource.",
        "description": "",
        "operationId": "deleteCustomPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Custom Price"],
        "summary": "Partially update information about a Custom Price resource.",
        "description": "",
        "operationId": "updateCustomPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the custom_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Custom Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomPrice" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomPrice" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomPrice" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomPrice" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": ["Customer"],
        "summary": "List with basic information of Customer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Customer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/customer?limit=25" },
                                "last": {
                                  "example": "/customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Customer" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer"],
        "summary": "Create a new Customer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Customer" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Customer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Customer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Customer" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Detailed information about a Customer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Customer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Customer" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer"],
        "summary": "Delete a Customer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer"],
        "summary": "Partially update information about a Customer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Customer" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Customer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Customer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Customer" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Customer" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer-address": {
      "get": {
        "tags": ["Customer Address"],
        "summary": "List with basic information of Customer Address resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerAddressList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Address resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerAddress"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-address?limit=25"
                                },
                                "last": {
                                  "example": "/customer-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-address?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer Address"],
        "summary": "Create a new Customer Address resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomerAddress",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerAddress" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerAddress" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer-address/{id}": {
      "get": {
        "tags": ["Customer Address"],
        "summary": "Detailed information about a Customer Address resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerAddress" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer Address"],
        "summary": "Delete a Customer Address resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer Address"],
        "summary": "Partially update information about a Customer Address resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Address resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerAddress" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerAddress" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer-group": {
      "get": {
        "tags": ["Customer Group"],
        "summary": "List with basic information of Customer Group resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-group?limit=25"
                                },
                                "last": {
                                  "example": "/customer-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/CustomerGroup" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer Group"],
        "summary": "Create a new Customer Group resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomerGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerGroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomerGroup" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer-group/{id}": {
      "get": {
        "tags": ["Customer Group"],
        "summary": "Detailed information about a Customer Group resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomerGroup" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerGroup" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer Group"],
        "summary": "Delete a Customer Group resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomerGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer Group"],
        "summary": "Partially update information about a Customer Group resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomerGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerGroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/CustomerGroup" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer-recovery": {
      "get": {
        "tags": ["Customer Recovery"],
        "summary": "List with basic information of Customer Recovery resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getCustomerRecoveryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Recovery resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerRecovery"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-recovery?limit=25"
                                },
                                "last": {
                                  "example": "/customer-recovery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-recovery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-recovery?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerRecovery"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer Recovery"],
        "summary": "Create a new Customer Recovery resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "createCustomerRecovery",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerRecovery" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerRecovery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerRecovery" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer-recovery/{id}": {
      "get": {
        "tags": ["Customer Recovery"],
        "summary": "Detailed information about a Customer Recovery resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getCustomerRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_recovery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerRecovery" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer Recovery"],
        "summary": "Delete a Customer Recovery resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteCustomerRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_recovery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer Recovery"],
        "summary": "Partially update information about a Customer Recovery resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateCustomerRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_recovery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Recovery resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerRecovery" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerRecovery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerRecovery" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer-specific-features": {
      "get": {
        "tags": ["Customer Specific Features"],
        "summary": "List with basic information of Customer Specific Features resources.",
        "description": "",
        "operationId": "getCustomerSpecificFeaturesList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Specific Features resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerSpecificFeatures"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-specific-features?limit=25"
                                },
                                "last": {
                                  "example": "/customer-specific-features?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-specific-features?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-specific-features?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerSpecificFeatures"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer Specific Features"],
        "summary": "Create a new Customer Specific Features resources.",
        "description": "",
        "operationId": "createCustomerSpecificFeatures",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerSpecificFeatures"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSpecificFeatures"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerSpecificFeatures",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerSpecificFeatures"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSpecificFeatures"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer-specific-features/{id}": {
      "get": {
        "tags": ["Customer Specific Features"],
        "summary": "Detailed information about a Customer Specific Features resource.",
        "description": "",
        "operationId": "getCustomerSpecificFeatures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_specific_features",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerSpecificFeatures",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerSpecificFeatures"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSpecificFeatures"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer Specific Features"],
        "summary": "Delete a Customer Specific Features resource.",
        "description": "",
        "operationId": "deleteCustomerSpecificFeatures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_specific_features",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer Specific Features"],
        "summary": "Partially update information about a Customer Specific Features resource.",
        "description": "",
        "operationId": "updateCustomerSpecificFeatures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_specific_features",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Specific Features resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerSpecificFeatures"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSpecificFeatures"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerSpecificFeatures",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerSpecificFeatures"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSpecificFeatures"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer-wishlist": {
      "get": {
        "tags": ["Customer Wishlist"],
        "summary": "List with basic information of Customer Wishlist resources.",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Wishlist resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerWishlist"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-wishlist?limit=25"
                                },
                                "last": {
                                  "example": "/customer-wishlist?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-wishlist?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-wishlist?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerWishlist"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer Wishlist"],
        "summary": "Create a new Customer Wishlist resources.",
        "description": "Available since: 6.3.4.0",
        "operationId": "createCustomerWishlist",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerWishlist" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerWishlist" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerWishlist" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer-wishlist/{id}": {
      "get": {
        "tags": ["Customer Wishlist"],
        "summary": "Detailed information about a Customer Wishlist resource.",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerWishlist" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer Wishlist"],
        "summary": "Delete a Customer Wishlist resource.",
        "description": "Available since: 6.3.4.0",
        "operationId": "deleteCustomerWishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer Wishlist"],
        "summary": "Partially update information about a Customer Wishlist resource.",
        "description": "Available since: 6.3.4.0",
        "operationId": "updateCustomerWishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Wishlist resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/CustomerWishlist" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomerWishlist" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlist",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomerWishlist" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/customer-wishlist-product": {
      "get": {
        "tags": ["Customer Wishlist Product"],
        "summary": "List with basic information of Customer Wishlist Product resources.",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistProductList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customer Wishlist Product resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CustomerWishlistProduct"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/customer-wishlist-product?limit=25"
                                },
                                "last": {
                                  "example": "/customer-wishlist-product?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-wishlist-product?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-wishlist-product?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerWishlistProduct"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Customer Wishlist Product"],
        "summary": "Create a new Customer Wishlist Product resources.",
        "description": "Available since: 6.3.4.0",
        "operationId": "createCustomerWishlistProduct",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlistProduct"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlistProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlistProduct",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/customer-wishlist-product/{id}": {
      "get": {
        "tags": ["Customer Wishlist Product"],
        "summary": "Detailed information about a Customer Wishlist Product resource.",
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist_product",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlistProduct",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Customer Wishlist Product"],
        "summary": "Delete a Customer Wishlist Product resource.",
        "description": "Available since: 6.3.4.0",
        "operationId": "deleteCustomerWishlistProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist_product",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Customer Wishlist Product"],
        "summary": "Partially update information about a Customer Wishlist Product resource.",
        "description": "Available since: 6.3.4.0",
        "operationId": "updateCustomerWishlistProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the customer_wishlist_product",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Customer Wishlist Product resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlistProduct"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlistProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of CustomerWishlistProduct",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/delivery-time": {
      "get": {
        "tags": ["Delivery Time"],
        "summary": "List with basic information of Delivery Time resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeliveryTimeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Delivery Time resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DeliveryTime"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/delivery-time?limit=25"
                                },
                                "last": {
                                  "example": "/delivery-time?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/delivery-time?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/delivery-time?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/DeliveryTime" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Delivery Time"],
        "summary": "Create a new Delivery Time resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDeliveryTime",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/DeliveryTime" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeliveryTime" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DeliveryTime",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/DeliveryTime" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeliveryTime" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/delivery-time/{id}": {
      "get": {
        "tags": ["Delivery Time"],
        "summary": "Detailed information about a Delivery Time resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeliveryTime",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the delivery_time",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DeliveryTime",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/DeliveryTime" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeliveryTime" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Delivery Time"],
        "summary": "Delete a Delivery Time resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDeliveryTime",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the delivery_time",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Delivery Time"],
        "summary": "Partially update information about a Delivery Time resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDeliveryTime",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the delivery_time",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Delivery Time resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/DeliveryTime" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeliveryTime" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DeliveryTime",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/DeliveryTime" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeliveryTime" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/document": {
      "get": {
        "tags": ["Document"],
        "summary": "List with basic information of Document resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Document"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/document?limit=25" },
                                "last": {
                                  "example": "/document?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Document" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Document"],
        "summary": "Create a new Document resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocument",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Document" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Document" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Document",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Document" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/document/{id}": {
      "get": {
        "tags": ["Document"],
        "summary": "Detailed information about a Document resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Document",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Document" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Document"],
        "summary": "Delete a Document resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Document"],
        "summary": "Partially update information about a Document resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Document" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Document" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Document",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Document" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Document" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/document-base-config": {
      "get": {
        "tags": ["Document Base Config"],
        "summary": "List with basic information of Document Base Config resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Base Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DocumentBaseConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document-base-config?limit=25"
                                },
                                "last": {
                                  "example": "/document-base-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-base-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-base-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentBaseConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Document Base Config"],
        "summary": "Create a new Document Base Config resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentBaseConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/DocumentBaseConfig" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DocumentBaseConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentBaseConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/document-base-config/{id}": {
      "get": {
        "tags": ["Document Base Config"],
        "summary": "Detailed information about a Document Base Config resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentBaseConfig" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Document Base Config"],
        "summary": "Delete a Document Base Config resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentBaseConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Document Base Config"],
        "summary": "Partially update information about a Document Base Config resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentBaseConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document Base Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/DocumentBaseConfig" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DocumentBaseConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentBaseConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/document-base-config-sales-channel": {
      "get": {
        "tags": ["Document Base Config Sales Channel"],
        "summary": "List with basic information of Document Base Config Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Base Config Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document-base-config-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Document Base Config Sales Channel"],
        "summary": "Create a new Document Base Config Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfigSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/document-base-config-sales-channel/{id}": {
      "get": {
        "tags": ["Document Base Config Sales Channel"],
        "summary": "Detailed information about a Document Base Config Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfigSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Document Base Config Sales Channel"],
        "summary": "Delete a Document Base Config Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Document Base Config Sales Channel"],
        "summary": "Partially update information about a Document Base Config Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_base_config_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document Base Config Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentBaseConfigSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/document-type": {
      "get": {
        "tags": ["Document Type"],
        "summary": "List with basic information of Document Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DocumentType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/document-type?limit=25"
                                },
                                "last": {
                                  "example": "/document-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/DocumentType" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Document Type"],
        "summary": "Create a new Document Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/DocumentType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DocumentType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/DocumentType" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/document-type/{id}": {
      "get": {
        "tags": ["Document Type"],
        "summary": "Detailed information about a Document Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of DocumentType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/DocumentType" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentType" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Document Type"],
        "summary": "Delete a Document Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Document Type"],
        "summary": "Partially update information about a Document Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the document_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Document Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/DocumentType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DocumentType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of DocumentType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/DocumentType" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DocumentType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/flow": {
      "get": {
        "tags": ["Flow"],
        "summary": "List with basic information of Flow resources.",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Flow resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Flow" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/flow?limit=25" },
                                "last": { "example": "/flow?limit=25&page=11" },
                                "next": { "example": "/flow?limit=25&page=4" },
                                "prev": { "example": "/flow?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Flow" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Flow"],
        "summary": "Create a new Flow resources.",
        "description": "Available since: 6.4.6.0",
        "operationId": "createFlow",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Flow" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Flow" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Flow",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Flow" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Flow" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/flow/{id}": {
      "get": {
        "tags": ["Flow"],
        "summary": "Detailed information about a Flow resource.",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Flow",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Flow" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Flow" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Flow"],
        "summary": "Delete a Flow resource.",
        "description": "Available since: 6.4.6.0",
        "operationId": "deleteFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Flow"],
        "summary": "Partially update information about a Flow resource.",
        "description": "Available since: 6.4.6.0",
        "operationId": "updateFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Flow resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Flow" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Flow" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Flow",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Flow" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Flow" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/flow-sequence": {
      "get": {
        "tags": ["Flow Sequence"],
        "summary": "List with basic information of Flow Sequence resources.",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowSequenceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Flow Sequence resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/FlowSequence"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/flow-sequence?limit=25"
                                },
                                "last": {
                                  "example": "/flow-sequence?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow-sequence?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow-sequence?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/FlowSequence" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Flow Sequence"],
        "summary": "Create a new Flow Sequence resources.",
        "description": "Available since: 6.4.6.0",
        "operationId": "createFlowSequence",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/FlowSequence" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlowSequence" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowSequence",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/FlowSequence" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlowSequence" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/flow-sequence/{id}": {
      "get": {
        "tags": ["Flow Sequence"],
        "summary": "Detailed information about a Flow Sequence resource.",
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowSequence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_sequence",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of FlowSequence",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/FlowSequence" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlowSequence" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Flow Sequence"],
        "summary": "Delete a Flow Sequence resource.",
        "description": "Available since: 6.4.6.0",
        "operationId": "deleteFlowSequence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_sequence",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Flow Sequence"],
        "summary": "Partially update information about a Flow Sequence resource.",
        "description": "Available since: 6.4.6.0",
        "operationId": "updateFlowSequence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_sequence",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Flow Sequence resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/FlowSequence" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlowSequence" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowSequence",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/FlowSequence" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlowSequence" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/flow-template": {
      "get": {
        "tags": ["Flow Template"],
        "summary": "List with basic information of Flow Template resources.",
        "description": "Available since: 6.4.18.0",
        "operationId": "getFlowTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Flow Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/FlowTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/flow-template?limit=25"
                                },
                                "last": {
                                  "example": "/flow-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/FlowTemplate" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Flow Template"],
        "summary": "Create a new Flow Template resources.",
        "description": "Available since: 6.4.18.0",
        "operationId": "createFlowTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/FlowTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlowTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/FlowTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlowTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/flow-template/{id}": {
      "get": {
        "tags": ["Flow Template"],
        "summary": "Detailed information about a Flow Template resource.",
        "description": "Available since: 6.4.18.0",
        "operationId": "getFlowTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of FlowTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/FlowTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlowTemplate" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Flow Template"],
        "summary": "Delete a Flow Template resource.",
        "description": "Available since: 6.4.18.0",
        "operationId": "deleteFlowTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Flow Template"],
        "summary": "Partially update information about a Flow Template resource.",
        "description": "Available since: 6.4.18.0",
        "operationId": "updateFlowTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the flow_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Flow Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/FlowTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlowTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of FlowTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/FlowTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlowTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/import-export-file": {
      "get": {
        "tags": ["Import Export File"],
        "summary": "List with basic information of Import Export File resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportFileList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Import Export File resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ImportExportFile"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/import-export-file?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-file?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-file?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-file?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImportExportFile"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Import Export File"],
        "summary": "Create a new Import Export File resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportFile",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ImportExportFile" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportExportFile" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportFile" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/import-export-file/{id}": {
      "get": {
        "tags": ["Import Export File"],
        "summary": "Detailed information about a Import Export File resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_file",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ImportExportFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportFile" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Import Export File"],
        "summary": "Delete a Import Export File resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_file",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Import Export File"],
        "summary": "Partially update information about a Import Export File resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_file",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Import Export File resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ImportExportFile" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportExportFile" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportFile" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/import-export-log": {
      "get": {
        "tags": ["Import Export Log"],
        "summary": "List with basic information of Import Export Log resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportLogList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Import Export Log resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ImportExportLog"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/import-export-log?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-log?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImportExportLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Import Export Log"],
        "summary": "Create a new Import Export Log resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportLog",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ImportExportLog" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportExportLog" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportLog" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/import-export-log/{id}": {
      "get": {
        "tags": ["Import Export Log"],
        "summary": "Detailed information about a Import Export Log resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ImportExportLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportLog" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Import Export Log"],
        "summary": "Delete a Import Export Log resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Import Export Log"],
        "summary": "Partially update information about a Import Export Log resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Import Export Log resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ImportExportLog" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportExportLog" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportLog" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/import-export-profile": {
      "get": {
        "tags": ["Import Export Profile"],
        "summary": "List with basic information of Import Export Profile resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportProfileList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Import Export Profile resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ImportExportProfile"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/import-export-profile?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-profile?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-profile?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-profile?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImportExportProfile"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Import Export Profile"],
        "summary": "Create a new Import Export Profile resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportProfile",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportProfile"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportExportProfile" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportProfile" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/import-export-profile/{id}": {
      "get": {
        "tags": ["Import Export Profile"],
        "summary": "Detailed information about a Import Export Profile resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_profile",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ImportExportProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportProfile" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Import Export Profile"],
        "summary": "Delete a Import Export Profile resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_profile",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Import Export Profile"],
        "summary": "Partially update information about a Import Export Profile resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the import_export_profile",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Import Export Profile resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportProfile"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportExportProfile" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ImportExportProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImportExportProfile" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/integration": {
      "get": {
        "tags": ["Integration"],
        "summary": "List with basic information of Integration resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getIntegrationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Integration resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Integration"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/integration?limit=25" },
                                "last": {
                                  "example": "/integration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/integration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/integration?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Integration" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Integration"],
        "summary": "Create a new Integration resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createIntegration",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Integration" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Integration" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Integration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Integration" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Integration" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/integration/{id}": {
      "get": {
        "tags": ["Integration"],
        "summary": "Detailed information about a Integration resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the integration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Integration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Integration" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Integration" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Integration"],
        "summary": "Delete a Integration resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the integration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Integration"],
        "summary": "Partially update information about a Integration resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the integration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Integration resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Integration" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Integration" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Integration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Integration" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Integration" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/landing-page": {
      "get": {
        "tags": ["Landing Page"],
        "summary": "List with basic information of Landing Page resources.",
        "description": "Available since: 6.4.0.0",
        "operationId": "getLandingPageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Landing Page resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/LandingPage"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/landing-page?limit=25"
                                },
                                "last": {
                                  "example": "/landing-page?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/landing-page?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/landing-page?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/LandingPage" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Landing Page"],
        "summary": "Create a new Landing Page resources.",
        "description": "Available since: 6.4.0.0",
        "operationId": "createLandingPage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/LandingPage" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LandingPage" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LandingPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/LandingPage" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LandingPage" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/landing-page/{id}": {
      "get": {
        "tags": ["Landing Page"],
        "summary": "Detailed information about a Landing Page resource.",
        "description": "Available since: 6.4.0.0",
        "operationId": "getLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the landing_page",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of LandingPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/LandingPage" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LandingPage" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Landing Page"],
        "summary": "Delete a Landing Page resource.",
        "description": "Available since: 6.4.0.0",
        "operationId": "deleteLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the landing_page",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Landing Page"],
        "summary": "Partially update information about a Landing Page resource.",
        "description": "Available since: 6.4.0.0",
        "operationId": "updateLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the landing_page",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Landing Page resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/LandingPage" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LandingPage" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LandingPage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/LandingPage" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LandingPage" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/language": {
      "get": {
        "tags": ["Language"],
        "summary": "List with basic information of Language resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLanguageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Language resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Language"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/language?limit=25" },
                                "last": {
                                  "example": "/language?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/language?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/language?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Language" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Language"],
        "summary": "Create a new Language resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createLanguage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Language" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Language" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Language",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Language" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Language" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/language/{id}": {
      "get": {
        "tags": ["Language"],
        "summary": "Detailed information about a Language resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the language",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Language",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Language" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Language" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Language"],
        "summary": "Delete a Language resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the language",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Language"],
        "summary": "Partially update information about a Language resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the language",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Language resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Language" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Language" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Language",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Language" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Language" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/locale": {
      "get": {
        "tags": ["Locale"],
        "summary": "List with basic information of Locale resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLocaleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Locale resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Locale" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/locale?limit=25" },
                                "last": {
                                  "example": "/locale?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/locale?limit=25&page=4"
                                },
                                "prev": { "example": "/locale?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Locale" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Locale"],
        "summary": "Create a new Locale resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createLocale",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Locale" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Locale" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Locale",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Locale" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Locale" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/locale/{id}": {
      "get": {
        "tags": ["Locale"],
        "summary": "Detailed information about a Locale resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLocale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the locale",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Locale",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Locale" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Locale" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Locale"],
        "summary": "Delete a Locale resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLocale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the locale",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Locale"],
        "summary": "Partially update information about a Locale resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLocale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the locale",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Locale resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Locale" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Locale" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Locale",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Locale" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Locale" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/log-entry": {
      "get": {
        "tags": ["Log Entry"],
        "summary": "List with basic information of Log Entry resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLogEntryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Log Entry resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/LogEntry"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/log-entry?limit=25" },
                                "last": {
                                  "example": "/log-entry?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/log-entry?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/log-entry?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/LogEntry" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Log Entry"],
        "summary": "Create a new Log Entry resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createLogEntry",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/LogEntry" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogEntry" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LogEntry",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/LogEntry" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LogEntry" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/log-entry/{id}": {
      "get": {
        "tags": ["Log Entry"],
        "summary": "Detailed information about a Log Entry resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the log_entry",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of LogEntry",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/LogEntry" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LogEntry" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Log Entry"],
        "summary": "Delete a Log Entry resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the log_entry",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Log Entry"],
        "summary": "Partially update information about a Log Entry resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the log_entry",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Log Entry resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/LogEntry" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogEntry" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of LogEntry",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/LogEntry" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LogEntry" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/mail-header-footer": {
      "get": {
        "tags": ["Mail Header Footer"],
        "summary": "List with basic information of Mail Header Footer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailHeaderFooterList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mail Header Footer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MailHeaderFooter"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/mail-header-footer?limit=25"
                                },
                                "last": {
                                  "example": "/mail-header-footer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-header-footer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-header-footer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MailHeaderFooter"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Mail Header Footer"],
        "summary": "Create a new Mail Header Footer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailHeaderFooter",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MailHeaderFooter" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MailHeaderFooter" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailHeaderFooter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailHeaderFooter" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/mail-header-footer/{id}": {
      "get": {
        "tags": ["Mail Header Footer"],
        "summary": "Detailed information about a Mail Header Footer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailHeaderFooter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_header_footer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MailHeaderFooter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailHeaderFooter" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Mail Header Footer"],
        "summary": "Delete a Mail Header Footer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailHeaderFooter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_header_footer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Mail Header Footer"],
        "summary": "Partially update information about a Mail Header Footer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailHeaderFooter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_header_footer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Mail Header Footer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MailHeaderFooter" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MailHeaderFooter" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailHeaderFooter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailHeaderFooter" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/mail-template": {
      "get": {
        "tags": ["Mail Template"],
        "summary": "List with basic information of Mail Template resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mail Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MailTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/mail-template?limit=25"
                                },
                                "last": {
                                  "example": "/mail-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/MailTemplate" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Mail Template"],
        "summary": "Create a new Mail Template resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MailTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MailTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MailTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/mail-template/{id}": {
      "get": {
        "tags": ["Mail Template"],
        "summary": "Detailed information about a Mail Template resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MailTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MailTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailTemplate" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Mail Template"],
        "summary": "Delete a Mail Template resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Mail Template"],
        "summary": "Partially update information about a Mail Template resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Mail Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MailTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MailTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MailTemplate" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/mail-template-type": {
      "get": {
        "tags": ["Mail Template Type"],
        "summary": "List with basic information of Mail Template Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mail Template Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MailTemplateType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/mail-template-type?limit=25"
                                },
                                "last": {
                                  "example": "/mail-template-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-template-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-template-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MailTemplateType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Mail Template Type"],
        "summary": "Create a new Mail Template Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailTemplateType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MailTemplateType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MailTemplateType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplateType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailTemplateType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/mail-template-type/{id}": {
      "get": {
        "tags": ["Mail Template Type"],
        "summary": "Detailed information about a Mail Template Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MailTemplateType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailTemplateType" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Mail Template Type"],
        "summary": "Delete a Mail Template Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailTemplateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Mail Template Type"],
        "summary": "Partially update information about a Mail Template Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailTemplateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the mail_template_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Mail Template Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MailTemplateType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MailTemplateType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MailTemplateType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MailTemplateType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/main-category": {
      "get": {
        "tags": ["Main Category"],
        "summary": "List with basic information of Main Category resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getMainCategoryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Main Category resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MainCategory"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/main-category?limit=25"
                                },
                                "last": {
                                  "example": "/main-category?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/main-category?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/main-category?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/MainCategory" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Main Category"],
        "summary": "Create a new Main Category resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "createMainCategory",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MainCategory" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MainCategory" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MainCategory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MainCategory" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MainCategory" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/main-category/{id}": {
      "get": {
        "tags": ["Main Category"],
        "summary": "Detailed information about a Main Category resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getMainCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the main_category",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MainCategory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MainCategory" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MainCategory" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Main Category"],
        "summary": "Delete a Main Category resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteMainCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the main_category",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Main Category"],
        "summary": "Partially update information about a Main Category resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateMainCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the main_category",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Main Category resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MainCategory" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MainCategory" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MainCategory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MainCategory" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MainCategory" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media": {
      "get": {
        "tags": ["Media"],
        "summary": "List with basic information of Media resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Media" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/media?limit=25" },
                                "last": {
                                  "example": "/media?limit=25&page=11"
                                },
                                "next": { "example": "/media?limit=25&page=4" },
                                "prev": { "example": "/media?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Media" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media"],
        "summary": "Create a new Media resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMedia",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Media" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Media" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Media",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Media" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Media" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media/{id}": {
      "get": {
        "tags": ["Media"],
        "summary": "Detailed information about a Media resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Media",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Media" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Media" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media"],
        "summary": "Delete a Media resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media"],
        "summary": "Partially update information about a Media resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Media" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Media" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Media",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Media" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Media" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media-ai-tag": {
      "get": {
        "tags": ["Media Ai Tag"],
        "summary": "List with basic information of Media Ai Tag resources.",
        "description": "",
        "operationId": "getMediaAiTagList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Ai Tag resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaAiTag"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-ai-tag?limit=25"
                                },
                                "last": {
                                  "example": "/media-ai-tag?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-ai-tag?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-ai-tag?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/MediaAiTag" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media Ai Tag"],
        "summary": "Create a new Media Ai Tag resources.",
        "description": "",
        "operationId": "createMediaAiTag",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaAiTag" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaAiTag" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaAiTag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MediaAiTag" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaAiTag" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media-ai-tag/{id}": {
      "get": {
        "tags": ["Media Ai Tag"],
        "summary": "Detailed information about a Media Ai Tag resource.",
        "description": "",
        "operationId": "getMediaAiTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_ai_tag",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaAiTag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MediaAiTag" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaAiTag" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media Ai Tag"],
        "summary": "Delete a Media Ai Tag resource.",
        "description": "",
        "operationId": "deleteMediaAiTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_ai_tag",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media Ai Tag"],
        "summary": "Partially update information about a Media Ai Tag resource.",
        "description": "",
        "operationId": "updateMediaAiTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_ai_tag",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Ai Tag resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaAiTag" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaAiTag" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaAiTag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MediaAiTag" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaAiTag" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media-default-folder": {
      "get": {
        "tags": ["Media Default Folder"],
        "summary": "List with basic information of Media Default Folder resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaDefaultFolderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Default Folder resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaDefaultFolder"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-default-folder?limit=25"
                                },
                                "last": {
                                  "example": "/media-default-folder?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-default-folder?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-default-folder?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaDefaultFolder"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media Default Folder"],
        "summary": "Create a new Media Default Folder resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaDefaultFolder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaDefaultFolder" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaDefaultFolder" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaDefaultFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaDefaultFolder" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media-default-folder/{id}": {
      "get": {
        "tags": ["Media Default Folder"],
        "summary": "Detailed information about a Media Default Folder resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaDefaultFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_default_folder",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaDefaultFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaDefaultFolder" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media Default Folder"],
        "summary": "Delete a Media Default Folder resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaDefaultFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_default_folder",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media Default Folder"],
        "summary": "Partially update information about a Media Default Folder resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaDefaultFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_default_folder",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Default Folder resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaDefaultFolder" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaDefaultFolder" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaDefaultFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaDefaultFolder" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media-folder": {
      "get": {
        "tags": ["Media Folder"],
        "summary": "List with basic information of Media Folder resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Folder resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaFolder"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-folder?limit=25"
                                },
                                "last": {
                                  "example": "/media-folder?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-folder?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-folder?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/MediaFolder" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media Folder"],
        "summary": "Create a new Media Folder resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaFolder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaFolder" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaFolder" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MediaFolder" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaFolder" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media-folder/{id}": {
      "get": {
        "tags": ["Media Folder"],
        "summary": "Detailed information about a Media Folder resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MediaFolder" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaFolder" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media Folder"],
        "summary": "Delete a Media Folder resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media Folder"],
        "summary": "Partially update information about a Media Folder resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Folder resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaFolder" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaFolder" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/MediaFolder" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaFolder" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media-folder-configuration": {
      "get": {
        "tags": ["Media Folder Configuration"],
        "summary": "List with basic information of Media Folder Configuration resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderConfigurationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Folder Configuration resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaFolderConfiguration"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-folder-configuration?limit=25"
                                },
                                "last": {
                                  "example": "/media-folder-configuration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-folder-configuration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-folder-configuration?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaFolderConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media Folder Configuration"],
        "summary": "Create a new Media Folder Configuration resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaFolderConfiguration",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolderConfiguration"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolderConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolderConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media-folder-configuration/{id}": {
      "get": {
        "tags": ["Media Folder Configuration"],
        "summary": "Detailed information about a Media Folder Configuration resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder_configuration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaFolderConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media Folder Configuration"],
        "summary": "Delete a Media Folder Configuration resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaFolderConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder_configuration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media Folder Configuration"],
        "summary": "Partially update information about a Media Folder Configuration resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaFolderConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_folder_configuration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Folder Configuration resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolderConfiguration"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolderConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaFolderConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media-thumbnail": {
      "get": {
        "tags": ["Media Thumbnail"],
        "summary": "List with basic information of Media Thumbnail resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Thumbnail resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaThumbnail"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-thumbnail?limit=25"
                                },
                                "last": {
                                  "example": "/media-thumbnail?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-thumbnail?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-thumbnail?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/MediaThumbnail" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media Thumbnail"],
        "summary": "Create a new Media Thumbnail resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaThumbnail",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaThumbnail" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaThumbnail" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnail",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaThumbnail" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media-thumbnail/{id}": {
      "get": {
        "tags": ["Media Thumbnail"],
        "summary": "Detailed information about a Media Thumbnail resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnail",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaThumbnail" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media Thumbnail"],
        "summary": "Delete a Media Thumbnail resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media Thumbnail"],
        "summary": "Partially update information about a Media Thumbnail resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Thumbnail resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaThumbnail" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaThumbnail" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnail",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaThumbnail" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/media-thumbnail-size": {
      "get": {
        "tags": ["Media Thumbnail Size"],
        "summary": "List with basic information of Media Thumbnail Size resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailSizeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Media Thumbnail Size resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/MediaThumbnailSize"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/media-thumbnail-size?limit=25"
                                },
                                "last": {
                                  "example": "/media-thumbnail-size?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-thumbnail-size?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-thumbnail-size?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MediaThumbnailSize"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Media Thumbnail Size"],
        "summary": "Create a new Media Thumbnail Size resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaThumbnailSize",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaThumbnailSize" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaThumbnailSize" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnailSize",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaThumbnailSize" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/media-thumbnail-size/{id}": {
      "get": {
        "tags": ["Media Thumbnail Size"],
        "summary": "Detailed information about a Media Thumbnail Size resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailSize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail_size",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnailSize",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaThumbnailSize" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Media Thumbnail Size"],
        "summary": "Delete a Media Thumbnail Size resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaThumbnailSize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail_size",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Media Thumbnail Size"],
        "summary": "Partially update information about a Media Thumbnail Size resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaThumbnailSize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the media_thumbnail_size",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Media Thumbnail Size resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/MediaThumbnailSize" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MediaThumbnailSize" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of MediaThumbnailSize",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MediaThumbnailSize" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/newsletter-recipient": {
      "get": {
        "tags": ["Newsletter Recipient"],
        "summary": "List with basic information of Newsletter Recipient resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNewsletterRecipientList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Newsletter Recipient resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NewsletterRecipient"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/newsletter-recipient?limit=25"
                                },
                                "last": {
                                  "example": "/newsletter-recipient?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/newsletter-recipient?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/newsletter-recipient?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NewsletterRecipient"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Newsletter Recipient"],
        "summary": "Create a new Newsletter Recipient resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNewsletterRecipient",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NewsletterRecipient"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewsletterRecipient" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NewsletterRecipient",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NewsletterRecipient" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/newsletter-recipient/{id}": {
      "get": {
        "tags": ["Newsletter Recipient"],
        "summary": "Detailed information about a Newsletter Recipient resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNewsletterRecipient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the newsletter_recipient",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NewsletterRecipient",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NewsletterRecipient" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Newsletter Recipient"],
        "summary": "Delete a Newsletter Recipient resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNewsletterRecipient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the newsletter_recipient",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Newsletter Recipient"],
        "summary": "Partially update information about a Newsletter Recipient resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNewsletterRecipient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the newsletter_recipient",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Newsletter Recipient resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NewsletterRecipient"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewsletterRecipient" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NewsletterRecipient",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NewsletterRecipient" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/notification": {
      "get": {
        "tags": ["Notification"],
        "summary": "List with basic information of Notification resources.",
        "description": "Available since: 6.4.7.0",
        "operationId": "getNotificationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Notification resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Notification"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/notification?limit=25"
                                },
                                "last": {
                                  "example": "/notification?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/notification?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/notification?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Notification" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Notification"],
        "summary": "Create a new Notification resources.",
        "description": "Available since: 6.4.7.0",
        "operationId": "createNotification",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Notification" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Notification" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Notification",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Notification" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Notification" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/notification/{id}": {
      "get": {
        "tags": ["Notification"],
        "summary": "Detailed information about a Notification resource.",
        "description": "Available since: 6.4.7.0",
        "operationId": "getNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the notification",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Notification",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Notification" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Notification" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Notification"],
        "summary": "Delete a Notification resource.",
        "description": "Available since: 6.4.7.0",
        "operationId": "deleteNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the notification",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Notification"],
        "summary": "Partially update information about a Notification resource.",
        "description": "Available since: 6.4.7.0",
        "operationId": "updateNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the notification",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Notification resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Notification" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Notification" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Notification",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Notification" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Notification" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/number-range": {
      "get": {
        "tags": ["Number Range"],
        "summary": "List with basic information of Number Range resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRange"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range?limit=25"
                                },
                                "last": {
                                  "example": "/number-range?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/NumberRange" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Number Range"],
        "summary": "Create a new Number Range resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRange",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/NumberRange" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NumberRange" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRange",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/NumberRange" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRange" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/number-range/{id}": {
      "get": {
        "tags": ["Number Range"],
        "summary": "Detailed information about a Number Range resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRange",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/NumberRange" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRange" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Number Range"],
        "summary": "Delete a Number Range resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Number Range"],
        "summary": "Partially update information about a Number Range resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/NumberRange" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NumberRange" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRange",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/NumberRange" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRange" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/number-range-sales-channel": {
      "get": {
        "tags": ["Number Range Sales Channel"],
        "summary": "List with basic information of Number Range Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Number Range Sales Channel"],
        "summary": "Create a new Number Range Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/number-range-sales-channel/{id}": {
      "get": {
        "tags": ["Number Range Sales Channel"],
        "summary": "Detailed information about a Number Range Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRangeSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Number Range Sales Channel"],
        "summary": "Delete a Number Range Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Number Range Sales Channel"],
        "summary": "Partially update information about a Number Range Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/number-range-state": {
      "get": {
        "tags": ["Number Range State"],
        "summary": "List with basic information of Number Range State resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeStateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range State resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeState"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range-state?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-state?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeState"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Number Range State"],
        "summary": "Create a new Number Range State resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeState",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/NumberRangeState" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NumberRangeState" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRangeState" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/number-range-state/{id}": {
      "get": {
        "tags": ["Number Range State"],
        "summary": "Detailed information about a Number Range State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRangeState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRangeState" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Number Range State"],
        "summary": "Delete a Number Range State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Number Range State"],
        "summary": "Partially update information about a Number Range State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range State resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/NumberRangeState" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NumberRangeState" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRangeState" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/number-range-type": {
      "get": {
        "tags": ["Number Range Type"],
        "summary": "List with basic information of Number Range Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Number Range Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/number-range-type?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Number Range Type"],
        "summary": "Create a new Number Range Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/NumberRangeType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NumberRangeType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRangeType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/number-range-type/{id}": {
      "get": {
        "tags": ["Number Range Type"],
        "summary": "Detailed information about a Number Range Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of NumberRangeType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRangeType" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Number Range Type"],
        "summary": "Delete a Number Range Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Number Range Type"],
        "summary": "Partially update information about a Number Range Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the number_range_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Number Range Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/NumberRangeType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NumberRangeType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of NumberRangeType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NumberRangeType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order": {
      "get": {
        "tags": ["Order"],
        "summary": "List with basic information of Order resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Order" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/order?limit=25" },
                                "last": {
                                  "example": "/order?limit=25&page=11"
                                },
                                "next": { "example": "/order?limit=25&page=4" },
                                "prev": { "example": "/order?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Order" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order"],
        "summary": "Create a new Order resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Order" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Order" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Order",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Order" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": ["Order"],
        "summary": "Detailed information about a Order resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Order",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Order" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order"],
        "summary": "Delete a Order resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order"],
        "summary": "Partially update information about a Order resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Order" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Order" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Order",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Order" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-address": {
      "get": {
        "tags": ["Order Address"],
        "summary": "List with basic information of Order Address resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderAddressList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Address resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderAddress"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-address?limit=25"
                                },
                                "last": {
                                  "example": "/order-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-address?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/OrderAddress" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Address"],
        "summary": "Create a new Order Address resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderAddress",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderAddress" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderAddress" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderAddress" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-address/{id}": {
      "get": {
        "tags": ["Order Address"],
        "summary": "Detailed information about a Order Address resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderAddress" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderAddress" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Address"],
        "summary": "Delete a Order Address resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Address"],
        "summary": "Partially update information about a Order Address resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Address resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderAddress" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderAddress" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderAddress" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-customer": {
      "get": {
        "tags": ["Order Customer"],
        "summary": "List with basic information of Order Customer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderCustomerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Customer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderCustomer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-customer?limit=25"
                                },
                                "last": {
                                  "example": "/order-customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-customer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/OrderCustomer" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Customer"],
        "summary": "Create a new Order Customer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderCustomer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderCustomer" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderCustomer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderCustomer" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderCustomer" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-customer/{id}": {
      "get": {
        "tags": ["Order Customer"],
        "summary": "Detailed information about a Order Customer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderCustomer" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderCustomer" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Customer"],
        "summary": "Delete a Order Customer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Customer"],
        "summary": "Partially update information about a Order Customer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Customer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderCustomer" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderCustomer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderCustomer" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderCustomer" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-delivery": {
      "get": {
        "tags": ["Order Delivery"],
        "summary": "List with basic information of Order Delivery resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Delivery resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderDelivery"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-delivery?limit=25"
                                },
                                "last": {
                                  "example": "/order-delivery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-delivery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-delivery?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/OrderDelivery" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Delivery"],
        "summary": "Create a new Order Delivery resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderDelivery",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderDelivery" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderDelivery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDelivery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderDelivery" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderDelivery" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-delivery/{id}": {
      "get": {
        "tags": ["Order Delivery"],
        "summary": "Detailed information about a Order Delivery resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderDelivery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderDelivery" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderDelivery" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Delivery"],
        "summary": "Delete a Order Delivery resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Delivery"],
        "summary": "Partially update information about a Order Delivery resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderDelivery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Delivery resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderDelivery" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderDelivery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDelivery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderDelivery" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderDelivery" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-delivery-position": {
      "get": {
        "tags": ["Order Delivery Position"],
        "summary": "List with basic information of Order Delivery Position resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryPositionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Delivery Position resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderDeliveryPosition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-delivery-position?limit=25"
                                },
                                "last": {
                                  "example": "/order-delivery-position?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-delivery-position?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-delivery-position?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderDeliveryPosition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Delivery Position"],
        "summary": "Create a new Order Delivery Position resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderDeliveryPosition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDeliveryPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderDeliveryPosition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDeliveryPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-delivery-position/{id}": {
      "get": {
        "tags": ["Order Delivery Position"],
        "summary": "Detailed information about a Order Delivery Position resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery_position",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderDeliveryPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Delivery Position"],
        "summary": "Delete a Order Delivery Position resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderDeliveryPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery_position",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Delivery Position"],
        "summary": "Partially update information about a Order Delivery Position resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderDeliveryPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_delivery_position",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Delivery Position resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDeliveryPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderDeliveryPosition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderDeliveryPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-line-item": {
      "get": {
        "tags": ["Order Line Item"],
        "summary": "List with basic information of Order Line Item resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderLineItemList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Line Item resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderLineItem"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-line-item?limit=25"
                                },
                                "last": {
                                  "example": "/order-line-item?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-line-item?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-line-item?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/OrderLineItem" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Line Item"],
        "summary": "Create a new Order Line Item resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderLineItem",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderLineItem" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderLineItem" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderLineItem" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderLineItem" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-line-item/{id}": {
      "get": {
        "tags": ["Order Line Item"],
        "summary": "Detailed information about a Order Line Item resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderLineItem" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderLineItem" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Line Item"],
        "summary": "Delete a Order Line Item resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Line Item"],
        "summary": "Partially update information about a Order Line Item resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Line Item resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderLineItem" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderLineItem" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderLineItem" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderLineItem" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-line-item-download": {
      "get": {
        "tags": ["Order Line Item Download"],
        "summary": "List with basic information of Order Line Item Download resources.",
        "description": "Available since: 6.4.19.0",
        "operationId": "getOrderLineItemDownloadList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Line Item Download resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderLineItemDownload"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-line-item-download?limit=25"
                                },
                                "last": {
                                  "example": "/order-line-item-download?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-line-item-download?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-line-item-download?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderLineItemDownload"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Line Item Download"],
        "summary": "Create a new Order Line Item Download resources.",
        "description": "Available since: 6.4.19.0",
        "operationId": "createOrderLineItemDownload",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItemDownload"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderLineItemDownload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItemDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItemDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItemDownload"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-line-item-download/{id}": {
      "get": {
        "tags": ["Order Line Item Download"],
        "summary": "Detailed information about a Order Line Item Download resource.",
        "description": "Available since: 6.4.19.0",
        "operationId": "getOrderLineItemDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item_download",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderLineItemDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItemDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItemDownload"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Line Item Download"],
        "summary": "Delete a Order Line Item Download resource.",
        "description": "Available since: 6.4.19.0",
        "operationId": "deleteOrderLineItemDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item_download",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Line Item Download"],
        "summary": "Partially update information about a Order Line Item Download resource.",
        "description": "Available since: 6.4.19.0",
        "operationId": "updateOrderLineItemDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_line_item_download",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Line Item Download resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItemDownload"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderLineItemDownload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderLineItemDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItemDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItemDownload"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-product-warehouse": {
      "get": {
        "tags": ["Order Product Warehouse"],
        "summary": "List with basic information of Order Product Warehouse resources.",
        "description": "",
        "operationId": "getOrderProductWarehouseList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Product Warehouse resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderProductWarehouse"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-product-warehouse?limit=25"
                                },
                                "last": {
                                  "example": "/order-product-warehouse?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-product-warehouse?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-product-warehouse?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderProductWarehouse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Product Warehouse"],
        "summary": "Create a new Order Product Warehouse resources.",
        "description": "",
        "operationId": "createOrderProductWarehouse",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderProductWarehouse"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderProductWarehouse" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderProductWarehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderProductWarehouse"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductWarehouse"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-product-warehouse/{id}": {
      "get": {
        "tags": ["Order Product Warehouse"],
        "summary": "Detailed information about a Order Product Warehouse resource.",
        "description": "",
        "operationId": "getOrderProductWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_product_warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderProductWarehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderProductWarehouse"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductWarehouse"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Product Warehouse"],
        "summary": "Delete a Order Product Warehouse resource.",
        "description": "",
        "operationId": "deleteOrderProductWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_product_warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Product Warehouse"],
        "summary": "Partially update information about a Order Product Warehouse resource.",
        "description": "",
        "operationId": "updateOrderProductWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_product_warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Product Warehouse resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderProductWarehouse"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderProductWarehouse" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderProductWarehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderProductWarehouse"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderProductWarehouse"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-return": {
      "get": {
        "tags": ["Order Return"],
        "summary": "List with basic information of Order Return resources.",
        "description": "",
        "operationId": "getOrderReturnList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Return resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderReturn"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-return?limit=25"
                                },
                                "last": {
                                  "example": "/order-return?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-return?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-return?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/OrderReturn" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Return"],
        "summary": "Create a new Order Return resources.",
        "description": "",
        "operationId": "createOrderReturn",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderReturn" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderReturn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderReturn",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderReturn" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderReturn" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-return/{id}": {
      "get": {
        "tags": ["Order Return"],
        "summary": "Detailed information about a Order Return resource.",
        "description": "",
        "operationId": "getOrderReturn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderReturn",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderReturn" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderReturn" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Return"],
        "summary": "Delete a Order Return resource.",
        "description": "",
        "operationId": "deleteOrderReturn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Return"],
        "summary": "Partially update information about a Order Return resource.",
        "description": "",
        "operationId": "updateOrderReturn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Return resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderReturn" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderReturn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderReturn",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/OrderReturn" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderReturn" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-return-line-item": {
      "get": {
        "tags": ["Order Return Line Item"],
        "summary": "List with basic information of Order Return Line Item resources.",
        "description": "",
        "operationId": "getOrderReturnLineItemList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Return Line Item resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderReturnLineItem"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-return-line-item?limit=25"
                                },
                                "last": {
                                  "example": "/order-return-line-item?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-return-line-item?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-return-line-item?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderReturnLineItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Return Line Item"],
        "summary": "Create a new Order Return Line Item resources.",
        "description": "",
        "operationId": "createOrderReturnLineItem",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderReturnLineItem"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderReturnLineItem" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderReturnLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderReturnLineItem"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderReturnLineItem" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-return-line-item/{id}": {
      "get": {
        "tags": ["Order Return Line Item"],
        "summary": "Detailed information about a Order Return Line Item resource.",
        "description": "",
        "operationId": "getOrderReturnLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return_line_item",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderReturnLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderReturnLineItem"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderReturnLineItem" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Return Line Item"],
        "summary": "Delete a Order Return Line Item resource.",
        "description": "",
        "operationId": "deleteOrderReturnLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return_line_item",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Return Line Item"],
        "summary": "Partially update information about a Order Return Line Item resource.",
        "description": "",
        "operationId": "updateOrderReturnLineItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return_line_item",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Return Line Item resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderReturnLineItem"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderReturnLineItem" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderReturnLineItem",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderReturnLineItem"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderReturnLineItem" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-return-line-item-reason": {
      "get": {
        "tags": ["Order Return Line Item Reason"],
        "summary": "List with basic information of Order Return Line Item Reason resources.",
        "description": "",
        "operationId": "getOrderReturnLineItemReasonList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Return Line Item Reason resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderReturnLineItemReason"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-return-line-item-reason?limit=25"
                                },
                                "last": {
                                  "example": "/order-return-line-item-reason?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-return-line-item-reason?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-return-line-item-reason?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderReturnLineItemReason"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Return Line Item Reason"],
        "summary": "Create a new Order Return Line Item Reason resources.",
        "description": "",
        "operationId": "createOrderReturnLineItemReason",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderReturnLineItemReason"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderReturnLineItemReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderReturnLineItemReason",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderReturnLineItemReason"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReturnLineItemReason"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-return-line-item-reason/{id}": {
      "get": {
        "tags": ["Order Return Line Item Reason"],
        "summary": "Detailed information about a Order Return Line Item Reason resource.",
        "description": "",
        "operationId": "getOrderReturnLineItemReason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return_line_item_reason",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderReturnLineItemReason",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderReturnLineItemReason"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReturnLineItemReason"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Return Line Item Reason"],
        "summary": "Delete a Order Return Line Item Reason resource.",
        "description": "",
        "operationId": "deleteOrderReturnLineItemReason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return_line_item_reason",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Return Line Item Reason"],
        "summary": "Partially update information about a Order Return Line Item Reason resource.",
        "description": "",
        "operationId": "updateOrderReturnLineItemReason",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_return_line_item_reason",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Return Line Item Reason resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderReturnLineItemReason"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderReturnLineItemReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderReturnLineItemReason",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderReturnLineItemReason"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReturnLineItemReason"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-transaction": {
      "get": {
        "tags": ["Order Transaction"],
        "summary": "List with basic information of Order Transaction resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderTransactionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransaction"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Transaction"],
        "summary": "Create a new Order Transaction resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderTransaction",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderTransaction" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderTransaction" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransaction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderTransaction" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-transaction/{id}": {
      "get": {
        "tags": ["Order Transaction"],
        "summary": "Detailed information about a Order Transaction resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransaction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderTransaction" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Transaction"],
        "summary": "Delete a Order Transaction resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Transaction"],
        "summary": "Partially update information about a Order Transaction resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/OrderTransaction" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderTransaction" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransaction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderTransaction" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-transaction-capture": {
      "get": {
        "tags": ["Order Transaction Capture"],
        "summary": "List with basic information of Order Transaction Capture resources.",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction Capture resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCapture"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCapture"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Transaction Capture"],
        "summary": "Create a new Order Transaction Capture resources.",
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCapture",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCapture"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCapture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCapture",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-transaction-capture/{id}": {
      "get": {
        "tags": ["Order Transaction Capture"],
        "summary": "Detailed information about a Order Transaction Capture resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCapture",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Transaction Capture"],
        "summary": "Delete a Order Transaction Capture resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Transaction Capture"],
        "summary": "Partially update information about a Order Transaction Capture resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction Capture resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCapture"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCapture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCapture",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-transaction-capture-refund": {
      "get": {
        "tags": ["Order Transaction Capture Refund"],
        "summary": "List with basic information of Order Transaction Capture Refund resources.",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction Capture Refund resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture-refund?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Transaction Capture Refund"],
        "summary": "Create a new Order Transaction Capture Refund resources.",
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefund",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-transaction-capture-refund/{id}": {
      "get": {
        "tags": ["Order Transaction Capture Refund"],
        "summary": "Detailed information about a Order Transaction Capture Refund resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefund",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Transaction Capture Refund"],
        "summary": "Delete a Order Transaction Capture Refund resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Transaction Capture Refund"],
        "summary": "Partially update information about a Order Transaction Capture Refund resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction Capture Refund resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefund",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-transaction-capture-refund-position": {
      "get": {
        "tags": ["Order Transaction Capture Refund Position"],
        "summary": "List with basic information of Order Transaction Capture Refund Position resources.",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundPositionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Transaction Capture Refund Position resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture-refund-position?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Transaction Capture Refund Position"],
        "summary": "Create a new Order Transaction Capture Refund Position resources.",
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefundPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-transaction-capture-refund-position/{id}": {
      "get": {
        "tags": ["Order Transaction Capture Refund Position"],
        "summary": "Detailed information about a Order Transaction Capture Refund Position resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund_position",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefundPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Transaction Capture Refund Position"],
        "summary": "Delete a Order Transaction Capture Refund Position resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund_position",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Transaction Capture Refund Position"],
        "summary": "Partially update information about a Order Transaction Capture Refund Position resource.",
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_transaction_capture_refund_position",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Transaction Capture Refund Position resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderTransactionCaptureRefundPosition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/order-warehouse-group": {
      "get": {
        "tags": ["Order Warehouse Group"],
        "summary": "List with basic information of Order Warehouse Group resources.",
        "description": "",
        "operationId": "getOrderWarehouseGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Order Warehouse Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OrderWarehouseGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/order-warehouse-group?limit=25"
                                },
                                "last": {
                                  "example": "/order-warehouse-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-warehouse-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-warehouse-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderWarehouseGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Order Warehouse Group"],
        "summary": "Create a new Order Warehouse Group resources.",
        "description": "",
        "operationId": "createOrderWarehouseGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderWarehouseGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderWarehouseGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderWarehouseGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderWarehouseGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderWarehouseGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/order-warehouse-group/{id}": {
      "get": {
        "tags": ["Order Warehouse Group"],
        "summary": "Detailed information about a Order Warehouse Group resource.",
        "description": "",
        "operationId": "getOrderWarehouseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_warehouse_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of OrderWarehouseGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderWarehouseGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderWarehouseGroup" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Order Warehouse Group"],
        "summary": "Delete a Order Warehouse Group resource.",
        "description": "",
        "operationId": "deleteOrderWarehouseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_warehouse_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Order Warehouse Group"],
        "summary": "Partially update information about a Order Warehouse Group resource.",
        "description": "",
        "operationId": "updateOrderWarehouseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the order_warehouse_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Order Warehouse Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderWarehouseGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderWarehouseGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of OrderWarehouseGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderWarehouseGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderWarehouseGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/payment-method": {
      "get": {
        "tags": ["Payment Method"],
        "summary": "List with basic information of Payment Method resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPaymentMethodList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payment Method resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PaymentMethod"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/payment-method?limit=25"
                                },
                                "last": {
                                  "example": "/payment-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/payment-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/payment-method?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/PaymentMethod" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Payment Method"],
        "summary": "Create a new Payment Method resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPaymentMethod",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PaymentMethod" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentMethod" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/PaymentMethod" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentMethod" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/payment-method/{id}": {
      "get": {
        "tags": ["Payment Method"],
        "summary": "Detailed information about a Payment Method resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the payment_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/PaymentMethod" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentMethod" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Payment Method"],
        "summary": "Delete a Payment Method resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the payment_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Payment Method"],
        "summary": "Partially update information about a Payment Method resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the payment_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Payment Method resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PaymentMethod" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentMethod" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PaymentMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/PaymentMethod" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentMethod" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/plugin": {
      "get": {
        "tags": ["Plugin"],
        "summary": "List with basic information of Plugin resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPluginList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Plugin resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Plugin" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/plugin?limit=25" },
                                "last": {
                                  "example": "/plugin?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/plugin?limit=25&page=4"
                                },
                                "prev": { "example": "/plugin?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Plugin" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Plugin"],
        "summary": "Create a new Plugin resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPlugin",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Plugin" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Plugin" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Plugin",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Plugin" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plugin" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/plugin/{id}": {
      "get": {
        "tags": ["Plugin"],
        "summary": "Detailed information about a Plugin resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPlugin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the plugin",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Plugin",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Plugin" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plugin" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Plugin"],
        "summary": "Delete a Plugin resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePlugin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the plugin",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Plugin"],
        "summary": "Partially update information about a Plugin resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePlugin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the plugin",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Plugin resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Plugin" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Plugin" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Plugin",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Plugin" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Plugin" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product": {
      "get": {
        "tags": ["Product"],
        "summary": "List with basic information of Product resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Product"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/product?limit=25" },
                                "last": {
                                  "example": "/product?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Product" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Create a new Product resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProduct",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Product" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Product",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Product" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Detailed information about a Product resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Product",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Product" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete a Product resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product"],
        "summary": "Partially update information about a Product resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Product" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Product",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Product" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-configurator-setting": {
      "get": {
        "tags": ["Product Configurator Setting"],
        "summary": "List with basic information of Product Configurator Setting resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductConfiguratorSettingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Configurator Setting resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductConfiguratorSetting"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-configurator-setting?limit=25"
                                },
                                "last": {
                                  "example": "/product-configurator-setting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-configurator-setting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-configurator-setting?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductConfiguratorSetting"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Configurator Setting"],
        "summary": "Create a new Product Configurator Setting resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductConfiguratorSetting",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductConfiguratorSetting"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConfiguratorSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductConfiguratorSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-configurator-setting/{id}": {
      "get": {
        "tags": ["Product Configurator Setting"],
        "summary": "Detailed information about a Product Configurator Setting resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductConfiguratorSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_configurator_setting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductConfiguratorSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Configurator Setting"],
        "summary": "Delete a Product Configurator Setting resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductConfiguratorSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_configurator_setting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Configurator Setting"],
        "summary": "Partially update information about a Product Configurator Setting resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductConfiguratorSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_configurator_setting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Configurator Setting resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductConfiguratorSetting"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConfiguratorSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductConfiguratorSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-cross-selling": {
      "get": {
        "tags": ["Product Cross Selling"],
        "summary": "List with basic information of Product Cross Selling resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductCrossSellingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Cross Selling resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductCrossSelling"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-cross-selling?limit=25"
                                },
                                "last": {
                                  "example": "/product-cross-selling?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-cross-selling?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-cross-selling?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductCrossSelling"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Cross Selling"],
        "summary": "Create a new Product Cross Selling resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "createProductCrossSelling",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSelling"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductCrossSelling" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSelling",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductCrossSelling" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-cross-selling/{id}": {
      "get": {
        "tags": ["Product Cross Selling"],
        "summary": "Detailed information about a Product Cross Selling resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductCrossSelling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSelling",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductCrossSelling" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Cross Selling"],
        "summary": "Delete a Product Cross Selling resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteProductCrossSelling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Cross Selling"],
        "summary": "Partially update information about a Product Cross Selling resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateProductCrossSelling",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Cross Selling resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSelling"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductCrossSelling" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSelling",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductCrossSelling" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-cross-selling-assigned-products": {
      "get": {
        "tags": ["Product Cross Selling Assigned Products"],
        "summary": "List with basic information of Product Cross Selling Assigned Products resources.",
        "description": "Available since: 6.2.0.0",
        "operationId": "getProductCrossSellingAssignedProductsList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Cross Selling Assigned Products resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-cross-selling-assigned-products?limit=25"
                                },
                                "last": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Cross Selling Assigned Products"],
        "summary": "Create a new Product Cross Selling Assigned Products resources.",
        "description": "Available since: 6.2.0.0",
        "operationId": "createProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSellingAssignedProducts",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-cross-selling-assigned-products/{id}": {
      "get": {
        "tags": ["Product Cross Selling Assigned Products"],
        "summary": "Detailed information about a Product Cross Selling Assigned Products resource.",
        "description": "Available since: 6.2.0.0",
        "operationId": "getProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling_assigned_products",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSellingAssignedProducts",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Cross Selling Assigned Products"],
        "summary": "Delete a Product Cross Selling Assigned Products resource.",
        "description": "Available since: 6.2.0.0",
        "operationId": "deleteProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling_assigned_products",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Cross Selling Assigned Products"],
        "summary": "Partially update information about a Product Cross Selling Assigned Products resource.",
        "description": "Available since: 6.2.0.0",
        "operationId": "updateProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_cross_selling_assigned_products",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Cross Selling Assigned Products resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductCrossSellingAssignedProducts",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-download": {
      "get": {
        "tags": ["Product Download"],
        "summary": "List with basic information of Product Download resources.",
        "description": "Available since: 6.4.19.0",
        "operationId": "getProductDownloadList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Download resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductDownload"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-download?limit=25"
                                },
                                "last": {
                                  "example": "/product-download?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-download?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-download?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductDownload"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Download"],
        "summary": "Create a new Product Download resources.",
        "description": "Available since: 6.4.19.0",
        "operationId": "createProductDownload",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductDownload" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductDownload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductDownload" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-download/{id}": {
      "get": {
        "tags": ["Product Download"],
        "summary": "Detailed information about a Product Download resource.",
        "description": "Available since: 6.4.19.0",
        "operationId": "getProductDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_download",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductDownload" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Download"],
        "summary": "Delete a Product Download resource.",
        "description": "Available since: 6.4.19.0",
        "operationId": "deleteProductDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_download",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Download"],
        "summary": "Partially update information about a Product Download resource.",
        "description": "Available since: 6.4.19.0",
        "operationId": "updateProductDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_download",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Download resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductDownload" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductDownload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductDownload",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDownload"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductDownload" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-export": {
      "get": {
        "tags": ["Product Export"],
        "summary": "List with basic information of Product Export resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductExportList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Export resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductExport"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-export?limit=25"
                                },
                                "last": {
                                  "example": "/product-export?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-export?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-export?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProductExport" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Export"],
        "summary": "Create a new Product Export resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "createProductExport",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductExport" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductExport" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductExport",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductExport" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductExport" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-export/{id}": {
      "get": {
        "tags": ["Product Export"],
        "summary": "Detailed information about a Product Export resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_export",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductExport",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductExport" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductExport" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Export"],
        "summary": "Delete a Product Export resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteProductExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_export",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Export"],
        "summary": "Partially update information about a Product Export resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateProductExport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_export",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Export resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductExport" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductExport" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductExport",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductExport" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductExport" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-feature-set": {
      "get": {
        "tags": ["Product Feature Set"],
        "summary": "List with basic information of Product Feature Set resources.",
        "description": "Available since: 6.3.0.0",
        "operationId": "getProductFeatureSetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Feature Set resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductFeatureSet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-feature-set?limit=25"
                                },
                                "last": {
                                  "example": "/product-feature-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-feature-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-feature-set?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductFeatureSet"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Feature Set"],
        "summary": "Create a new Product Feature Set resources.",
        "description": "Available since: 6.3.0.0",
        "operationId": "createProductFeatureSet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductFeatureSet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductFeatureSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductFeatureSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductFeatureSet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-feature-set/{id}": {
      "get": {
        "tags": ["Product Feature Set"],
        "summary": "Detailed information about a Product Feature Set resource.",
        "description": "Available since: 6.3.0.0",
        "operationId": "getProductFeatureSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_feature_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductFeatureSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductFeatureSet" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Feature Set"],
        "summary": "Delete a Product Feature Set resource.",
        "description": "Available since: 6.3.0.0",
        "operationId": "deleteProductFeatureSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_feature_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Feature Set"],
        "summary": "Partially update information about a Product Feature Set resource.",
        "description": "Available since: 6.3.0.0",
        "operationId": "updateProductFeatureSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_feature_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Feature Set resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductFeatureSet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductFeatureSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductFeatureSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductFeatureSet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-keyword-dictionary": {
      "get": {
        "tags": ["Product Keyword Dictionary"],
        "summary": "List with basic information of Product Keyword Dictionary resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductKeywordDictionaryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Keyword Dictionary resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductKeywordDictionary"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-keyword-dictionary?limit=25"
                                },
                                "last": {
                                  "example": "/product-keyword-dictionary?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-keyword-dictionary?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-keyword-dictionary?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductKeywordDictionary"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Keyword Dictionary"],
        "summary": "Create a new Product Keyword Dictionary resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductKeywordDictionary",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductKeywordDictionary"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKeywordDictionary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductKeywordDictionary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-keyword-dictionary/{id}": {
      "get": {
        "tags": ["Product Keyword Dictionary"],
        "summary": "Detailed information about a Product Keyword Dictionary resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductKeywordDictionary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_keyword_dictionary",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductKeywordDictionary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Keyword Dictionary"],
        "summary": "Delete a Product Keyword Dictionary resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductKeywordDictionary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_keyword_dictionary",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Keyword Dictionary"],
        "summary": "Partially update information about a Product Keyword Dictionary resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductKeywordDictionary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_keyword_dictionary",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Keyword Dictionary resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductKeywordDictionary"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKeywordDictionary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductKeywordDictionary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-manufacturer": {
      "get": {
        "tags": ["Product Manufacturer"],
        "summary": "List with basic information of Product Manufacturer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductManufacturerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Manufacturer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductManufacturer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-manufacturer?limit=25"
                                },
                                "last": {
                                  "example": "/product-manufacturer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-manufacturer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-manufacturer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductManufacturer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Manufacturer"],
        "summary": "Create a new Product Manufacturer resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductManufacturer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductManufacturer"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductManufacturer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductManufacturer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductManufacturer" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-manufacturer/{id}": {
      "get": {
        "tags": ["Product Manufacturer"],
        "summary": "Detailed information about a Product Manufacturer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductManufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_manufacturer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductManufacturer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductManufacturer" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Manufacturer"],
        "summary": "Delete a Product Manufacturer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductManufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_manufacturer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Manufacturer"],
        "summary": "Partially update information about a Product Manufacturer resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductManufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_manufacturer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Manufacturer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductManufacturer"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductManufacturer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductManufacturer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductManufacturer" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-media": {
      "get": {
        "tags": ["Product Media"],
        "summary": "List with basic information of Product Media resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductMediaList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Media resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductMedia"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-media?limit=25"
                                },
                                "last": {
                                  "example": "/product-media?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-media?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-media?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProductMedia" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Media"],
        "summary": "Create a new Product Media resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductMedia",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductMedia" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductMedia" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductMedia",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductMedia" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductMedia" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-media/{id}": {
      "get": {
        "tags": ["Product Media"],
        "summary": "Detailed information about a Product Media resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_media",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductMedia",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductMedia" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductMedia" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Media"],
        "summary": "Delete a Product Media resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_media",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Media"],
        "summary": "Partially update information about a Product Media resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_media",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Media resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductMedia" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductMedia" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductMedia",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductMedia" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductMedia" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-price": {
      "get": {
        "tags": ["Product Price"],
        "summary": "List with basic information of Product Price resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductPriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductPrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-price?limit=25"
                                },
                                "last": {
                                  "example": "/product-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProductPrice" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Price"],
        "summary": "Create a new Product Price resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductPrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductPrice" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductPrice" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductPrice" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductPrice" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-price/{id}": {
      "get": {
        "tags": ["Product Price"],
        "summary": "Detailed information about a Product Price resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductPrice" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductPrice" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Price"],
        "summary": "Delete a Product Price resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Price"],
        "summary": "Partially update information about a Product Price resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductPrice" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductPrice" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductPrice" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductPrice" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-review": {
      "get": {
        "tags": ["Product Review"],
        "summary": "List with basic information of Product Review resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductReviewList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Review resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductReview"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-review?limit=25"
                                },
                                "last": {
                                  "example": "/product-review?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-review?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-review?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProductReview" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Review"],
        "summary": "Create a new Product Review resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductReview",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductReview" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductReview" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductReview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductReview" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductReview" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-review/{id}": {
      "get": {
        "tags": ["Product Review"],
        "summary": "Detailed information about a Product Review resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductReview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductReview" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductReview" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Review"],
        "summary": "Delete a Product Review resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Review"],
        "summary": "Partially update information about a Product Review resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Review resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductReview" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductReview" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductReview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductReview" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductReview" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-review-summary": {
      "get": {
        "tags": ["Product Review Summary"],
        "summary": "List with basic information of Product Review Summary resources.",
        "description": "",
        "operationId": "getProductReviewSummaryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Review Summary resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductReviewSummary"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-review-summary?limit=25"
                                },
                                "last": {
                                  "example": "/product-review-summary?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-review-summary?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-review-summary?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductReviewSummary"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Review Summary"],
        "summary": "Create a new Product Review Summary resources.",
        "description": "",
        "operationId": "createProductReviewSummary",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductReviewSummary"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductReviewSummary" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductReviewSummary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReviewSummary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewSummary"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-review-summary/{id}": {
      "get": {
        "tags": ["Product Review Summary"],
        "summary": "Detailed information about a Product Review Summary resource.",
        "description": "",
        "operationId": "getProductReviewSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review_summary",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductReviewSummary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReviewSummary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewSummary"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Review Summary"],
        "summary": "Delete a Product Review Summary resource.",
        "description": "",
        "operationId": "deleteProductReviewSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review_summary",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Review Summary"],
        "summary": "Partially update information about a Product Review Summary resource.",
        "description": "",
        "operationId": "updateProductReviewSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_review_summary",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Review Summary resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductReviewSummary"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductReviewSummary" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductReviewSummary",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReviewSummary"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewSummary"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-search-config": {
      "get": {
        "tags": ["Product Search Config"],
        "summary": "List with basic information of Product Search Config resources.",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Search Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-search-config?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Search Config"],
        "summary": "Create a new Product Search Config resources.",
        "description": "Available since: 6.3.5.0",
        "operationId": "createProductSearchConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductSearchConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductSearchConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-search-config/{id}": {
      "get": {
        "tags": ["Product Search Config"],
        "summary": "Detailed information about a Product Search Config resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductSearchConfig" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Search Config"],
        "summary": "Delete a Product Search Config resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteProductSearchConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Search Config"],
        "summary": "Partially update information about a Product Search Config resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "updateProductSearchConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Search Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductSearchConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductSearchConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-search-config-field": {
      "get": {
        "tags": ["Product Search Config Field"],
        "summary": "List with basic information of Product Search Config Field resources.",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigFieldList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Search Config Field resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchConfigField"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-search-config-field?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-config-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-config-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-config-field?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchConfigField"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Search Config Field"],
        "summary": "Create a new Product Search Config Field resources.",
        "description": "Available since: 6.3.5.0",
        "operationId": "createProductSearchConfigField",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfigField"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfigField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfigField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-search-config-field/{id}": {
      "get": {
        "tags": ["Product Search Config Field"],
        "summary": "Detailed information about a Product Search Config Field resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfigField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Search Config Field"],
        "summary": "Delete a Product Search Config Field resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteProductSearchConfigField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Search Config Field"],
        "summary": "Partially update information about a Product Search Config Field resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "updateProductSearchConfigField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_config_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Search Config Field resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfigField"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfigField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchConfigField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-search-keyword": {
      "get": {
        "tags": ["Product Search Keyword"],
        "summary": "List with basic information of Product Search Keyword resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductSearchKeywordList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Search Keyword resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchKeyword"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-search-keyword?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-keyword?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-keyword?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-keyword?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchKeyword"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Search Keyword"],
        "summary": "Create a new Product Search Keyword resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductSearchKeyword",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchKeyword"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductSearchKeyword" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchKeyword",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-search-keyword/{id}": {
      "get": {
        "tags": ["Product Search Keyword"],
        "summary": "Detailed information about a Product Search Keyword resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductSearchKeyword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_keyword",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSearchKeyword",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Search Keyword"],
        "summary": "Delete a Product Search Keyword resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductSearchKeyword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_keyword",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Search Keyword"],
        "summary": "Partially update information about a Product Search Keyword resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductSearchKeyword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_search_keyword",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Search Keyword resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchKeyword"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductSearchKeyword" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSearchKeyword",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-sorting": {
      "get": {
        "tags": ["Product Sorting"],
        "summary": "List with basic information of Product Sorting resources.",
        "description": "Available since: 6.3.2.0",
        "operationId": "getProductSortingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Sorting resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductSorting"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-sorting?limit=25"
                                },
                                "last": {
                                  "example": "/product-sorting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-sorting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-sorting?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProductSorting" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Sorting"],
        "summary": "Create a new Product Sorting resources.",
        "description": "Available since: 6.3.2.0",
        "operationId": "createProductSorting",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductSorting" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductSorting" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSorting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductSorting" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-sorting/{id}": {
      "get": {
        "tags": ["Product Sorting"],
        "summary": "Detailed information about a Product Sorting resource.",
        "description": "Available since: 6.3.2.0",
        "operationId": "getProductSorting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_sorting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductSorting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductSorting" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Sorting"],
        "summary": "Delete a Product Sorting resource.",
        "description": "Available since: 6.3.2.0",
        "operationId": "deleteProductSorting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_sorting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Sorting"],
        "summary": "Partially update information about a Product Sorting resource.",
        "description": "Available since: 6.3.2.0",
        "operationId": "updateProductSorting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_sorting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Sorting resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductSorting" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductSorting" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductSorting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductSorting" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-stream": {
      "get": {
        "tags": ["Product Stream"],
        "summary": "List with basic information of Product Stream resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Stream resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductStream"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-stream?limit=25"
                                },
                                "last": {
                                  "example": "/product-stream?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-stream?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-stream?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProductStream" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Stream"],
        "summary": "Create a new Product Stream resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductStream",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductStream" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductStream" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStream",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductStream" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductStream" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-stream/{id}": {
      "get": {
        "tags": ["Product Stream"],
        "summary": "Detailed information about a Product Stream resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductStream",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductStream" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductStream" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Stream"],
        "summary": "Delete a Product Stream resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Stream"],
        "summary": "Partially update information about a Product Stream resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Stream resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductStream" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductStream" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStream",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ProductStream" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductStream" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-stream-filter": {
      "get": {
        "tags": ["Product Stream Filter"],
        "summary": "List with basic information of Product Stream Filter resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamFilterList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Stream Filter resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductStreamFilter"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-stream-filter?limit=25"
                                },
                                "last": {
                                  "example": "/product-stream-filter?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-stream-filter?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-stream-filter?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductStreamFilter"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Stream Filter"],
        "summary": "Create a new Product Stream Filter resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductStreamFilter",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStreamFilter"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductStreamFilter" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStreamFilter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductStreamFilter" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-stream-filter/{id}": {
      "get": {
        "tags": ["Product Stream Filter"],
        "summary": "Detailed information about a Product Stream Filter resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream_filter",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductStreamFilter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductStreamFilter" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Stream Filter"],
        "summary": "Delete a Product Stream Filter resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductStreamFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream_filter",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Stream Filter"],
        "summary": "Partially update information about a Product Stream Filter resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductStreamFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_stream_filter",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Stream Filter resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStreamFilter"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductStreamFilter" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductStreamFilter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductStreamFilter" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-visibility": {
      "get": {
        "tags": ["Product Visibility"],
        "summary": "List with basic information of Product Visibility resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductVisibilityList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Visibility resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductVisibility"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-visibility?limit=25"
                                },
                                "last": {
                                  "example": "/product-visibility?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-visibility?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-visibility?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVisibility"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Visibility"],
        "summary": "Create a new Product Visibility resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductVisibility",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductVisibility" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductVisibility" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductVisibility",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductVisibility" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-visibility/{id}": {
      "get": {
        "tags": ["Product Visibility"],
        "summary": "Detailed information about a Product Visibility resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductVisibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_visibility",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductVisibility",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductVisibility" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Visibility"],
        "summary": "Delete a Product Visibility resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductVisibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_visibility",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Visibility"],
        "summary": "Partially update information about a Product Visibility resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductVisibility",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_visibility",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Visibility resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductVisibility" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductVisibility" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductVisibility",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductVisibility" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/product-warehouse": {
      "get": {
        "tags": ["Product Warehouse"],
        "summary": "List with basic information of Product Warehouse resources.",
        "description": "",
        "operationId": "getProductWarehouseList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Product Warehouse resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductWarehouse"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/product-warehouse?limit=25"
                                },
                                "last": {
                                  "example": "/product-warehouse?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-warehouse?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-warehouse?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductWarehouse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Product Warehouse"],
        "summary": "Create a new Product Warehouse resources.",
        "description": "",
        "operationId": "createProductWarehouse",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductWarehouse" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductWarehouse" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductWarehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductWarehouse"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductWarehouse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/product-warehouse/{id}": {
      "get": {
        "tags": ["Product Warehouse"],
        "summary": "Detailed information about a Product Warehouse resource.",
        "description": "",
        "operationId": "getProductWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ProductWarehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductWarehouse"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductWarehouse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Product Warehouse"],
        "summary": "Delete a Product Warehouse resource.",
        "description": "",
        "operationId": "deleteProductWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Product Warehouse"],
        "summary": "Partially update information about a Product Warehouse resource.",
        "description": "",
        "operationId": "updateProductWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the product_warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Product Warehouse resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ProductWarehouse" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductWarehouse" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ProductWarehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductWarehouse"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProductWarehouse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/promotion": {
      "get": {
        "tags": ["Promotion"],
        "summary": "List with basic information of Promotion resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Promotion"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/promotion?limit=25" },
                                "last": {
                                  "example": "/promotion?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Promotion" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Promotion"],
        "summary": "Create a new Promotion resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotion",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Promotion" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Promotion" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Promotion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Promotion" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Promotion" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/promotion/{id}": {
      "get": {
        "tags": ["Promotion"],
        "summary": "Detailed information about a Promotion resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Promotion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Promotion" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Promotion" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Promotion"],
        "summary": "Delete a Promotion resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Promotion"],
        "summary": "Partially update information about a Promotion resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Promotion" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Promotion" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Promotion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Promotion" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Promotion" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/promotion-discount": {
      "get": {
        "tags": ["Promotion Discount"],
        "summary": "List with basic information of Promotion Discount resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Discount resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionDiscount"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-discount?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-discount?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-discount?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-discount?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscount"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Promotion Discount"],
        "summary": "Create a new Promotion Discount resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionDiscount",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PromotionDiscount" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PromotionDiscount" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscount",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PromotionDiscount" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/promotion-discount/{id}": {
      "get": {
        "tags": ["Promotion Discount"],
        "summary": "Detailed information about a Promotion Discount resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscount",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PromotionDiscount" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Promotion Discount"],
        "summary": "Delete a Promotion Discount resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Promotion Discount"],
        "summary": "Partially update information about a Promotion Discount resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionDiscount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Discount resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PromotionDiscount" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PromotionDiscount" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscount",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PromotionDiscount" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/promotion-discount-prices": {
      "get": {
        "tags": ["Promotion Discount Prices"],
        "summary": "List with basic information of Promotion Discount Prices resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountPricesList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Discount Prices resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionDiscountPrices"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-discount-prices?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-discount-prices?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-discount-prices?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-discount-prices?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscountPrices"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Promotion Discount Prices"],
        "summary": "Create a new Promotion Discount Prices resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionDiscountPrices",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscountPrices"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscountPrices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscountPrices",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/promotion-discount-prices/{id}": {
      "get": {
        "tags": ["Promotion Discount Prices"],
        "summary": "Detailed information about a Promotion Discount Prices resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount_prices",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscountPrices",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Promotion Discount Prices"],
        "summary": "Delete a Promotion Discount Prices resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionDiscountPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount_prices",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Promotion Discount Prices"],
        "summary": "Partially update information about a Promotion Discount Prices resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionDiscountPrices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_discount_prices",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Discount Prices resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscountPrices"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscountPrices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionDiscountPrices",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/promotion-individual-code": {
      "get": {
        "tags": ["Promotion Individual Code"],
        "summary": "List with basic information of Promotion Individual Code resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionIndividualCodeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Individual Code resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionIndividualCode"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-individual-code?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-individual-code?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-individual-code?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-individual-code?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionIndividualCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Promotion Individual Code"],
        "summary": "Create a new Promotion Individual Code resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionIndividualCode",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionIndividualCode"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionIndividualCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionIndividualCode",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/promotion-individual-code/{id}": {
      "get": {
        "tags": ["Promotion Individual Code"],
        "summary": "Detailed information about a Promotion Individual Code resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionIndividualCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_individual_code",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionIndividualCode",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Promotion Individual Code"],
        "summary": "Delete a Promotion Individual Code resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionIndividualCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_individual_code",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Promotion Individual Code"],
        "summary": "Partially update information about a Promotion Individual Code resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionIndividualCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_individual_code",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Individual Code resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionIndividualCode"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionIndividualCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionIndividualCode",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/promotion-sales-channel": {
      "get": {
        "tags": ["Promotion Sales Channel"],
        "summary": "List with basic information of Promotion Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Promotion Sales Channel"],
        "summary": "Create a new Promotion Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PromotionSalesChannel" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/promotion-sales-channel/{id}": {
      "get": {
        "tags": ["Promotion Sales Channel"],
        "summary": "Detailed information about a Promotion Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Promotion Sales Channel"],
        "summary": "Delete a Promotion Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Promotion Sales Channel"],
        "summary": "Partially update information about a Promotion Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PromotionSalesChannel" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/promotion-setgroup": {
      "get": {
        "tags": ["Promotion Setgroup"],
        "summary": "List with basic information of Promotion Setgroup resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSetgroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Promotion Setgroup resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PromotionSetgroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/promotion-setgroup?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-setgroup?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-setgroup?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-setgroup?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionSetgroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Promotion Setgroup"],
        "summary": "Create a new Promotion Setgroup resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionSetgroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PromotionSetgroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PromotionSetgroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSetgroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PromotionSetgroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/promotion-setgroup/{id}": {
      "get": {
        "tags": ["Promotion Setgroup"],
        "summary": "Detailed information about a Promotion Setgroup resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSetgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_setgroup",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PromotionSetgroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PromotionSetgroup" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Promotion Setgroup"],
        "summary": "Delete a Promotion Setgroup resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionSetgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_setgroup",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Promotion Setgroup"],
        "summary": "Partially update information about a Promotion Setgroup resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionSetgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the promotion_setgroup",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Promotion Setgroup resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PromotionSetgroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PromotionSetgroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PromotionSetgroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PromotionSetgroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/property-group": {
      "get": {
        "tags": ["Property Group"],
        "summary": "List with basic information of Property Group resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Property Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PropertyGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/property-group?limit=25"
                                },
                                "last": {
                                  "example": "/property-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/property-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/property-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/PropertyGroup" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Property Group"],
        "summary": "Create a new Property Group resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPropertyGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PropertyGroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PropertyGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/PropertyGroup" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PropertyGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/property-group/{id}": {
      "get": {
        "tags": ["Property Group"],
        "summary": "Detailed information about a Property Group resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PropertyGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/PropertyGroup" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PropertyGroup" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Property Group"],
        "summary": "Delete a Property Group resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePropertyGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Property Group"],
        "summary": "Partially update information about a Property Group resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePropertyGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Property Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/PropertyGroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PropertyGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/PropertyGroup" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PropertyGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/property-group-option": {
      "get": {
        "tags": ["Property Group Option"],
        "summary": "List with basic information of Property Group Option resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupOptionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Property Group Option resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PropertyGroupOption"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/property-group-option?limit=25"
                                },
                                "last": {
                                  "example": "/property-group-option?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/property-group-option?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/property-group-option?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PropertyGroupOption"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Property Group Option"],
        "summary": "Create a new Property Group Option resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createPropertyGroupOption",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroupOption"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PropertyGroupOption" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroupOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PropertyGroupOption" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/property-group-option/{id}": {
      "get": {
        "tags": ["Property Group Option"],
        "summary": "Detailed information about a Property Group Option resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group_option",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of PropertyGroupOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PropertyGroupOption" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Property Group Option"],
        "summary": "Delete a Property Group Option resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePropertyGroupOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group_option",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Property Group Option"],
        "summary": "Partially update information about a Property Group Option resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePropertyGroupOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the property_group_option",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Property Group Option resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroupOption"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PropertyGroupOption" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of PropertyGroupOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PropertyGroupOption" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/rule": {
      "get": {
        "tags": ["Rule"],
        "summary": "List with basic information of Rule resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Rule resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Rule" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/rule?limit=25" },
                                "last": { "example": "/rule?limit=25&page=11" },
                                "next": { "example": "/rule?limit=25&page=4" },
                                "prev": { "example": "/rule?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Rule" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Rule"],
        "summary": "Create a new Rule resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createRule",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Rule" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Rule" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Rule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Rule" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Rule" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/rule/{id}": {
      "get": {
        "tags": ["Rule"],
        "summary": "Detailed information about a Rule resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Rule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Rule" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Rule" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Rule"],
        "summary": "Delete a Rule resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Rule"],
        "summary": "Partially update information about a Rule resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Rule resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Rule" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Rule" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Rule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Rule" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Rule" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/rule-condition": {
      "get": {
        "tags": ["Rule Condition"],
        "summary": "List with basic information of Rule Condition resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleConditionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Rule Condition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/RuleCondition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/rule-condition?limit=25"
                                },
                                "last": {
                                  "example": "/rule-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/rule-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/rule-condition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/RuleCondition" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Rule Condition"],
        "summary": "Create a new Rule Condition resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createRuleCondition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/RuleCondition" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RuleCondition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of RuleCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/RuleCondition" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RuleCondition" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/rule-condition/{id}": {
      "get": {
        "tags": ["Rule Condition"],
        "summary": "Detailed information about a Rule Condition resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of RuleCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/RuleCondition" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RuleCondition" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Rule Condition"],
        "summary": "Delete a Rule Condition resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteRuleCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Rule Condition"],
        "summary": "Partially update information about a Rule Condition resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateRuleCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the rule_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Rule Condition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/RuleCondition" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RuleCondition" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of RuleCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/RuleCondition" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RuleCondition" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/saas-app-storefront-config": {
      "get": {
        "tags": ["Saas App Storefront Config"],
        "summary": "List with basic information of Saas App Storefront Config resources.",
        "description": "",
        "operationId": "getSaasAppStorefrontConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Saas App Storefront Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/saas-app-storefront-config?limit=25"
                                },
                                "last": {
                                  "example": "/saas-app-storefront-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/saas-app-storefront-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/saas-app-storefront-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Saas App Storefront Config"],
        "summary": "Create a new Saas App Storefront Config resources.",
        "description": "",
        "operationId": "createSaasAppStorefrontConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasAppStorefrontConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasAppStorefrontConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/saas-app-storefront-config/{id}": {
      "get": {
        "tags": ["Saas App Storefront Config"],
        "summary": "Detailed information about a Saas App Storefront Config resource.",
        "description": "",
        "operationId": "getSaasAppStorefrontConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_app_storefront_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SaasAppStorefrontConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Saas App Storefront Config"],
        "summary": "Delete a Saas App Storefront Config resource.",
        "description": "",
        "operationId": "deleteSaasAppStorefrontConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_app_storefront_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Saas App Storefront Config"],
        "summary": "Partially update information about a Saas App Storefront Config resource.",
        "description": "",
        "operationId": "updateSaasAppStorefrontConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_app_storefront_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Saas App Storefront Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasAppStorefrontConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasAppStorefrontConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasAppStorefrontConfig"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/saas-sbp-user-data": {
      "get": {
        "tags": ["Saas Sbp User Data"],
        "summary": "List with basic information of Saas Sbp User Data resources.",
        "description": "",
        "operationId": "getSaasSbpUserDataList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Saas Sbp User Data resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SaasSbpUserData"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/saas-sbp-user-data?limit=25"
                                },
                                "last": {
                                  "example": "/saas-sbp-user-data?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/saas-sbp-user-data?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/saas-sbp-user-data?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SaasSbpUserData"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Saas Sbp User Data"],
        "summary": "Create a new Saas Sbp User Data resources.",
        "description": "",
        "operationId": "createSaasSbpUserData",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SaasSbpUserData" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaasSbpUserData" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasSbpUserData",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasSbpUserData"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaasSbpUserData" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/saas-sbp-user-data/{id}": {
      "get": {
        "tags": ["Saas Sbp User Data"],
        "summary": "Detailed information about a Saas Sbp User Data resource.",
        "description": "",
        "operationId": "getSaasSbpUserData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_sbp_user_data",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SaasSbpUserData",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasSbpUserData"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaasSbpUserData" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Saas Sbp User Data"],
        "summary": "Delete a Saas Sbp User Data resource.",
        "description": "",
        "operationId": "deleteSaasSbpUserData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_sbp_user_data",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Saas Sbp User Data"],
        "summary": "Partially update information about a Saas Sbp User Data resource.",
        "description": "",
        "operationId": "updateSaasSbpUserData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_sbp_user_data",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Saas Sbp User Data resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SaasSbpUserData" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaasSbpUserData" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasSbpUserData",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasSbpUserData"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaasSbpUserData" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/saas-storefront-demo-token": {
      "get": {
        "tags": ["Saas Storefront Demo Token"],
        "summary": "List with basic information of Saas Storefront Demo Token resources.",
        "description": "",
        "operationId": "getSaasStorefrontDemoTokenList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Saas Storefront Demo Token resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/saas-storefront-demo-token?limit=25"
                                },
                                "last": {
                                  "example": "/saas-storefront-demo-token?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/saas-storefront-demo-token?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/saas-storefront-demo-token?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Saas Storefront Demo Token"],
        "summary": "Create a new Saas Storefront Demo Token resources.",
        "description": "",
        "operationId": "createSaasStorefrontDemoToken",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasStorefrontDemoToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasStorefrontDemoToken",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/saas-storefront-demo-token/{id}": {
      "get": {
        "tags": ["Saas Storefront Demo Token"],
        "summary": "Detailed information about a Saas Storefront Demo Token resource.",
        "description": "",
        "operationId": "getSaasStorefrontDemoToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_storefront_demo_token",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SaasStorefrontDemoToken",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Saas Storefront Demo Token"],
        "summary": "Delete a Saas Storefront Demo Token resource.",
        "description": "",
        "operationId": "deleteSaasStorefrontDemoToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_storefront_demo_token",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Saas Storefront Demo Token"],
        "summary": "Partially update information about a Saas Storefront Demo Token resource.",
        "description": "",
        "operationId": "updateSaasStorefrontDemoToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_storefront_demo_token",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Saas Storefront Demo Token resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasStorefrontDemoToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasStorefrontDemoToken",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasStorefrontDemoToken"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/saas-user-login-token": {
      "get": {
        "tags": ["Saas User Login Token"],
        "summary": "List with basic information of Saas User Login Token resources.",
        "description": "",
        "operationId": "getSaasUserLoginTokenList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Saas User Login Token resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SaasUserLoginToken"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/saas-user-login-token?limit=25"
                                },
                                "last": {
                                  "example": "/saas-user-login-token?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/saas-user-login-token?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/saas-user-login-token?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SaasUserLoginToken"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Saas User Login Token"],
        "summary": "Create a new Saas User Login Token resources.",
        "description": "",
        "operationId": "createSaasUserLoginToken",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SaasUserLoginToken" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaasUserLoginToken" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasUserLoginToken",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasUserLoginToken"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaasUserLoginToken" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/saas-user-login-token/{id}": {
      "get": {
        "tags": ["Saas User Login Token"],
        "summary": "Detailed information about a Saas User Login Token resource.",
        "description": "",
        "operationId": "getSaasUserLoginToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_user_login_token",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SaasUserLoginToken",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasUserLoginToken"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaasUserLoginToken" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Saas User Login Token"],
        "summary": "Delete a Saas User Login Token resource.",
        "description": "",
        "operationId": "deleteSaasUserLoginToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_user_login_token",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Saas User Login Token"],
        "summary": "Partially update information about a Saas User Login Token resource.",
        "description": "",
        "operationId": "updateSaasUserLoginToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the saas_user_login_token",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Saas User Login Token resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SaasUserLoginToken" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaasUserLoginToken" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SaasUserLoginToken",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SaasUserLoginToken"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaasUserLoginToken" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/sales-channel": {
      "get": {
        "tags": ["Sales Channel"],
        "summary": "List with basic information of Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SalesChannel" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Sales Channel"],
        "summary": "Create a new Sales Channel resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SalesChannel" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannel" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SalesChannel" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannel" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/sales-channel/{id}": {
      "get": {
        "tags": ["Sales Channel"],
        "summary": "Detailed information about a Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SalesChannel" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannel" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Sales Channel"],
        "summary": "Delete a Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Sales Channel"],
        "summary": "Partially update information about a Sales Channel resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SalesChannel" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannel" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SalesChannel" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannel" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/sales-channel-analytics": {
      "get": {
        "tags": ["Sales Channel Analytics"],
        "summary": "List with basic information of Sales Channel Analytics resources.",
        "description": "Available since: 6.2.0.0",
        "operationId": "getSalesChannelAnalyticsList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel Analytics resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelAnalytics"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-analytics?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-analytics?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-analytics?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-analytics?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelAnalytics"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Sales Channel Analytics"],
        "summary": "Create a new Sales Channel Analytics resources.",
        "description": "Available since: 6.2.0.0",
        "operationId": "createSalesChannelAnalytics",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelAnalytics"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannelAnalytics" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelAnalytics",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/sales-channel-analytics/{id}": {
      "get": {
        "tags": ["Sales Channel Analytics"],
        "summary": "Detailed information about a Sales Channel Analytics resource.",
        "description": "Available since: 6.2.0.0",
        "operationId": "getSalesChannelAnalytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_analytics",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannelAnalytics",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Sales Channel Analytics"],
        "summary": "Delete a Sales Channel Analytics resource.",
        "description": "Available since: 6.2.0.0",
        "operationId": "deleteSalesChannelAnalytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_analytics",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Sales Channel Analytics"],
        "summary": "Partially update information about a Sales Channel Analytics resource.",
        "description": "Available since: 6.2.0.0",
        "operationId": "updateSalesChannelAnalytics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_analytics",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel Analytics resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelAnalytics"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannelAnalytics" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelAnalytics",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/sales-channel-domain": {
      "get": {
        "tags": ["Sales Channel Domain"],
        "summary": "List with basic information of Sales Channel Domain resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelDomainList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel Domain resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelDomain"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-domain?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-domain?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-domain?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-domain?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelDomain"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Sales Channel Domain"],
        "summary": "Create a new Sales Channel Domain resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannelDomain",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SalesChannelDomain" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannelDomain" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelDomain",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelDomain" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/sales-channel-domain/{id}": {
      "get": {
        "tags": ["Sales Channel Domain"],
        "summary": "Detailed information about a Sales Channel Domain resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_domain",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannelDomain",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelDomain" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Sales Channel Domain"],
        "summary": "Delete a Sales Channel Domain resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannelDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_domain",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Sales Channel Domain"],
        "summary": "Partially update information about a Sales Channel Domain resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannelDomain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_domain",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel Domain resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SalesChannelDomain" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannelDomain" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelDomain",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelDomain" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/sales-channel-type": {
      "get": {
        "tags": ["Sales Channel Type"],
        "summary": "List with basic information of Sales Channel Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Channel Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-type?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Sales Channel Type"],
        "summary": "Create a new Sales Channel Type resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannelType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SalesChannelType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannelType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/sales-channel-type/{id}": {
      "get": {
        "tags": ["Sales Channel Type"],
        "summary": "Detailed information about a Sales Channel Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SalesChannelType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelType" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Sales Channel Type"],
        "summary": "Delete a Sales Channel Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Sales Channel Type"],
        "summary": "Partially update information about a Sales Channel Type resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the sales_channel_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Sales Channel Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SalesChannelType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SalesChannelType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SalesChannelType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SalesChannelType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/salutation": {
      "get": {
        "tags": ["Salutation"],
        "summary": "List with basic information of Salutation resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalutationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Salutation resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Salutation"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/salutation?limit=25" },
                                "last": {
                                  "example": "/salutation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/salutation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/salutation?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Salutation" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Salutation"],
        "summary": "Create a new Salutation resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalutation",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Salutation" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Salutation" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Salutation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Salutation" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Salutation" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/salutation/{id}": {
      "get": {
        "tags": ["Salutation"],
        "summary": "Detailed information about a Salutation resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalutation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the salutation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Salutation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Salutation" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Salutation" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Salutation"],
        "summary": "Delete a Salutation resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalutation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the salutation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Salutation"],
        "summary": "Partially update information about a Salutation resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalutation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the salutation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Salutation resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Salutation" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Salutation" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Salutation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Salutation" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Salutation" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/scheduled-task": {
      "get": {
        "tags": ["Scheduled Task"],
        "summary": "List with basic information of Scheduled Task resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getScheduledTaskList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Scheduled Task resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ScheduledTask"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/scheduled-task?limit=25"
                                },
                                "last": {
                                  "example": "/scheduled-task?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/scheduled-task?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/scheduled-task?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ScheduledTask" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Scheduled Task"],
        "summary": "Create a new Scheduled Task resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createScheduledTask",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ScheduledTask" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ScheduledTask" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ScheduledTask",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ScheduledTask" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ScheduledTask" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/scheduled-task/{id}": {
      "get": {
        "tags": ["Scheduled Task"],
        "summary": "Detailed information about a Scheduled Task resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getScheduledTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the scheduled_task",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ScheduledTask",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ScheduledTask" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ScheduledTask" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Scheduled Task"],
        "summary": "Delete a Scheduled Task resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteScheduledTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the scheduled_task",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Scheduled Task"],
        "summary": "Partially update information about a Scheduled Task resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateScheduledTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the scheduled_task",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Scheduled Task resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ScheduledTask" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ScheduledTask" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ScheduledTask",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/ScheduledTask" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ScheduledTask" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/script": {
      "get": {
        "tags": ["Script"],
        "summary": "List with basic information of Script resources.",
        "description": "Available since: 6.4.7.0",
        "operationId": "getScriptList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Script resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Script" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/script?limit=25" },
                                "last": {
                                  "example": "/script?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/script?limit=25&page=4"
                                },
                                "prev": { "example": "/script?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Script" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Script"],
        "summary": "Create a new Script resources.",
        "description": "Available since: 6.4.7.0",
        "operationId": "createScript",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Script" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Script" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Script",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Script" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Script" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/script/{id}": {
      "get": {
        "tags": ["Script"],
        "summary": "Detailed information about a Script resource.",
        "description": "Available since: 6.4.7.0",
        "operationId": "getScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the script",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Script",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Script" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Script" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Script"],
        "summary": "Delete a Script resource.",
        "description": "Available since: 6.4.7.0",
        "operationId": "deleteScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the script",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Script"],
        "summary": "Partially update information about a Script resource.",
        "description": "Available since: 6.4.7.0",
        "operationId": "updateScript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the script",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Script resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Script" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Script" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Script",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Script" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Script" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/seo-url": {
      "get": {
        "tags": ["Seo Url"],
        "summary": "List with basic information of Seo Url resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Seo Url resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/SeoUrl" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/seo-url?limit=25" },
                                "last": {
                                  "example": "/seo-url?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/seo-url?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/seo-url?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SeoUrl" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Seo Url"],
        "summary": "Create a new Seo Url resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSeoUrl",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SeoUrl" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SeoUrl" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrl",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SeoUrl" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SeoUrl" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/seo-url/{id}": {
      "get": {
        "tags": ["Seo Url"],
        "summary": "Detailed information about a Seo Url resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SeoUrl",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SeoUrl" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SeoUrl" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Seo Url"],
        "summary": "Delete a Seo Url resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSeoUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Seo Url"],
        "summary": "Partially update information about a Seo Url resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSeoUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Seo Url resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SeoUrl" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SeoUrl" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrl",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SeoUrl" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SeoUrl" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/seo-url-template": {
      "get": {
        "tags": ["Seo Url Template"],
        "summary": "List with basic information of Seo Url Template resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Seo Url Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SeoUrlTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/seo-url-template?limit=25"
                                },
                                "last": {
                                  "example": "/seo-url-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/seo-url-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/seo-url-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SeoUrlTemplate" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Seo Url Template"],
        "summary": "Create a new Seo Url Template resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSeoUrlTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SeoUrlTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SeoUrlTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrlTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SeoUrlTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/seo-url-template/{id}": {
      "get": {
        "tags": ["Seo Url Template"],
        "summary": "Detailed information about a Seo Url Template resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SeoUrlTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SeoUrlTemplate" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Seo Url Template"],
        "summary": "Delete a Seo Url Template resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSeoUrlTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Seo Url Template"],
        "summary": "Partially update information about a Seo Url Template resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSeoUrlTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the seo_url_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Seo Url Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SeoUrlTemplate" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SeoUrlTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SeoUrlTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SeoUrlTemplate" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/shipping-method": {
      "get": {
        "tags": ["Shipping Method"],
        "summary": "List with basic information of Shipping Method resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Shipping Method resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ShippingMethod"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/shipping-method?limit=25"
                                },
                                "last": {
                                  "example": "/shipping-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/shipping-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/shipping-method?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ShippingMethod" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Shipping Method"],
        "summary": "Create a new Shipping Method resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createShippingMethod",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ShippingMethod" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ShippingMethod" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ShippingMethod" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/shipping-method/{id}": {
      "get": {
        "tags": ["Shipping Method"],
        "summary": "Detailed information about a Shipping Method resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ShippingMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ShippingMethod" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Shipping Method"],
        "summary": "Delete a Shipping Method resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Shipping Method"],
        "summary": "Partially update information about a Shipping Method resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateShippingMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Shipping Method resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/ShippingMethod" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ShippingMethod" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethod",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ShippingMethod" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/shipping-method-price": {
      "get": {
        "tags": ["Shipping Method Price"],
        "summary": "List with basic information of Shipping Method Price resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodPriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Shipping Method Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ShippingMethodPrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/shipping-method-price?limit=25"
                                },
                                "last": {
                                  "example": "/shipping-method-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/shipping-method-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/shipping-method-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShippingMethodPrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Shipping Method Price"],
        "summary": "Create a new Shipping Method Price resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createShippingMethodPrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethodPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ShippingMethodPrice" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethodPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ShippingMethodPrice" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/shipping-method-price/{id}": {
      "get": {
        "tags": ["Shipping Method Price"],
        "summary": "Detailed information about a Shipping Method Price resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of ShippingMethodPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ShippingMethodPrice" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Shipping Method Price"],
        "summary": "Delete a Shipping Method Price resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteShippingMethodPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Shipping Method Price"],
        "summary": "Partially update information about a Shipping Method Price resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateShippingMethodPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the shipping_method_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Shipping Method Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethodPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ShippingMethodPrice" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of ShippingMethodPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ShippingMethodPrice" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/snippet": {
      "get": {
        "tags": ["Snippet"],
        "summary": "List with basic information of Snippet resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Snippet resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Snippet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/snippet?limit=25" },
                                "last": {
                                  "example": "/snippet?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/snippet?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/snippet?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Snippet" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Snippet"],
        "summary": "Create a new Snippet resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSnippet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Snippet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Snippet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Snippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Snippet" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Snippet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/snippet/{id}": {
      "get": {
        "tags": ["Snippet"],
        "summary": "Detailed information about a Snippet resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Snippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Snippet" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Snippet" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Snippet"],
        "summary": "Delete a Snippet resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Snippet"],
        "summary": "Partially update information about a Snippet resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSnippet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Snippet resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Snippet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Snippet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Snippet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Snippet" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Snippet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/snippet-set": {
      "get": {
        "tags": ["Snippet Set"],
        "summary": "List with basic information of Snippet Set resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetSetList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Snippet Set resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SnippetSet"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/snippet-set?limit=25" },
                                "last": {
                                  "example": "/snippet-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/snippet-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/snippet-set?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SnippetSet" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Snippet Set"],
        "summary": "Create a new Snippet Set resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSnippetSet",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SnippetSet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SnippetSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SnippetSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SnippetSet" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SnippetSet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/snippet-set/{id}": {
      "get": {
        "tags": ["Snippet Set"],
        "summary": "Detailed information about a Snippet Set resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SnippetSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SnippetSet" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SnippetSet" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Snippet Set"],
        "summary": "Delete a Snippet Set resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSnippetSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Snippet Set"],
        "summary": "Partially update information about a Snippet Set resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSnippetSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the snippet_set",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Snippet Set resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SnippetSet" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SnippetSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SnippetSet",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SnippetSet" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SnippetSet" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/state-machine": {
      "get": {
        "tags": ["State Machine"],
        "summary": "List with basic information of State Machine resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachine"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/StateMachine" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["State Machine"],
        "summary": "Create a new State Machine resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachine",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/StateMachine" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StateMachine" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachine",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/StateMachine" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachine" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/state-machine/{id}": {
      "get": {
        "tags": ["State Machine"],
        "summary": "Detailed information about a State Machine resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachine",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/StateMachine" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachine" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["State Machine"],
        "summary": "Delete a State Machine resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["State Machine"],
        "summary": "Partially update information about a State Machine resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/StateMachine" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StateMachine" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachine",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/StateMachine" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachine" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/state-machine-history": {
      "get": {
        "tags": ["State Machine History"],
        "summary": "List with basic information of State Machine History resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineHistoryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine History resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachineHistory"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine-history?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-history?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-history?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-history?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachineHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["State Machine History"],
        "summary": "Create a new State Machine History resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineHistory",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineHistory"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StateMachineHistory" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineHistory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineHistory" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/state-machine-history/{id}": {
      "get": {
        "tags": ["State Machine History"],
        "summary": "Detailed information about a State Machine History resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_history",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachineHistory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineHistory" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["State Machine History"],
        "summary": "Delete a State Machine History resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_history",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["State Machine History"],
        "summary": "Partially update information about a State Machine History resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_history",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine History resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineHistory"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StateMachineHistory" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineHistory",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineHistory" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/state-machine-state": {
      "get": {
        "tags": ["State Machine State"],
        "summary": "List with basic information of State Machine State resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineStateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine State resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachineState"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine-state?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-state?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachineState"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["State Machine State"],
        "summary": "Create a new State Machine State resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineState",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/StateMachineState" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StateMachineState" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineState" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/state-machine-state/{id}": {
      "get": {
        "tags": ["State Machine State"],
        "summary": "Detailed information about a State Machine State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachineState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineState" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["State Machine State"],
        "summary": "Delete a State Machine State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["State Machine State"],
        "summary": "Partially update information about a State Machine State resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_state",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine State resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/StateMachineState" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StateMachineState" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineState",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StateMachineState" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/state-machine-transition": {
      "get": {
        "tags": ["State Machine Transition"],
        "summary": "List with basic information of State Machine Transition resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineTransitionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of State Machine Transition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/StateMachineTransition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/state-machine-transition?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-transition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-transition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-transition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StateMachineTransition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["State Machine Transition"],
        "summary": "Create a new State Machine Transition resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineTransition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineTransition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineTransition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineTransition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/state-machine-transition/{id}": {
      "get": {
        "tags": ["State Machine Transition"],
        "summary": "Detailed information about a State Machine Transition resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineTransition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_transition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of StateMachineTransition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["State Machine Transition"],
        "summary": "Delete a State Machine Transition resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineTransition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_transition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["State Machine Transition"],
        "summary": "Partially update information about a State Machine Transition resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineTransition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the state_machine_transition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a State Machine Transition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineTransition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineTransition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of StateMachineTransition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/subscription": {
      "get": {
        "tags": ["Subscription"],
        "summary": "List with basic information of Subscription resources.",
        "description": "",
        "operationId": "getSubscriptionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Subscription resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Subscription"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/subscription?limit=25"
                                },
                                "last": {
                                  "example": "/subscription?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/subscription?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/subscription?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Subscription" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Subscription"],
        "summary": "Create a new Subscription resources.",
        "description": "",
        "operationId": "createSubscription",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Subscription" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Subscription" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Subscription",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Subscription" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Subscription" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/subscription/{id}": {
      "get": {
        "tags": ["Subscription"],
        "summary": "Detailed information about a Subscription resource.",
        "description": "",
        "operationId": "getSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Subscription",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Subscription" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Subscription" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Subscription"],
        "summary": "Delete a Subscription resource.",
        "description": "",
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Subscription"],
        "summary": "Partially update information about a Subscription resource.",
        "description": "",
        "operationId": "updateSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Subscription resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Subscription" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Subscription" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Subscription",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Subscription" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Subscription" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/subscription-address": {
      "get": {
        "tags": ["Subscription Address"],
        "summary": "List with basic information of Subscription Address resources.",
        "description": "",
        "operationId": "getSubscriptionAddressList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Subscription Address resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SubscriptionAddress"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/subscription-address?limit=25"
                                },
                                "last": {
                                  "example": "/subscription-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/subscription-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/subscription-address?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubscriptionAddress"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Subscription Address"],
        "summary": "Create a new Subscription Address resources.",
        "description": "",
        "operationId": "createSubscriptionAddress",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SubscriptionAddress"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriptionAddress" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/subscription-address/{id}": {
      "get": {
        "tags": ["Subscription Address"],
        "summary": "Detailed information about a Subscription Address resource.",
        "description": "",
        "operationId": "getSubscriptionAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SubscriptionAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriptionAddress" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Subscription Address"],
        "summary": "Delete a Subscription Address resource.",
        "description": "",
        "operationId": "deleteSubscriptionAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Subscription Address"],
        "summary": "Partially update information about a Subscription Address resource.",
        "description": "",
        "operationId": "updateSubscriptionAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_address",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Subscription Address resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SubscriptionAddress"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionAddress" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionAddress",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionAddress"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriptionAddress" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/subscription-customer": {
      "get": {
        "tags": ["Subscription Customer"],
        "summary": "List with basic information of Subscription Customer resources.",
        "description": "",
        "operationId": "getSubscriptionCustomerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Subscription Customer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SubscriptionCustomer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/subscription-customer?limit=25"
                                },
                                "last": {
                                  "example": "/subscription-customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/subscription-customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/subscription-customer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubscriptionCustomer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Subscription Customer"],
        "summary": "Create a new Subscription Customer resources.",
        "description": "",
        "operationId": "createSubscriptionCustomer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SubscriptionCustomer"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionCustomer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCustomer"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/subscription-customer/{id}": {
      "get": {
        "tags": ["Subscription Customer"],
        "summary": "Detailed information about a Subscription Customer resource.",
        "description": "",
        "operationId": "getSubscriptionCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SubscriptionCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCustomer"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Subscription Customer"],
        "summary": "Delete a Subscription Customer resource.",
        "description": "",
        "operationId": "deleteSubscriptionCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Subscription Customer"],
        "summary": "Partially update information about a Subscription Customer resource.",
        "description": "",
        "operationId": "updateSubscriptionCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Subscription Customer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SubscriptionCustomer"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionCustomer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCustomer"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/subscription-interval": {
      "get": {
        "tags": ["Subscription Interval"],
        "summary": "List with basic information of Subscription Interval resources.",
        "description": "",
        "operationId": "getSubscriptionIntervalList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Subscription Interval resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SubscriptionInterval"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/subscription-interval?limit=25"
                                },
                                "last": {
                                  "example": "/subscription-interval?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/subscription-interval?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/subscription-interval?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubscriptionInterval"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Subscription Interval"],
        "summary": "Create a new Subscription Interval resources.",
        "description": "",
        "operationId": "createSubscriptionInterval",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SubscriptionInterval"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionInterval" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionInterval",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionInterval"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionInterval"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/subscription-interval/{id}": {
      "get": {
        "tags": ["Subscription Interval"],
        "summary": "Detailed information about a Subscription Interval resource.",
        "description": "",
        "operationId": "getSubscriptionInterval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_interval",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SubscriptionInterval",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionInterval"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionInterval"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Subscription Interval"],
        "summary": "Delete a Subscription Interval resource.",
        "description": "",
        "operationId": "deleteSubscriptionInterval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_interval",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Subscription Interval"],
        "summary": "Partially update information about a Subscription Interval resource.",
        "description": "",
        "operationId": "updateSubscriptionInterval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_interval",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Subscription Interval resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SubscriptionInterval"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionInterval" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionInterval",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionInterval"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionInterval"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/subscription-plan": {
      "get": {
        "tags": ["Subscription Plan"],
        "summary": "List with basic information of Subscription Plan resources.",
        "description": "",
        "operationId": "getSubscriptionPlanList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Subscription Plan resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SubscriptionPlan"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/subscription-plan?limit=25"
                                },
                                "last": {
                                  "example": "/subscription-plan?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/subscription-plan?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/subscription-plan?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubscriptionPlan"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Subscription Plan"],
        "summary": "Create a new Subscription Plan resources.",
        "description": "",
        "operationId": "createSubscriptionPlan",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SubscriptionPlan" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionPlan" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionPlan",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionPlan"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriptionPlan" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/subscription-plan/{id}": {
      "get": {
        "tags": ["Subscription Plan"],
        "summary": "Detailed information about a Subscription Plan resource.",
        "description": "",
        "operationId": "getSubscriptionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_plan",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SubscriptionPlan",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionPlan"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriptionPlan" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Subscription Plan"],
        "summary": "Delete a Subscription Plan resource.",
        "description": "",
        "operationId": "deleteSubscriptionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_plan",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Subscription Plan"],
        "summary": "Partially update information about a Subscription Plan resource.",
        "description": "",
        "operationId": "updateSubscriptionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the subscription_plan",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Subscription Plan resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SubscriptionPlan" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionPlan" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SubscriptionPlan",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionPlan"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubscriptionPlan" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-block-rule": {
      "get": {
        "tags": ["Swag Cms Extensions Block Rule"],
        "summary": "List with basic information of Swag Cms Extensions Block Rule resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsBlockRuleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Block Rule resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-block-rule?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-block-rule?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-block-rule?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-block-rule?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Block Rule"],
        "summary": "Create a new Swag Cms Extensions Block Rule resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsBlockRule",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsBlockRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-block-rule/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Block Rule"],
        "summary": "Detailed information about a Swag Cms Extensions Block Rule resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsBlockRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_block_rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsBlockRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Block Rule"],
        "summary": "Delete a Swag Cms Extensions Block Rule resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsBlockRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_block_rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Block Rule"],
        "summary": "Partially update information about a Swag Cms Extensions Block Rule resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsBlockRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_block_rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Block Rule resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsBlockRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsBlockRule"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-form": {
      "get": {
        "tags": ["Swag Cms Extensions Form"],
        "summary": "List with basic information of Swag Cms Extensions Form resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsFormList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Form resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-form?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-form?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-form?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-form?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Form"],
        "summary": "Create a new Swag Cms Extensions Form resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsForm",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagCmsExtensionsForm" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsForm",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-form/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Form"],
        "summary": "Detailed information about a Swag Cms Extensions Form resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsForm",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Form"],
        "summary": "Delete a Swag Cms Extensions Form resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Form"],
        "summary": "Partially update information about a Swag Cms Extensions Form resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Form resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagCmsExtensionsForm" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsForm",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsForm"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-form-group": {
      "get": {
        "tags": ["Swag Cms Extensions Form Group"],
        "summary": "List with basic information of Swag Cms Extensions Form Group resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsFormGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Form Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-form-group?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-form-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-form-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-form-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Form Group"],
        "summary": "Create a new Swag Cms Extensions Form Group resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsFormGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsFormGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-form-group/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Form Group"],
        "summary": "Detailed information about a Swag Cms Extensions Form Group resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsFormGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsFormGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Form Group"],
        "summary": "Delete a Swag Cms Extensions Form Group resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsFormGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Form Group"],
        "summary": "Partially update information about a Swag Cms Extensions Form Group resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsFormGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Form Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsFormGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-form-group-field": {
      "get": {
        "tags": ["Swag Cms Extensions Form Group Field"],
        "summary": "List with basic information of Swag Cms Extensions Form Group Field resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsFormGroupFieldList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Form Group Field resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-form-group-field?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-form-group-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-form-group-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-form-group-field?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Form Group Field"],
        "summary": "Create a new Swag Cms Extensions Form Group Field resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsFormGroupField",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsFormGroupField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-form-group-field/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Form Group Field"],
        "summary": "Detailed information about a Swag Cms Extensions Form Group Field resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsFormGroupField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form_group_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsFormGroupField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Form Group Field"],
        "summary": "Delete a Swag Cms Extensions Form Group Field resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsFormGroupField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form_group_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Form Group Field"],
        "summary": "Partially update information about a Swag Cms Extensions Form Group Field resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsFormGroupField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_form_group_field",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Form Group Field resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsFormGroupField",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-quickview": {
      "get": {
        "tags": ["Swag Cms Extensions Quickview"],
        "summary": "List with basic information of Swag Cms Extensions Quickview resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsQuickviewList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Quickview resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-quickview?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-quickview?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-quickview?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-quickview?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Quickview"],
        "summary": "Create a new Swag Cms Extensions Quickview resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsQuickview",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsQuickview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-quickview/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Quickview"],
        "summary": "Detailed information about a Swag Cms Extensions Quickview resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsQuickview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_quickview",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsQuickview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Quickview"],
        "summary": "Delete a Swag Cms Extensions Quickview resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsQuickview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_quickview",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Quickview"],
        "summary": "Partially update information about a Swag Cms Extensions Quickview resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsQuickview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_quickview",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Quickview resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsQuickview",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsQuickview"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-scroll-navigation": {
      "get": {
        "tags": ["Swag Cms Extensions Scroll Navigation"],
        "summary": "List with basic information of Swag Cms Extensions Scroll Navigation resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsScrollNavigationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Scroll Navigation resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-scroll-navigation?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-scroll-navigation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-scroll-navigation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-scroll-navigation?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Scroll Navigation"],
        "summary": "Create a new Swag Cms Extensions Scroll Navigation resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsScrollNavigation",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsScrollNavigation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-scroll-navigation/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Scroll Navigation"],
        "summary": "Detailed information about a Swag Cms Extensions Scroll Navigation resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsScrollNavigation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_scroll_navigation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsScrollNavigation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Scroll Navigation"],
        "summary": "Delete a Swag Cms Extensions Scroll Navigation resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsScrollNavigation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_scroll_navigation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Scroll Navigation"],
        "summary": "Partially update information about a Swag Cms Extensions Scroll Navigation resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsScrollNavigation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_scroll_navigation",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Scroll Navigation resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsScrollNavigation",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigation"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-cms-extensions-scroll-navigation-page-settings": {
      "get": {
        "tags": ["Swag Cms Extensions Scroll Navigation Page Settings"],
        "summary": "List with basic information of Swag Cms Extensions Scroll Navigation Page Settings resources.",
        "description": "",
        "operationId": "getSwagCmsExtensionsScrollNavigationPageSettingsList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Cms Extensions Scroll Navigation Page Settings resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-cms-extensions-scroll-navigation-page-settings?limit=25"
                                },
                                "last": {
                                  "example": "/swag-cms-extensions-scroll-navigation-page-settings?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-cms-extensions-scroll-navigation-page-settings?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-cms-extensions-scroll-navigation-page-settings?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Cms Extensions Scroll Navigation Page Settings"],
        "summary": "Create a new Swag Cms Extensions Scroll Navigation Page Settings resources.",
        "description": "",
        "operationId": "createSwagCmsExtensionsScrollNavigationPageSettings",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsScrollNavigationPageSettings",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-cms-extensions-scroll-navigation-page-settings/{id}": {
      "get": {
        "tags": ["Swag Cms Extensions Scroll Navigation Page Settings"],
        "summary": "Detailed information about a Swag Cms Extensions Scroll Navigation Page Settings resource.",
        "description": "",
        "operationId": "getSwagCmsExtensionsScrollNavigationPageSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_scroll_navigation_page_settings",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsScrollNavigationPageSettings",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Cms Extensions Scroll Navigation Page Settings"],
        "summary": "Delete a Swag Cms Extensions Scroll Navigation Page Settings resource.",
        "description": "",
        "operationId": "deleteSwagCmsExtensionsScrollNavigationPageSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_scroll_navigation_page_settings",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Cms Extensions Scroll Navigation Page Settings"],
        "summary": "Partially update information about a Swag Cms Extensions Scroll Navigation Page Settings resource.",
        "description": "",
        "operationId": "updateSwagCmsExtensionsScrollNavigationPageSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_cms_extensions_scroll_navigation_page_settings",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Cms Extensions Scroll Navigation Page Settings resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCmsExtensionsScrollNavigationPageSettings",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCmsExtensionsScrollNavigationPageSettings"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template": {
      "get": {
        "tags": ["Swag Customized Products Template"],
        "summary": "List with basic information of Swag Customized Products Template resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template"],
        "summary": "Create a new Swag Customized Products Template resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplate",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template"],
        "summary": "Detailed information about a Swag Customized Products Template resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template"],
        "summary": "Delete a Swag Customized Products Template resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template"],
        "summary": "Partially update information about a Swag Customized Products Template resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplate",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-configuration": {
      "get": {
        "tags": ["Swag Customized Products Template Configuration"],
        "summary": "List with basic information of Swag Customized Products Template Configuration resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateConfigurationList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Configuration resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-configuration?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-configuration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-configuration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-configuration?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Configuration"],
        "summary": "Create a new Swag Customized Products Template Configuration resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateConfiguration",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-configuration/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Configuration"],
        "summary": "Detailed information about a Swag Customized Products Template Configuration resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_configuration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Configuration"],
        "summary": "Delete a Swag Customized Products Template Configuration resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_configuration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Configuration"],
        "summary": "Partially update information about a Swag Customized Products Template Configuration resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_configuration",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Configuration resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateConfiguration",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-configuration-share": {
      "get": {
        "tags": ["Swag Customized Products Template Configuration Share"],
        "summary": "List with basic information of Swag Customized Products Template Configuration Share resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateConfigurationShareList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Configuration Share resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-configuration-share?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-configuration-share?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-configuration-share?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-configuration-share?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Configuration Share"],
        "summary": "Create a new Swag Customized Products Template Configuration Share resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateConfigurationShare",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateConfigurationShare",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-configuration-share/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Configuration Share"],
        "summary": "Detailed information about a Swag Customized Products Template Configuration Share resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateConfigurationShare",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_configuration_share",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateConfigurationShare",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Configuration Share"],
        "summary": "Delete a Swag Customized Products Template Configuration Share resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateConfigurationShare",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_configuration_share",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Configuration Share"],
        "summary": "Partially update information about a Swag Customized Products Template Configuration Share resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateConfigurationShare",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_configuration_share",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Configuration Share resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateConfigurationShare",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-exclusion": {
      "get": {
        "tags": ["Swag Customized Products Template Exclusion"],
        "summary": "List with basic information of Swag Customized Products Template Exclusion resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateExclusionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Exclusion resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-exclusion?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-exclusion?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-exclusion?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-exclusion?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Exclusion"],
        "summary": "Create a new Swag Customized Products Template Exclusion resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateExclusion",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-exclusion/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Exclusion"],
        "summary": "Detailed information about a Swag Customized Products Template Exclusion resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateExclusion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Exclusion"],
        "summary": "Delete a Swag Customized Products Template Exclusion resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateExclusion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Exclusion"],
        "summary": "Partially update information about a Swag Customized Products Template Exclusion resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateExclusion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Exclusion resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusion",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-exclusion-condition": {
      "get": {
        "tags": ["Swag Customized Products Template Exclusion Condition"],
        "summary": "List with basic information of Swag Customized Products Template Exclusion Condition resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateExclusionConditionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Exclusion Condition resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-exclusion-condition?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-exclusion-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-exclusion-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-exclusion-condition?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Exclusion Condition"],
        "summary": "Create a new Swag Customized Products Template Exclusion Condition resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateExclusionCondition",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusionCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-exclusion-condition/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Exclusion Condition"],
        "summary": "Detailed information about a Swag Customized Products Template Exclusion Condition resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateExclusionCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusionCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Exclusion Condition"],
        "summary": "Delete a Swag Customized Products Template Exclusion Condition resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateExclusionCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Exclusion Condition"],
        "summary": "Partially update information about a Swag Customized Products Template Exclusion Condition resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateExclusionCondition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion_condition",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Exclusion Condition resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusionCondition",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-exclusion-operator": {
      "get": {
        "tags": ["Swag Customized Products Template Exclusion Operator"],
        "summary": "List with basic information of Swag Customized Products Template Exclusion Operator resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateExclusionOperatorList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Exclusion Operator resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-exclusion-operator?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-exclusion-operator?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-exclusion-operator?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-exclusion-operator?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Exclusion Operator"],
        "summary": "Create a new Swag Customized Products Template Exclusion Operator resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateExclusionOperator",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusionOperator",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-exclusion-operator/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Exclusion Operator"],
        "summary": "Detailed information about a Swag Customized Products Template Exclusion Operator resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateExclusionOperator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion_operator",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusionOperator",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Exclusion Operator"],
        "summary": "Delete a Swag Customized Products Template Exclusion Operator resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateExclusionOperator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion_operator",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Exclusion Operator"],
        "summary": "Partially update information about a Swag Customized Products Template Exclusion Operator resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateExclusionOperator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_exclusion_operator",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Exclusion Operator resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateExclusionOperator",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-option": {
      "get": {
        "tags": ["Swag Customized Products Template Option"],
        "summary": "List with basic information of Swag Customized Products Template Option resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Option resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-option?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-option?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-option?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-option?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Option"],
        "summary": "Create a new Swag Customized Products Template Option resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateOption",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-option/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Option"],
        "summary": "Detailed information about a Swag Customized Products Template Option resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Option"],
        "summary": "Delete a Swag Customized Products Template Option resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Option"],
        "summary": "Partially update information about a Swag Customized Products Template Option resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Option resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOption",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-option-price": {
      "get": {
        "tags": ["Swag Customized Products Template Option Price"],
        "summary": "List with basic information of Swag Customized Products Template Option Price resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionPriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Option Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-option-price?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-option-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-option-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-option-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Option Price"],
        "summary": "Create a new Swag Customized Products Template Option Price resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateOptionPrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-option-price/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Option Price"],
        "summary": "Detailed information about a Swag Customized Products Template Option Price resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Option Price"],
        "summary": "Delete a Swag Customized Products Template Option Price resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateOptionPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Option Price"],
        "summary": "Partially update information about a Swag Customized Products Template Option Price resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateOptionPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Option Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionPrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-option-value": {
      "get": {
        "tags": ["Swag Customized Products Template Option Value"],
        "summary": "List with basic information of Swag Customized Products Template Option Value resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionValueList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Option Value resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-option-value?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-option-value?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-option-value?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-option-value?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Option Value"],
        "summary": "Create a new Swag Customized Products Template Option Value resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateOptionValue",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionValue",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-option-value/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Option Value"],
        "summary": "Detailed information about a Swag Customized Products Template Option Value resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionValue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_value",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionValue",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Option Value"],
        "summary": "Delete a Swag Customized Products Template Option Value resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateOptionValue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_value",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Option Value"],
        "summary": "Partially update information about a Swag Customized Products Template Option Value resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateOptionValue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_value",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Option Value resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionValue",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-customized-products-template-option-value-price": {
      "get": {
        "tags": ["Swag Customized Products Template Option Value Price"],
        "summary": "List with basic information of Swag Customized Products Template Option Value Price resources.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionValuePriceList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Customized Products Template Option Value Price resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-customized-products-template-option-value-price?limit=25"
                                },
                                "last": {
                                  "example": "/swag-customized-products-template-option-value-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-customized-products-template-option-value-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-customized-products-template-option-value-price?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Customized Products Template Option Value Price"],
        "summary": "Create a new Swag Customized Products Template Option Value Price resources.",
        "description": "",
        "operationId": "createSwagCustomizedProductsTemplateOptionValuePrice",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionValuePrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-customized-products-template-option-value-price/{id}": {
      "get": {
        "tags": ["Swag Customized Products Template Option Value Price"],
        "summary": "Detailed information about a Swag Customized Products Template Option Value Price resource.",
        "description": "",
        "operationId": "getSwagCustomizedProductsTemplateOptionValuePrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_value_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionValuePrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Customized Products Template Option Value Price"],
        "summary": "Delete a Swag Customized Products Template Option Value Price resource.",
        "description": "",
        "operationId": "deleteSwagCustomizedProductsTemplateOptionValuePrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_value_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Customized Products Template Option Value Price"],
        "summary": "Partially update information about a Swag Customized Products Template Option Value Price resource.",
        "description": "",
        "operationId": "updateSwagCustomizedProductsTemplateOptionValuePrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_customized_products_template_option_value_price",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Customized Products Template Option Value Price resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagCustomizedProductsTemplateOptionValuePrice",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-delay-action": {
      "get": {
        "tags": ["Swag Delay Action"],
        "summary": "List with basic information of Swag Delay Action resources.",
        "description": "",
        "operationId": "getSwagDelayActionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Delay Action resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagDelayAction"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-delay-action?limit=25"
                                },
                                "last": {
                                  "example": "/swag-delay-action?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-delay-action?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-delay-action?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagDelayAction"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Delay Action"],
        "summary": "Create a new Swag Delay Action resources.",
        "description": "",
        "operationId": "createSwagDelayAction",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SwagDelayAction" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagDelayAction" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagDelayAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagDelayAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagDelayAction" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-delay-action/{id}": {
      "get": {
        "tags": ["Swag Delay Action"],
        "summary": "Detailed information about a Swag Delay Action resource.",
        "description": "",
        "operationId": "getSwagDelayAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_delay_action",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagDelayAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagDelayAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagDelayAction" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Delay Action"],
        "summary": "Delete a Swag Delay Action resource.",
        "description": "",
        "operationId": "deleteSwagDelayAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_delay_action",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Delay Action"],
        "summary": "Partially update information about a Swag Delay Action resource.",
        "description": "",
        "operationId": "updateSwagDelayAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_delay_action",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Delay Action resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SwagDelayAction" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagDelayAction" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagDelayAction",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagDelayAction"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagDelayAction" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-language-pack-language": {
      "get": {
        "tags": ["Swag Language Pack Language"],
        "summary": "List with basic information of Swag Language Pack Language resources.",
        "description": "",
        "operationId": "getSwagLanguagePackLanguageList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Language Pack Language resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-language-pack-language?limit=25"
                                },
                                "last": {
                                  "example": "/swag-language-pack-language?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-language-pack-language?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-language-pack-language?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Language Pack Language"],
        "summary": "Create a new Swag Language Pack Language resources.",
        "description": "",
        "operationId": "createSwagLanguagePackLanguage",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagLanguagePackLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagLanguagePackLanguage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-language-pack-language/{id}": {
      "get": {
        "tags": ["Swag Language Pack Language"],
        "summary": "Detailed information about a Swag Language Pack Language resource.",
        "description": "",
        "operationId": "getSwagLanguagePackLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_language_pack_language",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagLanguagePackLanguage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Language Pack Language"],
        "summary": "Delete a Swag Language Pack Language resource.",
        "description": "",
        "operationId": "deleteSwagLanguagePackLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_language_pack_language",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Language Pack Language"],
        "summary": "Partially update information about a Swag Language Pack Language resource.",
        "description": "",
        "operationId": "updateSwagLanguagePackLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_language_pack_language",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Language Pack Language resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagLanguagePackLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagLanguagePackLanguage",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagLanguagePackLanguage"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-connection": {
      "get": {
        "tags": ["Swag Migration Connection"],
        "summary": "List with basic information of Swag Migration Connection resources.",
        "description": "",
        "operationId": "getSwagMigrationConnectionList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration Connection resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationConnection"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-connection?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-connection?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-connection?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-connection?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationConnection"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration Connection"],
        "summary": "Create a new Swag Migration Connection resources.",
        "description": "",
        "operationId": "createSwagMigrationConnection",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationConnection"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagMigrationConnection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationConnection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationConnection"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationConnection"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-connection/{id}": {
      "get": {
        "tags": ["Swag Migration Connection"],
        "summary": "Detailed information about a Swag Migration Connection resource.",
        "description": "",
        "operationId": "getSwagMigrationConnection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_connection",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationConnection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationConnection"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationConnection"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration Connection"],
        "summary": "Delete a Swag Migration Connection resource.",
        "description": "",
        "operationId": "deleteSwagMigrationConnection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_connection",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration Connection"],
        "summary": "Partially update information about a Swag Migration Connection resource.",
        "description": "",
        "operationId": "updateSwagMigrationConnection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_connection",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration Connection resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationConnection"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagMigrationConnection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationConnection",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationConnection"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationConnection"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-data": {
      "get": {
        "tags": ["Swag Migration Data"],
        "summary": "List with basic information of Swag Migration Data resources.",
        "description": "",
        "operationId": "getSwagMigrationDataList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration Data resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationData"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-data?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-data?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-data?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-data?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationData"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration Data"],
        "summary": "Create a new Swag Migration Data resources.",
        "description": "",
        "operationId": "createSwagMigrationData",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SwagMigrationData" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationData" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationData",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationData"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagMigrationData" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-data/{id}": {
      "get": {
        "tags": ["Swag Migration Data"],
        "summary": "Detailed information about a Swag Migration Data resource.",
        "description": "",
        "operationId": "getSwagMigrationData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_data",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationData",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationData"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagMigrationData" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration Data"],
        "summary": "Delete a Swag Migration Data resource.",
        "description": "",
        "operationId": "deleteSwagMigrationData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_data",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration Data"],
        "summary": "Partially update information about a Swag Migration Data resource.",
        "description": "",
        "operationId": "updateSwagMigrationData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_data",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration Data resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SwagMigrationData" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationData" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationData",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationData"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagMigrationData" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-general-setting": {
      "get": {
        "tags": ["Swag Migration General Setting"],
        "summary": "List with basic information of Swag Migration General Setting resources.",
        "description": "",
        "operationId": "getSwagMigrationGeneralSettingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration General Setting resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-general-setting?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-general-setting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-general-setting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-general-setting?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration General Setting"],
        "summary": "Create a new Swag Migration General Setting resources.",
        "description": "",
        "operationId": "createSwagMigrationGeneralSetting",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationGeneralSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-general-setting/{id}": {
      "get": {
        "tags": ["Swag Migration General Setting"],
        "summary": "Detailed information about a Swag Migration General Setting resource.",
        "description": "",
        "operationId": "getSwagMigrationGeneralSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_general_setting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationGeneralSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration General Setting"],
        "summary": "Delete a Swag Migration General Setting resource.",
        "description": "",
        "operationId": "deleteSwagMigrationGeneralSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_general_setting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration General Setting"],
        "summary": "Partially update information about a Swag Migration General Setting resource.",
        "description": "",
        "operationId": "updateSwagMigrationGeneralSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_general_setting",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration General Setting resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationGeneralSetting",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-logging": {
      "get": {
        "tags": ["Swag Migration Logging"],
        "summary": "List with basic information of Swag Migration Logging resources.",
        "description": "",
        "operationId": "getSwagMigrationLoggingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration Logging resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationLogging"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-logging?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-logging?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-logging?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-logging?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationLogging"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration Logging"],
        "summary": "Create a new Swag Migration Logging resources.",
        "description": "",
        "operationId": "createSwagMigrationLogging",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationLogging"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationLogging" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationLogging",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationLogging"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationLogging"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-logging/{id}": {
      "get": {
        "tags": ["Swag Migration Logging"],
        "summary": "Detailed information about a Swag Migration Logging resource.",
        "description": "",
        "operationId": "getSwagMigrationLogging",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_logging",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationLogging",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationLogging"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationLogging"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration Logging"],
        "summary": "Delete a Swag Migration Logging resource.",
        "description": "",
        "operationId": "deleteSwagMigrationLogging",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_logging",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration Logging"],
        "summary": "Partially update information about a Swag Migration Logging resource.",
        "description": "",
        "operationId": "updateSwagMigrationLogging",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_logging",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration Logging resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationLogging"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationLogging" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationLogging",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationLogging"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationLogging"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-mapping": {
      "get": {
        "tags": ["Swag Migration Mapping"],
        "summary": "List with basic information of Swag Migration Mapping resources.",
        "description": "",
        "operationId": "getSwagMigrationMappingList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration Mapping resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationMapping"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-mapping?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-mapping?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-mapping?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-mapping?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationMapping"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration Mapping"],
        "summary": "Create a new Swag Migration Mapping resources.",
        "description": "",
        "operationId": "createSwagMigrationMapping",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationMapping"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationMapping" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationMapping",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationMapping"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationMapping"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-mapping/{id}": {
      "get": {
        "tags": ["Swag Migration Mapping"],
        "summary": "Detailed information about a Swag Migration Mapping resource.",
        "description": "",
        "operationId": "getSwagMigrationMapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_mapping",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationMapping",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationMapping"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationMapping"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration Mapping"],
        "summary": "Delete a Swag Migration Mapping resource.",
        "description": "",
        "operationId": "deleteSwagMigrationMapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_mapping",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration Mapping"],
        "summary": "Partially update information about a Swag Migration Mapping resource.",
        "description": "",
        "operationId": "updateSwagMigrationMapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_mapping",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration Mapping resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationMapping"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationMapping" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationMapping",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationMapping"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationMapping"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-media-file": {
      "get": {
        "tags": ["Swag Migration Media File"],
        "summary": "List with basic information of Swag Migration Media File resources.",
        "description": "",
        "operationId": "getSwagMigrationMediaFileList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration Media File resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationMediaFile"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-media-file?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-media-file?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-media-file?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-media-file?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationMediaFile"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration Media File"],
        "summary": "Create a new Swag Migration Media File resources.",
        "description": "",
        "operationId": "createSwagMigrationMediaFile",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationMediaFile"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagMigrationMediaFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationMediaFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationMediaFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationMediaFile"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-media-file/{id}": {
      "get": {
        "tags": ["Swag Migration Media File"],
        "summary": "Detailed information about a Swag Migration Media File resource.",
        "description": "",
        "operationId": "getSwagMigrationMediaFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_media_file",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationMediaFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationMediaFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationMediaFile"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration Media File"],
        "summary": "Delete a Swag Migration Media File resource.",
        "description": "",
        "operationId": "deleteSwagMigrationMediaFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_media_file",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration Media File"],
        "summary": "Partially update information about a Swag Migration Media File resource.",
        "description": "",
        "operationId": "updateSwagMigrationMediaFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_media_file",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration Media File resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagMigrationMediaFile"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagMigrationMediaFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationMediaFile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationMediaFile"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagMigrationMediaFile"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-migration-run": {
      "get": {
        "tags": ["Swag Migration Run"],
        "summary": "List with basic information of Swag Migration Run resources.",
        "description": "",
        "operationId": "getSwagMigrationRunList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Migration Run resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagMigrationRun"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-migration-run?limit=25"
                                },
                                "last": {
                                  "example": "/swag-migration-run?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-migration-run?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-migration-run?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagMigrationRun"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Migration Run"],
        "summary": "Create a new Swag Migration Run resources.",
        "description": "",
        "operationId": "createSwagMigrationRun",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SwagMigrationRun" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationRun" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationRun",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationRun"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagMigrationRun" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-migration-run/{id}": {
      "get": {
        "tags": ["Swag Migration Run"],
        "summary": "Detailed information about a Swag Migration Run resource.",
        "description": "",
        "operationId": "getSwagMigrationRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_run",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationRun",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationRun"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagMigrationRun" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Migration Run"],
        "summary": "Delete a Swag Migration Run resource.",
        "description": "",
        "operationId": "deleteSwagMigrationRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_run",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Migration Run"],
        "summary": "Partially update information about a Swag Migration Run resource.",
        "description": "",
        "operationId": "updateSwagMigrationRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_migration_run",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Migration Run resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SwagMigrationRun" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SwagMigrationRun" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagMigrationRun",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagMigrationRun"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SwagMigrationRun" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-paypal-pos-sales-channel": {
      "get": {
        "tags": ["Swag Paypal Pos Sales Channel"],
        "summary": "List with basic information of Swag Paypal Pos Sales Channel resources.",
        "description": "",
        "operationId": "getSwagPaypalPosSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Paypal Pos Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-paypal-pos-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/swag-paypal-pos-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-paypal-pos-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-paypal-pos-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Paypal Pos Sales Channel"],
        "summary": "Create a new Swag Paypal Pos Sales Channel resources.",
        "description": "",
        "operationId": "createSwagPaypalPosSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-paypal-pos-sales-channel/{id}": {
      "get": {
        "tags": ["Swag Paypal Pos Sales Channel"],
        "summary": "Detailed information about a Swag Paypal Pos Sales Channel resource.",
        "description": "",
        "operationId": "getSwagPaypalPosSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Paypal Pos Sales Channel"],
        "summary": "Delete a Swag Paypal Pos Sales Channel resource.",
        "description": "",
        "operationId": "deleteSwagPaypalPosSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Paypal Pos Sales Channel"],
        "summary": "Partially update information about a Swag Paypal Pos Sales Channel resource.",
        "description": "",
        "operationId": "updateSwagPaypalPosSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Paypal Pos Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-paypal-pos-sales-channel-run": {
      "get": {
        "tags": ["Swag Paypal Pos Sales Channel Run"],
        "summary": "List with basic information of Swag Paypal Pos Sales Channel Run resources.",
        "description": "",
        "operationId": "getSwagPaypalPosSalesChannelRunList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Paypal Pos Sales Channel Run resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-paypal-pos-sales-channel-run?limit=25"
                                },
                                "last": {
                                  "example": "/swag-paypal-pos-sales-channel-run?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-paypal-pos-sales-channel-run?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-paypal-pos-sales-channel-run?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Paypal Pos Sales Channel Run"],
        "summary": "Create a new Swag Paypal Pos Sales Channel Run resources.",
        "description": "",
        "operationId": "createSwagPaypalPosSalesChannelRun",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannelRun",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-paypal-pos-sales-channel-run/{id}": {
      "get": {
        "tags": ["Swag Paypal Pos Sales Channel Run"],
        "summary": "Detailed information about a Swag Paypal Pos Sales Channel Run resource.",
        "description": "",
        "operationId": "getSwagPaypalPosSalesChannelRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel_run",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannelRun",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Paypal Pos Sales Channel Run"],
        "summary": "Delete a Swag Paypal Pos Sales Channel Run resource.",
        "description": "",
        "operationId": "deleteSwagPaypalPosSalesChannelRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel_run",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Paypal Pos Sales Channel Run"],
        "summary": "Partially update information about a Swag Paypal Pos Sales Channel Run resource.",
        "description": "",
        "operationId": "updateSwagPaypalPosSalesChannelRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel_run",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Paypal Pos Sales Channel Run resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannelRun",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-paypal-pos-sales-channel-run-log": {
      "get": {
        "tags": ["Swag Paypal Pos Sales Channel Run Log"],
        "summary": "List with basic information of Swag Paypal Pos Sales Channel Run Log resources.",
        "description": "",
        "operationId": "getSwagPaypalPosSalesChannelRunLogList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Paypal Pos Sales Channel Run Log resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-paypal-pos-sales-channel-run-log?limit=25"
                                },
                                "last": {
                                  "example": "/swag-paypal-pos-sales-channel-run-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-paypal-pos-sales-channel-run-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-paypal-pos-sales-channel-run-log?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Paypal Pos Sales Channel Run Log"],
        "summary": "Create a new Swag Paypal Pos Sales Channel Run Log resources.",
        "description": "",
        "operationId": "createSwagPaypalPosSalesChannelRunLog",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannelRunLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-paypal-pos-sales-channel-run-log/{id}": {
      "get": {
        "tags": ["Swag Paypal Pos Sales Channel Run Log"],
        "summary": "Detailed information about a Swag Paypal Pos Sales Channel Run Log resource.",
        "description": "",
        "operationId": "getSwagPaypalPosSalesChannelRunLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel_run_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannelRunLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Paypal Pos Sales Channel Run Log"],
        "summary": "Delete a Swag Paypal Pos Sales Channel Run Log resource.",
        "description": "",
        "operationId": "deleteSwagPaypalPosSalesChannelRunLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel_run_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Paypal Pos Sales Channel Run Log"],
        "summary": "Partially update information about a Swag Paypal Pos Sales Channel Run Log resource.",
        "description": "",
        "operationId": "updateSwagPaypalPosSalesChannelRunLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_paypal_pos_sales_channel_run_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Paypal Pos Sales Channel Run Log resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagPaypalPosSalesChannelRunLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-social-shopping-customer": {
      "get": {
        "tags": ["Swag Social Shopping Customer"],
        "summary": "List with basic information of Swag Social Shopping Customer resources.",
        "description": "",
        "operationId": "getSwagSocialShoppingCustomerList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Social Shopping Customer resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-social-shopping-customer?limit=25"
                                },
                                "last": {
                                  "example": "/swag-social-shopping-customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-social-shopping-customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-social-shopping-customer?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Social Shopping Customer"],
        "summary": "Create a new Swag Social Shopping Customer resources.",
        "description": "",
        "operationId": "createSwagSocialShoppingCustomer",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-social-shopping-customer/{id}": {
      "get": {
        "tags": ["Swag Social Shopping Customer"],
        "summary": "Detailed information about a Swag Social Shopping Customer resource.",
        "description": "",
        "operationId": "getSwagSocialShoppingCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Social Shopping Customer"],
        "summary": "Delete a Swag Social Shopping Customer resource.",
        "description": "",
        "operationId": "deleteSwagSocialShoppingCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Social Shopping Customer"],
        "summary": "Partially update information about a Swag Social Shopping Customer resource.",
        "description": "",
        "operationId": "updateSwagSocialShoppingCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_customer",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Social Shopping Customer resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingCustomer",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingCustomer"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-social-shopping-order": {
      "get": {
        "tags": ["Swag Social Shopping Order"],
        "summary": "List with basic information of Swag Social Shopping Order resources.",
        "description": "",
        "operationId": "getSwagSocialShoppingOrderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Social Shopping Order resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-social-shopping-order?limit=25"
                                },
                                "last": {
                                  "example": "/swag-social-shopping-order?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-social-shopping-order?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-social-shopping-order?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Social Shopping Order"],
        "summary": "Create a new Swag Social Shopping Order resources.",
        "description": "",
        "operationId": "createSwagSocialShoppingOrder",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingOrder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-social-shopping-order/{id}": {
      "get": {
        "tags": ["Swag Social Shopping Order"],
        "summary": "Detailed information about a Swag Social Shopping Order resource.",
        "description": "",
        "operationId": "getSwagSocialShoppingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingOrder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Social Shopping Order"],
        "summary": "Delete a Swag Social Shopping Order resource.",
        "description": "",
        "operationId": "deleteSwagSocialShoppingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Social Shopping Order"],
        "summary": "Partially update information about a Swag Social Shopping Order resource.",
        "description": "",
        "operationId": "updateSwagSocialShoppingOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_order",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Social Shopping Order resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingOrder",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingOrder"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-social-shopping-product-error": {
      "get": {
        "tags": ["Swag Social Shopping Product Error"],
        "summary": "List with basic information of Swag Social Shopping Product Error resources.",
        "description": "",
        "operationId": "getSwagSocialShoppingProductErrorList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Social Shopping Product Error resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-social-shopping-product-error?limit=25"
                                },
                                "last": {
                                  "example": "/swag-social-shopping-product-error?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-social-shopping-product-error?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-social-shopping-product-error?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Social Shopping Product Error"],
        "summary": "Create a new Swag Social Shopping Product Error resources.",
        "description": "",
        "operationId": "createSwagSocialShoppingProductError",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingProductError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingProductError",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-social-shopping-product-error/{id}": {
      "get": {
        "tags": ["Swag Social Shopping Product Error"],
        "summary": "Detailed information about a Swag Social Shopping Product Error resource.",
        "description": "",
        "operationId": "getSwagSocialShoppingProductError",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_product_error",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingProductError",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Social Shopping Product Error"],
        "summary": "Delete a Swag Social Shopping Product Error resource.",
        "description": "",
        "operationId": "deleteSwagSocialShoppingProductError",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_product_error",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Social Shopping Product Error"],
        "summary": "Partially update information about a Swag Social Shopping Product Error resource.",
        "description": "",
        "operationId": "updateSwagSocialShoppingProductError",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_product_error",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Social Shopping Product Error resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingProductError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingProductError",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingProductError"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/swag-social-shopping-sales-channel": {
      "get": {
        "tags": ["Swag Social Shopping Sales Channel"],
        "summary": "List with basic information of Swag Social Shopping Sales Channel resources.",
        "description": "",
        "operationId": "getSwagSocialShoppingSalesChannelList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Swag Social Shopping Sales Channel resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/swag-social-shopping-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/swag-social-shopping-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/swag-social-shopping-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/swag-social-shopping-sales-channel?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Swag Social Shopping Sales Channel"],
        "summary": "Create a new Swag Social Shopping Sales Channel resources.",
        "description": "",
        "operationId": "createSwagSocialShoppingSalesChannel",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/swag-social-shopping-sales-channel/{id}": {
      "get": {
        "tags": ["Swag Social Shopping Sales Channel"],
        "summary": "Detailed information about a Swag Social Shopping Sales Channel resource.",
        "description": "",
        "operationId": "getSwagSocialShoppingSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Swag Social Shopping Sales Channel"],
        "summary": "Delete a Swag Social Shopping Sales Channel resource.",
        "description": "",
        "operationId": "deleteSwagSocialShoppingSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Swag Social Shopping Sales Channel"],
        "summary": "Partially update information about a Swag Social Shopping Sales Channel resource.",
        "description": "",
        "operationId": "updateSwagSocialShoppingSalesChannel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the swag_social_shopping_sales_channel",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Swag Social Shopping Sales Channel resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                  },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SwagSocialShoppingSalesChannel",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwagSocialShoppingSalesChannel"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/system-config": {
      "get": {
        "tags": ["System Config"],
        "summary": "List with basic information of System Config resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSystemConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of System Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SystemConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/system-config?limit=25"
                                },
                                "last": {
                                  "example": "/system-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/system-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/system-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SystemConfig" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["System Config"],
        "summary": "Create a new System Config resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createSystemConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SystemConfig" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SystemConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SystemConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SystemConfig" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SystemConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/system-config/{id}": {
      "get": {
        "tags": ["System Config"],
        "summary": "Detailed information about a System Config resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getSystemConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the system_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of SystemConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SystemConfig" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SystemConfig" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["System Config"],
        "summary": "Delete a System Config resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSystemConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the system_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["System Config"],
        "summary": "Partially update information about a System Config resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSystemConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the system_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a System Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/SystemConfig" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SystemConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of SystemConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/SystemConfig" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SystemConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/tag": {
      "get": {
        "tags": ["Tag"],
        "summary": "List with basic information of Tag resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTagList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tag resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Tag" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/tag?limit=25" },
                                "last": { "example": "/tag?limit=25&page=11" },
                                "next": { "example": "/tag?limit=25&page=4" },
                                "prev": { "example": "/tag?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Tag" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Tag"],
        "summary": "Create a new Tag resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createTag",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Tag" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Tag" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Tag" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tag" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/tag/{id}": {
      "get": {
        "tags": ["Tag"],
        "summary": "Detailed information about a Tag resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tag",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Tag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Tag" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tag" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Tag"],
        "summary": "Delete a Tag resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tag",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Tag"],
        "summary": "Partially update information about a Tag resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tag",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tag resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Tag" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Tag" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tag",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Tag" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tag" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/tax": {
      "get": {
        "tags": ["Tax"],
        "summary": "List with basic information of Tax resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTaxList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Tax" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/tax?limit=25" },
                                "last": { "example": "/tax?limit=25&page=11" },
                                "next": { "example": "/tax?limit=25&page=4" },
                                "prev": { "example": "/tax?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Tax" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Tax"],
        "summary": "Create a new Tax resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createTax",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Tax" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Tax" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tax",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Tax" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tax" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/tax/{id}": {
      "get": {
        "tags": ["Tax"],
        "summary": "Detailed information about a Tax resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Tax",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Tax" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tax" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Tax"],
        "summary": "Delete a Tax resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Tax"],
        "summary": "Partially update information about a Tax resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Tax" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Tax" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Tax",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Tax" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tax" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/tax-provider": {
      "get": {
        "tags": ["Tax Provider"],
        "summary": "List with basic information of Tax Provider resources.",
        "description": "Available since: 6.5.0.0",
        "operationId": "getTaxProviderList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax Provider resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TaxProvider"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/tax-provider?limit=25"
                                },
                                "last": {
                                  "example": "/tax-provider?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-provider?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-provider?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/TaxProvider" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Tax Provider"],
        "summary": "Create a new Tax Provider resources.",
        "description": "Available since: 6.5.0.0",
        "operationId": "createTaxProvider",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/TaxProvider" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaxProvider" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxProvider",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxProvider" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxProvider" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/tax-provider/{id}": {
      "get": {
        "tags": ["Tax Provider"],
        "summary": "Detailed information about a Tax Provider resource.",
        "description": "Available since: 6.5.0.0",
        "operationId": "getTaxProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_provider",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of TaxProvider",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxProvider" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxProvider" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Tax Provider"],
        "summary": "Delete a Tax Provider resource.",
        "description": "Available since: 6.5.0.0",
        "operationId": "deleteTaxProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_provider",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Tax Provider"],
        "summary": "Partially update information about a Tax Provider resource.",
        "description": "Available since: 6.5.0.0",
        "operationId": "updateTaxProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_provider",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax Provider resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/TaxProvider" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaxProvider" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxProvider",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxProvider" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxProvider" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/tax-rule": {
      "get": {
        "tags": ["Tax Rule"],
        "summary": "List with basic information of Tax Rule resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax Rule resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TaxRule"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/tax-rule?limit=25" },
                                "last": {
                                  "example": "/tax-rule?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-rule?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-rule?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/TaxRule" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Tax Rule"],
        "summary": "Create a new Tax Rule resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "createTaxRule",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/TaxRule" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaxRule" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxRule" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxRule" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/tax-rule/{id}": {
      "get": {
        "tags": ["Tax Rule"],
        "summary": "Detailed information about a Tax Rule resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of TaxRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxRule" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxRule" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Tax Rule"],
        "summary": "Delete a Tax Rule resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteTaxRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Tax Rule"],
        "summary": "Partially update information about a Tax Rule resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateTaxRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax Rule resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/TaxRule" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaxRule" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRule",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxRule" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxRule" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/tax-rule-type": {
      "get": {
        "tags": ["Tax Rule Type"],
        "summary": "List with basic information of Tax Rule Type resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleTypeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax Rule Type resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TaxRuleType"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/tax-rule-type?limit=25"
                                },
                                "last": {
                                  "example": "/tax-rule-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-rule-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-rule-type?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/TaxRuleType" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Tax Rule Type"],
        "summary": "Create a new Tax Rule Type resources.",
        "description": "Available since: 6.1.0.0",
        "operationId": "createTaxRuleType",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/TaxRuleType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaxRuleType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRuleType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxRuleType" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxRuleType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/tax-rule-type/{id}": {
      "get": {
        "tags": ["Tax Rule Type"],
        "summary": "Detailed information about a Tax Rule Type resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of TaxRuleType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxRuleType" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxRuleType" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Tax Rule Type"],
        "summary": "Delete a Tax Rule Type resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteTaxRuleType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Tax Rule Type"],
        "summary": "Partially update information about a Tax Rule Type resource.",
        "description": "Available since: 6.1.0.0",
        "operationId": "updateTaxRuleType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the tax_rule_type",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Tax Rule Type resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/TaxRuleType" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaxRuleType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of TaxRuleType",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/TaxRuleType" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaxRuleType" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/theme": {
      "get": {
        "tags": ["Theme"],
        "summary": "List with basic information of Theme resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getThemeList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Theme resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Theme" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/theme?limit=25" },
                                "last": {
                                  "example": "/theme?limit=25&page=11"
                                },
                                "next": { "example": "/theme?limit=25&page=4" },
                                "prev": { "example": "/theme?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Theme" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Theme"],
        "summary": "Create a new Theme resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createTheme",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Theme" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Theme" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Theme",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Theme" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Theme" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/theme/{id}": {
      "get": {
        "tags": ["Theme"],
        "summary": "Detailed information about a Theme resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getTheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the theme",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Theme",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Theme" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Theme" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Theme"],
        "summary": "Delete a Theme resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the theme",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Theme"],
        "summary": "Partially update information about a Theme resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the theme",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Theme resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Theme" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Theme" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Theme",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Theme" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Theme" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/unit": {
      "get": {
        "tags": ["Unit"],
        "summary": "List with basic information of Unit resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUnitList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Unit resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/Unit" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/unit?limit=25" },
                                "last": { "example": "/unit?limit=25&page=11" },
                                "next": { "example": "/unit?limit=25&page=4" },
                                "prev": { "example": "/unit?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Unit" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Unit"],
        "summary": "Create a new Unit resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUnit",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Unit" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Unit" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Unit",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Unit" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unit" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/unit/{id}": {
      "get": {
        "tags": ["Unit"],
        "summary": "Detailed information about a Unit resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the unit",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Unit",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Unit" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unit" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Unit"],
        "summary": "Delete a Unit resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the unit",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Unit"],
        "summary": "Partially update information about a Unit resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the unit",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Unit resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Unit" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Unit" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Unit",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Unit" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unit" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "List with basic information of User resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": { "$ref": "#/components/schemas/User" }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/user?limit=25" },
                                "last": { "example": "/user?limit=25&page=11" },
                                "next": { "example": "/user?limit=25&page=4" },
                                "prev": { "example": "/user?limit=25&page=2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/User" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new User resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/User" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of User",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Detailed information about a User resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of User",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a User resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Partially update information about a User resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/User" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of User",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/user-access-key": {
      "get": {
        "tags": ["User Access Key"],
        "summary": "List with basic information of User Access Key resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserAccessKeyList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User Access Key resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UserAccessKey"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/user-access-key?limit=25"
                                },
                                "last": {
                                  "example": "/user-access-key?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-access-key?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-access-key?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/UserAccessKey" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["User Access Key"],
        "summary": "Create a new User Access Key resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUserAccessKey",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/UserAccessKey" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserAccessKey" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserAccessKey",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserAccessKey" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserAccessKey" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/user-access-key/{id}": {
      "get": {
        "tags": ["User Access Key"],
        "summary": "Detailed information about a User Access Key resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserAccessKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_access_key",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of UserAccessKey",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserAccessKey" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserAccessKey" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["User Access Key"],
        "summary": "Delete a User Access Key resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUserAccessKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_access_key",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["User Access Key"],
        "summary": "Partially update information about a User Access Key resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUserAccessKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_access_key",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User Access Key resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/UserAccessKey" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserAccessKey" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserAccessKey",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserAccessKey" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserAccessKey" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/user-config": {
      "get": {
        "tags": ["User Config"],
        "summary": "List with basic information of User Config resources.",
        "description": "Available since: 6.3.5.0",
        "operationId": "getUserConfigList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User Config resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UserConfig"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/user-config?limit=25" },
                                "last": {
                                  "example": "/user-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-config?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/UserConfig" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["User Config"],
        "summary": "Create a new User Config resources.",
        "description": "Available since: 6.3.5.0",
        "operationId": "createUserConfig",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/UserConfig" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserConfig" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/user-config/{id}": {
      "get": {
        "tags": ["User Config"],
        "summary": "Detailed information about a User Config resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "getUserConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of UserConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserConfig" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserConfig" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["User Config"],
        "summary": "Delete a User Config resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteUserConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["User Config"],
        "summary": "Partially update information about a User Config resource.",
        "description": "Available since: 6.3.5.0",
        "operationId": "updateUserConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_config",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User Config resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/UserConfig" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserConfig",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserConfig" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserConfig" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/user-recovery": {
      "get": {
        "tags": ["User Recovery"],
        "summary": "List with basic information of User Recovery resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserRecoveryList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of User Recovery resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UserRecovery"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/user-recovery?limit=25"
                                },
                                "last": {
                                  "example": "/user-recovery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-recovery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-recovery?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/UserRecovery" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["User Recovery"],
        "summary": "Create a new User Recovery resources.",
        "description": "Available since: 6.0.0.0",
        "operationId": "createUserRecovery",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/UserRecovery" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRecovery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserRecovery" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRecovery" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/user-recovery/{id}": {
      "get": {
        "tags": ["User Recovery"],
        "summary": "Detailed information about a User Recovery resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_recovery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of UserRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserRecovery" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRecovery" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["User Recovery"],
        "summary": "Delete a User Recovery resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUserRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_recovery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["User Recovery"],
        "summary": "Partially update information about a User Recovery resource.",
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUserRecovery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the user_recovery",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a User Recovery resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/UserRecovery" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRecovery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of UserRecovery",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/UserRecovery" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRecovery" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/warehouse": {
      "get": {
        "tags": ["Warehouse"],
        "summary": "List with basic information of Warehouse resources.",
        "description": "",
        "operationId": "getWarehouseList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Warehouse resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Warehouse"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/warehouse?limit=25" },
                                "last": {
                                  "example": "/warehouse?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/warehouse?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/warehouse?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Warehouse" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Warehouse"],
        "summary": "Create a new Warehouse resources.",
        "description": "",
        "operationId": "createWarehouse",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Warehouse" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Warehouse" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Warehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Warehouse" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Warehouse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/warehouse/{id}": {
      "get": {
        "tags": ["Warehouse"],
        "summary": "Detailed information about a Warehouse resource.",
        "description": "",
        "operationId": "getWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Warehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Warehouse" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Warehouse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Warehouse"],
        "summary": "Delete a Warehouse resource.",
        "description": "",
        "operationId": "deleteWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Warehouse"],
        "summary": "Partially update information about a Warehouse resource.",
        "description": "",
        "operationId": "updateWarehouse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the warehouse",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Warehouse resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Warehouse" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Warehouse" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Warehouse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Warehouse" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Warehouse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/warehouse-group": {
      "get": {
        "tags": ["Warehouse Group"],
        "summary": "List with basic information of Warehouse Group resources.",
        "description": "",
        "operationId": "getWarehouseGroupList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Warehouse Group resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/WarehouseGroup"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/warehouse-group?limit=25"
                                },
                                "last": {
                                  "example": "/warehouse-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/warehouse-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/warehouse-group?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/WarehouseGroup" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Warehouse Group"],
        "summary": "Create a new Warehouse Group resources.",
        "description": "",
        "operationId": "createWarehouseGroup",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/WarehouseGroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WarehouseGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of WarehouseGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WarehouseGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WarehouseGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/warehouse-group/{id}": {
      "get": {
        "tags": ["Warehouse Group"],
        "summary": "Detailed information about a Warehouse Group resource.",
        "description": "",
        "operationId": "getWarehouseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the warehouse_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of WarehouseGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WarehouseGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WarehouseGroup" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Warehouse Group"],
        "summary": "Delete a Warehouse Group resource.",
        "description": "",
        "operationId": "deleteWarehouseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the warehouse_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Warehouse Group"],
        "summary": "Partially update information about a Warehouse Group resource.",
        "description": "",
        "operationId": "updateWarehouseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the warehouse_group",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Warehouse Group resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/WarehouseGroup" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WarehouseGroup" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of WarehouseGroup",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WarehouseGroup"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WarehouseGroup" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/webhook": {
      "get": {
        "tags": ["Webhook"],
        "summary": "List with basic information of Webhook resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getWebhookList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webhook resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Webhook"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": { "example": "/webhook?limit=25" },
                                "last": {
                                  "example": "/webhook?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/webhook?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/webhook?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Webhook" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Webhook"],
        "summary": "Create a new Webhook resources.",
        "description": "Available since: 6.3.1.0",
        "operationId": "createWebhook",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Webhook" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Webhook" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Webhook",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Webhook" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Webhook" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/webhook/{id}": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Detailed information about a Webhook resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "getWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of Webhook",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Webhook" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Webhook" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Webhook"],
        "summary": "Delete a Webhook resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Webhook"],
        "summary": "Partially update information about a Webhook resource.",
        "description": "Available since: 6.3.1.0",
        "operationId": "updateWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Webhook resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/Webhook" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Webhook" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of Webhook",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/Webhook" }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Webhook" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/webhook-event-log": {
      "get": {
        "tags": ["Webhook Event Log"],
        "summary": "List with basic information of Webhook Event Log resources.",
        "description": "Available since: 6.4.1.0",
        "operationId": "getWebhookEventLogList",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max amount of resources to be returned in a page",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to be returned",
            "schema": { "type": "integer" }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Encoded SwagQL in JSON",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webhook Event Log resources.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            { "$ref": "#/components/schemas/data" },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/WebhookEventLog"
                              }
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            { "$ref": "#/components/schemas/pagination" },
                            {
                              "type": "object",
                              "properties": {
                                "first": {
                                  "example": "/webhook-event-log?limit=25"
                                },
                                "last": {
                                  "example": "/webhook-event-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/webhook-event-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/webhook-event-log?limit=25&page=2"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebhookEventLog"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "tags": ["Webhook Event Log"],
        "summary": "Create a new Webhook Event Log resources.",
        "description": "Available since: 6.4.1.0",
        "operationId": "createWebhookEventLog",
        "parameters": [
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "schema": { "type": "string", "enum": ["basic", "detail"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/WebhookEventLog" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WebhookEventLog" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of WebhookEventLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookEventLog" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/webhook-event-log/{id}": {
      "get": {
        "tags": ["Webhook Event Log"],
        "summary": "Detailed information about a Webhook Event Log resource.",
        "description": "Available since: 6.4.1.0",
        "operationId": "getWebhookEventLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook_event_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail of WebhookEventLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookEventLog" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Webhook Event Log"],
        "summary": "Delete a Webhook Event Log resource.",
        "description": "Available since: 6.4.1.0",
        "operationId": "deleteWebhookEventLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook_event_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Webhook Event Log"],
        "summary": "Partially update information about a Webhook Event Log resource.",
        "description": "Available since: 6.4.1.0",
        "operationId": "updateWebhookEventLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier for the webhook_event_log",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "_response",
            "in": "query",
            "description": "Data format for response. Empty if none is provided.",
            "allowEmptyValue": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Partially update information about a Webhook Event Log resource.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "$ref": "#/components/schemas/WebhookEventLog" },
                  "included": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/resource" },
                    "uniqueItems": true
                  }
                }
              }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WebhookEventLog" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detail of WebhookEventLog",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/success" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WebhookEventLog" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/_action/media/{mediaId}/upload": {
      "post": {
        "tags": ["Asset Management"],
        "summary": "Upload a file to a media entity",
        "description": "Adds a new file to a media entity. If the entity has an existing file, it will be replaced.\n\nThe are two methods of providing a file to this route:\n * Use a typical file upload and provide the file in the request\n * Fetch the file from an url. This only works if the `shopware.media.enable_url_upload_feature` variable is set to true in the shop environment.\nTo use file upload via url, the content type has to be `application/json` and the parameter `url` has to be provided.",
        "operationId": "upload",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "Identifier of the media entity.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the uploaded file. If not provided the media identifier will be used as name",
            "schema": { "type": "string" }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Extension of the uploaded file. For example `png`",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": { "type": "string", "format": "binary" }
            },
            "application/json": {
              "schema": {
                "required": ["url"],
                "properties": {
                  "url": {
                    "description": "The url of the media file that will be downloaded.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Media file uploaded successful",
            "headers": {
              "Location": {
                "description": "Contains the url to the uploaded media for a redirect.",
                "schema": { "type": "string" }
              }
            }
          }
        }
      }
    },
    "/_action/order_delivery/{orderDeliveryId}/state/{transition}": {
      "post": {
        "tags": ["Order Management"],
        "summary": "Transition an order delivery to a new state",
        "description": "Changes the order delivery state and informs the customer via email if configured.",
        "operationId": "orderDeliveryStateTransition",
        "parameters": [
          {
            "name": "orderDeliveryId",
            "in": "path",
            "description": "Identifier of the order delivery.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "transition",
            "in": "path",
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition which is not possible, you will get an error that lists possible transition for the actual state.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sendMail": {
                    "description": "Controls if a mail should be send to the customer."
                  },
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "stateFieldName": {
                    "description": "This is the state column within the order delivery database table. There should be no need to change it from the default.",
                    "type": "string",
                    "default": "stateId"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo: Use ref of `state_machine_transition` here"
          }
        }
      }
    },
    "/_info/events.json": {
      "get": {
        "tags": ["System Info & Healthcheck"],
        "summary": "Get Business events",
        "description": "Get a list of about the business events.",
        "operationId": "business-events",
        "responses": {
          "200": {
            "description": "Returns a list of about the business events.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/businessEventsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/_action/scheduled-task/run": {
      "post": {
        "tags": ["System Operations"],
        "summary": "Run scheduled tasks.",
        "description": "Starts the scheduled task worker to handle the next scheduled tasks.",
        "operationId": "runScheduledTasks",
        "responses": {
          "200": {
            "description": "Returns a success message indicating a successful run.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "description": "Success message",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/scheduled-task/min-run-interval": {
      "get": {
        "tags": ["System Operations"],
        "summary": "Get the minimum schedules task interval",
        "description": "Fetches the smallest interval that a scheduled task uses.",
        "operationId": "getMinRunInterval",
        "responses": {
          "200": {
            "description": "Returns the minimum interval.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "minRunInterval": {
                      "description": "Minimal interval in seconds.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/order/document/download": {
      "post": {
        "tags": ["Document Management"],
        "summary": "Download a documents",
        "description": "Download a multiple documents in one pdf file.",
        "operationId": "downloadDocuments",
        "requestBody": {
          "description": "documentIds",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The documents.",
            "content": {
              "application/octet-stream": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          }
        }
      }
    },
    "/_action/order/document/{documentTypeName}/create": {
      "post": {
        "tags": ["Document Management"],
        "summary": "Create documents for orders",
        "description": "Creates documents for orders. Documents can for example be an invoice or a delivery note.",
        "operationId": "createDocuments",
        "parameters": [
          {
            "name": "documentTypeName",
            "in": "path",
            "description": "The type of document to create",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "test",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["orderId", "type"],
                  "properties": {
                    "orderId": {
                      "description": "Identifier of the order.",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "type": {
                      "description": "Type of the document to be generated.",
                      "type": "string"
                    },
                    "fileType": {
                      "description": "Type of document file to be generated.",
                      "type": "string",
                      "default": "pdf"
                    },
                    "static": {
                      "description": "Indicate if the document should be static or not.",
                      "type": "boolean",
                      "default": false
                    },
                    "referencedDocumentId": {
                      "description": "Identifier of the reverenced document.",
                      "type": "string",
                      "default": "null",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "config": {
                      "description": "Document specific configuration, like documentNumber, documentDate, documentComment.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documents created successfully. The `api/_action/order/document/create` route can be used to download the document."
          }
        }
      }
    },
    "/_action/order/{orderId}/state/{transition}": {
      "post": {
        "tags": ["Order Management"],
        "summary": "Transition an order to a new state",
        "description": "Changes the order state and informs the customer via email if configured.",
        "operationId": "orderStateTransition",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Identifier of the order.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "transition",
            "in": "path",
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sendMail": {
                    "description": "Controls if a mail should be sent to the customer."
                  },
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "stateFieldName": {
                    "description": "This is the state column within the order database table. There should be no need to change it from the default.",
                    "type": "string",
                    "default": "stateId"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo: Use ref of `state_machine_transition` here"
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": ["Authorization & Authentication"],
        "summary": "Fetch an access token",
        "description": "Fetch a access token that can be used to perform authenticated requests. For more information take a look at the [Authentication documentation](https://shopware.stoplight.io/docs/admin-api/docs/concepts/authentication-authorisation.md).",
        "operationId": "token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/OAuthPasswordGrant" },
                  { "$ref": "#/components/schemas/OAuthRefreshTokenGrant" },
                  { "$ref": "#/components/schemas/OAuthClientCredentialsGrant" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authorized successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["token_type", "expires_in", "access_token"],
                  "properties": {
                    "token_type": {
                      "description": "Type of the token.",
                      "type": "string"
                    },
                    "expires_in": {
                      "description": "Token lifetime in seconds.",
                      "type": "integer"
                    },
                    "access_token": {
                      "description": "The access token that can be used for subsequent requests",
                      "type": "string"
                    },
                    "refresh_token": {
                      "description": "The refresh token that can be used to refresh the access token. This field is not returned on grant type `refresh_token`.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" }
        }
      }
    },
    "/_action/cleanup": {
      "delete": {
        "tags": ["System Operations"],
        "summary": "Clear old cache folders",
        "description": "Removes cache folders that are not needed anymore.",
        "operationId": "clearOldCacheFolders",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cleanup finished."
          }
        }
      }
    },
    "/_info/config": {
      "get": {
        "tags": ["System Info & Healthcheck"],
        "summary": "Get API information",
        "description": "Get information about the API",
        "operationId": "config",
        "responses": {
          "200": {
            "description": "Returns information about the API.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/infoConfigResponse" }
              }
            }
          }
        }
      }
    },
    "/_action/order_transaction/{orderTransactionId}/state/{transition}": {
      "post": {
        "tags": ["Order Management"],
        "summary": "Transition an order transaction to a new state",
        "description": "Changes the order transaction state and informs the customer via email if configured.",
        "operationId": "orderTransactionStateTransition",
        "parameters": [
          {
            "name": "orderTransactionId",
            "in": "path",
            "description": "Identifier of the order transaction.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "transition",
            "in": "path",
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sendMail": {
                    "description": "Controls if a mail should be sent to the customer."
                  },
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "stateFieldName": {
                    "description": "This is the state column within the order transaction database table. There should be no need to change it from the default.",
                    "type": "string",
                    "default": "stateId"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about the transition that was made. `#/components/schemas/StateMachineTransition`"
          }
        }
      }
    },
    "/_action/document/{documentId}/{deepLinkCode}": {
      "get": {
        "tags": ["Document Management"],
        "summary": "Download a document",
        "description": "Download a document by its identifier and deep link code.",
        "operationId": "downloadDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Identifier of the document to be downloaded.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "deepLinkCode",
            "in": "path",
            "description": "A unique hash code which was generated when the document was created.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "download",
            "in": "query",
            "description": "This parameter controls the `Content-Disposition` header. If set to `true` the header will be set to `attachment` else `inline`.",
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "The document.",
            "content": {
              "application/octet-stream": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          }
        }
      }
    },
    "/_action/document/{documentId}/upload": {
      "post": {
        "tags": ["Document Management"],
        "summary": "Upload a file for a document",
        "description": "Uploads a file for a document. This prevents the document from being dynamically generated and delivers the uploaded file instead, when the document is downloaded.\n\nNote:\n* The document is required to be `static`\n* A document can only have one media file\n\nThe are two methods of providing a file to this route:\n * Use a typical file upload and provide the file in the request\n * Fetch the file from an url. This only works if the `shopware.media.enable_url_upload_feature` variable is set to true in the shop environment.\nTo use file upload via url, the content type has to be `application/json` and the parameter `url` has to be provided.",
        "operationId": "uploadToDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Identifier of the document the new file should be added to.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the uploaded file.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Extension of the uploaded file. For example `pdf`",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": { "type": "string", "format": "binary" }
            },
            "application/json": {
              "schema": {
                "required": ["url"],
                "properties": {
                  "url": {
                    "description": "The url of the document that will be downloaded.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document uploaded successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documentId": {
                      "description": "Identifier of the document.",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    },
                    "documentDeepLink": {
                      "description": "A unique hash code which is required to open the document.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/sync": {
      "post": {
        "tags": ["Bulk Operations"],
        "summary": "Bulk edit entities",
        "description": "Starts a sync process for the list of provided actions. This can be upserts and deletes on different entities to an asynchronous process in the background. You can control the behaviour with the `indexing-behavior` header.",
        "operationId": "sync",
        "parameters": [
          {
            "name": "fail-on-error",
            "in": "header",
            "description": "To continue upcoming actions on errors, set the `fail-on-error` header to `false`.",
            "schema": { "type": "boolean", "default": true }
          },
          {
            "name": "indexing-behavior",
            "in": "header",
            "description": "Controls the indexing behavior.\n    - `disable-indexing`: Data indexing is completely disabled",
            "schema": {
              "type": "string",
              "enum": ["use-queue-indexing", "disable-indexing"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "required": ["action", "entity", "payload"],
                  "properties": {
                    "action": {
                      "description": "The action indicates what should happen with the provided payload.\n    * `upsert`: The Sync API does not differ between create and update operations,\n    but always performs an upsert operation. During an upsert, the system checks whether the entity already exists in the\n    system and updates it if an identifier has been passed, otherwise a new entity is created with this identifier.\n    * `delete`: Deletes entites with the provided identifiers",
                      "type": "string",
                      "enum": ["upsert", "delete"]
                    },
                    "entity": {
                      "description": "The entity that should be processed with the payload.",
                      "type": "string",
                      "example": "product"
                    },
                    "payload": {
                      "description": "Contains a list of changesets for an entity. If the action type is `delete`,\n    a list of identifiers can be provided.",
                      "type": "array",
                      "items": { "type": "object" }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a sync result containing information about the updated entities",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Object with information about updated entites",
                      "type": "object"
                    },
                    "notFound": {
                      "description": "Object with information about not found entites",
                      "type": "object"
                    },
                    "deleted": {
                      "description": "Object with information about deleted entites",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/index-products": {
      "post": {
        "tags": ["System Operations"],
        "summary": "Send product indexing message",
        "description": "Dispachtes an product indexing message to the message bus, with the provided ids",
        "operationId": "productIndexing",
        "responses": {
          "204": {
            "description": "Returns an empty response indicating that the message dispatched."
          }
        }
      }
    },
    "/metrics/needs-approval": {
      "delete": {
        "tags": ["Metrics approval request"],
        "summary": "Get information about the metrics approval request.",
        "description": "Get whether the metrics approval request is necessary or not.",
        "operationId": "getNeedsMetricsApprovalRequest",
        "responses": {
          "200": {
            "description": "Returns true if it is needed, false if it is not."
          }
        }
      }
    },
    "/_action/number-range/reserve/{type}/{saleschannel}": {
      "get": {
        "tags": ["Document Management"],
        "summary": "Reserve or preview a document number",
        "description": "This endpoint provides functionality to reserve or preview a document number which can be used to create a new document using the `/_action/order/{orderId}/document/{documentTypeName}` endpoint.\n\nThe number generated by the endpoint will be reserved and the number pointer will be incremented with every call. For preview purposes, you can add the `?preview=1` parameter to the request. In that case, the number will not be incremented.",
        "operationId": "numberRangeReserve",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "`technicalName` of the document type (e.g. `document_invoice`). Available types can be fetched with the `/api/document-type endpoint`.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "saleschannel",
            "in": "path",
            "description": "Sales channel for the number range. Number ranges can be defined per sales channel, so you can pass a sales channel ID here.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "preview",
            "in": "query",
            "description": "If this parameter has a true value, the number will not actually be incremented, but only previewed.",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "The generated number",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "number": {
                      "description": "The generated (or previewed) document number.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": { "description": "Number range not found" }
        }
      }
    },
    "/_action/order_transaction_capture_refund/{refundId}": {
      "post": {
        "tags": ["Order Management"],
        "summary": "Refund an order transaction capture",
        "description": "Refunds an order transaction capture.",
        "operationId": "orderTransactionCaptureRefund",
        "parameters": [
          {
            "name": "refundId",
            "in": "path",
            "description": "Identifier of the order transaction capture refund.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "responses": {
          "204": { "description": "Refund was successful" },
          "400": {
            "description": "Something went wrong, while processing the refund"
          },
          "404": { "description": "Refund with id not found" }
        }
      }
    },
    "/_action/container_cache": {
      "delete": {
        "tags": ["System Operations"],
        "summary": "Clear container caches",
        "description": "The container cache is immediately cleared synchronously.",
        "operationId": "clearContainerCache",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the container cache is cleared."
          }
        }
      }
    },
    "/_action/index": {
      "post": {
        "tags": ["System Operations"],
        "summary": "Run indexer",
        "description": "Runs all registered indexer in the shop asynchronously.",
        "operationId": "index",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "skip": {
                    "description": "Array of indexers/updaters to be skipped.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the indexing progress startet."
          }
        }
      }
    },
    "/_action/mail-template/send": {
      "post": {
        "tags": ["Mail Operations"],
        "summary": "Send a mail",
        "description": "Generates a mail from a mail template and sends it to the customer.\n\nTake a look at the `salesChannel` entity for possible values. For example `{{ salesChannel.name }}` can be used.",
        "operationId": "send",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "recipients",
                  "salesChannelId",
                  "contentHtml",
                  "contentPlain",
                  "subject",
                  "senderName"
                ],
                "properties": {
                  "recipients": {
                    "description": "A list of recipients with name and mail address.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "salesChannelId": {
                    "description": "Identifier of the sales channel from which the mail should be send.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "contentHtml": {
                    "description": "The content of the mail in HTML format.",
                    "type": "string"
                  },
                  "contentPlain": {
                    "description": "The content of the mail as plain text.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Subject of the mail.",
                    "type": "string"
                  },
                  "senderName": {
                    "description": "Name of the sender.",
                    "type": "string"
                  },
                  "senderEmail": {
                    "description": "Mail address of the sender. If not set, `core.basicInformation.email` or `core.mailerSettings.senderAddress` will be used from the shop configuration.",
                    "type": "string"
                  },
                  "mediaIds": {
                    "description": "List of media identifiers which should be attached to the mail.",
                    "type": "array",
                    "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                  },
                  "binAttachments": {
                    "description": "A list of binary attachments which should be added to the mail.",
                    "required": ["content", "fileName", "mimeType"],
                    "type": "array",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "Binary content of the attachment.",
                          "type": "string"
                        },
                        "fileName": {
                          "description": "File name of the attachment.",
                          "type": "string"
                        },
                        "mimeType": {
                          "description": "Mime type of the attachment.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "recipientsBcc": {
                    "description": "A list of recipients with name and mail address to be set in BCC.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "recipientsCc": {
                    "description": "A list of recipients with name and mail address to be set in CC.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "replyTo": {
                    "description": "A list of mail addresses with name and mail address to be set in reply to.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  },
                  "returnPath": {
                    "description": "A list of mail addresses with name and mail address to be set in return path.",
                    "type": "object",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The mail was sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "size": {
                      "description": "Length of the email message",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/mail-template/validate": {
      "post": {
        "tags": ["Mail Operations"],
        "summary": "Validate a mail content",
        "description": "Validates if content for a mail can be rendered without sending an email.",
        "operationId": "validate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["contentHtml", "contentPlain"],
                "properties": {
                  "contentHtml": {
                    "description": "The content of the mail in HTML format.",
                    "type": "string"
                  },
                  "contentPlain": {
                    "description": "The content of the mail as plain text.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating the mail content was rendered successfully."
          }
        }
      }
    },
    "/_action/mail-template/build": {
      "post": {
        "tags": ["Mail Operations"],
        "summary": "Preview a mail template",
        "description": "Generates a preview of a mail template.",
        "operationId": "build",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["mailTemplateType", "mailTemplate"],
                "properties": {
                  "mailTemplateType": {
                    "description": "Only the property `templateData` is used. It provides additional variables to the templating engine.",
                    "properties": {
                      "templateData": {
                        "description": "An associative array that is handed over to the templating engine and can be used as variables in the mail content.",
                        "type": "object",
                        "example": {
                          "order": {
                            "orderNumber": 5000,
                            "customerName": "Example Customer"
                          },
                          "messageOfTheDay": "An apple a day keeps the doctor away!"
                        },
                        "additionalProperties": true
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplate": {
                    "description": "The content of the mail as plain text.",
                    "properties": {
                      "contentHtml": {
                        "description": "The content of mail mail template in html format.",
                        "type": "string",
                        "example": "Hello {{ order.customerName }}, this is example mail content, the current date is {{ 'now'|date('d/m/Y') }}"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The rendered preview of the mail template.",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/_action/cache_warmup": {
      "delete": {
        "tags": ["System Operations"],
        "summary": "Clear and warm up caches",
        "description": "After the cache has been cleared, new cache entries are generated asynchronously.",
        "operationId": "clearCacheAndScheduleWarmUp",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cache has been cleared and generation of new cache has started."
          }
        }
      }
    },
    "/_info/flow-actions.json": {
      "get": {
        "tags": ["System Info & Healthcheck"],
        "summary": "Get actions for flow builder",
        "description": "Get a list of action for flow builder.",
        "operationId": "flow-actions",
        "responses": {
          "200": {
            "description": "Returns a list of action for flow builder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flowBulderActionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/_action/cache": {
      "delete": {
        "tags": ["System Operations"],
        "summary": "Clear caches",
        "description": "The cache is immediately cleared synchronously for all used adapters.",
        "operationId": "clearCache",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cache has been cleared."
          }
        }
      }
    },
    "/_info/openapi3.json": {
      "get": {
        "tags": ["System Info & Healthcheck"],
        "summary": "Get OpenAPI Specification",
        "description": "Get information about the API in OpenAPI format.",
        "operationId": "api-info",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the api",
            "schema": { "type": "string", "enum": ["jsonapi", "json"] }
          }
        ],
        "responses": {
          "200": { "description": "Returns information about the API." }
        }
      }
    },
    "/_action/message-queue/consume": {
      "post": {
        "tags": ["System Operations"],
        "summary": "Consume messages from the message queue.",
        "description": "This route can be used to consume messenges from the message queue. It is intended to be used if\nno cronjob is configured to consume messages regulary.",
        "operationId": "consumeMessages",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["receiver"],
                "properties": {
                  "receiver": {
                    "description": "The name of the transport in the messenger that should be processed.\nSee the [Symfony Messenger documentation](https://symfony.com/doc/current/messenger.html) for more information",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about handled messages",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "handledMessages": {
                      "description": "The number of messages processed.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_info/version": {
      "get": {
        "tags": ["System Info & Healthcheck"],
        "summary": "Get the Shopware version",
        "description": "Get the version of the Shopware instance",
        "operationId": "infoShopwareVersion",
        "responses": {
          "200": {
            "description": "Returns the version of the Shopware instance.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "version": {
                      "description": "The Shopware version.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/indexing": {
      "post": {
        "tags": ["System Operations"],
        "summary": "Run indexer",
        "description": "Runs all registered indexer in the shop asynchronously.",
        "operationId": "indexing",
        "responses": {
          "200": {
            "description": "Returns an empty response indicating that the indexing process started."
          }
        }
      }
    },
    "/_action/indexing/{indexer}": {
      "post": {
        "tags": ["System Operations"],
        "summary": "Iterate an indexer",
        "description": "Starts a defined indexer with an offset.\n\nfor the next request. `finish: true` in the response indicates that the indexer is finished",
        "operationId": "iterate",
        "parameters": [
          {
            "name": "indexer",
            "in": "path",
            "description": "Name of the indexer to iterate.",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "offset": {
                    "description": "The offset for the iteration.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about the iteration.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "finish": {
                      "description": "Indicates if the indexing process finished.",
                      "type": "boolean"
                    },
                    "offset": {
                      "description": "Offset to be used for the next iteration.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/cache_info": {
      "get": {
        "tags": ["System Operations"],
        "summary": "Get cache information",
        "description": "Get information about the cache configuration",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "Information about the cache state.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "environment": {
                      "description": "The active environment.",
                      "type": "string"
                    },
                    "httpCache": {
                      "description": "State of the HTTP cache.",
                      "type": "boolean"
                    },
                    "cacheAdapter": {
                      "description": "The active cache adapter.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/_action/custom-price": {
      "post": {
        "tags": ["Bulk Operations"],
        "summary": "Bulk edit custom prices",
        "description": "An emulation of Sync API implementation",
        "operationId": "customPriceImport",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CustomPricingUpsertOperation"
                    },
                    {
                      "$ref": "#/components/schemas/CustomPricingDeleteOperation"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a JSON result containing information about the updated entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPricingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/_admin/rule-builder-preview/{orderId}": {
      "post": {
        "tags": ["Rule Preview"],
        "summary": "Preview results of a rule evaluating an order",
        "description": "Evaluate the conditions of a rule based on a pre-selected order.",
        "operationId": "rulePreview",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Identifier of the order the preview should be generated for",
            "required": true,
            "schema": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["conditions"],
                "properties": {
                  "conditions": {
                    "description": "Array of nested rule condition payloads.",
                    "items": { "type": "object" },
                    "type": "array"
                  },
                  "dateTime": {
                    "description": "A date and time to be mocked in the preview evaluation.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the results of the evaluated rule conditions as an object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "match": {
                        "description": "Evaluation of the condition",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The technical name of the condition",
                        "type": "string"
                      },
                      "ruleReferenceId": {
                        "description": "The id of the corresponding rule_condition entity",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "success": {
        "required": ["data"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": {
            "description": "Link members related to the primary data.",
            "allOf": [
              { "$ref": "#/components/schemas/links" },
              { "$ref": "#/components/schemas/pagination" }
            ]
          },
          "data": { "$ref": "#/components/schemas/data" },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "type": "array",
            "items": { "$ref": "#/components/schemas/resource" },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "failure": {
        "required": ["errors"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": { "$ref": "#/components/schemas/links" },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/error" },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "info": {
        "required": ["meta"],
        "properties": {
          "meta": { "$ref": "#/components/schemas/meta" },
          "links": { "$ref": "#/components/schemas/links" },
          "jsonapi": { "$ref": "#/components/schemas/jsonapi" }
        },
        "type": "object"
      },
      "meta": {
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object",
        "additionalProperties": true
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/resource" },
            "uniqueItems": true
          }
        ]
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "required": ["type", "id"],
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string" },
          "attributes": { "$ref": "#/components/schemas/attributes" },
          "relationships": { "$ref": "#/components/schemas/relationships" },
          "links": { "$ref": "#/components/schemas/links" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object"
      },
      "relationshipLinks": {
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "properties": {
          "self": {
            "allOf": [
              {
                "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                "type": "array",
                "items": { "type": "object" }
              },
              { "$ref": "#/components/schemas/link" }
            ]
          },
          "related": { "$ref": "#/components/schemas/link" }
        },
        "type": "object",
        "additionalProperties": true
      },
      "links": {
        "type": "object",
        "additionalProperties": { "$ref": "#/components/schemas/link" }
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [
          {
            "description": "A string containing the link's URL.",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": ["href"],
            "properties": {
              "href": {
                "description": "A string containing the link's URL.",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": { "$ref": "#/components/schemas/meta" }
            }
          }
        ]
      },
      "attributes": {
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object",
        "additionalProperties": true
      },
      "relationships": {
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object",
        "anyOf": [
          { "required": ["data"] },
          { "required": ["meta"] },
          { "required": ["links"] },
          {
            "type": "object",
            "properties": {
              "links": { "$ref": "#/components/schemas/relationshipLinks" },
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [
                  { "$ref": "#/components/schemas/relationshipToOne" },
                  { "$ref": "#/components/schemas/relationshipToMany" }
                ]
              }
            }
          }
        ],
        "additionalProperties": false
      },
      "relationshipToOne": {
        "allOf": [
          {
            "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object."
          },
          { "$ref": "#/components/schemas/linkage" }
        ]
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
        "type": "array",
        "items": { "$ref": "#/components/schemas/linkage" },
        "uniqueItems": true
      },
      "linkage": {
        "description": "The \"type\" and \"id\" to non-empty members.",
        "required": ["type", "id"],
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "pagination": {
        "properties": {
          "first": {
            "description": "The first page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "last": {
            "description": "The last page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "prev": {
            "description": "The previous page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "next": {
            "description": "The next page of data",
            "type": "string",
            "format": "uri-reference"
          }
        },
        "type": "object"
      },
      "jsonapi": {
        "description": "An object describing the server's implementation",
        "properties": {
          "version": { "type": "string" },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "error": {
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": { "$ref": "#/components/schemas/links" },
          "status": {
            "type": "string",
            "description": "The HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "type": "string",
            "description": "An application-specific error code, expressed as a string value."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "description": {
            "type": "string",
            "description": "A human-readable description of the problem."
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              }
            }
          },
          "meta": { "$ref": "#/components/schemas/meta" }
        },
        "type": "object",
        "additionalProperties": false
      },
      "AclRoleJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "privileges", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "privileges": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "deletedAt": { "type": "string", "format": "date-time" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "users": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/acl-role/018a1d1ce1f57180b51c3272cc74304c/users"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "user" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f670e8881fefbbb7c10c11"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/acl-role/018a1d1ce1f57180b51c3272cc74304c/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1f670e8881fefbbb7c7c73f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "integrations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/acl-role/018a1d1ce1f57180b51c3272cc74304c/integrations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integration"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f670e8881fefbbb895609d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AclRole": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "privileges", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "privileges": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "deletedAt": { "type": "string", "format": "date-time" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "users": { "$ref": "#/components/schemas/User" },
          "app": { "$ref": "#/components/schemas/App" },
          "integrations": { "$ref": "#/components/schemas/Integration" }
        },
        "type": "object"
      },
      "AclUserRole": {
        "description": "Added since version: 6.0.0.0",
        "required": ["userId", "aclRoleId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "aclRoleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" },
          "aclRole": { "$ref": "#/components/schemas/AclRole" }
        },
        "type": "object"
      },
      "AppJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "name",
              "path",
              "active",
              "configurable",
              "version",
              "allowDisable",
              "integrationId",
              "aclRoleId",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "path": { "type": "string" },
              "author": { "type": "string" },
              "copyright": { "type": "string" },
              "license": { "type": "string" },
              "active": { "type": "boolean" },
              "configurable": { "type": "boolean" },
              "privacy": { "type": "string" },
              "version": { "type": "string" },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "modules": { "type": "array", "items": { "type": "object" } },
              "mainModule": { "type": "object" },
              "cookies": { "type": "array", "items": { "type": "object" } },
              "allowDisable": { "type": "boolean" },
              "baseAppUrl": { "type": "string" },
              "allowedHosts": {
                "type": "array",
                "items": { "type": "string" }
              },
              "templateLoadPriority": { "type": "integer", "format": "int64" },
              "label": { "type": "string" },
              "description": { "type": "string" },
              "privacyPolicyExtensions": { "type": "string" },
              "customFields": { "type": "object" },
              "integrationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "aclRoleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "storefrontConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/storefrontConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "saas_app_storefront_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cf9eb13b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "integration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/integration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1f770a8a5bd46592ba6a61f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "aclRole": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/aclRole"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "acl_role" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1f770a8a5bd46592c696450"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customFieldSets": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/customFieldSets"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field_set"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074c9f316de"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "actionButtons": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/actionButtons"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_action_button"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074caeac955"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templates": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/templates"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cb96037d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "webhooks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/webhooks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "webhook" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cbf21bf3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cc7cc902"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "taxProviders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/taxProviders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tax_provider"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cc9687fa"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlocks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/cmsBlocks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_cms_block"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cd7daf43"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/flowActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_flow_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074ce2804de"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowEvents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/flowEvents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_flow_event"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1f8702baaea6074cf17533e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "App": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "name",
          "path",
          "active",
          "configurable",
          "version",
          "allowDisable",
          "integrationId",
          "aclRoleId",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "author": { "type": "string" },
          "copyright": { "type": "string" },
          "license": { "type": "string" },
          "active": { "type": "boolean" },
          "configurable": { "type": "boolean" },
          "privacy": { "type": "string" },
          "version": { "type": "string" },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string",
            "readOnly": true
          },
          "modules": { "type": "array", "items": { "type": "object" } },
          "mainModule": { "type": "object" },
          "cookies": { "type": "array", "items": { "type": "object" } },
          "allowDisable": { "type": "boolean" },
          "baseAppUrl": { "type": "string" },
          "allowedHosts": { "type": "array", "items": { "type": "string" } },
          "templateLoadPriority": { "type": "integer", "format": "int64" },
          "label": { "type": "string" },
          "description": { "type": "string" },
          "privacyPolicyExtensions": { "type": "string" },
          "customFields": { "type": "object" },
          "integrationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "aclRoleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "storefrontConfig": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/app/018a1d1ce1f770a8a5bd46592b0ebf98/storefrontConfig"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "saas_app_storefront_config"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce1f8702baaea6074cf9eb13b"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "integration": { "$ref": "#/components/schemas/Integration" },
          "aclRole": { "$ref": "#/components/schemas/AclRole" },
          "customFieldSets": { "$ref": "#/components/schemas/CustomFieldSet" },
          "actionButtons": { "$ref": "#/components/schemas/AppActionButton" },
          "templates": { "$ref": "#/components/schemas/AppTemplate" },
          "webhooks": { "$ref": "#/components/schemas/Webhook" },
          "paymentMethods": { "$ref": "#/components/schemas/AppPaymentMethod" },
          "taxProviders": { "$ref": "#/components/schemas/TaxProvider" },
          "cmsBlocks": { "$ref": "#/components/schemas/AppCmsBlock" },
          "flowActions": { "$ref": "#/components/schemas/AppFlowAction" },
          "flowEvents": { "$ref": "#/components/schemas/AppFlowEvent" }
        },
        "type": "object"
      },
      "AppActionButtonJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "entity",
              "view",
              "url",
              "action",
              "appId",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "entity": { "type": "string" },
              "view": { "type": "string" },
              "url": { "type": "string" },
              "action": { "type": "string" },
              "label": { "type": "string" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-action-button/018a1d1ce1f8702baaea6074d03653fd/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1f8702baaea6074d0aa6fc1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppActionButton": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "entity",
          "view",
          "url",
          "action",
          "appId",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entity": { "type": "string" },
          "view": { "type": "string" },
          "url": { "type": "string" },
          "action": { "type": "string" },
          "label": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "AppAdministrationSnippetJsonApi": {
        "description": "Added since version: 6.4.15.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["value", "appId", "localeId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "value": { "type": "string" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "AppAdministrationSnippet": {
        "description": "Added since version: 6.4.15.0",
        "required": ["value", "appId", "localeId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "value": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppCmsBlockJsonApi": {
        "description": "Added since version: 6.4.2.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "name",
              "block",
              "template",
              "styles",
              "appId",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "block": { "type": "object" },
              "template": { "type": "string" },
              "styles": { "type": "string" },
              "label": { "type": "string" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-cms-block/018a1d1ce1f970d2bc13ee2ed4617f11/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1f970d2bc13ee2ed5141822"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppCmsBlock": {
        "description": "Added since version: 6.4.2.0",
        "required": [
          "name",
          "block",
          "template",
          "styles",
          "appId",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "block": { "type": "object" },
          "template": { "type": "string" },
          "styles": { "type": "string" },
          "label": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "AppFlowActionJsonApi": {
        "description": "Added since version: 6.4.10.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["appId", "name", "url", "createdAt", "label"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "badge": { "type": "string" },
              "parameters": { "type": "object" },
              "config": { "type": "object" },
              "headers": { "type": "object" },
              "requirements": {
                "type": "array",
                "items": { "type": "string" }
              },
              "iconRaw": { "type": "string" },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "swIcon": { "type": "string" },
              "url": { "type": "string" },
              "delayable": { "type": "boolean" },
              "label": { "type": "string" },
              "description": { "type": "string" },
              "headline": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-flow-action/018a1d1ce1fa73f8bd081cc11ff2a467/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fa73f8bd081cc12027599b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowSequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-flow-action/018a1d1ce1fa73f8bd081cc11ff2a467/flowSequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fa73f8bd081cc1211ff836"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppFlowAction": {
        "description": "Added since version: 6.4.10.0",
        "required": ["appId", "name", "url", "createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "badge": { "type": "string" },
          "parameters": { "type": "object" },
          "config": { "type": "object" },
          "headers": { "type": "object" },
          "requirements": { "type": "array", "items": { "type": "string" } },
          "iconRaw": { "type": "string" },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string",
            "readOnly": true
          },
          "swIcon": { "type": "string" },
          "url": { "type": "string" },
          "delayable": { "type": "boolean" },
          "label": { "type": "string" },
          "description": { "type": "string" },
          "headline": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "app": { "$ref": "#/components/schemas/App" },
          "flowSequences": { "$ref": "#/components/schemas/FlowSequence" }
        },
        "type": "object"
      },
      "AppFlowEventJsonApi": {
        "description": "Added since version: 6.5.2.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["appId", "name", "aware", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "aware": { "type": "array", "items": { "type": "string" } },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-flow-event/018a1d1ce1fb723892e0662f0dd9fc45/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fb723892e0662f0e61cc12"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flows": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-flow-event/018a1d1ce1fb723892e0662f0dd9fc45/flows"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "flow" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fb723892e0662f0f09b9bb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppFlowEvent": {
        "description": "Added since version: 6.5.2.0",
        "required": ["appId", "name", "aware", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "aware": { "type": "array", "items": { "type": "string" } },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": { "$ref": "#/components/schemas/App" },
          "flows": { "$ref": "#/components/schemas/Flow" }
        },
        "type": "object"
      },
      "AppPaymentMethodJsonApi": {
        "description": "Added since version: 6.4.1.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "appName",
              "identifier",
              "paymentMethodId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "appName": { "type": "string" },
              "identifier": { "type": "string" },
              "payUrl": { "type": "string" },
              "finalizeUrl": { "type": "string" },
              "validateUrl": { "type": "string" },
              "captureUrl": { "type": "string" },
              "refundUrl": { "type": "string" },
              "recurringUrl": { "type": "string" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "originalMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-payment-method/018a1d1ce1fb723892e0662f0f2aa56a/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fb723892e0662f0fe0c3db"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "originalMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-payment-method/018a1d1ce1fb723892e0662f0f2aa56a/originalMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fb723892e0662f105c1d75"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-payment-method/018a1d1ce1fb723892e0662f0f2aa56a/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fb723892e0662f1080af4f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppPaymentMethod": {
        "description": "Added since version: 6.4.1.0",
        "required": ["appName", "identifier", "paymentMethodId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "appName": { "type": "string" },
          "identifier": { "type": "string" },
          "payUrl": { "type": "string" },
          "finalizeUrl": { "type": "string" },
          "validateUrl": { "type": "string" },
          "captureUrl": { "type": "string" },
          "refundUrl": { "type": "string" },
          "recurringUrl": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "originalMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": { "$ref": "#/components/schemas/App" },
          "originalMedia": { "$ref": "#/components/schemas/Media" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" }
        },
        "type": "object"
      },
      "AppScriptConditionJsonApi": {
        "description": "Added since version: 6.4.10.3",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["identifier", "active", "appId", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "identifier": { "type": "string" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "group": { "type": "string" },
              "script": { "type": "string" },
              "config": { "type": "object" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-script-condition/018a1d1ce1fc733ea293a6071fe958dc/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fc733ea293a60720010d5d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "ruleConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-script-condition/018a1d1ce1fc733ea293a6071fe958dc/ruleConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fc733ea293a6072050b322"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppScriptCondition": {
        "description": "Added since version: 6.4.10.3",
        "required": ["identifier", "active", "appId", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "identifier": { "type": "string" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "group": { "type": "string" },
          "script": { "type": "string" },
          "config": { "type": "object" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "app": { "$ref": "#/components/schemas/App" },
          "ruleConditions": { "$ref": "#/components/schemas/RuleCondition" }
        },
        "type": "object"
      },
      "AppTemplateJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["template", "path", "active", "appId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "template": { "type": "string" },
              "path": { "type": "string" },
              "active": { "type": "boolean" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/app-template/018a1d1ce1fd72eea289842bb4c61525/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fd72eea289842bb54cf7fd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "AppTemplate": {
        "description": "Added since version: 6.3.1.0",
        "required": ["template", "path", "active", "appId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "template": { "type": "string" },
          "path": { "type": "string" },
          "active": { "type": "boolean" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "CategoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "displayNestedProducts",
              "type",
              "productAssignmentType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "displayNestedProducts": { "type": "boolean" },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "breadcrumb": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false },
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": { "type": "string", "readOnly": true },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "type": { "type": "string" },
              "productAssignmentType": { "type": "string" },
              "visible": { "type": "boolean" },
              "active": { "type": "boolean" },
              "cmsPageIdSwitched": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "visibleChildCount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "integer",
                "format": "int64"
              },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "slotConfig": { "type": "object" },
              "linkType": { "type": "string" },
              "internalLink": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "externalLink": { "type": "string" },
              "linkNewTab": { "type": "boolean" },
              "description": { "type": "string" },
              "metaTitle": { "type": "string" },
              "metaDescription": { "type": "string" },
              "keywords": { "type": "string" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customEntityTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "swagDynamicAccessRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/swagDynamicAccessRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9fab7c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fe7027947c151d9a72b6c6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9b2ed922"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fe7027947c151d9ba8cc9c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9bd65c03"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "nestedProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/nestedProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9bf4742d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9bf5905b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fe7027947c151d9c05b143"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1fe7027947c151d9cb6d375"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "navigationSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/navigationSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9cbf10ad"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "footerSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/footerSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9d86e47a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "serviceSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/serviceSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9e293d04"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9eaecbef"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/018a1d1ce1fd72eea289842bb62f2859/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1fe7027947c151d9f9b2658"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Category": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "displayNestedProducts",
          "type",
          "productAssignmentType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "afterCategoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "afterCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "displayNestedProducts": { "type": "boolean" },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "breadcrumb": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false },
            "readOnly": true
          },
          "level": { "type": "integer", "format": "int64", "readOnly": true },
          "path": { "type": "string", "readOnly": true },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "type": { "type": "string" },
          "productAssignmentType": { "type": "string" },
          "visible": { "type": "boolean" },
          "active": { "type": "boolean" },
          "cmsPageIdSwitched": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "visibleChildCount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "integer",
            "format": "int64"
          },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "slotConfig": { "type": "object" },
          "linkType": { "type": "string" },
          "internalLink": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalLink": { "type": "string" },
          "linkNewTab": { "type": "boolean" },
          "description": { "type": "string" },
          "metaTitle": { "type": "string" },
          "metaDescription": { "type": "string" },
          "keywords": { "type": "string" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customEntityTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagDynamicAccessRules": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/category/018a1d1ce1fd72eea289842bb62f2859/swagDynamicAccessRules"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "rule" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce1fe7027947c151d9fab7c4c"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "parent": { "$ref": "#/components/schemas/Category" },
          "children": { "$ref": "#/components/schemas/Category" },
          "media": { "$ref": "#/components/schemas/Media" },
          "products": { "$ref": "#/components/schemas/Product" },
          "nestedProducts": { "$ref": "#/components/schemas/Product" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "productStream": { "$ref": "#/components/schemas/ProductStream" },
          "navigationSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "footerSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "serviceSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "mainCategories": { "$ref": "#/components/schemas/MainCategory" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" }
        },
        "type": "object"
      },
      "CategoryTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["categoryId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "category": { "$ref": "#/components/schemas/Category" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "CmsBlockJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["position", "type", "sectionId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "position": { "type": "integer", "format": "int64" },
              "type": { "type": "string" },
              "locked": { "type": "boolean" },
              "name": { "type": "string" },
              "sectionPosition": { "type": "string" },
              "marginTop": { "type": "string" },
              "marginBottom": { "type": "string" },
              "marginLeft": { "type": "string" },
              "marginRight": { "type": "string" },
              "backgroundColor": { "type": "string" },
              "backgroundMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "backgroundMediaMode": { "type": "string" },
              "cssClass": { "type": "string" },
              "visibility": {
                "properties": {
                  "mobile": { "type": "boolean" },
                  "desktop": { "type": "boolean" },
                  "tablet": { "type": "boolean" }
                },
                "type": "object"
              },
              "sectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsSectionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "swagCmsExtensionsQuickview": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/swagCmsExtensionsQuickview"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_quickview"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1ff7133a82a488dac95cd86"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagCmsExtensionsBlockRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/swagCmsExtensionsBlockRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_block_rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1ff7133a82a488dad3ee09b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "section": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/section"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_section"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1ff7133a82a488daa25c878"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "backgroundMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/backgroundMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce1ff7133a82a488dab1f1243"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "slots": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/slots"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "cms_slot" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce1ff7133a82a488daba7726a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsBlock": {
        "description": "Added since version: 6.0.0.0",
        "required": ["position", "type", "sectionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "locked": { "type": "boolean" },
          "name": { "type": "string" },
          "sectionPosition": { "type": "string" },
          "marginTop": { "type": "string" },
          "marginBottom": { "type": "string" },
          "marginLeft": { "type": "string" },
          "marginRight": { "type": "string" },
          "backgroundColor": { "type": "string" },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "backgroundMediaMode": { "type": "string" },
          "cssClass": { "type": "string" },
          "visibility": {
            "properties": {
              "mobile": { "type": "boolean" },
              "desktop": { "type": "boolean" },
              "tablet": { "type": "boolean" }
            },
            "type": "object"
          },
          "sectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "swagCmsExtensionsQuickview": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/swagCmsExtensionsQuickview"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_quickview"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce1ff7133a82a488dac95cd86"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCmsExtensionsBlockRule": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-block/018a1d1ce1ff7133a82a488da9c86c54/swagCmsExtensionsBlockRule"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_block_rule"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce1ff7133a82a488dad3ee09b"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "section": { "$ref": "#/components/schemas/CmsSection" },
          "backgroundMedia": { "$ref": "#/components/schemas/Media" },
          "slots": { "$ref": "#/components/schemas/CmsSlot" }
        },
        "type": "object"
      },
      "CmsPageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["type", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "type": { "type": "string" },
              "entity": { "type": "string" },
              "cssClass": { "type": "string" },
              "config": {
                "properties": { "backgroundColor": { "type": "string" } },
                "type": "object"
              },
              "previewMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": { "type": "object" },
              "locked": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "drafts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/drafts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_page_draft"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb764f185"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "activities": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/activities"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_page_activity"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb7ffeffe"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagCmsExtensionsScrollNavigationPageSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/swagCmsExtensionsScrollNavigationPageSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_scroll_navigation_page_settings"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20070ab967f83ecb86ce416"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "sections": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/sections"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_section"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb35f753d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/previewMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20070ab967f83ecb3ff90b7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb4a302ae"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/landingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb581f48e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "homeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/homeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb5df9afc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20070ab967f83ecb6948c02"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsPage": {
        "description": "Added since version: 6.0.0.0",
        "required": ["type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "entity": { "type": "string" },
          "cssClass": { "type": "string" },
          "config": {
            "properties": { "backgroundColor": { "type": "string" } },
            "type": "object"
          },
          "previewMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "locked": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "drafts": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/drafts"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "cms_page_draft"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20070ab967f83ecb764f185"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "activities": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/activities"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "cms_page_activity"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20070ab967f83ecb7ffeffe"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCmsExtensionsScrollNavigationPageSettings": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-page/018a1d1ce20070ab967f83ecb30989dd/swagCmsExtensionsScrollNavigationPageSettings"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_scroll_navigation_page_settings"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce20070ab967f83ecb86ce416"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "sections": { "$ref": "#/components/schemas/CmsSection" },
          "previewMedia": { "$ref": "#/components/schemas/Media" },
          "categories": { "$ref": "#/components/schemas/Category" },
          "landingPages": { "$ref": "#/components/schemas/LandingPage" },
          "homeSalesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "products": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "CmsPageActivityJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["pageId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "pageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "draftVersion": { "type": "string", "readOnly": true },
              "name": { "type": "string", "readOnly": true },
              "details": { "type": "object", "readOnly": true },
              "isMerged": { "type": "boolean", "readOnly": true },
              "isDiscarded": { "type": "boolean", "readOnly": true },
              "isReleasedAsNew": { "type": "boolean", "readOnly": true },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page-activity/018a1d1ce20171559a72cfbcb3d3a93c/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20171559a72cfbcb49bf0e6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page-activity/018a1d1ce20171559a72cfbcb3d3a93c/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20171559a72cfbcb56a59ad"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsPageActivity": {
        "description": "Added since version: ",
        "required": ["pageId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "pageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "draftVersion": { "type": "string", "readOnly": true },
          "name": { "type": "string", "readOnly": true },
          "details": { "type": "object", "readOnly": true },
          "isMerged": { "type": "boolean", "readOnly": true },
          "isDiscarded": { "type": "boolean", "readOnly": true },
          "isReleasedAsNew": { "type": "boolean", "readOnly": true },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "CmsPageDraftJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "draftVersion",
              "deepLinkCode",
              "name",
              "pageId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "draftVersion": { "type": "string", "readOnly": true },
              "deepLinkCode": { "type": "string", "readOnly": true },
              "name": { "type": "string" },
              "pageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "ownerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "previewMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page-draft/018a1d1ce20171559a72cfbcb5dc6099/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2027392b35142a3eaaabeb3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page-draft/018a1d1ce20171559a72cfbcb5dc6099/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2027392b35142a3eae1142e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-page-draft/018a1d1ce20171559a72cfbcb5dc6099/previewMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2027392b35142a3eb1016f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsPageDraft": {
        "description": "Added since version: ",
        "required": [
          "draftVersion",
          "deepLinkCode",
          "name",
          "pageId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "draftVersion": { "type": "string", "readOnly": true },
          "deepLinkCode": { "type": "string", "readOnly": true },
          "name": { "type": "string" },
          "pageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "ownerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "previewMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "user": { "$ref": "#/components/schemas/User" },
          "previewMedia": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "CmsSectionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["position", "type", "pageId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "position": { "type": "integer", "format": "int64" },
              "type": { "type": "string" },
              "locked": { "type": "boolean" },
              "name": { "type": "string" },
              "sizingMode": { "type": "string" },
              "mobileBehavior": { "type": "string" },
              "backgroundColor": { "type": "string" },
              "backgroundMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "backgroundMediaMode": { "type": "string" },
              "cssClass": { "type": "string" },
              "pageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "visibility": {
                "properties": {
                  "mobile": { "type": "boolean" },
                  "desktop": { "type": "boolean" },
                  "tablet": { "type": "boolean" }
                },
                "type": "object"
              },
              "customFields": { "type": "object" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "swagCmsExtensionsScrollNavigation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/018a1d1ce2027392b35142a3eb255863/swagCmsExtensionsScrollNavigation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_scroll_navigation"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2027392b35142a3edea4b42"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "page": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/018a1d1ce2027392b35142a3eb255863/page"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2027392b35142a3ebb80050"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "backgroundMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/018a1d1ce2027392b35142a3eb255863/backgroundMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2027392b35142a3ec61da16"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "blocks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-section/018a1d1ce2027392b35142a3eb255863/blocks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_block"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2027392b35142a3ecee65d9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsSection": {
        "description": "Added since version: 6.0.0.0",
        "required": ["position", "type", "pageId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "locked": { "type": "boolean" },
          "name": { "type": "string" },
          "sizingMode": { "type": "string" },
          "mobileBehavior": { "type": "string" },
          "backgroundColor": { "type": "string" },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "backgroundMediaMode": { "type": "string" },
          "cssClass": { "type": "string" },
          "pageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "visibility": {
            "properties": {
              "mobile": { "type": "boolean" },
              "desktop": { "type": "boolean" },
              "tablet": { "type": "boolean" }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "swagCmsExtensionsScrollNavigation": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-section/018a1d1ce2027392b35142a3eb255863/swagCmsExtensionsScrollNavigation"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_scroll_navigation"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce2027392b35142a3edea4b42"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "page": { "$ref": "#/components/schemas/CmsPage" },
          "backgroundMedia": { "$ref": "#/components/schemas/Media" },
          "blocks": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "CmsSlotJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["type", "slot", "blockId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "type": { "type": "string" },
              "slot": { "type": "string" },
              "locked": { "type": "boolean" },
              "config": { "type": "object" },
              "customFields": { "type": "object" },
              "data": { "type": "object", "readOnly": true },
              "blockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "fieldConfig": { "type": "object" },
              "cmsBlockVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "swagCmsExtensionsForm": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-slot/018a1d1ce203731ebac880672c78f54d/swagCmsExtensionsForm"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_form"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce203731ebac880672d5e76d0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "block": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/cms-slot/018a1d1ce203731ebac880672c78f54d/block"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_block" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce203731ebac880672cea149a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CmsSlot": {
        "description": "Added since version: 6.0.0.0",
        "required": ["type", "slot", "blockId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "type": { "type": "string" },
          "slot": { "type": "string" },
          "locked": { "type": "boolean" },
          "config": { "type": "object" },
          "customFields": { "type": "object" },
          "data": { "type": "object", "readOnly": true },
          "blockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fieldConfig": { "type": "object" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagCmsExtensionsForm": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/cms-slot/018a1d1ce203731ebac880672c78f54d/swagCmsExtensionsForm"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_cms_extensions_form"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce203731ebac880672d5e76d0"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "block": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "CountryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name", "addressFormat"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "iso": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "shippingAvailable": { "type": "boolean" },
              "iso3": { "type": "string" },
              "displayStateInRegistration": { "type": "boolean" },
              "forceStateInRegistration": { "type": "boolean" },
              "checkVatIdPattern": { "type": "boolean" },
              "vatIdRequired": { "type": "boolean" },
              "vatIdPattern": { "type": "string" },
              "customFields": { "type": "object" },
              "customerTax": {
                "required": ["enabled", "currencyId", "amount"],
                "properties": {
                  "enabled": { "type": "boolean" },
                  "currencyId": { "type": "string" },
                  "amount": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "companyTax": {
                "required": ["enabled", "currencyId", "amount"],
                "properties": {
                  "enabled": { "type": "boolean" },
                  "currencyId": { "type": "string" },
                  "amount": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "postalCodeRequired": { "type": "boolean" },
              "checkPostalCodePattern": { "type": "boolean" },
              "checkAdvancedPostalCodePattern": { "type": "boolean" },
              "advancedPostalCodePattern": { "type": "string" },
              "addressFormat": { "type": "object" },
              "defaultPostalCodePattern": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptionCustomerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/subscriptionCustomerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba33a982c73"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "country_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba338daabe2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/customerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba33953b825"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/orderAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba3397b28eb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba339bfbf0e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba33a386149"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/taxRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tax_rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba33a4b8e22"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currencyCountryRoundings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/018a1d1ce20472a6bd465ba338662a13/currencyCountryRoundings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "currency_country_rounding"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20472a6bd465ba33a97141d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Country": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name", "addressFormat"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "iso": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "shippingAvailable": { "type": "boolean" },
          "iso3": { "type": "string" },
          "displayStateInRegistration": { "type": "boolean" },
          "forceStateInRegistration": { "type": "boolean" },
          "checkVatIdPattern": { "type": "boolean" },
          "vatIdRequired": { "type": "boolean" },
          "vatIdPattern": { "type": "string" },
          "customFields": { "type": "object" },
          "customerTax": {
            "required": ["enabled", "currencyId", "amount"],
            "properties": {
              "enabled": { "type": "boolean" },
              "currencyId": { "type": "string" },
              "amount": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "companyTax": {
            "required": ["enabled", "currencyId", "amount"],
            "properties": {
              "enabled": { "type": "boolean" },
              "currencyId": { "type": "string" },
              "amount": { "type": "number", "format": "float" }
            },
            "type": "object"
          },
          "postalCodeRequired": { "type": "boolean" },
          "checkPostalCodePattern": { "type": "boolean" },
          "checkAdvancedPostalCodePattern": { "type": "boolean" },
          "advancedPostalCodePattern": { "type": "string" },
          "addressFormat": { "type": "object" },
          "defaultPostalCodePattern": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptionCustomerAddresses": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/country/018a1d1ce20472a6bd465ba338662a13/subscriptionCustomerAddresses"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_address"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20472a6bd465ba33a982c73"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "states": { "$ref": "#/components/schemas/CountryState" },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderAddresses": { "$ref": "#/components/schemas/OrderAddress" },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "taxRules": { "$ref": "#/components/schemas/TaxRule" },
          "currencyCountryRoundings": {
            "$ref": "#/components/schemas/CurrencyCountryRounding"
          }
        },
        "type": "object"
      },
      "CountryStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["countryId", "shortCode", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "shortCode": { "type": "string" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptionCustomerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/018a1d1ce205736fa5fb23fc63614040/subscriptionCustomerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce205736fa5fb23fc6600fe78"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/018a1d1ce205736fa5fb23fc63614040/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce205736fa5fb23fc645bd34f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/018a1d1ce205736fa5fb23fc63614040/customerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce205736fa5fb23fc6472902e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country-state/018a1d1ce205736fa5fb23fc63614040/orderAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce205736fa5fb23fc6504dace"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CountryState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["countryId", "shortCode", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shortCode": { "type": "string" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptionCustomerAddresses": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/country-state/018a1d1ce205736fa5fb23fc63614040/subscriptionCustomerAddresses"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_address"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce205736fa5fb23fc6600fe78"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderAddresses": { "$ref": "#/components/schemas/OrderAddress" }
        },
        "type": "object"
      },
      "CurrencyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "factor",
              "symbol",
              "isoCode",
              "itemRounding",
              "totalRounding",
              "createdAt",
              "shortName",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "factor": { "type": "number", "format": "float" },
              "symbol": { "type": "string" },
              "isoCode": { "type": "string" },
              "shortName": { "type": "string" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "taxFreeFrom": { "type": "number", "format": "float" },
              "customFields": { "type": "object" },
              "itemRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b910d9b826"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "socialShoppingSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/socialShoppingSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b9117ab3a4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b90d0eafef"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b90da74b88"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b90e6295ba"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/salesChannelDomains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b90ee2ef7f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscountPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/promotionDiscountPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount_prices"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b90f25cd7c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b90fc2da23"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryRoundings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency/018a1d1ce206724fb71f72b90c428d85/countryRoundings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "currency_country_rounding"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce206724fb71f72b91027e4f2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Currency": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "factor",
          "symbol",
          "isoCode",
          "itemRounding",
          "totalRounding",
          "createdAt",
          "shortName",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "factor": { "type": "number", "format": "float" },
          "symbol": { "type": "string" },
          "isoCode": { "type": "string" },
          "shortName": { "type": "string" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "isSystemDefault": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "taxFreeFrom": { "type": "number", "format": "float" },
          "customFields": { "type": "object" },
          "itemRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/currency/018a1d1ce206724fb71f72b90c428d85/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce206724fb71f72b910d9b826"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "socialShoppingSalesChannels": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/currency/018a1d1ce206724fb71f72b90c428d85/socialShoppingSalesChannels"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_sales_channel"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce206724fb71f72b9117ab3a4"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "orders": { "$ref": "#/components/schemas/Order" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "promotionDiscountPrices": {
            "$ref": "#/components/schemas/PromotionDiscountPrices"
          },
          "productExports": { "$ref": "#/components/schemas/ProductExport" },
          "countryRoundings": {
            "$ref": "#/components/schemas/CurrencyCountryRounding"
          }
        },
        "type": "object"
      },
      "CurrencyCountryRoundingJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "currencyId",
              "countryId",
              "itemRounding",
              "totalRounding",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "itemRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency-country-rounding/018a1d1ce20770a5ad5f206e49128895/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20770a5ad5f206e49f4453d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/currency-country-rounding/018a1d1ce20770a5ad5f206e49128895/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20770a5ad5f206e4a3b60f2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CurrencyCountryRounding": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "currencyId",
          "countryId",
          "itemRounding",
          "totalRounding",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "itemRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "country": { "$ref": "#/components/schemas/Country" }
        },
        "type": "object"
      },
      "CustomEntityJsonApi": {
        "description": "Added since version: 6.4.9.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "fields", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "fields": { "type": "object" },
              "flags": { "type": "object" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "pluginId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsAware": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "storeApiAware": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "customFieldsAware": { "type": "boolean" },
              "labelProperty": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomEntity": {
        "description": "Added since version: 6.4.9.0",
        "required": ["name", "fields", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "fields": { "type": "object" },
          "flags": { "type": "object" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "pluginId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsAware": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "storeApiAware": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "customFieldsAware": { "type": "boolean" },
          "labelProperty": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "type", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "type": { "type": "string" },
              "config": { "type": "object" },
              "active": { "type": "boolean" },
              "customFieldSetId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "allowCustomerWrite": { "type": "boolean" },
              "allowCartExpose": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customFieldSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field/018a1d1ce2087166b761f6e9566509fc/customFieldSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "custom_field_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2087166b761f6e957068cac"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productSearchConfigFields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field/018a1d1ce2087166b761f6e9566509fc/productSearchConfigFields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_config_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2087166b761f6e9572cb937"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomField": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "config": { "type": "object" },
          "active": { "type": "boolean" },
          "customFieldSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "allowCustomerWrite": { "type": "boolean" },
          "allowCartExpose": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFieldSet": { "$ref": "#/components/schemas/CustomFieldSet" },
          "productSearchConfigFields": {
            "$ref": "#/components/schemas/ProductSearchConfigField"
          }
        },
        "type": "object"
      },
      "CustomFieldSetJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "config": { "type": "object" },
              "active": { "type": "boolean" },
              "global": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customFields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/018a1d1ce2087166b761f6e9581a3182/customFields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2097291bd429e02b6bf321e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "relations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/018a1d1ce2087166b761f6e9581a3182/relations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field_set_relation"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2097291bd429e02b7b00fe4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/018a1d1ce2087166b761f6e9581a3182/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2097291bd429e02b840b3da"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set/018a1d1ce2087166b761f6e9581a3182/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2097291bd429e02b84b38b4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldSet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "config": { "type": "object" },
          "active": { "type": "boolean" },
          "global": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "$ref": "#/components/schemas/CustomField" },
          "relations": {
            "$ref": "#/components/schemas/CustomFieldSetRelation"
          },
          "products": { "$ref": "#/components/schemas/Product" },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "CustomFieldSetRelationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["customFieldSetId", "entityName", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFieldSetId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entityName": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customFieldSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-field-set-relation/018a1d1ce2097291bd429e02b86ebc00/customFieldSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "custom_field_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2097291bd429e02b8dc0683"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldSetRelation": {
        "description": "Added since version: 6.0.0.0",
        "required": ["customFieldSetId", "entityName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFieldSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entityName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFieldSet": { "$ref": "#/components/schemas/CustomFieldSet" }
        },
        "type": "object"
      },
      "CustomPriceJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "price", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerGroupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-price/018a1d1ce20a707a9aff6996e709a744/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20a707a9aff6996e7a3e10c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-price/018a1d1ce20a707a9aff6996e709a744/customerGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20a707a9aff6996e87cd6a6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/custom-price/018a1d1ce20a707a9aff6996e709a744/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20a707a9aff6996e90184fc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomPrice": {
        "description": "Added since version: ",
        "required": ["productId", "price", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerGroup": { "$ref": "#/components/schemas/CustomerGroup" },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "CustomerJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "groupId",
              "defaultPaymentMethodId",
              "salesChannelId",
              "languageId",
              "defaultBillingAddressId",
              "defaultShippingAddressId",
              "customerNumber",
              "firstName",
              "lastName",
              "email",
              "accountType",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "defaultPaymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "lastPaymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultBillingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultShippingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "customerNumber": { "type": "string" },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "company": { "type": "string" },
              "email": { "type": "string" },
              "title": { "type": "string" },
              "vatIds": { "type": "array", "items": { "type": "string" } },
              "affiliateCode": { "type": "string" },
              "campaignCode": { "type": "string" },
              "active": { "type": "boolean" },
              "doubleOptInRegistration": { "type": "boolean" },
              "doubleOptInEmailSentDate": {
                "type": "string",
                "format": "date-time"
              },
              "doubleOptInConfirmDate": {
                "type": "string",
                "format": "date-time"
              },
              "hash": { "type": "string" },
              "guest": { "type": "boolean" },
              "firstLogin": { "type": "string", "format": "date-time" },
              "lastLogin": { "type": "string", "format": "date-time" },
              "birthday": { "type": "string" },
              "lastOrderDate": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "orderCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "orderTotalAmount": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "reviewCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "customFields": { "type": "object" },
              "remoteAddress": { "type": "string" },
              "tagIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "requestedGroupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "boundSalesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "accountType": { "type": "string" },
              "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "customPrice": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/customPrice"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20c73b0ac68120d16336732"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/subscriptionCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20c73b0ac68120d169d76d8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "delayActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/delayActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_delay_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20c73b0ac68120d178da323"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "specificFeatures": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/specificFeatures"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_specific_features"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d18233bbb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagSocialShoppingCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/swagSocialShoppingCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_social_shopping_customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d1905a913"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "group": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/group"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c635282f3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultPaymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/defaultPaymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c63810300"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c63996088"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c6430a256"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lastPaymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/lastPaymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c650ae8a2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultBillingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/defaultBillingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c65480698"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultShippingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/defaultShippingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c66229a00"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20b729cae906f6c66e1abfb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "addresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/addresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20b729cae906f6c67d8d732"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/orderCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20b729cae906f6c681e0f4f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20b729cae906f6c68e2b0f1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/promotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20b729cae906f6c68edcb43"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20b729cae906f6c69144aa2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "recoveryCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/recoveryCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_recovery"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d134ef34e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "requestedGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/requestedGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d13edf03c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "boundSalesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/boundSalesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d14983233"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/wishlists"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20c73b0ac68120d14e086cf"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/createdBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d154d031c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer/018a1d1ce20a707a9aff6996e9366510/updatedBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20c73b0ac68120d155ffff5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Customer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "groupId",
          "defaultPaymentMethodId",
          "salesChannelId",
          "languageId",
          "defaultBillingAddressId",
          "defaultShippingAddressId",
          "customerNumber",
          "firstName",
          "lastName",
          "email",
          "accountType",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "defaultPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "lastPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "defaultBillingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "defaultShippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "customerNumber": { "type": "string" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "email": { "type": "string" },
          "title": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "affiliateCode": { "type": "string" },
          "campaignCode": { "type": "string" },
          "active": { "type": "boolean" },
          "doubleOptInRegistration": { "type": "boolean" },
          "doubleOptInEmailSentDate": {
            "type": "string",
            "format": "date-time"
          },
          "doubleOptInConfirmDate": { "type": "string", "format": "date-time" },
          "hash": { "type": "string" },
          "guest": { "type": "boolean" },
          "firstLogin": { "type": "string", "format": "date-time" },
          "lastLogin": { "type": "string", "format": "date-time" },
          "birthday": { "type": "string" },
          "lastOrderDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "orderTotalAmount": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "reviewCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "remoteAddress": { "type": "string" },
          "tagIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "requestedGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "boundSalesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "accountType": { "type": "string" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "customPrice": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/018a1d1ce20a707a9aff6996e9366510/customPrice"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "custom_price" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20c73b0ac68120d16336732"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "subscriptionCustomers": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/018a1d1ce20a707a9aff6996e9366510/subscriptionCustomers"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_customer"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20c73b0ac68120d169d76d8"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "delayActions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/018a1d1ce20a707a9aff6996e9366510/delayActions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_delay_action"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20c73b0ac68120d178da323"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "specificFeatures": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/018a1d1ce20a707a9aff6996e9366510/specificFeatures"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "customer_specific_features"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce20c73b0ac68120d18233bbb"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagSocialShoppingCustomer": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/018a1d1ce20a707a9aff6996e9366510/swagSocialShoppingCustomer"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_social_shopping_customer"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce20c73b0ac68120d1905a913"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "group": { "$ref": "#/components/schemas/CustomerGroup" },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "language": { "$ref": "#/components/schemas/Language" },
          "lastPaymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "defaultBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "salutation": { "$ref": "#/components/schemas/Salutation" },
          "addresses": { "$ref": "#/components/schemas/CustomerAddress" },
          "orderCustomers": { "$ref": "#/components/schemas/OrderCustomer" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "promotions": { "$ref": "#/components/schemas/Promotion" },
          "productReviews": { "$ref": "#/components/schemas/ProductReview" },
          "recoveryCustomer": {
            "$ref": "#/components/schemas/CustomerRecovery"
          },
          "requestedGroup": { "$ref": "#/components/schemas/CustomerGroup" },
          "boundSalesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "wishlists": { "$ref": "#/components/schemas/CustomerWishlist" },
          "createdBy": { "$ref": "#/components/schemas/User" },
          "updatedBy": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "CustomerAddressJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "customerId",
              "countryId",
              "firstName",
              "lastName",
              "city",
              "street",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "zipcode": { "type": "string" },
              "city": { "type": "string" },
              "company": { "type": "string" },
              "street": { "type": "string" },
              "department": { "type": "string" },
              "title": { "type": "string" },
              "phoneNumber": { "type": "string" },
              "additionalAddressLine1": { "type": "string" },
              "additionalAddressLine2": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/018a1d1ce20d705287a35ed72bce0bbc/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20d705287a35ed72c244c0e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/018a1d1ce20d705287a35ed72bce0bbc/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20d705287a35ed72cd58143"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/018a1d1ce20d705287a35ed72bce0bbc/countryState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20d705287a35ed72d4f85da"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-address/018a1d1ce20d705287a35ed72bce0bbc/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20d705287a35ed72db05277"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customerId",
          "countryId",
          "firstName",
          "lastName",
          "city",
          "street",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "street": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "CustomerGroupJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "displayGross": { "type": "boolean" },
              "customFields": { "type": "object" },
              "registrationActive": { "type": "boolean" },
              "registrationTitle": { "type": "string" },
              "registrationIntroduction": { "type": "string" },
              "registrationOnlyCompanyRegistration": { "type": "boolean" },
              "registrationSeoMetaDescription": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "customPrice": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/018a1d1ce20d705287a35ed72dee1976/customPrice"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20e70ddadf9545abc448762"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/018a1d1ce20d705287a35ed72dee1976/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20e70ddadf9545abb148b0c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/018a1d1ce20d705287a35ed72dee1976/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20e70ddadf9545abb7b0b91"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "registrationSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-group/018a1d1ce20d705287a35ed72dee1976/registrationSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce20e70ddadf9545abc2c8cf5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "displayGross": { "type": "boolean" },
          "customFields": { "type": "object" },
          "registrationActive": { "type": "boolean" },
          "registrationTitle": { "type": "string" },
          "registrationIntroduction": { "type": "string" },
          "registrationOnlyCompanyRegistration": { "type": "boolean" },
          "registrationSeoMetaDescription": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "customPrice": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer-group/018a1d1ce20d705287a35ed72dee1976/customPrice"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "custom_price" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce20e70ddadf9545abc448762"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customers": { "$ref": "#/components/schemas/Customer" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "registrationSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "CustomerGroupRegistrationSalesChannels": {
        "description": "Added since version: 6.3.1.0",
        "required": ["customerGroupId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customerGroup": { "$ref": "#/components/schemas/CustomerGroup" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "CustomerRecoveryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["hash", "customerId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "hash": { "type": "string" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-recovery/018a1d1ce20e70ddadf9545abe440d58/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce20f7025acb7449328894c61"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerRecovery": {
        "description": "Added since version: 6.1.0.0",
        "required": ["hash", "customerId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "hash": { "type": "string" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" }
        },
        "type": "object"
      },
      "CustomerSpecificFeaturesJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["customerId", "features", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "features": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-specific-features/018a1d1ce20f7025acb74493289df896/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21071e193ffc089d8c802c1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerSpecificFeatures": {
        "description": "Added since version: ",
        "required": ["customerId", "features", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "features": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" }
        },
        "type": "object"
      },
      "CustomerTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["customerId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "CustomerWishlistJsonApi": {
        "description": "Added since version: 6.3.4.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["customerId", "salesChannelId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist/018a1d1ce21171a49816d3893f476f86/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist_product"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21171a49816d38940052d74"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist/018a1d1ce21171a49816d3893f476f86/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21171a49816d389404f3f6c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist/018a1d1ce21171a49816d3893f476f86/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21171a49816d389408558dc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerWishlist": {
        "description": "Added since version: 6.3.4.0",
        "required": ["customerId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "products": {
            "$ref": "#/components/schemas/CustomerWishlistProduct"
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "CustomerWishlistProductJsonApi": {
        "description": "Added since version: 6.3.4.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "wishlistId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "wishlistId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "wishlist": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist-product/018a1d1ce212736cba37970c2e76b6b0/wishlist"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_wishlist"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce212736cba37970c2e8f57bc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/customer-wishlist-product/018a1d1ce212736cba37970c2e76b6b0/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce212736cba37970c2f53e1d2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomerWishlistProduct": {
        "description": "Added since version: 6.3.4.0",
        "required": ["productId", "wishlistId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "wishlistId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "wishlist": { "$ref": "#/components/schemas/CustomerWishlist" },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "DeliveryTimeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "min", "max", "unit", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "min": { "type": "integer", "format": "int64" },
              "max": { "type": "integer", "format": "int64" },
              "unit": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/delivery-time/018a1d1ce2137327b3905e741c7b3baa/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2147239ba3570c746082ec9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/delivery-time/018a1d1ce2137327b3905e741c7b3baa/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2147239ba3570c74706dc20"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "DeliveryTime": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "min", "max", "unit", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "min": { "type": "integer", "format": "int64" },
          "max": { "type": "integer", "format": "int64" },
          "unit": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "shippingMethods": { "$ref": "#/components/schemas/ShippingMethod" },
          "products": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "DocumentJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "documentTypeId",
              "fileType",
              "orderId",
              "config",
              "deepLinkCode",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "documentTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "fileType": { "type": "string" },
              "referencedDocumentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "documentMediaFileId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "config": { "type": "object" },
              "sent": { "type": "boolean" },
              "static": { "type": "boolean" },
              "deepLinkCode": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/018a1d1ce215726288070a34334ac420/documentType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce215726288070a3433efc5da"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/018a1d1ce215726288070a34334ac420/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce215726288070a3434b12894"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "referencedDocument": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/018a1d1ce215726288070a34334ac420/referencedDocument"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "document" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce215726288070a343589b34d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "dependentDocuments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/018a1d1ce215726288070a34334ac420/dependentDocuments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "document" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce215726288070a3435e6b012"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentMediaFile": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document/018a1d1ce215726288070a34334ac420/documentMediaFile"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce215726288070a34367ceb81"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Document": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentTypeId",
          "fileType",
          "orderId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fileType": { "type": "string" },
          "referencedDocumentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentMediaFileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "config": { "type": "object" },
          "sent": { "type": "boolean" },
          "static": { "type": "boolean" },
          "deepLinkCode": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": { "$ref": "#/components/schemas/DocumentType" },
          "order": { "$ref": "#/components/schemas/Order" },
          "referencedDocument": { "$ref": "#/components/schemas/Document" },
          "dependentDocuments": { "$ref": "#/components/schemas/Document" },
          "documentMediaFile": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "DocumentBaseConfigJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["documentTypeId", "name", "global", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "documentTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "logoId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "filenamePrefix": { "type": "string" },
              "filenameSuffix": { "type": "string" },
              "global": { "type": "boolean" },
              "documentNumber": { "type": "string" },
              "config": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "customFields": { "type": "object" },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config/018a1d1ce21670daa22271e17a873b2d/documentType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21670daa22271e17aab2673"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "logo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config/018a1d1ce21670daa22271e17a873b2d/logo"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21670daa22271e17b02fb1e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config/018a1d1ce21670daa22271e17a873b2d/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21670daa22271e17bfc54ef"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "DocumentBaseConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": ["documentTypeId", "name", "global", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "logoId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "filenamePrefix": { "type": "string" },
          "filenameSuffix": { "type": "string" },
          "global": { "type": "boolean" },
          "documentNumber": { "type": "string" },
          "config": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": { "$ref": "#/components/schemas/DocumentType" },
          "logo": { "$ref": "#/components/schemas/Media" },
          "salesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          }
        },
        "type": "object"
      },
      "DocumentBaseConfigSalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["documentBaseConfigId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "documentBaseConfigId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "documentTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config-sales-channel/018a1d1ce21670daa22271e17c846380/documentType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21771dab08de97fada1823b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config-sales-channel/018a1d1ce21670daa22271e17c846380/documentBaseConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "document_base_config"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21771dab08de97fae2b801a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-base-config-sales-channel/018a1d1ce21670daa22271e17c846380/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21771dab08de97fae82bf81"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "DocumentBaseConfigSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["documentBaseConfigId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentBaseConfigId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "documentTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": { "$ref": "#/components/schemas/DocumentType" },
          "documentBaseConfig": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "DocumentTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["technicalName", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "technicalName": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "customFields": { "type": "object" },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "documents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-type/018a1d1ce21771dab08de97faee66fb7/documents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "document" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21771dab08de97faf186e11"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-type/018a1d1ce21771dab08de97faee66fb7/documentBaseConfigs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21771dab08de97faf6f5042"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/document-type/018a1d1ce21771dab08de97faee66fb7/documentBaseConfigSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21771dab08de97fafd4665f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "DocumentType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "technicalName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "translated": { "type": "object" },
          "documents": { "$ref": "#/components/schemas/Document" },
          "documentBaseConfigs": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "documentBaseConfigSalesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          }
        },
        "type": "object"
      },
      "FlowJsonApi": {
        "description": "Added since version: 6.4.6.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "eventName", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "eventName": { "type": "string" },
              "priority": { "type": "integer", "format": "int64" },
              "invalid": { "type": "boolean", "readOnly": true },
              "active": { "type": "boolean" },
              "description": { "type": "string" },
              "customFields": { "type": "object" },
              "appFlowEventId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "delayActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow/018a1d1ce218737e8c99db3b595a1c53/delayActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_delay_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce218737e8c99db3b5a5fc9ce"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "sequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow/018a1d1ce218737e8c99db3b595a1c53/sequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce218737e8c99db3b59bf97e8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appFlowEvent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow/018a1d1ce218737e8c99db3b595a1c53/appFlowEvent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_flow_event"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce218737e8c99db3b5a375b8b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Flow": {
        "description": "Added since version: 6.4.6.0",
        "required": ["name", "eventName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "eventName": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "invalid": { "type": "boolean", "readOnly": true },
          "active": { "type": "boolean" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "appFlowEventId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "delayActions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/flow/018a1d1ce218737e8c99db3b595a1c53/delayActions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_delay_action"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce218737e8c99db3b5a5fc9ce"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "sequences": { "$ref": "#/components/schemas/FlowSequence" },
          "appFlowEvent": { "$ref": "#/components/schemas/AppFlowEvent" }
        },
        "type": "object"
      },
      "FlowSequenceJsonApi": {
        "description": "Added since version: 6.4.6.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["flowId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "flowId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "actionName": { "type": "string" },
              "config": { "type": "object" },
              "position": { "type": "integer", "format": "int64" },
              "displayGroup": { "type": "integer", "format": "int64" },
              "trueCase": { "type": "boolean" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "appFlowActionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "delayActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/delayActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_delay_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2197211b25300a2103aabca"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "webhookEventLogs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/webhookEventLogs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "webhook_event_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2197211b25300a2106a0279"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "flow": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/flow"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "flow" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2197211b25300a20dddcd4f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2197211b25300a20e4e0210"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "flow_sequence"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2197211b25300a20ea27720"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2197211b25300a20f52d4a5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appFlowAction": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/appFlowAction"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_flow_action"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2197211b25300a20fd5f730"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "FlowSequence": {
        "description": "Added since version: 6.4.6.0",
        "required": ["flowId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "flowId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "actionName": { "type": "string" },
          "config": { "type": "object" },
          "position": { "type": "integer", "format": "int64" },
          "displayGroup": { "type": "integer", "format": "int64" },
          "trueCase": { "type": "boolean" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "appFlowActionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "delayActions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/delayActions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_delay_action"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2197211b25300a2103aabca"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "webhookEventLogs": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/flow-sequence/018a1d1ce2197211b25300a20d010710/webhookEventLogs"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "webhook_event_log"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2197211b25300a2106a0279"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "flow": { "$ref": "#/components/schemas/Flow" },
          "rule": { "$ref": "#/components/schemas/Rule" },
          "parent": { "$ref": "#/components/schemas/FlowSequence" },
          "children": { "$ref": "#/components/schemas/FlowSequence" },
          "appFlowAction": { "$ref": "#/components/schemas/AppFlowAction" }
        },
        "type": "object"
      },
      "FlowTemplateJsonApi": {
        "description": "Added since version: 6.4.18.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "config": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "FlowTemplate": {
        "description": "Added since version: 6.4.18.0",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "config": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportFileJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["originalName", "path", "expireDate", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "originalName": { "type": "string" },
              "path": { "type": "string" },
              "expireDate": { "type": "string", "format": "date-time" },
              "size": { "type": "integer", "format": "int64" },
              "accessToken": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "log": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-file/018a1d1ce21a71e9967ac7f5efc19038/log"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_log"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21a71e9967ac7f5f06343a4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ImportExportFile": {
        "description": "Added since version: 6.0.0.0",
        "required": ["originalName", "path", "expireDate", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "originalName": { "type": "string" },
          "path": { "type": "string" },
          "expireDate": { "type": "string", "format": "date-time" },
          "size": { "type": "integer", "format": "int64" },
          "accessToken": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "log": { "$ref": "#/components/schemas/ImportExportLog" }
        },
        "type": "object"
      },
      "ImportExportLogJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["activity", "state", "records", "config", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "activity": { "type": "string" },
              "state": { "type": "string" },
              "records": { "type": "integer", "format": "int64" },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "profileId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "fileId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "invalidRecordsLogId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "username": { "type": "string" },
              "profileName": { "type": "string" },
              "config": { "type": "object" },
              "result": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/018a1d1ce21b722d8378c96d3b660706/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21b722d8378c96d3c362920"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "profile": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/018a1d1ce21b722d8378c96d3b660706/profile"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_profile"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21b722d8378c96d3cdda1db"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "file": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/018a1d1ce21b722d8378c96d3b660706/file"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_file"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21c7223bdfdf35d34d6637e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "invalidRecordsLog": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/018a1d1ce21b722d8378c96d3b660706/invalidRecordsLog"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_log"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21c7223bdfdf35d34dac073"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "failedImportLog": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-log/018a1d1ce21b722d8378c96d3b660706/failedImportLog"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "import_export_log"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21c7223bdfdf35d34efb9c4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ImportExportLog": {
        "description": "Added since version: 6.0.0.0",
        "required": ["activity", "state", "records", "config", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "activity": { "type": "string" },
          "state": { "type": "string" },
          "records": { "type": "integer", "format": "int64" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "profileId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fileId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "invalidRecordsLogId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "username": { "type": "string" },
          "profileName": { "type": "string" },
          "config": { "type": "object" },
          "result": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" },
          "profile": { "$ref": "#/components/schemas/ImportExportProfile" },
          "file": { "$ref": "#/components/schemas/ImportExportFile" },
          "invalidRecordsLog": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "failedImportLog": { "$ref": "#/components/schemas/ImportExportLog" }
        },
        "type": "object"
      },
      "ImportExportProfileJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "label",
              "sourceEntity",
              "fileType",
              "delimiter",
              "enclosure",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "label": { "type": "string" },
              "type": { "type": "string" },
              "systemDefault": { "type": "boolean" },
              "sourceEntity": { "type": "string" },
              "fileType": { "type": "string" },
              "delimiter": { "type": "string" },
              "enclosure": { "type": "string" },
              "mapping": { "type": "object" },
              "updateBy": { "type": "object" },
              "config": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "importExportLogs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/import-export-profile/018a1d1ce21c7223bdfdf35d35276375/importExportLogs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "import_export_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21d72e0a5d12e458ee42735"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ImportExportProfile": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "label",
          "sourceEntity",
          "fileType",
          "delimiter",
          "enclosure",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "label": { "type": "string" },
          "type": { "type": "string" },
          "systemDefault": { "type": "boolean" },
          "sourceEntity": { "type": "string" },
          "fileType": { "type": "string" },
          "delimiter": { "type": "string" },
          "enclosure": { "type": "string" },
          "mapping": { "type": "object" },
          "updateBy": { "type": "object" },
          "config": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "importExportLogs": { "$ref": "#/components/schemas/ImportExportLog" }
        },
        "type": "object"
      },
      "IntegrationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["label", "accessKey", "secretAccessKey", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "label": { "type": "string" },
              "accessKey": { "type": "string" },
              "secretAccessKey": { "type": "string" },
              "lastUsageAt": { "type": "string", "format": "date-time" },
              "admin": { "type": "boolean" },
              "customFields": { "type": "object" },
              "deletedAt": { "type": "string", "format": "date-time" },
              "writeAccess": { "type": "boolean", "deprecated": true },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "createdNotifications": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/integration/018a1d1ce21e73e090a5fbecb02df9ed/createdNotifications"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "notification"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21e73e090a5fbecb0cab4ab"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/integration/018a1d1ce21e73e090a5fbecb02df9ed/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce21e73e090a5fbecb02e37b0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "aclRoles": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/integration/018a1d1ce21e73e090a5fbecb02df9ed/aclRoles"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "acl_role" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce21e73e090a5fbecb09ca23d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Integration": {
        "description": "Added since version: 6.0.0.0",
        "required": ["label", "accessKey", "secretAccessKey", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "label": { "type": "string" },
          "accessKey": { "type": "string" },
          "secretAccessKey": { "type": "string" },
          "lastUsageAt": { "type": "string", "format": "date-time" },
          "admin": { "type": "boolean" },
          "customFields": { "type": "object" },
          "deletedAt": { "type": "string", "format": "date-time" },
          "writeAccess": { "type": "boolean", "deprecated": true },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "createdNotifications": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/integration/018a1d1ce21e73e090a5fbecb02df9ed/createdNotifications"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "notification" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce21e73e090a5fbecb0cab4ab"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "app": { "$ref": "#/components/schemas/App" },
          "aclRoles": { "$ref": "#/components/schemas/AclRole" }
        },
        "type": "object"
      },
      "IntegrationRole": {
        "description": "Added since version: 6.3.3.0",
        "required": ["integrationId", "aclRoleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "integrationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "aclRoleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "integration": { "$ref": "#/components/schemas/Integration" },
          "role": { "$ref": "#/components/schemas/AclRole" }
        },
        "type": "object"
      },
      "LandingPageJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name", "url"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "active": { "type": "boolean" },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "slotConfig": { "type": "object" },
              "metaTitle": { "type": "string" },
              "metaDescription": { "type": "string" },
              "keywords": { "type": "string" },
              "url": { "type": "string" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "swagDynamicAccessRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/018a1d1ce21f70a78764526f0c19a62a/swagDynamicAccessRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce220735cbb972ee1486c44a4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/018a1d1ce21f70a78764526f0c19a62a/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce220735cbb972ee146aaf942"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/018a1d1ce21f70a78764526f0c19a62a/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce220735cbb972ee146c48333"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/018a1d1ce21f70a78764526f0c19a62a/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce220735cbb972ee14751d0d2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/018a1d1ce21f70a78764526f0c19a62a/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce220735cbb972ee148475f76"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "LandingPage": {
        "description": "Added since version: 6.4.0.0",
        "required": ["createdAt", "name", "url"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "slotConfig": { "type": "object" },
          "metaTitle": { "type": "string" },
          "metaDescription": { "type": "string" },
          "keywords": { "type": "string" },
          "url": { "type": "string" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagDynamicAccessRules": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/landing-page/018a1d1ce21f70a78764526f0c19a62a/swagDynamicAccessRules"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "rule" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce220735cbb972ee1486c44a4"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" }
        },
        "type": "object"
      },
      "LandingPageSalesChannel": {
        "description": "Added since version: 6.4.0.0",
        "required": ["landingPageId", "salesChannelId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPage": { "$ref": "#/components/schemas/LandingPage" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "LandingPageTag": {
        "description": "Added since version: 6.4.0.0",
        "required": ["landingPageId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPage": { "$ref": "#/components/schemas/LandingPage" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "LanguageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["localeId", "name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "translationCodeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df73c9103"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaAiTagTranslation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/mediaAiTagTranslation"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_ai_tag_translation"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df7fb7fed"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagLanguagePackLanguage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/swagLanguagePackLanguage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_language_pack_language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce223731480eebb0df85f6dc4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2227228a87153a806056f0f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2227228a87153a80651b192"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "translationCode": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/translationCode"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2227228a87153a80732f6e8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "language" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2227228a87153a8080da262"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2227228a87153a8085cf5d5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df31bb12a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/salesChannelDomains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df339d8b3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df374e0c0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df3e4d679"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df4983e49"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productSearchKeywords": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/productSearchKeywords"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_keyword"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df5842209"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productKeywordDictionaries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/productKeywordDictionaries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_keyword_dictionary"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df5c661e0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce223731480eebb0df639ba25"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productSearchConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/018a1d1ce2227228a87153a8057e83e0/productSearchConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_search_config"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce223731480eebb0df7038dad"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Language": {
        "description": "Added since version: 6.0.0.0",
        "required": ["localeId", "name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "translationCodeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/language/018a1d1ce2227228a87153a8057e83e0/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce223731480eebb0df73c9103"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "mediaAiTagTranslation": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/language/018a1d1ce2227228a87153a8057e83e0/mediaAiTagTranslation"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "media_ai_tag_translation"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce223731480eebb0df7fb7fed"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagLanguagePackLanguage": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/language/018a1d1ce2227228a87153a8057e83e0/swagLanguagePackLanguage"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_language_pack_language"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce223731480eebb0df85f6dc4"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "parent": { "$ref": "#/components/schemas/Language" },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "translationCode": { "$ref": "#/components/schemas/Locale" },
          "children": { "$ref": "#/components/schemas/Language" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "customers": { "$ref": "#/components/schemas/Customer" },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "orders": { "$ref": "#/components/schemas/Order" },
          "productSearchKeywords": {
            "$ref": "#/components/schemas/ProductSearchKeyword"
          },
          "productKeywordDictionaries": {
            "$ref": "#/components/schemas/ProductKeywordDictionary"
          },
          "productReviews": { "$ref": "#/components/schemas/ProductReview" },
          "productSearchConfig": {
            "$ref": "#/components/schemas/ProductSearchConfig"
          }
        },
        "type": "object"
      },
      "LocaleJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["code", "createdAt", "name", "territory"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "code": { "type": "string" },
              "name": { "type": "string" },
              "territory": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "languages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/locale/018a1d1ce2247309a9edb95400d4581c/languages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "language" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2247309a9edb95400e1edb0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "users": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/locale/018a1d1ce2247309a9edb95400d4581c/users"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "user" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2247309a9edb9540122d41e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Locale": {
        "description": "Added since version: 6.0.0.0",
        "required": ["code", "createdAt", "name", "territory"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "code": { "type": "string" },
          "name": { "type": "string" },
          "territory": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "languages": { "$ref": "#/components/schemas/Language" },
          "users": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "LogEntryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "message": { "type": "string" },
              "level": { "type": "integer", "format": "int64" },
              "channel": { "type": "string" },
              "context": { "type": "object" },
              "extra": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "LogEntry": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "message": { "type": "string" },
          "level": { "type": "integer", "format": "int64" },
          "channel": { "type": "string" },
          "context": { "type": "object" },
          "extra": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MailHeaderFooterJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "systemDefault": { "type": "boolean" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "headerHtml": { "type": "string" },
              "headerPlain": { "type": "string" },
              "footerHtml": { "type": "string" },
              "footerPlain": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-header-footer/018a1d1ce22670db8d18feb7015e17af/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22670db8d18feb7016e9823"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MailHeaderFooter": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "systemDefault": { "type": "boolean" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "headerHtml": { "type": "string" },
          "headerPlain": { "type": "string" },
          "footerHtml": { "type": "string" },
          "footerPlain": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "MailTemplateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "mailTemplateTypeId",
              "createdAt",
              "subject",
              "contentHtml",
              "contentPlain"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "mailTemplateTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "systemDefault": { "type": "boolean" },
              "senderName": { "type": "string" },
              "description": { "type": "string" },
              "subject": { "type": "string" },
              "contentHtml": { "type": "string" },
              "contentPlain": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "swagCmsExtensionsForms": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template/018a1d1ce22770868a0efb7c0e013d5c/swagCmsExtensionsForms"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_cms_extensions_form"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22770868a0efb7c0efec2fc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "mailTemplateType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template/018a1d1ce22770868a0efb7c0e013d5c/mailTemplateType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "mail_template_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22770868a0efb7c0e4e8d9a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template/018a1d1ce22770868a0efb7c0e013d5c/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "mail_template_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22770868a0efb7c0ef192c5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MailTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mailTemplateTypeId",
          "createdAt",
          "subject",
          "contentHtml",
          "contentPlain"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mailTemplateTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "systemDefault": { "type": "boolean" },
          "senderName": { "type": "string" },
          "description": { "type": "string" },
          "subject": { "type": "string" },
          "contentHtml": { "type": "string" },
          "contentPlain": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "swagCmsExtensionsForms": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/mail-template/018a1d1ce22770868a0efb7c0e013d5c/swagCmsExtensionsForms"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_cms_extensions_form"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce22770868a0efb7c0efec2fc"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "mailTemplateType": {
            "$ref": "#/components/schemas/MailTemplateType"
          },
          "media": { "$ref": "#/components/schemas/MailTemplateMedia" }
        },
        "type": "object"
      },
      "MailTemplateMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mailTemplateId", "languageId", "mediaId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mailTemplateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "mailTemplate": { "$ref": "#/components/schemas/MailTemplate" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "MailTemplateTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["technicalName", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "technicalName": { "type": "string" },
              "availableEntities": { "type": "object" },
              "customFields": { "type": "object" },
              "templateData": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "mailTemplates": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/mail-template-type/018a1d1ce228717da57a5451dbb08c73/mailTemplates"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "mail_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22972bd81fd860381bd3989"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MailTemplateType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "technicalName": { "type": "string" },
          "availableEntities": { "type": "object" },
          "customFields": { "type": "object" },
          "templateData": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "mailTemplates": { "$ref": "#/components/schemas/MailTemplate" }
        },
        "type": "object"
      },
      "MainCategoryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "productId",
              "categoryId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "categoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/main-category/018a1d1ce22972bd81fd860381ecd1fd/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22972bd81fd86038297d957"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "category": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/main-category/018a1d1ce22972bd81fd860381ecd1fd/category"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22972bd81fd8603836a8152"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/main-category/018a1d1ce22972bd81fd860381ecd1fd/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22972bd81fd860384020c0f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MainCategory": {
        "description": "Added since version: 6.1.0.0",
        "required": ["productId", "categoryId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "category": { "$ref": "#/components/schemas/Category" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "MediaJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "mediaFolderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mimeType": { "type": "string", "readOnly": true },
              "fileExtension": { "type": "string", "readOnly": true },
              "uploadedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "fileName": { "type": "string", "readOnly": true },
              "fileSize": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "metaData": { "type": "object", "readOnly": true },
              "mediaType": { "type": "object", "readOnly": true },
              "alt": { "type": "string" },
              "title": { "type": "string" },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "hasFile": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "private": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "themes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/themes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "theme" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22c706a8c750e370d7f05ee"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "themeMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/themeMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "theme" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22c706a8c750e370dd50960"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaAiTag": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/mediaAiTag"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_ai_tag"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22c706a8c750e370e04415d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPageDrafts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/cmsPageDrafts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_page_draft"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22c706a8c750e370e64bf84"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagCustomizedProductsTemplate": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/swagCustomizedProductsTemplate"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22c706a8c750e370ecd0ce0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570625458a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "thumbnails": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/thumbnails"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_thumbnail"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570644d83b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22b7267a963a3570727277f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a35707fafde3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productManufacturers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/productManufacturers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_manufacturer"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a357080ac916"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/productMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570821f330"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productDownloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/productDownloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a35708e3e86a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItemDownloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/orderLineItemDownloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a35709876d90"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "avatarUsers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/avatarUsers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "user" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a35709e12fea"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaFolder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/mediaFolder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22b7267a963a3570a5d8c0f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "propertyGroupOptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/propertyGroupOptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570b083e17"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplateMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/mailTemplateMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "mail_template_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570b8f1061"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/documentBaseConfigs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570ba1d2f6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570c03af61"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570cd5ce84"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productConfiguratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/productConfiguratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570d722931"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570d8103ac"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlocks": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/cmsBlocks"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_block"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570de11756"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsSections": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/cmsSections"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_section"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570e256fa8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/cmsPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "cms_page" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570ef900e4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/documents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "document" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570f113805"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appPaymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/appPaymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "app_payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22b7267a963a3570f738021"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Media": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaFolderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mimeType": { "type": "string", "readOnly": true },
          "fileExtension": { "type": "string", "readOnly": true },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fileName": { "type": "string", "readOnly": true },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "metaData": { "type": "object", "readOnly": true },
          "mediaType": { "type": "object", "readOnly": true },
          "alt": { "type": "string" },
          "title": { "type": "string" },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "hasFile": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "private": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "themes": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/themes"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "theme" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce22c706a8c750e370d7f05ee"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "themeMedia": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/themeMedia"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "theme" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce22c706a8c750e370dd50960"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "mediaAiTag": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/mediaAiTag"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "example": "media_ai_tag" },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce22c706a8c750e370e04415d"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "cmsPageDrafts": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/cmsPageDrafts"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "cms_page_draft"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce22c706a8c750e370e64bf84"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCustomizedProductsTemplate": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/018a1d1ce22a70488893dfe0ea5ddb08/swagCustomizedProductsTemplate"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_customized_products_template"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce22c706a8c750e370ecd0ce0"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "thumbnails": { "$ref": "#/components/schemas/MediaThumbnail" },
          "user": { "$ref": "#/components/schemas/User" },
          "categories": { "$ref": "#/components/schemas/Category" },
          "productManufacturers": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "productMedia": { "$ref": "#/components/schemas/ProductMedia" },
          "productDownloads": {
            "$ref": "#/components/schemas/ProductDownload"
          },
          "orderLineItemDownloads": {
            "$ref": "#/components/schemas/OrderLineItemDownload"
          },
          "avatarUsers": { "$ref": "#/components/schemas/User" },
          "mediaFolder": { "$ref": "#/components/schemas/MediaFolder" },
          "propertyGroupOptions": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "mailTemplateMedia": {
            "$ref": "#/components/schemas/MailTemplateMedia"
          },
          "documentBaseConfigs": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "shippingMethods": { "$ref": "#/components/schemas/ShippingMethod" },
          "paymentMethods": { "$ref": "#/components/schemas/PaymentMethod" },
          "productConfiguratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "orderLineItems": { "$ref": "#/components/schemas/OrderLineItem" },
          "cmsBlocks": { "$ref": "#/components/schemas/CmsBlock" },
          "cmsSections": { "$ref": "#/components/schemas/CmsSection" },
          "cmsPages": { "$ref": "#/components/schemas/CmsPage" },
          "documents": { "$ref": "#/components/schemas/Document" },
          "appPaymentMethods": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          }
        },
        "type": "object"
      },
      "MediaAiTagJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["mediaId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "needsAnalysis": { "type": "boolean", "readOnly": true },
              "tags": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-ai-tag/018a1d1ce22d71a9b94fedac36c57a68/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22d71a9b94fedac36c8a936"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaAiTag": {
        "description": "Added since version: ",
        "required": ["mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "needsAnalysis": { "type": "boolean", "readOnly": true },
          "tags": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "MediaDefaultFolderJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["entity", "associationFields", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "entity": { "type": "string" },
              "customFields": { "type": "object" },
              "associationFields": {
                "type": "array",
                "items": { "type": "string" }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "folder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-default-folder/018a1d1ce22e722cbf8b59edb523f876/folder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22e722cbf8b59edb542263c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaDefaultFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": ["entity", "associationFields", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entity": { "type": "string" },
          "customFields": { "type": "object" },
          "associationFields": {
            "type": "array",
            "items": { "type": "string" }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "folder": { "$ref": "#/components/schemas/MediaFolder" }
        },
        "type": "object"
      },
      "MediaFolderJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["configurationId", "name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "useParentConfiguration": { "type": "boolean" },
              "configurationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "defaultFolderId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": { "type": "string", "readOnly": true },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/018a1d1ce22f711eb2bf9bc9fba4e704/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22f711eb2bf9bc9fc922645"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/018a1d1ce22f711eb2bf9bc9fba4e704/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_folder"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22f711eb2bf9bc9fcaf1991"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/018a1d1ce22f711eb2bf9bc9fba4e704/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "media" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce22f711eb2bf9bc9fd45084f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "defaultFolder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/018a1d1ce22f711eb2bf9bc9fba4e704/defaultFolder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_default_folder"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce22f711eb2bf9bc9fdc55d1c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder/018a1d1ce22f711eb2bf9bc9fba4e704/configuration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media_folder_configuration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2307383ab5cd95ab4fad7a2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": ["configurationId", "name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "useParentConfiguration": { "type": "boolean" },
          "configurationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "defaultFolderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "path": { "type": "string", "readOnly": true },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": { "$ref": "#/components/schemas/MediaFolder" },
          "children": { "$ref": "#/components/schemas/MediaFolder" },
          "media": { "$ref": "#/components/schemas/Media" },
          "defaultFolder": {
            "$ref": "#/components/schemas/MediaDefaultFolder"
          },
          "configuration": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          }
        },
        "type": "object"
      },
      "MediaFolderConfigurationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createThumbnails": { "type": "boolean" },
              "keepAspectRatio": { "type": "boolean" },
              "thumbnailQuality": { "type": "integer", "format": "int64" },
              "private": { "type": "boolean" },
              "noAssociation": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "mediaFolders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder-configuration/018a1d1ce2307383ab5cd95ab5674713/mediaFolders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_folder"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce23170f1bb945ec715d85a13"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaThumbnailSizes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-folder-configuration/018a1d1ce2307383ab5cd95ab5674713/mediaThumbnailSizes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_thumbnail_size"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce23170f1bb945ec7167d38b9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaFolderConfiguration": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createThumbnails": { "type": "boolean" },
          "keepAspectRatio": { "type": "boolean" },
          "thumbnailQuality": { "type": "integer", "format": "int64" },
          "private": { "type": "boolean" },
          "noAssociation": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "mediaFolders": { "$ref": "#/components/schemas/MediaFolder" },
          "mediaThumbnailSizes": {
            "$ref": "#/components/schemas/MediaThumbnailSize"
          }
        },
        "type": "object"
      },
      "MediaFolderConfigurationMediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mediaFolderConfigurationId", "mediaThumbnailSizeId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaFolderConfigurationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaThumbnailSizeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaFolderConfiguration": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          },
          "mediaThumbnailSize": {
            "$ref": "#/components/schemas/MediaThumbnailSize"
          }
        },
        "type": "object"
      },
      "MediaTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mediaId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "media": { "$ref": "#/components/schemas/Media" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "MediaThumbnailJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["mediaId", "width", "height", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "width": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "height": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-thumbnail/018a1d1ce23271e597758c0e2181016e/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce23373eeb741e9ec1daa6f28"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaThumbnail": {
        "description": "Added since version: 6.0.0.0",
        "required": ["mediaId", "width", "height", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "width": { "type": "integer", "format": "int64", "readOnly": true },
          "height": { "type": "integer", "format": "int64", "readOnly": true },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "MediaThumbnailSizeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["width", "height", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "width": { "type": "integer", "format": "int64" },
              "height": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "mediaFolderConfigurations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/media-thumbnail-size/018a1d1ce23373eeb741e9ec1e32c037/mediaFolderConfigurations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "media_folder_configuration"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce234712bb5c7c6048ed5df8b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "MediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": ["width", "height", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "width": { "type": "integer", "format": "int64" },
          "height": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "mediaFolderConfigurations": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          }
        },
        "type": "object"
      },
      "NewsletterRecipientJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "email",
              "status",
              "hash",
              "languageId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "email": { "type": "string" },
              "title": { "type": "string" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "zipCode": { "type": "string" },
              "city": { "type": "string" },
              "street": { "type": "string" },
              "status": { "type": "string" },
              "hash": { "type": "string" },
              "customFields": { "type": "object" },
              "confirmedAt": { "type": "string", "format": "date-time" },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/018a1d1ce234712bb5c7c6048f4a4357/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce234712bb5c7c6048f7c345b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/018a1d1ce234712bb5c7c6048f4a4357/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce234712bb5c7c6048ff9065d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/018a1d1ce234712bb5c7c6048f4a4357/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce234712bb5c7c60490216ee2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/newsletter-recipient/018a1d1ce234712bb5c7c6048f4a4357/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce234712bb5c7c6049057ee8e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "NewsletterRecipient": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "email",
          "status",
          "hash",
          "languageId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "email": { "type": "string" },
          "title": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "zipCode": { "type": "string" },
          "city": { "type": "string" },
          "street": { "type": "string" },
          "status": { "type": "string" },
          "hash": { "type": "string" },
          "customFields": { "type": "object" },
          "confirmedAt": { "type": "string", "format": "date-time" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "salutation": { "$ref": "#/components/schemas/Salutation" },
          "language": { "$ref": "#/components/schemas/Language" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "NewsletterRecipientTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["newsletterRecipientId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "newsletterRecipientId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "newsletterRecipient": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "NotificationJsonApi": {
        "description": "Added since version: 6.4.7.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["status", "message", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "status": { "type": "string" },
              "message": { "type": "string" },
              "adminOnly": { "type": "boolean" },
              "requiredPrivileges": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "createdByIntegrationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdByUserId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "createdByIntegration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/notification/018a1d1ce23572869e8f49ab38be6e62/createdByIntegration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce23572869e8f49ab38c48cc7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdByUser": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/notification/018a1d1ce23572869e8f49ab38be6e62/createdByUser"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce23572869e8f49ab38f40ded"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Notification": {
        "description": "Added since version: 6.4.7.0",
        "required": ["status", "message", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "status": { "type": "string" },
          "message": { "type": "string" },
          "adminOnly": { "type": "boolean" },
          "requiredPrivileges": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "createdByIntegrationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdByUserId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdByIntegration": {
            "$ref": "#/components/schemas/Integration"
          },
          "createdByUser": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "NumberRangeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "typeId",
              "global",
              "pattern",
              "start",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "typeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "global": { "type": "boolean" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "pattern": { "type": "string" },
              "start": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "type": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range/018a1d1ce2367064959bf5c09c8bcc19/type"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2367064959bf5c09d289ed2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range/018a1d1ce2367064959bf5c09c8bcc19/numberRangeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2367064959bf5c09d28c930"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range/018a1d1ce2367064959bf5c09c8bcc19/state"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2367064959bf5c09db6c408"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRange": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "typeId",
          "global",
          "pattern",
          "start",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "typeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "global": { "type": "boolean" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "pattern": { "type": "string" },
          "start": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "type": { "$ref": "#/components/schemas/NumberRangeType" },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "state": { "$ref": "#/components/schemas/NumberRangeState" }
        },
        "type": "object"
      },
      "NumberRangeSalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["numberRangeId", "salesChannelId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "numberRangeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "numberRangeTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "numberRange": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-sales-channel/018a1d1ce2377184bf6a732d590a286a/numberRange"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2377184bf6a732d597d320d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-sales-channel/018a1d1ce2377184bf6a732d590a286a/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2377184bf6a732d5a742577"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeType": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-sales-channel/018a1d1ce2377184bf6a732d590a286a/numberRangeType"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2377184bf6a732d5b3ff5dc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRangeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["numberRangeId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "numberRangeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "numberRangeTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "numberRange": { "$ref": "#/components/schemas/NumberRange" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "numberRangeType": { "$ref": "#/components/schemas/NumberRangeType" }
        },
        "type": "object"
      },
      "NumberRangeStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["numberRangeId", "lastValue", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "numberRangeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "lastValue": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "numberRange": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-state/018a1d1ce238706cbc2ceff61603a58b/numberRange"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "number_range"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce23f71f980774b24c45fe499"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRangeState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["numberRangeId", "lastValue", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "numberRangeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "lastValue": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "numberRange": { "$ref": "#/components/schemas/NumberRange" }
        },
        "type": "object"
      },
      "NumberRangeTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["global", "createdAt", "typeName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "technicalName": { "type": "string" },
              "typeName": { "type": "string" },
              "global": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "numberRanges": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-type/018a1d1ce240719a9fbaba78cd5038da/numberRanges"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce240719a9fbaba78cd735d55"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/number-range-type/018a1d1ce240719a9fbaba78cd5038da/numberRangeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce240719a9fbaba78cd85cac5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "NumberRangeType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["global", "createdAt", "typeName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "typeName": { "type": "string" },
          "global": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "numberRanges": { "$ref": "#/components/schemas/NumberRange" },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          }
        },
        "type": "object"
      },
      "OrderJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "billingAddressId",
              "currencyId",
              "languageId",
              "salesChannelId",
              "orderDateTime",
              "currencyFactor",
              "stateId",
              "itemRounding",
              "totalRounding",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "orderNumber": { "type": "string" },
              "billingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "billingAddressVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderDateTime": { "type": "string", "format": "date-time" },
              "orderDate": { "type": "string", "readOnly": true },
              "price": {
                "required": [
                  "netPrice",
                  "totalPrice",
                  "positionPrice",
                  "rawTotal",
                  "taxStatus"
                ],
                "properties": {
                  "netPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "positionPrice": { "type": "number", "format": "float" },
                  "rawTotal": { "type": "number", "format": "float" },
                  "taxStatus": { "type": "string" }
                },
                "type": "object"
              },
              "amountTotal": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "amountNet": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "positionPrice": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "taxStatus": { "type": "string", "readOnly": true },
              "shippingCosts": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "shippingTotal": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "currencyFactor": { "type": "number", "format": "float" },
              "deepLinkCode": { "type": "string" },
              "affiliateCode": { "type": "string" },
              "campaignCode": { "type": "string" },
              "customerComment": { "type": "string" },
              "source": { "type": "string" },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "ruleIds": { "type": "array", "items": { "type": "string" } },
              "customFields": { "type": "object" },
              "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "itemRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "subscription": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/subscription"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24271909caffed1cd3609b7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "delayActions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/delayActions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_delay_action"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1cd9af71e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouseGroups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/warehouseGroups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_warehouse_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1ce401915"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouseProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/warehouseProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_product_warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1cf23e732"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "returns": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/returns"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1cfe8b7c6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagSocialShoppingOrder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/swagSocialShoppingOrder"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_social_shopping_order"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24271909caffed1d05d20c6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce241710081ab7d5b22caa89b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/orderCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce241710081ab7d5b22f0aba8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce241710081ab7d5b23c3d126"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce241710081ab7d5b24ab07b2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce241710081ab7d5b2585d49b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "addresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/addresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1c8af957e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "billingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/billingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24271909caffed1c9a895a3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/deliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1ca53d88c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/lineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1ca8e16ca"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transactions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/transactions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1cb41d0ab"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/documents"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "document" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1cbccacb2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24271909caffed1cc70b5e0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/createdBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24271909caffed1ccf415e2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order/018a1d1ce241710081ab7d5b221674da/updatedBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24271909caffed1cd104c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Order": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "billingAddressId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "orderDateTime",
          "currencyFactor",
          "stateId",
          "itemRounding",
          "totalRounding",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "orderNumber": { "type": "string" },
          "billingAddressId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "billingAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDateTime": { "type": "string", "format": "date-time" },
          "orderDate": { "type": "string", "readOnly": true },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "positionPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "taxStatus": { "type": "string", "readOnly": true },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shippingTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "currencyFactor": { "type": "number", "format": "float" },
          "deepLinkCode": { "type": "string" },
          "affiliateCode": { "type": "string" },
          "campaignCode": { "type": "string" },
          "customerComment": { "type": "string" },
          "source": { "type": "string" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleIds": { "type": "array", "items": { "type": "string" } },
          "customFields": { "type": "object" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "itemRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "subscription": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/018a1d1ce241710081ab7d5b221674da/subscription"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "example": "subscription" },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce24271909caffed1cd3609b7"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "delayActions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/018a1d1ce241710081ab7d5b221674da/delayActions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_delay_action"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce24271909caffed1cd9af71e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "warehouseGroups": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/018a1d1ce241710081ab7d5b221674da/warehouseGroups"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_warehouse_group"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce24271909caffed1ce401915"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "warehouseProducts": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/018a1d1ce241710081ab7d5b221674da/warehouseProducts"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_product_warehouse"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce24271909caffed1cf23e732"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "returns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/018a1d1ce241710081ab7d5b221674da/returns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "order_return" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce24271909caffed1cfe8b7c6"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagSocialShoppingOrder": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/018a1d1ce241710081ab7d5b221674da/swagSocialShoppingOrder"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_social_shopping_order"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce24271909caffed1d05d20c6"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orderCustomer": { "$ref": "#/components/schemas/OrderCustomer" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "language": { "$ref": "#/components/schemas/Language" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "addresses": { "$ref": "#/components/schemas/OrderAddress" },
          "billingAddress": { "$ref": "#/components/schemas/OrderAddress" },
          "deliveries": { "$ref": "#/components/schemas/OrderDelivery" },
          "lineItems": { "$ref": "#/components/schemas/OrderLineItem" },
          "transactions": { "$ref": "#/components/schemas/OrderTransaction" },
          "documents": { "$ref": "#/components/schemas/Document" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "createdBy": { "$ref": "#/components/schemas/User" },
          "updatedBy": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "OrderAddressJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "countryId",
              "orderId",
              "firstName",
              "lastName",
              "street",
              "city",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "street": { "type": "string" },
              "zipcode": { "type": "string" },
              "city": { "type": "string" },
              "company": { "type": "string" },
              "department": { "type": "string" },
              "title": { "type": "string" },
              "vatId": { "type": "string" },
              "phoneNumber": { "type": "string" },
              "additionalAddressLine1": { "type": "string" },
              "additionalAddressLine2": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/018a1d1ce24370fabbda469f159c67e4/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24370fabbda469f164a8df0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/018a1d1ce24370fabbda469f159c67e4/countryState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24370fabbda469f16d4549c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/018a1d1ce24370fabbda469f159c67e4/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24370fabbda469f17317ba8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/018a1d1ce24370fabbda469f159c67e4/orderDeliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24370fabbda469f17342680"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-address/018a1d1ce24370fabbda469f159c67e4/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24370fabbda469f1774c72f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "countryId",
          "orderId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "street": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "vatId": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "order": { "$ref": "#/components/schemas/Order" },
          "orderDeliveries": { "$ref": "#/components/schemas/OrderDelivery" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "OrderCustomerJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderId",
              "email",
              "salutationId",
              "firstName",
              "lastName",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "email": { "type": "string" },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "company": { "type": "string" },
              "title": { "type": "string" },
              "vatIds": { "type": "array", "items": { "type": "string" } },
              "customerNumber": { "type": "string" },
              "customFields": { "type": "object" },
              "remoteAddress": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-customer/018a1d1ce244716782932b6ba6464c88/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce244716782932b6ba6e47924"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-customer/018a1d1ce244716782932b6ba6464c88/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce244716782932b6ba790fb4e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-customer/018a1d1ce244716782932b6ba6464c88/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce244716782932b6ba8067de5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "email",
          "salutationId",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "email": { "type": "string" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "title": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "customerNumber": { "type": "string" },
          "customFields": { "type": "object" },
          "remoteAddress": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "OrderDeliveryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderId",
              "shippingOrderAddressId",
              "shippingMethodId",
              "stateId",
              "trackingCodes",
              "shippingDateEarliest",
              "shippingDateLatest",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingOrderAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingOrderAddressVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "trackingCodes": {
                "type": "array",
                "items": { "type": "string" }
              },
              "shippingDateEarliest": {
                "type": "string",
                "format": "date-time"
              },
              "shippingDateLatest": { "type": "string", "format": "date-time" },
              "shippingCosts": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/018a1d1ce244716782932b6ba8922323/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24573088b87882859f9b0ce"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/018a1d1ce244716782932b6ba8922323/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24573088b8788285aec2082"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingOrderAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/018a1d1ce244716782932b6ba8922323/shippingOrderAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24573088b8788285b5d0e8e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/018a1d1ce244716782932b6ba8922323/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24573088b8788285c39bb94"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "positions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery/018a1d1ce244716782932b6ba8922323/positions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24573088b8788285c9f795a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderDelivery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "shippingOrderAddressId",
          "shippingMethodId",
          "stateId",
          "trackingCodes",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingOrderAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingOrderAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "trackingCodes": { "type": "array", "items": { "type": "string" } },
          "shippingDateEarliest": { "type": "string", "format": "date-time" },
          "shippingDateLatest": { "type": "string", "format": "date-time" },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "shippingOrderAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "positions": { "$ref": "#/components/schemas/OrderDeliveryPosition" }
        },
        "type": "object"
      },
      "OrderDeliveryPositionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["orderDeliveryId", "orderLineItemId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderDeliveryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderDeliveryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "orderDelivery": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery-position/018a1d1ce24573088b8788285d81c8f3/orderDelivery"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_delivery"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24673c5b330f6c749778ef4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-delivery-position/018a1d1ce24573088b8788285d81c8f3/orderLineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24673c5b330f6c7497f68f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderDeliveryPosition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["orderDeliveryId", "orderLineItemId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDeliveryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderDeliveryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "quantity": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderDelivery": { "$ref": "#/components/schemas/OrderDelivery" },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" }
        },
        "type": "object"
      },
      "OrderLineItemJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderId",
              "identifier",
              "quantity",
              "label",
              "position",
              "states",
              "price",
              "children",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "promotionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "identifier": { "type": "string" },
              "referencedId": { "type": "string" },
              "quantity": { "type": "integer", "format": "int64" },
              "label": { "type": "string" },
              "payload": { "type": "object" },
              "good": { "type": "boolean" },
              "removable": { "type": "boolean" },
              "stackable": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "states": { "type": "array", "items": { "type": "string" } },
              "price": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "priceDefinition": { "type": "object" },
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "description": { "type": "string" },
              "type": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "returns": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/returns"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24770ce9553f64ce809cf30"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/state"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24770ce9553f64ce89aca7b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24770ce9553f64ce2d707ca"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24770ce9553f64ce33b8b28"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24770ce9553f64ce3cbe55d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "promotion" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24770ce9553f64ce4a94ab1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveryPositions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/orderDeliveryPositions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24770ce9553f64ce5919ee2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefundPositions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/orderTransactionCaptureRefundPositions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24770ce9553f64ce5c5542f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24770ce9553f64ce5e7c1b4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24770ce9553f64ce648cf1c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24770ce9553f64ce732127c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderLineItem": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "identifier",
          "quantity",
          "label",
          "position",
          "states",
          "price",
          "children",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "identifier": { "type": "string" },
          "referencedId": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "label": { "type": "string" },
          "payload": { "type": "object" },
          "good": { "type": "boolean" },
          "removable": { "type": "boolean" },
          "stackable": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "states": { "type": "array", "items": { "type": "string" } },
          "price": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "priceDefinition": { "type": "object" },
          "unitPrice": { "type": "number", "format": "float" },
          "totalPrice": { "type": "number", "format": "float" },
          "description": { "type": "string" },
          "type": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "returns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/returns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_return_line_item"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce24770ce9553f64ce809cf30"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "state": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order-line-item/018a1d1ce24673c5b330f6c74a373ba1/state"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "state_machine_state"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce24770ce9553f64ce89aca7b"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "cover": { "$ref": "#/components/schemas/Media" },
          "order": { "$ref": "#/components/schemas/Order" },
          "product": { "$ref": "#/components/schemas/Product" },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "orderDeliveryPositions": {
            "$ref": "#/components/schemas/OrderDeliveryPosition"
          },
          "orderTransactionCaptureRefundPositions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          },
          "downloads": { "$ref": "#/components/schemas/OrderLineItemDownload" },
          "parent": { "$ref": "#/components/schemas/OrderLineItem" },
          "children": { "$ref": "#/components/schemas/OrderLineItem" }
        },
        "type": "object"
      },
      "OrderLineItemDownloadJsonApi": {
        "description": "Added since version: 6.4.19.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderLineItemId",
              "mediaId",
              "position",
              "accessGranted",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "position": { "type": "integer", "format": "int64" },
              "accessGranted": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "orderLineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item-download/018a1d1ce2487135ab8e6c95a453b0ce/orderLineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2487135ab8e6c95a472a0fe"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-line-item-download/018a1d1ce2487135ab8e6c95a453b0ce/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2487135ab8e6c95a4fc245c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderLineItemDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "orderLineItemId",
          "mediaId",
          "position",
          "accessGranted",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "accessGranted": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "OrderProductWarehouseJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["orderId", "productId", "warehouseId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "warehouseId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "quantity": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-product-warehouse/018a1d1ce2487135ab8e6c95a5865690/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2487135ab8e6c95a61d7455"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-product-warehouse/018a1d1ce2487135ab8e6c95a5865690/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24970efbd0eaf90d550b949"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-product-warehouse/018a1d1ce2487135ab8e6c95a5865690/warehouses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24970efbd0eaf90d5b65c74"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderProductWarehouse": {
        "description": "Added since version: ",
        "required": ["orderId", "productId", "warehouseId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "warehouseId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quantity": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "product": { "$ref": "#/components/schemas/Product" },
          "warehouses": { "$ref": "#/components/schemas/Warehouse" }
        },
        "type": "object"
      },
      "OrderReturnJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderId",
              "stateId",
              "returnNumber",
              "requestedAt",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": {
                "required": [
                  "netPrice",
                  "totalPrice",
                  "positionPrice",
                  "rawTotal",
                  "taxStatus"
                ],
                "properties": {
                  "netPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "positionPrice": { "type": "number", "format": "float" },
                  "rawTotal": { "type": "number", "format": "float" },
                  "taxStatus": { "type": "string" }
                },
                "type": "object"
              },
              "shippingCosts": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "returnNumber": { "type": "string" },
              "requestedAt": { "type": "string", "format": "date-time" },
              "amountTotal": { "type": "number", "format": "float" },
              "amountNet": { "type": "number", "format": "float" },
              "internalComment": { "type": "string" },
              "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return/018a1d1ce24970efbd0eaf90d64ad5b3/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24970efbd0eaf90d67719a5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return/018a1d1ce24970efbd0eaf90d64ad5b3/state"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24a715d9ff3e40bf0019dca"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return/018a1d1ce24970efbd0eaf90d64ad5b3/createdBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24a715d9ff3e40bf0e404ea"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return/018a1d1ce24970efbd0eaf90d64ad5b3/updatedBy"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24a715d9ff3e40bf12f868b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return/018a1d1ce24970efbd0eaf90d64ad5b3/lineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24a715d9ff3e40bf1d8ccd0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderReturn": {
        "description": "Added since version: ",
        "required": [
          "orderId",
          "stateId",
          "returnNumber",
          "requestedAt",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "positionPrice": { "type": "number", "format": "float" },
              "rawTotal": { "type": "number", "format": "float" },
              "taxStatus": { "type": "string" }
            },
            "type": "object"
          },
          "shippingCosts": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "returnNumber": { "type": "string" },
          "requestedAt": { "type": "string", "format": "date-time" },
          "amountTotal": { "type": "number", "format": "float" },
          "amountNet": { "type": "number", "format": "float" },
          "internalComment": { "type": "string" },
          "createdById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "updatedById": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "state": { "$ref": "#/components/schemas/StateMachineState" },
          "createdBy": { "$ref": "#/components/schemas/User" },
          "updatedBy": { "$ref": "#/components/schemas/User" },
          "lineItems": { "$ref": "#/components/schemas/OrderReturnLineItem" }
        },
        "type": "object"
      },
      "OrderReturnLineItemJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderReturnId",
              "orderLineItemId",
              "reasonId",
              "quantity",
              "price",
              "stateId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderReturnId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderReturnVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "reasonId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "quantity": { "type": "integer", "format": "int64" },
              "price": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "refundAmount": { "type": "number", "format": "float" },
              "restockQuantity": { "type": "integer", "format": "int64" },
              "internalComment": { "type": "string" },
              "customFields": { "type": "object" },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "reason": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return-line-item/018a1d1ce24a715d9ff3e40bf25f5374/reason"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_return_line_item_reason"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24b71baaae09d331f27cbac"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return-line-item/018a1d1ce24a715d9ff3e40bf25f5374/state"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24b71baaae09d3320157645"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "return": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return-line-item/018a1d1ce24a715d9ff3e40bf25f5374/return"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_return"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24b71baaae09d33208b58a6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "lineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return-line-item/018a1d1ce24a715d9ff3e40bf25f5374/lineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24b71baaae09d33212af4e8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderReturnLineItem": {
        "description": "Added since version: ",
        "required": [
          "orderReturnId",
          "orderLineItemId",
          "reasonId",
          "quantity",
          "price",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderReturnId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderReturnVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "reasonId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "quantity": { "type": "integer", "format": "int64" },
          "price": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "refundAmount": { "type": "number", "format": "float" },
          "restockQuantity": { "type": "integer", "format": "int64" },
          "internalComment": { "type": "string" },
          "customFields": { "type": "object" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reason": {
            "$ref": "#/components/schemas/OrderReturnLineItemReason"
          },
          "state": { "$ref": "#/components/schemas/StateMachineState" },
          "return": { "$ref": "#/components/schemas/OrderReturn" },
          "lineItem": { "$ref": "#/components/schemas/OrderLineItem" }
        },
        "type": "object"
      },
      "OrderReturnLineItemReasonJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["reasonKey", "createdAt", "content"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "reasonKey": { "type": "string" },
              "content": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "lineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-return-line-item-reason/018a1d1ce24b71baaae09d33218b0da0/lineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24c71839c4cd67e77e04063"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderReturnLineItemReason": {
        "description": "Added since version: ",
        "required": ["reasonKey", "createdAt", "content"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "reasonKey": { "type": "string" },
          "content": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "lineItems": { "$ref": "#/components/schemas/OrderReturnLineItem" }
        },
        "type": "object"
      },
      "OrderTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["orderId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "order": { "$ref": "#/components/schemas/Order" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "OrderTransactionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderId",
              "paymentMethodId",
              "amount",
              "stateId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "amount": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/018a1d1ce24d716fa2c747a857f90655/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24d716fa2c747a857fda84a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/018a1d1ce24d716fa2c747a857f90655/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24d716fa2c747a858ef9b9a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/018a1d1ce24d716fa2c747a857f90655/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24d716fa2c747a8598e1dd3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "captures": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction/018a1d1ce24d716fa2c747a857f90655/captures"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24e72fc87f643f36133d93d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransaction": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "paymentMethodId",
          "amount",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "captures": { "$ref": "#/components/schemas/OrderTransactionCapture" }
        },
        "type": "object"
      },
      "OrderTransactionCaptureJsonApi": {
        "description": "Added since version: 6.4.12.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "orderTransactionId",
              "stateId",
              "amount",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderTransactionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderTransactionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "externalReference": { "type": "string" },
              "amount": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture/018a1d1ce24e72fc87f643f36227675e/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24e72fc87f643f362c6753d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transaction": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture/018a1d1ce24e72fc87f643f36227675e/transaction"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_transaction"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24e72fc87f643f363aecc88"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "refunds": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture/018a1d1ce24e72fc87f643f36227675e/refunds"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24e72fc87f643f3648607d7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransactionCapture": {
        "description": "Added since version: 6.4.12.0",
        "required": ["orderTransactionId", "stateId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderTransactionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "orderTransactionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalReference": { "type": "string" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transaction": { "$ref": "#/components/schemas/OrderTransaction" },
          "refunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundJsonApi": {
        "description": "Added since version: 6.4.12.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["captureId", "stateId", "amount", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "captureId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "externalReference": { "type": "string" },
              "reason": { "type": "string" },
              "amount": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund/018a1d1ce24f72c5a83b2f2a245eb5e7/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24f72c5a83b2f2a24ee8510"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transactionCapture": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund/018a1d1ce24f72c5a83b2f2a245eb5e7/transactionCapture"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_transaction_capture"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce24f72c5a83b2f2a25df9ed8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "positions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund/018a1d1ce24f72c5a83b2f2a245eb5e7/positions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund_position"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce24f72c5a83b2f2a26403e39"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransactionCaptureRefund": {
        "description": "Added since version: 6.4.12.0",
        "required": ["captureId", "stateId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "captureId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalReference": { "type": "string" },
          "reason": { "type": "string" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transactionCapture": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "positions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundPositionJsonApi": {
        "description": "Added since version: 6.4.12.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["refundId", "orderLineItemId", "amount", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "refundId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderLineItemId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "orderLineItemVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalReference": { "type": "string" },
              "reason": { "type": "string" },
              "quantity": { "type": "integer", "format": "int64" },
              "amount": {
                "required": ["unitPrice", "totalPrice", "quantity"],
                "properties": {
                  "unitPrice": { "type": "number", "format": "float" },
                  "totalPrice": { "type": "number", "format": "float" },
                  "quantity": { "type": "integer", "format": "int64" },
                  "calculatedTaxes": { "type": "object" },
                  "taxRules": { "type": "object" },
                  "referencePrice": { "type": "object" },
                  "listPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" },
                      "discount": { "type": "number", "format": "float" },
                      "percentage": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": { "type": "number", "format": "float" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "orderLineItem": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund-position/018a1d1ce250734e94ad25354edd559c/orderLineItem"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_line_item"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce250734e94ad25354fd90430"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefund": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-transaction-capture-refund-position/018a1d1ce250734e94ad25354edd559c/orderTransactionCaptureRefund"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "order_transaction_capture_refund"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce250734e94ad253550bfbf81"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderTransactionCaptureRefundPosition": {
        "description": "Added since version: 6.4.12.0",
        "required": ["refundId", "orderLineItemId", "amount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "refundId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "externalReference": { "type": "string" },
          "reason": { "type": "string" },
          "quantity": { "type": "integer", "format": "int64" },
          "amount": {
            "required": ["unitPrice", "totalPrice", "quantity"],
            "properties": {
              "unitPrice": { "type": "number", "format": "float" },
              "totalPrice": { "type": "number", "format": "float" },
              "quantity": { "type": "integer", "format": "int64" },
              "calculatedTaxes": { "type": "object" },
              "taxRules": { "type": "object" },
              "referencePrice": { "type": "object" },
              "listPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" },
                  "discount": { "type": "number", "format": "float" },
                  "percentage": { "type": "number", "format": "float" }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": { "type": "number", "format": "float" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": { "$ref": "#/components/schemas/OrderLineItem" },
          "orderTransactionCaptureRefund": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          }
        },
        "type": "object"
      },
      "OrderWarehouseGroupJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["orderId", "warehouseGroupId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "warehouseGroupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-warehouse-group/018a1d1ce250734e94ad2535516525d9/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce251739a85d695b2b32a6867"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouseGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/order-warehouse-group/018a1d1ce250734e94ad2535516525d9/warehouseGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "warehouse_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce251739a85d695b2b41adfc6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrderWarehouseGroup": {
        "description": "Added since version: ",
        "required": ["orderId", "warehouseGroupId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "warehouseGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "warehouseGroup": { "$ref": "#/components/schemas/WarehouseGroup" }
        },
        "type": "object"
      },
      "PaymentMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "pluginId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "handlerIdentifier": { "type": "string" },
              "name": { "type": "string" },
              "distinguishableName": { "type": "string", "readOnly": true },
              "description": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "afterOrderEnabled": { "type": "boolean" },
              "customFields": { "type": "object" },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "formattedHandlerIdentifier": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "synchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "asynchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "prepared": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "refundable": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "recurring": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "shortName": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2527095b2bf341de5bcff8a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce251739a85d695b2b4ec0c8f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce251739a85d695b2b50a57a6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce251739a85d695b2b53edd53"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "plugin": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/plugin"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "plugin" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce251739a85d695b2b57cee56"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2527095b2bf341de4a53fd1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/orderTransactions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2527095b2bf341de4cb5c88"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2527095b2bf341de5562e18"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appPaymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/appPaymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2527095b2bf341de55cfb20"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "pluginId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "handlerIdentifier": { "type": "string" },
          "name": { "type": "string" },
          "distinguishableName": { "type": "string", "readOnly": true },
          "description": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "afterOrderEnabled": { "type": "boolean" },
          "customFields": { "type": "object" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "formattedHandlerIdentifier": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string",
            "readOnly": true
          },
          "synchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "asynchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "prepared": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "refundable": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "recurring": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "shortName": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/payment-method/018a1d1ce251739a85d695b2b46e45fd/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2527095b2bf341de5bcff8a"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "media": { "$ref": "#/components/schemas/Media" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "plugin": { "$ref": "#/components/schemas/Plugin" },
          "customers": { "$ref": "#/components/schemas/Customer" },
          "orderTransactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "appPaymentMethod": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          }
        },
        "type": "object"
      },
      "PluginJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "baseClass",
              "name",
              "autoload",
              "version",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "baseClass": { "type": "string" },
              "name": { "type": "string" },
              "composerName": { "type": "string" },
              "autoload": { "type": "object" },
              "active": { "type": "boolean" },
              "managedByComposer": { "type": "boolean" },
              "path": { "type": "string" },
              "author": { "type": "string" },
              "copyright": { "type": "string" },
              "license": { "type": "string" },
              "version": { "type": "string" },
              "upgradeVersion": { "type": "string" },
              "installedAt": { "type": "string", "format": "date-time" },
              "upgradedAt": { "type": "string", "format": "date-time" },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string",
                "readOnly": true
              },
              "label": { "type": "string" },
              "description": { "type": "string" },
              "manufacturerLink": { "type": "string" },
              "supportLink": { "type": "string" },
              "changelog": { "type": "object" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/plugin/018a1d1ce25372efb4ecd4e034fc48ef/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25372efb4ecd4e035fa96fc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Plugin": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "baseClass",
          "name",
          "autoload",
          "version",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "baseClass": { "type": "string" },
          "name": { "type": "string" },
          "composerName": { "type": "string" },
          "autoload": { "type": "object" },
          "active": { "type": "boolean" },
          "managedByComposer": { "type": "boolean" },
          "path": { "type": "string" },
          "author": { "type": "string" },
          "copyright": { "type": "string" },
          "license": { "type": "string" },
          "version": { "type": "string" },
          "upgradeVersion": { "type": "string" },
          "installedAt": { "type": "string", "format": "date-time" },
          "upgradedAt": { "type": "string", "format": "date-time" },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string",
            "readOnly": true
          },
          "label": { "type": "string" },
          "description": { "type": "string" },
          "manufacturerLink": { "type": "string" },
          "supportLink": { "type": "string" },
          "changelog": { "type": "object" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "paymentMethods": { "$ref": "#/components/schemas/PaymentMethod" }
        },
        "type": "object"
      },
      "ProductJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "taxId",
              "price",
              "productNumber",
              "stock",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "manufacturerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productManufacturerVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "unitId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productMediaVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "featureSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "canonicalProductId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": { "type": "object" },
              "productNumber": { "type": "string" },
              "stock": { "type": "integer", "format": "int64" },
              "restockTime": { "type": "integer", "format": "int64" },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "active": { "type": "boolean" },
              "availableStock": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "available": { "type": "boolean", "readOnly": true },
              "isCloseout": { "type": "boolean" },
              "variation": { "type": "array", "items": { "type": "string" } },
              "displayGroup": { "type": "string", "readOnly": true },
              "variantListingConfig": { "type": "object" },
              "variantRestrictions": { "type": "object" },
              "manufacturerNumber": { "type": "string" },
              "ean": { "type": "string" },
              "purchaseSteps": { "type": "integer", "format": "int64" },
              "maxPurchase": { "type": "integer", "format": "int64" },
              "minPurchase": { "type": "integer", "format": "int64" },
              "purchaseUnit": { "type": "number", "format": "float" },
              "referenceUnit": { "type": "number", "format": "float" },
              "shippingFree": { "type": "boolean" },
              "purchasePrices": { "type": "object" },
              "markAsTopseller": { "type": "boolean" },
              "weight": { "type": "number", "format": "float" },
              "width": { "type": "number", "format": "float" },
              "height": { "type": "number", "format": "float" },
              "length": { "type": "number", "format": "float" },
              "releaseDate": { "type": "string", "format": "date-time" },
              "ratingAverage": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "categoryTree": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "propertyIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "optionIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "streamIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "tagIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "categoryIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "customFieldSetSelectionActive": { "type": "boolean" },
              "sales": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "states": {
                "type": "array",
                "items": { "type": "string" },
                "readOnly": true
              },
              "metaDescription": { "type": "string" },
              "name": { "type": "string" },
              "keywords": { "type": "string" },
              "description": { "type": "string" },
              "metaTitle": { "type": "string" },
              "packUnit": { "type": "string" },
              "packUnitPlural": { "type": "string" },
              "customFields": { "type": "object" },
              "slotConfig": { "type": "object" },
              "customSearchKeywords": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "customPrice": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/customPrice"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4a5faa402"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionPlans": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/subscriptionPlans"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_plan"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4a6e5477a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouseGroups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/warehouseGroups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "warehouse_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4a7c3848f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/warehouses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4a84811b5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderWarehouses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/orderWarehouses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_product_warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4a8abbeb7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "reviewSummaries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/reviewSummaries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review_summary"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4a97dda23"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagCustomizedProductsTemplate": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/swagCustomizedProductsTemplate"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2567104b8ac66c4aa775053"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagDynamicAccessRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/swagDynamicAccessRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4aa8203c0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paypalPosLog": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/paypalPosLog"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_paypal_pos_sales_channel_run_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4aa858463"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paypalPosSync": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/paypalPosSync"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_paypal_pos_sales_channel_product"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4aa882eb2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "socialShoppingProductErrors": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/socialShoppingProductErrors"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_product_error"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2567104b8ac66c4aad701c1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a623a0d48f5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623abfbf2e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a623b1c9b63"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623b480ce7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623b6363ce"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "manufacturer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/manufacturer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_manufacturer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623bb77b60"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "unit": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/unit"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "unit" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623c14931b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623c37fdd8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "featureSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/featureSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_feature_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623d2111e7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623d50c6ce"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "canonicalProduct": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/canonicalProduct"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25573a9ae7a6a623dd9273b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a623ec8e5fe"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a623f6196da"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/crossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a623f6f0d45"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellingAssignedProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/crossSellingAssignedProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling_assigned_products"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a62400ae099"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/configuratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a62403521ce"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "visibilities": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/visibilities"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_visibility"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6240859747"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "searchKeywords": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/searchKeywords"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_keyword"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6241266cf6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6241921709"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6241d46c7c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a624202477f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6242ffa41b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/wishlists"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist_product"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a62436004e9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6244117943"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/properties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6244473bb6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6244d56f4d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "streams": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/streams"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a6244e1ff1a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categoriesRo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/categoriesRo"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a62450ac9f2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a62451bec61"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customFieldSets": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/018a1d1ce25470609a639f0021cb8885/customFieldSets"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "custom_field_set"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25573a9ae7a6a62460913c2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Product": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "taxId",
          "price",
          "productNumber",
          "stock",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "manufacturerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productManufacturerVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "unitId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productMediaVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "deliveryTimeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "featureSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "canonicalProductId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "productNumber": { "type": "string" },
          "stock": { "type": "integer", "format": "int64" },
          "restockTime": { "type": "integer", "format": "int64" },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "active": { "type": "boolean" },
          "availableStock": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "available": { "type": "boolean", "readOnly": true },
          "isCloseout": { "type": "boolean" },
          "variation": { "type": "array", "items": { "type": "string" } },
          "displayGroup": { "type": "string", "readOnly": true },
          "variantListingConfig": { "type": "object" },
          "variantRestrictions": { "type": "object" },
          "manufacturerNumber": { "type": "string" },
          "ean": { "type": "string" },
          "purchaseSteps": { "type": "integer", "format": "int64" },
          "maxPurchase": { "type": "integer", "format": "int64" },
          "minPurchase": { "type": "integer", "format": "int64" },
          "purchaseUnit": { "type": "number", "format": "float" },
          "referenceUnit": { "type": "number", "format": "float" },
          "shippingFree": { "type": "boolean" },
          "purchasePrices": { "type": "object" },
          "markAsTopseller": { "type": "boolean" },
          "weight": { "type": "number", "format": "float" },
          "width": { "type": "number", "format": "float" },
          "height": { "type": "number", "format": "float" },
          "length": { "type": "number", "format": "float" },
          "releaseDate": { "type": "string", "format": "date-time" },
          "ratingAverage": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "categoryTree": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "propertyIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "optionIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "streamIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "tagIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "categoryIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "customFieldSetSelectionActive": { "type": "boolean" },
          "sales": { "type": "integer", "format": "int64", "readOnly": true },
          "states": {
            "type": "array",
            "items": { "type": "string" },
            "readOnly": true
          },
          "metaDescription": { "type": "string" },
          "name": { "type": "string" },
          "keywords": { "type": "string" },
          "description": { "type": "string" },
          "metaTitle": { "type": "string" },
          "packUnit": { "type": "string" },
          "packUnitPlural": { "type": "string" },
          "customFields": { "type": "object" },
          "slotConfig": { "type": "object" },
          "customSearchKeywords": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "customPrice": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/customPrice"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "custom_price" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4a5faa402"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "subscriptionPlans": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/subscriptionPlans"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_plan"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4a6e5477a"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "warehouseGroups": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/warehouseGroups"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "warehouse_group"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4a7c3848f"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "warehouses": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/warehouses"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "product_warehouse"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4a84811b5"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "orderWarehouses": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/orderWarehouses"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_product_warehouse"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4a8abbeb7"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "reviewSummaries": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/reviewSummaries"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "product_review_summary"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4a97dda23"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCustomizedProductsTemplate": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/swagCustomizedProductsTemplate"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_customized_products_template"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce2567104b8ac66c4aa775053"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagDynamicAccessRules": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/swagDynamicAccessRules"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "rule" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4aa8203c0"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "paypalPosLog": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/paypalPosLog"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_paypal_pos_sales_channel_run_log"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4aa858463"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "paypalPosSync": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/paypalPosSync"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_paypal_pos_sales_channel_product"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4aa882eb2"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "socialShoppingProductErrors": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/018a1d1ce25470609a639f0021cb8885/socialShoppingProductErrors"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_product_error"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2567104b8ac66c4aad701c1"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "downloads": { "$ref": "#/components/schemas/ProductDownload" },
          "parent": { "$ref": "#/components/schemas/Product" },
          "children": { "$ref": "#/components/schemas/Product" },
          "deliveryTime": { "$ref": "#/components/schemas/DeliveryTime" },
          "tax": { "$ref": "#/components/schemas/Tax" },
          "manufacturer": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "unit": { "$ref": "#/components/schemas/Unit" },
          "cover": { "$ref": "#/components/schemas/ProductMedia" },
          "featureSet": { "$ref": "#/components/schemas/ProductFeatureSet" },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "canonicalProduct": { "$ref": "#/components/schemas/Product" },
          "prices": { "$ref": "#/components/schemas/ProductPrice" },
          "media": { "$ref": "#/components/schemas/ProductMedia" },
          "crossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "crossSellingAssignedProducts": {
            "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
          },
          "configuratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "visibilities": { "$ref": "#/components/schemas/ProductVisibility" },
          "searchKeywords": {
            "$ref": "#/components/schemas/ProductSearchKeyword"
          },
          "productReviews": { "$ref": "#/components/schemas/ProductReview" },
          "mainCategories": { "$ref": "#/components/schemas/MainCategory" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" },
          "orderLineItems": { "$ref": "#/components/schemas/OrderLineItem" },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlistProduct"
          },
          "options": { "$ref": "#/components/schemas/PropertyGroupOption" },
          "properties": { "$ref": "#/components/schemas/PropertyGroupOption" },
          "categories": { "$ref": "#/components/schemas/Category" },
          "streams": { "$ref": "#/components/schemas/ProductStream" },
          "categoriesRo": { "$ref": "#/components/schemas/Category" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "customFieldSets": { "$ref": "#/components/schemas/CustomFieldSet" }
        },
        "type": "object"
      },
      "ProductCategory": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "categoryId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "category": { "$ref": "#/components/schemas/Category" }
        },
        "type": "object"
      },
      "ProductCategoryTree": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "categoryId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "category": { "$ref": "#/components/schemas/Category" }
        },
        "type": "object"
      },
      "ProductConfiguratorSettingJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "optionId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "optionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "price": { "type": "object" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-configurator-setting/018a1d1ce25773d09498e6f918eceb67/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25773d09498e6f918fa8f6f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-configurator-setting/018a1d1ce25773d09498e6f918eceb67/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25773d09498e6f9199a577c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "option": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-configurator-setting/018a1d1ce25773d09498e6f918eceb67/option"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "property_group_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25773d09498e6f919cbd9f4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductConfiguratorSetting": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "optionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "optionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/Media" },
          "option": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "ProductCrossSellingJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "position", "type", "productId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "sortBy": { "type": "string" },
              "sortDirection": { "type": "string" },
              "type": { "type": "string" },
              "active": { "type": "boolean" },
              "limit": { "type": "integer", "format": "int64" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling/018a1d1ce25870b3977075bf184b0360/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25870b3977075bf18a1de7a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling/018a1d1ce25870b3977075bf184b0360/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25870b3977075bf19396daa"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "assignedProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling/018a1d1ce25870b3977075bf184b0360/assignedProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling_assigned_products"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25870b3977075bf19d70b26"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductCrossSelling": {
        "description": "Added since version: 6.1.0.0",
        "required": ["name", "position", "type", "productId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "sortBy": { "type": "string" },
          "sortDirection": { "type": "string" },
          "type": { "type": "string" },
          "active": { "type": "boolean" },
          "limit": { "type": "integer", "format": "int64" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "product": { "$ref": "#/components/schemas/Product" },
          "productStream": { "$ref": "#/components/schemas/ProductStream" },
          "assignedProducts": {
            "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
          }
        },
        "type": "object"
      },
      "ProductCrossSellingAssignedProductsJsonApi": {
        "description": "Added since version: 6.2.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["crossSellingId", "productId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "crossSellingId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "position": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling-assigned-products/018a1d1ce25870b3977075bf1a09cc9f/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25970238c876e6e686c8370"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSelling": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-cross-selling-assigned-products/018a1d1ce25870b3977075bf1a09cc9f/crossSelling"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_cross_selling"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25970238c876e6e68a69646"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductCrossSellingAssignedProducts": {
        "description": "Added since version: 6.2.0.0",
        "required": ["crossSellingId", "productId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "crossSellingId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "crossSelling": { "$ref": "#/components/schemas/ProductCrossSelling" }
        },
        "type": "object"
      },
      "ProductCustomFieldSet": {
        "description": "Added since version: 6.3.0.0",
        "required": ["productId", "customFieldSetId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFieldSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "customFieldSet": { "$ref": "#/components/schemas/CustomFieldSet" }
        },
        "type": "object"
      },
      "ProductDownloadJsonApi": {
        "description": "Added since version: 6.4.19.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "mediaId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-download/018a1d1ce25970238c876e6e6a2ce5da/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25970238c876e6e6a7f294d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-download/018a1d1ce25970238c876e6e6a2ce5da/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25970238c876e6e6b06cf47"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": ["productId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ProductExportJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "productStreamId",
              "storefrontSalesChannelId",
              "salesChannelId",
              "salesChannelDomainId",
              "currencyId",
              "fileName",
              "accessKey",
              "encoding",
              "fileFormat",
              "generateByCronjob",
              "interval",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "storefrontSalesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelDomainId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "fileName": { "type": "string" },
              "accessKey": { "type": "string" },
              "encoding": { "type": "string" },
              "fileFormat": { "type": "string" },
              "includeVariants": { "type": "boolean" },
              "generateByCronjob": { "type": "boolean" },
              "generatedAt": { "type": "string", "format": "date-time" },
              "interval": { "type": "integer", "format": "int64" },
              "headerTemplate": { "type": "string" },
              "bodyTemplate": { "type": "string" },
              "footerTemplate": { "type": "string" },
              "pausedSchedule": { "type": "boolean" },
              "isRunning": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/018a1d1ce25a73ad90d0924afc77c1d5/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25a73ad90d0924afd6fd4ce"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "storefrontSalesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/018a1d1ce25a73ad90d0924afc77c1d5/storefrontSalesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25a73ad90d0924afe43dd36"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/018a1d1ce25a73ad90d0924afc77c1d5/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25a73ad90d0924afee712df"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomain": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/018a1d1ce25a73ad90d0924afc77c1d5/salesChannelDomain"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_domain"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25a73ad90d0924aff551fae"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-export/018a1d1ce25a73ad90d0924afc77c1d5/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25a73ad90d0924aff8df3a2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductExport": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "productStreamId",
          "storefrontSalesChannelId",
          "salesChannelId",
          "salesChannelDomainId",
          "currencyId",
          "fileName",
          "accessKey",
          "encoding",
          "fileFormat",
          "generateByCronjob",
          "interval",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "storefrontSalesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fileName": { "type": "string" },
          "accessKey": { "type": "string" },
          "encoding": { "type": "string" },
          "fileFormat": { "type": "string" },
          "includeVariants": { "type": "boolean" },
          "generateByCronjob": { "type": "boolean" },
          "generatedAt": { "type": "string", "format": "date-time" },
          "interval": { "type": "integer", "format": "int64" },
          "headerTemplate": { "type": "string" },
          "bodyTemplate": { "type": "string" },
          "footerTemplate": { "type": "string" },
          "pausedSchedule": { "type": "boolean" },
          "isRunning": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "productStream": { "$ref": "#/components/schemas/ProductStream" },
          "storefrontSalesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "salesChannelDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "currency": { "$ref": "#/components/schemas/Currency" }
        },
        "type": "object"
      },
      "ProductFeatureSetJsonApi": {
        "description": "Added since version: 6.3.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "features": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-feature-set/018a1d1ce25b71dc8c9090226b6edbd7/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25b71dc8c9090226bf460c9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductFeatureSet": {
        "description": "Added since version: 6.3.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "features": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "products": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "ProductKeywordDictionaryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["languageId", "keyword"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "keyword": { "type": "string" },
              "reversed": { "type": "string" },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-keyword-dictionary/018a1d1ce25b71dc8c9090226c162b51/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25b71dc8c9090226c47ff5d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductKeywordDictionary": {
        "description": "Added since version: 6.0.0.0",
        "required": ["languageId", "keyword"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "keyword": { "type": "string" },
          "reversed": { "type": "string" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "ProductManufacturerJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "link": { "type": "string" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-manufacturer/018a1d1ce25c73439955444c58305385/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25c73439955444c58d9e666"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-manufacturer/018a1d1ce25c73439955444c58305385/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25c73439955444c58dae6db"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductManufacturer": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "link": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "products": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "ProductMediaJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "mediaId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-media/018a1d1ce25d70eb801f1013f848aede/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25d70eb801f1013f9010b1c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-media/018a1d1ce25d70eb801f1013f848aede/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce25d70eb801f1013f963343e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "coverProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-media/018a1d1ce25d70eb801f1013f848aede/coverProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce25d70eb801f1013f97af2d1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/Media" },
          "coverProducts": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "ProductOption": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "optionId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "optionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "option": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "ProductPriceJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "productId",
              "ruleId",
              "price",
              "quantityStart",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "price": { "type": "object" },
              "quantityStart": { "type": "integer", "format": "int64" },
              "quantityEnd": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-price/018a1d1ce26671199338fd217b8cde84/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26671199338fd217ba4f4cb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-price/018a1d1ce26671199338fd217b8cde84/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26671199338fd217bdd39ba"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "ruleId",
          "price",
          "quantityStart",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "object" },
          "quantityStart": { "type": "integer", "format": "int64" },
          "quantityEnd": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "ProductProperty": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "optionId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "optionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "option": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "ProductReviewJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "productId",
              "salesChannelId",
              "languageId",
              "title",
              "content",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "externalUser": { "type": "string" },
              "externalEmail": { "type": "string" },
              "title": { "type": "string" },
              "content": { "type": "string" },
              "points": { "type": "number", "format": "float" },
              "status": { "type": "boolean" },
              "comment": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/018a1d1ce26671199338fd217dfbbce3/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26772d2b3ed839620e3434d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/018a1d1ce26671199338fd217dfbbce3/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26772d2b3ed839621d82eaf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/018a1d1ce26671199338fd217dfbbce3/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26772d2b3ed8396229c0759"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review/018a1d1ce26671199338fd217dfbbce3/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26772d2b3ed839622c3661b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductReview": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "salesChannelId",
          "languageId",
          "title",
          "content",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "externalUser": { "type": "string" },
          "externalEmail": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "points": { "type": "number", "format": "float" },
          "status": { "type": "boolean" },
          "comment": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "ProductReviewSummaryJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "salesChannelId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "summary": { "type": "string" },
              "visible": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review-summary/018a1d1ce26772d2b3ed839623b32a30/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26870259730e4e56d60b8bc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-review-summary/018a1d1ce26772d2b3ed839623b32a30/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26870259730e4e56d9990fc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductReviewSummary": {
        "description": "Added since version: ",
        "required": ["productId", "salesChannelId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "summary": { "type": "string" },
          "visible": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "product": { "$ref": "#/components/schemas/Product" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "ProductSearchConfigJsonApi": {
        "description": "Added since version: 6.3.5.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "languageId",
              "andLogic",
              "minSearchLength",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "andLogic": { "type": "boolean" },
              "minSearchLength": { "type": "integer", "format": "int64" },
              "excludedTerms": {
                "type": "array",
                "items": { "type": "string" }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config/018a1d1ce26870259730e4e56e39390f/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26870259730e4e56e4637fb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configFields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config/018a1d1ce26870259730e4e56e39390f/configFields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_search_config_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26870259730e4e56f07f597"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSearchConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": ["languageId", "andLogic", "minSearchLength", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "andLogic": { "type": "boolean" },
          "minSearchLength": { "type": "integer", "format": "int64" },
          "excludedTerms": { "type": "array", "items": { "type": "string" } },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "configFields": {
            "$ref": "#/components/schemas/ProductSearchConfigField"
          }
        },
        "type": "object"
      },
      "ProductSearchConfigFieldJsonApi": {
        "description": "Added since version: 6.3.5.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "searchConfigId",
              "field",
              "tokenize",
              "searchable",
              "ranking",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "searchConfigId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFieldId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "field": { "type": "string" },
              "tokenize": { "type": "boolean" },
              "searchable": { "type": "boolean" },
              "ranking": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "searchConfig": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config-field/018a1d1ce26971aaa03fae4d7858067c/searchConfig"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_search_config"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26971aaa03fae4d788ef1fa"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customField": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-config-field/018a1d1ce26971aaa03fae4d7858067c/customField"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "custom_field"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26971aaa03fae4d797675cf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSearchConfigField": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "searchConfigId",
          "field",
          "tokenize",
          "searchable",
          "ranking",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "searchConfigId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFieldId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "field": { "type": "string" },
          "tokenize": { "type": "boolean" },
          "searchable": { "type": "boolean" },
          "ranking": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "searchConfig": {
            "$ref": "#/components/schemas/ProductSearchConfig"
          },
          "customField": { "$ref": "#/components/schemas/CustomField" }
        },
        "type": "object"
      },
      "ProductSearchKeywordJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "languageId",
              "productId",
              "keyword",
              "ranking",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "keyword": { "type": "string" },
              "ranking": { "type": "number", "format": "float" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-keyword/018a1d1ce26971aaa03fae4d79909f6b/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26971aaa03fae4d7a8f9492"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-search-keyword/018a1d1ce26971aaa03fae4d79909f6b/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26971aaa03fae4d7b8a43fc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductSearchKeyword": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "productId",
          "keyword",
          "ranking",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "keyword": { "type": "string" },
          "ranking": { "type": "number", "format": "float" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "ProductSortingJsonApi": {
        "description": "Added since version: 6.3.2.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "key",
              "priority",
              "active",
              "fields",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "locked": { "type": "boolean" },
              "key": { "type": "string" },
              "priority": { "type": "integer", "format": "int64" },
              "active": { "type": "boolean" },
              "fields": { "type": "object" },
              "label": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" }
            },
            "type": "object"
          }
        ]
      },
      "ProductSorting": {
        "description": "Added since version: 6.3.2.0",
        "required": [
          "key",
          "priority",
          "active",
          "fields",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "locked": { "type": "boolean" },
          "key": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "active": { "type": "boolean" },
          "fields": { "type": "object" },
          "label": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" }
        },
        "type": "object"
      },
      "ProductStreamJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "apiFilter": { "type": "object", "readOnly": true },
              "invalid": { "type": "boolean", "readOnly": true },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "paypalPosSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/paypalPosSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_paypal_pos_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26b70448bef559794776489"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "socialShoppingSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/socialShoppingSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26b70448bef559795541b10"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "filters": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/filters"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream_filter"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26b70448bef559791fdab45"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productCrossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/productCrossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26b70448bef5597927a4e69"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26b70448bef5597935ce4c7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26b70448bef55979449d0f1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductStream": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "apiFilter": { "type": "object", "readOnly": true },
          "invalid": { "type": "boolean", "readOnly": true },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "paypalPosSalesChannels": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/paypalPosSalesChannels"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_paypal_pos_sales_channel"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce26b70448bef559794776489"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "socialShoppingSalesChannels": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product-stream/018a1d1ce26a7082b2f2c1ff79b78b9c/socialShoppingSalesChannels"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_sales_channel"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce26b70448bef559795541b10"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "filters": { "$ref": "#/components/schemas/ProductStreamFilter" },
          "productCrossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "productExports": { "$ref": "#/components/schemas/ProductExport" },
          "categories": { "$ref": "#/components/schemas/Category" }
        },
        "type": "object"
      },
      "ProductStreamFilterJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productStreamId", "type", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "type": { "type": "string" },
              "field": { "type": "string" },
              "operator": { "type": "string" },
              "value": { "type": "string" },
              "parameters": { "type": "object" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream-filter/018a1d1ce26b70448bef55979642a16d/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26c71a3a917303dfffff7a5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream-filter/018a1d1ce26b70448bef55979642a16d/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream_filter"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26c71a3a917303e003c421e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "queries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-stream-filter/018a1d1ce26b70448bef55979642a16d/queries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream_filter"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26c71a3a917303e006c4292"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductStreamFilter": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productStreamId", "type", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "type": { "type": "string" },
          "field": { "type": "string" },
          "operator": { "type": "string" },
          "value": { "type": "string" },
          "parameters": { "type": "object" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "productStream": { "$ref": "#/components/schemas/ProductStream" },
          "parent": { "$ref": "#/components/schemas/ProductStreamFilter" },
          "queries": { "$ref": "#/components/schemas/ProductStreamFilter" }
        },
        "type": "object"
      },
      "ProductStreamMapping": {
        "description": "Added since version: 6.4.0.0",
        "required": ["productId", "productStreamId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "productStream": { "$ref": "#/components/schemas/ProductStream" }
        },
        "type": "object"
      },
      "ProductTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "ProductVisibilityJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "productId",
              "salesChannelId",
              "visibility",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "visibility": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-visibility/018a1d1ce26d7347b048ac2edfbdd07b/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26d7347b048ac2ee019b39c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-visibility/018a1d1ce26d7347b048ac2edfbdd07b/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26d7347b048ac2ee0e23c05"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductVisibility": {
        "description": "Added since version: 6.0.0.0",
        "required": ["productId", "salesChannelId", "visibility", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "visibility": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "ProductWarehouseJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "warehouseId", "stock", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "warehouseId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "stock": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-warehouse/018a1d1ce26d7347b048ac2ee104fe24/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26d7347b048ac2ee131d54e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouse": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product-warehouse/018a1d1ce26d7347b048ac2ee104fe24/warehouse"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "warehouse" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce26d7347b048ac2ee1c55421"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProductWarehouse": {
        "description": "Added since version: ",
        "required": ["productId", "warehouseId", "stock", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "warehouseId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stock": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" },
          "warehouse": { "$ref": "#/components/schemas/Warehouse" }
        },
        "type": "object"
      },
      "ProductWarehouseGroup": {
        "description": "Added since version: ",
        "required": ["productId", "warehouseGroupId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "warehouseGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "warehouseGroup": { "$ref": "#/components/schemas/WarehouseGroup" }
        },
        "type": "object"
      },
      "PromotionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "active",
              "priority",
              "exclusive",
              "useCodes",
              "useIndividualCodes",
              "useSetGroups",
              "preventCombination",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "validFrom": { "type": "string", "format": "date-time" },
              "validUntil": { "type": "string", "format": "date-time" },
              "maxRedemptionsGlobal": { "type": "integer", "format": "int64" },
              "maxRedemptionsPerCustomer": {
                "type": "integer",
                "format": "int64"
              },
              "priority": { "type": "integer", "format": "int64" },
              "exclusive": { "type": "boolean" },
              "code": { "type": "string" },
              "useCodes": { "type": "boolean" },
              "useIndividualCodes": { "type": "boolean" },
              "individualCodePattern": { "type": "string" },
              "useSetGroups": { "type": "boolean" },
              "customerRestriction": { "type": "boolean" },
              "preventCombination": { "type": "boolean" },
              "orderCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "ordersPerCustomerCount": { "type": "object", "readOnly": true },
              "exclusionIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "setgroups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/setgroups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_setgroup"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26e71698144fa2a65c9673b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26e71698144fa2a65fa5a61"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "discounts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/discounts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c217a94d48"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "individualCodes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/individualCodes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_individual_code"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c217ea3faf"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "personaRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/personaRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c2180fd781"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "personaCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/personaCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c218cb09f6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/orderRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c219292a27"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cartRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/cartRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c219504f5a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion/018a1d1ce26e71698144fa2a64fc2c9c/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce26f7322928735c219de7333"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Promotion": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "active",
          "priority",
          "exclusive",
          "useCodes",
          "useIndividualCodes",
          "useSetGroups",
          "preventCombination",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "validFrom": { "type": "string", "format": "date-time" },
          "validUntil": { "type": "string", "format": "date-time" },
          "maxRedemptionsGlobal": { "type": "integer", "format": "int64" },
          "maxRedemptionsPerCustomer": { "type": "integer", "format": "int64" },
          "priority": { "type": "integer", "format": "int64" },
          "exclusive": { "type": "boolean" },
          "code": { "type": "string" },
          "useCodes": { "type": "boolean" },
          "useIndividualCodes": { "type": "boolean" },
          "individualCodePattern": { "type": "string" },
          "useSetGroups": { "type": "boolean" },
          "customerRestriction": { "type": "boolean" },
          "preventCombination": { "type": "boolean" },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "ordersPerCustomerCount": { "type": "object", "readOnly": true },
          "exclusionIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "setgroups": { "$ref": "#/components/schemas/PromotionSetgroup" },
          "salesChannels": {
            "$ref": "#/components/schemas/PromotionSalesChannel"
          },
          "discounts": { "$ref": "#/components/schemas/PromotionDiscount" },
          "individualCodes": {
            "$ref": "#/components/schemas/PromotionIndividualCode"
          },
          "personaRules": { "$ref": "#/components/schemas/Rule" },
          "personaCustomers": { "$ref": "#/components/schemas/Customer" },
          "orderRules": { "$ref": "#/components/schemas/Rule" },
          "cartRules": { "$ref": "#/components/schemas/Rule" },
          "orderLineItems": { "$ref": "#/components/schemas/OrderLineItem" }
        },
        "type": "object"
      },
      "PromotionCartRule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["promotionId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "PromotionDiscountJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "promotionId",
              "scope",
              "type",
              "value",
              "considerAdvancedRules",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "scope": { "type": "string" },
              "type": { "type": "string" },
              "value": { "type": "number", "format": "float" },
              "considerAdvancedRules": { "type": "boolean" },
              "maxValue": { "type": "number", "format": "float" },
              "sorterKey": { "type": "string" },
              "applierKey": { "type": "string" },
              "usageKey": { "type": "string" },
              "pickerKey": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount/018a1d1ce26f7322928735c21b487d34/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "promotion" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27070b48bc2158fc6ff0353"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "discountRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount/018a1d1ce26f7322928735c21b487d34/discountRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27070b48bc2158fc771e3ec"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscountPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount/018a1d1ce26f7322928735c21b487d34/promotionDiscountPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount_prices"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27070b48bc2158fc7cb9098"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionDiscount": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "scope",
          "type",
          "value",
          "considerAdvancedRules",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "scope": { "type": "string" },
          "type": { "type": "string" },
          "value": { "type": "number", "format": "float" },
          "considerAdvancedRules": { "type": "boolean" },
          "maxValue": { "type": "number", "format": "float" },
          "sorterKey": { "type": "string" },
          "applierKey": { "type": "string" },
          "usageKey": { "type": "string" },
          "pickerKey": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "discountRules": { "$ref": "#/components/schemas/Rule" },
          "promotionDiscountPrices": {
            "$ref": "#/components/schemas/PromotionDiscountPrices"
          }
        },
        "type": "object"
      },
      "PromotionDiscountPricesJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["discountId", "currencyId", "price", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "discountId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "price": { "type": "number", "format": "float" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotionDiscount": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount-prices/018a1d1ce27070b48bc2158fc85792fe/promotionDiscount"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "promotion_discount"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27070b48bc2158fc8c51140"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-discount-prices/018a1d1ce27070b48bc2158fc85792fe/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27070b48bc2158fc8cbbb0f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionDiscountPrices": {
        "description": "Added since version: 6.0.0.0",
        "required": ["discountId", "currencyId", "price", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "discountId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "price": { "type": "number", "format": "float" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotionDiscount": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "currency": { "$ref": "#/components/schemas/Currency" }
        },
        "type": "object"
      },
      "PromotionDiscountRule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["discountId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "discountId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "discount": { "$ref": "#/components/schemas/PromotionDiscount" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "PromotionIndividualCodeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["promotionId", "code", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "code": { "type": "string" },
              "payload": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-individual-code/018a1d1ce2717309972b50a883b9ee69/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "promotion" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2717309972b50a884a55275"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionIndividualCode": {
        "description": "Added since version: 6.0.0.0",
        "required": ["promotionId", "code", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "code": { "type": "string" },
          "payload": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": { "$ref": "#/components/schemas/Promotion" }
        },
        "type": "object"
      },
      "PromotionOrderRule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["promotionId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "PromotionPersonaCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": ["promotionId", "customerId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "customer": { "$ref": "#/components/schemas/Customer" }
        },
        "type": "object"
      },
      "PromotionPersonaRule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["promotionId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "PromotionSalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "promotionId",
              "salesChannelId",
              "priority",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "priority": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-sales-channel/018a1d1ce27272de8ab9446807b0766b/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "promotion" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27272de8ab9446807d58e83"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-sales-channel/018a1d1ce27272de8ab9446807b0766b/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27272de8ab9446808c15774"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["promotionId", "salesChannelId", "priority", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "priority": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "PromotionSetgroupJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "promotionId",
              "packagerKey",
              "sorterKey",
              "value",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "packagerKey": { "type": "string" },
              "sorterKey": { "type": "string" },
              "value": { "type": "number", "format": "float" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-setgroup/018a1d1ce27272de8ab944680917596c/promotion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "promotion" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce273716794b4b970faf5a0a1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "setGroupRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/promotion-setgroup/018a1d1ce27272de8ab944680917596c/setGroupRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce273716794b4b970fb6b6f42"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PromotionSetgroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "promotionId",
          "packagerKey",
          "sorterKey",
          "value",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "promotionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "packagerKey": { "type": "string" },
          "sorterKey": { "type": "string" },
          "value": { "type": "number", "format": "float" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "promotion": { "$ref": "#/components/schemas/Promotion" },
          "setGroupRules": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "PromotionSetgroupRule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["setgroupId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "setgroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "setgroup": { "$ref": "#/components/schemas/PromotionSetgroup" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "PropertyGroupJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["displayType", "sortingType", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "displayType": { "type": "string" },
              "sortingType": { "type": "string" },
              "filterable": { "type": "boolean" },
              "visibleOnProductDetailPage": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group/018a1d1ce273716794b4b970fd7e4f96/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce273716794b4b970fe586c22"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PropertyGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": ["displayType", "sortingType", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "displayType": { "type": "string" },
          "sortingType": { "type": "string" },
          "filterable": { "type": "boolean" },
          "visibleOnProductDetailPage": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "options": { "$ref": "#/components/schemas/PropertyGroupOption" }
        },
        "type": "object"
      },
      "PropertyGroupOptionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["groupId", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "colorHexCode": { "type": "string" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/018a1d1ce2747310a7420f666af8e6bf/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2747310a7420f666b227a25"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "group": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/018a1d1ce2747310a7420f666af8e6bf/group"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "property_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2747310a7420f666b7a1e99"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productConfiguratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/018a1d1ce2747310a7420f666af8e6bf/productConfiguratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2747310a7420f666c5464c0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productProperties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/018a1d1ce2747310a7420f666af8e6bf/productProperties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2747310a7420f666c5ba8de"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productOptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/property-group-option/018a1d1ce2747310a7420f666af8e6bf/productOptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2747310a7420f666c63a48f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PropertyGroupOption": {
        "description": "Added since version: 6.0.0.0",
        "required": ["groupId", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "colorHexCode": { "type": "string" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "group": { "$ref": "#/components/schemas/PropertyGroup" },
          "productConfiguratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "productProperties": { "$ref": "#/components/schemas/Product" },
          "productOptions": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "RuleJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "priority", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "priority": { "type": "integer", "format": "int64" },
              "description": { "type": "string" },
              "invalid": { "type": "boolean", "readOnly": true },
              "areas": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false },
                "readOnly": true
              },
              "customFields": { "type": "object" },
              "moduleTypes": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "subscriptionPlans": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/subscriptionPlans"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_plan"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e7253d13f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionIntervals": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/subscriptionIntervals"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_interval"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce83048a85d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouseGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/warehouseGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "warehouse_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce8304faf7e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagCmsExtensionsBlockRules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/swagCmsExtensionsBlockRules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_cms_extensions_block_rule"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce83132ba45"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customizedProductsTemplateOptionPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/customizedProductsTemplateOptionPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce83203b13f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customizedProductsTemplateOptionValuePrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/customizedProductsTemplateOptionValuePrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce8324045a0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagDynamicAccessProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/swagDynamicAccessProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce832e8fd42"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagDynamicAccessCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/swagDynamicAccessCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce8332abc76"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagDynamicAccessLandingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/swagDynamicAccessLandingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27671e5bb143ce833a19448"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "conditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/conditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6a0a458d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/productPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6a6a1a6a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethodPrices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/shippingMethodPrices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6b24621c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethodPriceCalculations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/shippingMethodPriceCalculations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6c07cd3d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6d03a474"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6d74365f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "personaPromotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/personaPromotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6dbda96a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flowSequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/flowSequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6e463ab5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "taxProviders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/taxProviders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tax_provider"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6eab1a83"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6f0b1a87"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderPromotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/orderPromotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e6f59e75b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cartPromotions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/cartPromotions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e704fcc4d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscounts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/promotionDiscounts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_discount"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e70f733b3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionSetGroups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule/018a1d1ce27571019109294e697b4b22/promotionSetGroups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_setgroup"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27571019109294e71efe547"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Rule": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "priority", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "description": { "type": "string" },
          "invalid": { "type": "boolean", "readOnly": true },
          "areas": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false },
            "readOnly": true
          },
          "customFields": { "type": "object" },
          "moduleTypes": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "subscriptionPlans": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/subscriptionPlans"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_plan"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27571019109294e7253d13f"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "subscriptionIntervals": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/subscriptionIntervals"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_interval"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce83048a85d"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "warehouseGroup": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/warehouseGroup"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "warehouse_group"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce8304faf7e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagCmsExtensionsBlockRules": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/swagCmsExtensionsBlockRules"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_cms_extensions_block_rule"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce83132ba45"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "customizedProductsTemplateOptionPrices": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/customizedProductsTemplateOptionPrices"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_customized_products_template_option_price"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce83203b13f"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "customizedProductsTemplateOptionValuePrices": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/customizedProductsTemplateOptionValuePrices"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_customized_products_template_option_value_price"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce8324045a0"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagDynamicAccessProducts": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/swagDynamicAccessProducts"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "product" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce832e8fd42"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagDynamicAccessCategories": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/swagDynamicAccessCategories"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "category" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce8332abc76"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagDynamicAccessLandingPages": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/018a1d1ce27571019109294e697b4b22/swagDynamicAccessLandingPages"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "landing_page" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27671e5bb143ce833a19448"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "conditions": { "$ref": "#/components/schemas/RuleCondition" },
          "productPrices": { "$ref": "#/components/schemas/ProductPrice" },
          "shippingMethodPrices": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "shippingMethodPriceCalculations": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "shippingMethods": { "$ref": "#/components/schemas/ShippingMethod" },
          "paymentMethods": { "$ref": "#/components/schemas/PaymentMethod" },
          "personaPromotions": { "$ref": "#/components/schemas/Promotion" },
          "flowSequences": { "$ref": "#/components/schemas/FlowSequence" },
          "taxProviders": { "$ref": "#/components/schemas/TaxProvider" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "orderPromotions": { "$ref": "#/components/schemas/Promotion" },
          "cartPromotions": { "$ref": "#/components/schemas/Promotion" },
          "promotionDiscounts": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "promotionSetGroups": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          }
        },
        "type": "object"
      },
      "RuleConditionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["type", "ruleId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "type": { "type": "string" },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "scriptId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "value": { "type": "object" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/018a1d1ce27671e5bb143ce833dca9b1/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27671e5bb143ce834441cf8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "appScriptCondition": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/018a1d1ce27671e5bb143ce833dca9b1/appScriptCondition"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "app_script_condition"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27671e5bb143ce834491e29"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/018a1d1ce27671e5bb143ce833dca9b1/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule_condition"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27671e5bb143ce83528bb2a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/rule-condition/018a1d1ce27671e5bb143ce833dca9b1/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "rule_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce277714aad259da7cbe14c70"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "RuleCondition": {
        "description": "Added since version: 6.0.0.0",
        "required": ["type", "ruleId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "type": { "type": "string" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "scriptId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "value": { "type": "object" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "rule": { "$ref": "#/components/schemas/Rule" },
          "appScriptCondition": {
            "$ref": "#/components/schemas/AppScriptCondition"
          },
          "parent": { "$ref": "#/components/schemas/RuleCondition" },
          "children": { "$ref": "#/components/schemas/RuleCondition" }
        },
        "type": "object"
      },
      "RuleTag": {
        "description": "Added since version: 6.5.0.0",
        "required": ["ruleId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "rule": { "$ref": "#/components/schemas/Rule" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "SaasAppStorefrontConfigJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "appVersion",
              "appId",
              "technicalName",
              "basePath",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "appVersion": { "type": "string" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "technicalName": { "type": "string" },
              "basePath": { "type": "string" },
              "name": { "type": "string" },
              "author": { "type": "string" },
              "isTheme": { "type": "boolean" },
              "storefrontEntryPath": { "type": "string" },
              "previewMedia": { "type": "string" },
              "themeConfig": { "type": "object" },
              "assetPaths": { "type": "array", "items": { "type": "string" } },
              "viewInheritance": {
                "type": "array",
                "items": { "type": "string" }
              },
              "styleFiles": { "type": "object" },
              "scriptFiles": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/saas-app-storefront-config/018a1d1ce277714aad259da7cceb307a/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce277714aad259da7cdb18374"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SaasAppStorefrontConfig": {
        "description": "Added since version: ",
        "required": [
          "appVersion",
          "appId",
          "technicalName",
          "basePath",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "appVersion": { "type": "string" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "basePath": { "type": "string" },
          "name": { "type": "string" },
          "author": { "type": "string" },
          "isTheme": { "type": "boolean" },
          "storefrontEntryPath": { "type": "string" },
          "previewMedia": { "type": "string" },
          "themeConfig": { "type": "object" },
          "assetPaths": { "type": "array", "items": { "type": "string" } },
          "viewInheritance": { "type": "array", "items": { "type": "string" } },
          "styleFiles": { "type": "object" },
          "scriptFiles": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "SaasSbpUserDataJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["userId", "sbpUserId", "sbpStatus", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "userId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true
              },
              "sbpUserId": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "sbpStatus": { "type": "string", "readOnly": true },
              "lastSbpStatusChange": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "sbpAccessToken": { "type": "object", "readOnly": true },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/saas-sbp-user-data/018a1d1ce278709d9c6e5c01fcdb33b1/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce278709d9c6e5c01fd9d7058"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SaasSbpUserData": {
        "description": "Added since version: ",
        "required": ["userId", "sbpUserId", "sbpStatus", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "userId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true
          },
          "sbpUserId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "sbpStatus": { "type": "string", "readOnly": true },
          "lastSbpStatusChange": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sbpAccessToken": { "type": "object", "readOnly": true },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "SaasStorefrontDemoTokenJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["token", "expiresAt", "userId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "token": { "type": "string", "readOnly": true },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/saas-storefront-demo-token/018a1d1ce278709d9c6e5c01fdc0a3e4/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce279719a8b024c77c17853bb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SaasStorefrontDemoToken": {
        "description": "Added since version: ",
        "required": ["token", "expiresAt", "userId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "token": { "type": "string", "readOnly": true },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "SaasUserLoginTokenJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["token", "expiresAt", "userId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "token": { "type": "string", "readOnly": true },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/saas-user-login-token/018a1d1ce279719a8b024c77c1b4a510/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce279719a8b024c77c283d9a1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SaasUserLoginToken": {
        "description": "Added since version: ",
        "required": ["token", "expiresAt", "userId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "token": { "type": "string", "readOnly": true },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "SalesChannelJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "typeId",
              "languageId",
              "customerGroupId",
              "currencyId",
              "paymentMethodId",
              "shippingMethodId",
              "countryId",
              "navigationCategoryId",
              "accessKey",
              "createdAt",
              "name",
              "homeEnabled"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "typeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerGroupId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "analyticsId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "navigationCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "navigationCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "navigationCategoryDepth": {
                "type": "integer",
                "format": "int64"
              },
              "footerCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "footerCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "serviceCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "serviceCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mailHeaderFooterId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hreflangDefaultDomainId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": { "type": "string" },
              "shortName": { "type": "string" },
              "taxCalculationType": { "type": "string" },
              "accessKey": { "type": "string" },
              "configuration": { "type": "object" },
              "active": { "type": "boolean" },
              "hreflangActive": { "type": "boolean" },
              "maintenance": { "type": "boolean" },
              "maintenanceIpWhitelist": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "customFields": { "type": "object" },
              "paymentMethodIds": {
                "type": "array",
                "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "readOnly": true
              },
              "homeCmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "homeCmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "homeSlotConfig": { "type": "object" },
              "homeEnabled": { "type": "boolean" },
              "homeName": { "type": "string" },
              "homeMetaTitle": { "type": "string" },
              "homeMetaDescription": { "type": "string" },
              "homeKeywords": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "themes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/themes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "theme" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b637529c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b6f358b7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paypalPosSalesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/paypalPosSalesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_paypal_pos_sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5b74ac7b7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "socialShoppingSalesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/socialShoppingSalesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_social_shopping_sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5b7cb6fcb"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "socialShoppingProductErrors": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/socialShoppingProductErrors"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_product_error"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b7f20d4e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagSocialShoppingCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/swagSocialShoppingCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b88e1fe6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "swagSocialShoppingOrder": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/swagSocialShoppingOrder"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_order"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b92fc57d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "currencies": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/currencies"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "currency" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27a7113b8825fac361f2a6a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "languages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/languages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "language" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27a7113b8825fac36d5c1e9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/countries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "country" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27a7113b8825fac379f6472"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/paymentMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "payment_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27a7113b8825fac37b41951"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27a7113b8825fac3882388d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/type"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27a7113b8825fac391f35b8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27a7113b8825fac39de82f4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerGroup": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/customerGroup"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "customer_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27a7113b8825fac3ab2c037"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27a7113b8825fac3ac1c6c3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27a7113b8825fac3bb4385c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27a7113b8825fac3bfa4e92"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5a9df6dec"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5aa552511"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5aab4a477"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "homeCmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/homeCmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5aaf4f14c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "domains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/domains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5ab4a4d5f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "systemConfigs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/systemConfigs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "system_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5ac491123"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "navigationCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/navigationCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5ac4cff51"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "footerCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/footerCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5ac4f6a86"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "serviceCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/serviceCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "category" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5ac8c020d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productVisibilities": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/productVisibilities"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_visibility"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5acdf3bdb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "hreflangDefaultDomain": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/hreflangDefaultDomain"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_domain"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5ada1e9ee"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mailHeaderFooter": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/mailHeaderFooter"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "mail_header_footer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5ae1bedf6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5ae6bac3e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/numberRangeSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number_range_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5aec56562"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "promotionSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/promotionSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "promotion_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5af306f4d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/documentBaseConfigSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "document_base_config_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b02715f9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b09fd36a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "seo_url" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b1527e5d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrlTemplates": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/seoUrlTemplates"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url_template"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b1922b9d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b253d7d1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b2fdf811"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "analytics": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/analytics"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_analytics"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27b723fa71225e5b3f1be74"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerGroupsRegistrations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/customerGroupsRegistrations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b439d6ad"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/landingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b519a5f3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "boundCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/boundCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b5fb8156"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/wishlists"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_wishlist"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce27b723fa71225e5b60b443f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "typeId",
          "languageId",
          "customerGroupId",
          "currencyId",
          "paymentMethodId",
          "shippingMethodId",
          "countryId",
          "navigationCategoryId",
          "accessKey",
          "createdAt",
          "name",
          "homeEnabled"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "typeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "analyticsId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "navigationCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "navigationCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "navigationCategoryDepth": { "type": "integer", "format": "int64" },
          "footerCategoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "footerCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "serviceCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "serviceCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mailHeaderFooterId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hreflangDefaultDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": { "type": "string" },
          "shortName": { "type": "string" },
          "taxCalculationType": { "type": "string" },
          "accessKey": { "type": "string" },
          "configuration": { "type": "object" },
          "active": { "type": "boolean" },
          "hreflangActive": { "type": "boolean" },
          "maintenance": { "type": "boolean" },
          "maintenanceIpWhitelist": {
            "type": "array",
            "items": { "type": "object", "additionalProperties": false }
          },
          "customFields": { "type": "object" },
          "paymentMethodIds": {
            "type": "array",
            "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
            "readOnly": true
          },
          "homeCmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "homeCmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "homeSlotConfig": { "type": "object" },
          "homeEnabled": { "type": "boolean" },
          "homeName": { "type": "string" },
          "homeMetaTitle": { "type": "string" },
          "homeMetaDescription": { "type": "string" },
          "homeKeywords": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "themes": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/themes"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "theme" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27b723fa71225e5b637529c"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27b723fa71225e5b6f358b7"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "paypalPosSalesChannel": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/paypalPosSalesChannel"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_paypal_pos_sales_channel"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce27b723fa71225e5b74ac7b7"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "socialShoppingSalesChannel": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/socialShoppingSalesChannel"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "swag_social_shopping_sales_channel"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce27b723fa71225e5b7cb6fcb"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "socialShoppingProductErrors": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/socialShoppingProductErrors"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_product_error"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27b723fa71225e5b7f20d4e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagSocialShoppingCustomer": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/swagSocialShoppingCustomer"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_customer"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27b723fa71225e5b88e1fe6"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "swagSocialShoppingOrder": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel/018a1d1ce27a7113b8825fac3542b8ce/swagSocialShoppingOrder"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_order"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce27b723fa71225e5b92fc57d"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "currencies": { "$ref": "#/components/schemas/Currency" },
          "languages": { "$ref": "#/components/schemas/Language" },
          "countries": { "$ref": "#/components/schemas/Country" },
          "paymentMethods": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethods": { "$ref": "#/components/schemas/ShippingMethod" },
          "type": { "$ref": "#/components/schemas/SalesChannelType" },
          "language": { "$ref": "#/components/schemas/Language" },
          "customerGroup": { "$ref": "#/components/schemas/CustomerGroup" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "country": { "$ref": "#/components/schemas/Country" },
          "orders": { "$ref": "#/components/schemas/Order" },
          "customers": { "$ref": "#/components/schemas/Customer" },
          "homeCmsPage": { "$ref": "#/components/schemas/CmsPage" },
          "domains": { "$ref": "#/components/schemas/SalesChannelDomain" },
          "systemConfigs": { "$ref": "#/components/schemas/SystemConfig" },
          "navigationCategory": { "$ref": "#/components/schemas/Category" },
          "footerCategory": { "$ref": "#/components/schemas/Category" },
          "serviceCategory": { "$ref": "#/components/schemas/Category" },
          "productVisibilities": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "hreflangDefaultDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "mailHeaderFooter": {
            "$ref": "#/components/schemas/MailHeaderFooter"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "promotionSalesChannels": {
            "$ref": "#/components/schemas/PromotionSalesChannel"
          },
          "documentBaseConfigSalesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          },
          "productReviews": { "$ref": "#/components/schemas/ProductReview" },
          "seoUrls": { "$ref": "#/components/schemas/SeoUrl" },
          "seoUrlTemplates": { "$ref": "#/components/schemas/SeoUrlTemplate" },
          "mainCategories": { "$ref": "#/components/schemas/MainCategory" },
          "productExports": { "$ref": "#/components/schemas/ProductExport" },
          "analytics": { "$ref": "#/components/schemas/SalesChannelAnalytics" },
          "customerGroupsRegistrations": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "landingPages": { "$ref": "#/components/schemas/LandingPage" },
          "boundCustomers": { "$ref": "#/components/schemas/Customer" },
          "wishlists": { "$ref": "#/components/schemas/CustomerWishlist" }
        },
        "type": "object"
      },
      "SalesChannelAnalyticsJsonApi": {
        "description": "Added since version: 6.2.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "trackingId": { "type": "string" },
              "active": { "type": "boolean" },
              "trackOrders": { "type": "boolean" },
              "anonymizeIp": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-analytics/018a1d1ce27d7296b9cb3511184fd894/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27d7296b9cb351118a73daa"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannelAnalytics": {
        "description": "Added since version: 6.2.0.0",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "trackingId": { "type": "string" },
          "active": { "type": "boolean" },
          "trackOrders": { "type": "boolean" },
          "anonymizeIp": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "SalesChannelCountry": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salesChannelId", "countryId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "country": { "$ref": "#/components/schemas/Country" }
        },
        "type": "object"
      },
      "SalesChannelCurrency": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salesChannelId", "currencyId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "currency": { "$ref": "#/components/schemas/Currency" }
        },
        "type": "object"
      },
      "SalesChannelDomainJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "url",
              "salesChannelId",
              "languageId",
              "currencyId",
              "snippetSetId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "url": { "type": "string" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "snippetSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "hreflangUseOnlyLocale": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "socialShoppingSalesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/socialShoppingSalesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_social_shopping_sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28070d58c799232ac2f6a12"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce27f7249aaff25581cac1d24"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28070d58c799232a8f41534"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28070d58c799232a991cac4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "snippetSet": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/snippetSet"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "snippet_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28070d58c799232aa8f37c1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultHreflang": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/salesChannelDefaultHreflang"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28070d58c799232aab76ec4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/productExports"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_export"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28070d58c799232ab8eb89c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannelDomain": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "url",
          "salesChannelId",
          "languageId",
          "currencyId",
          "snippetSetId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "url": { "type": "string" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "snippetSetId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "hreflangUseOnlyLocale": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "socialShoppingSalesChannels": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/sales-channel-domain/018a1d1ce27f7249aaff25581c8b8d70/socialShoppingSalesChannels"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_social_shopping_sales_channel"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce28070d58c799232ac2f6a12"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "language": { "$ref": "#/components/schemas/Language" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "snippetSet": { "$ref": "#/components/schemas/SnippetSet" },
          "salesChannelDefaultHreflang": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "productExports": { "$ref": "#/components/schemas/ProductExport" }
        },
        "type": "object"
      },
      "SalesChannelLanguage": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salesChannelId", "languageId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "SalesChannelPaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salesChannelId", "paymentMethodId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" }
        },
        "type": "object"
      },
      "SalesChannelShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salesChannelId", "shippingMethodId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" }
        },
        "type": "object"
      },
      "SalesChannelTypeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "coverUrl": { "type": "string" },
              "iconName": { "type": "string" },
              "screenshotUrls": {
                "type": "array",
                "items": { "type": "string" }
              },
              "name": { "type": "string" },
              "manufacturer": { "type": "string" },
              "description": { "type": "string" },
              "descriptionLong": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/sales-channel-type/018a1d1ce28273bca21de39e116fcf58/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28273bca21de39e11733486"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesChannelType": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "coverUrl": { "type": "string" },
          "iconName": { "type": "string" },
          "screenshotUrls": { "type": "array", "items": { "type": "string" } },
          "name": { "type": "string" },
          "manufacturer": { "type": "string" },
          "description": { "type": "string" },
          "descriptionLong": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "SalutationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "salutationKey",
              "createdAt",
              "displayName",
              "letterName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salutationKey": { "type": "string" },
              "displayName": { "type": "string" },
              "letterName": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptionCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/subscriptionCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826accba1e3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionCustomerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/subscriptionCustomerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826ad058592"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826a9b8cd7c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/customerAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "customer_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826aa2e2c6f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/orderCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_customer"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826aa6eadc9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/orderAddresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826ab382624"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/salutation/018a1d1ce28273bca21de39e12602188/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28371ed9ce4a826abd94af8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Salutation": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salutationKey", "createdAt", "displayName", "letterName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationKey": { "type": "string" },
          "displayName": { "type": "string" },
          "letterName": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptionCustomers": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/salutation/018a1d1ce28273bca21de39e12602188/subscriptionCustomers"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_customer"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce28371ed9ce4a826accba1e3"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "subscriptionCustomerAddresses": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/salutation/018a1d1ce28273bca21de39e12602188/subscriptionCustomerAddresses"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "subscription_address"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce28371ed9ce4a826ad058592"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customers": { "$ref": "#/components/schemas/Customer" },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "orderCustomers": { "$ref": "#/components/schemas/OrderCustomer" },
          "orderAddresses": { "$ref": "#/components/schemas/OrderAddress" },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          }
        },
        "type": "object"
      },
      "ScheduledTaskJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "name",
              "scheduledTaskClass",
              "runInterval",
              "status",
              "nextExecutionTime",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "scheduledTaskClass": { "type": "string" },
              "runInterval": { "type": "integer", "format": "int64" },
              "status": { "type": "string" },
              "lastExecutionTime": { "type": "string", "format": "date-time" },
              "nextExecutionTime": { "type": "string", "format": "date-time" },
              "defaultRunInterval": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "ScheduledTask": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "scheduledTaskClass",
          "runInterval",
          "status",
          "nextExecutionTime",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "scheduledTaskClass": { "type": "string" },
          "runInterval": { "type": "integer", "format": "int64" },
          "status": { "type": "string" },
          "lastExecutionTime": { "type": "string", "format": "date-time" },
          "nextExecutionTime": { "type": "string", "format": "date-time" },
          "defaultRunInterval": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ScriptJsonApi": {
        "description": "Added since version: 6.4.7.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["script", "hook", "name", "active", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "script": { "type": "string" },
              "hook": { "type": "string" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/script/018a1d1ce28473fca0ed6ffb24924e04/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28473fca0ed6ffb24f7e3d9"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Script": {
        "description": "Added since version: 6.4.7.0",
        "required": ["script", "hook", "name", "active", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "script": { "type": "string" },
          "hook": { "type": "string" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "SeoUrlJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "languageId",
              "foreignKey",
              "routeName",
              "pathInfo",
              "seoPathInfo",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "foreignKey": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "routeName": { "type": "string" },
              "pathInfo": { "type": "string" },
              "seoPathInfo": { "type": "string" },
              "isCanonical": { "type": "boolean" },
              "isModified": { "type": "boolean" },
              "isDeleted": { "type": "boolean" },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": { "type": "object" },
              "isValid": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/seo-url/018a1d1ce285708795093506e5b60487/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce285708795093506e617084b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/seo-url/018a1d1ce285708795093506e5b60487/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce285708795093506e6748548"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrl": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "foreignKey",
          "routeName",
          "pathInfo",
          "seoPathInfo",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "foreignKey": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "routeName": { "type": "string" },
          "pathInfo": { "type": "string" },
          "seoPathInfo": { "type": "string" },
          "isCanonical": { "type": "boolean" },
          "isModified": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": { "type": "object" },
          "isValid": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "SeoUrlTemplateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["entityName", "routeName", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entityName": { "type": "string" },
              "routeName": { "type": "string" },
              "template": { "type": "string" },
              "isValid": { "type": "boolean" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/seo-url-template/018a1d1ce2867222b6696c9a569ecefd/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2867222b6696c9a57090249"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrlTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": ["entityName", "routeName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entityName": { "type": "string" },
          "routeName": { "type": "string" },
          "template": { "type": "string" },
          "isValid": { "type": "boolean" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "ShippingMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "availabilityRuleId",
              "deliveryTimeId",
              "taxType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "customFields": { "type": "object" },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxType": { "type": "string" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "description": { "type": "string" },
              "trackingUrl": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28872bfb683b528e796487a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28772ddbd9d7b59a7e169c2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28772ddbd9d7b59a803e404"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28772ddbd9d7b59a810f747"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28772ddbd9d7b59a88c7d30"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28772ddbd9d7b59a912da2f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/orderDeliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28772ddbd9d7b59a99800c4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28872bfb683b528e62f43f1"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/salesChannelDefaultAssignments"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce28872bfb683b528e68bba4f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce28872bfb683b528e77b449d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "availabilityRuleId",
          "deliveryTimeId",
          "taxType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "customFields": { "type": "object" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "deliveryTimeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxType": { "type": "string" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "description": { "type": "string" },
          "trackingUrl": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/shipping-method/018a1d1ce28772ddbd9d7b59a796fddb/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce28872bfb683b528e796487a"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "deliveryTime": { "$ref": "#/components/schemas/DeliveryTime" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "prices": { "$ref": "#/components/schemas/ShippingMethodPrice" },
          "media": { "$ref": "#/components/schemas/Media" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "orderDeliveries": { "$ref": "#/components/schemas/OrderDelivery" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "ShippingMethodPriceJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["shippingMethodId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "calculation": { "type": "integer", "format": "int64" },
              "calculationRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "quantityStart": { "type": "number", "format": "float" },
              "quantityEnd": { "type": "number", "format": "float" },
              "currencyPrice": { "type": "object" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method-price/018a1d1ce2937058ba78b049501d8cba/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2937058ba78b049505347a2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method-price/018a1d1ce2937058ba78b049501d8cba/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2937058ba78b04950d58228"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "calculationRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method-price/018a1d1ce2937058ba78b049501d8cba/calculationRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2937058ba78b04951c56d9f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethodPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": ["shippingMethodId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "calculation": { "type": "integer", "format": "int64" },
          "calculationRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "quantityStart": { "type": "number", "format": "float" },
          "quantityEnd": { "type": "number", "format": "float" },
          "currencyPrice": { "type": "object" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "rule": { "$ref": "#/components/schemas/Rule" },
          "calculationRule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "ShippingMethodTag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["shippingMethodId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "SnippetJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "setId",
              "translationKey",
              "value",
              "author",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "setId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "translationKey": { "type": "string" },
              "value": { "type": "string" },
              "author": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "set": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/snippet/018a1d1ce2947006b074d6078fc04513/set"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "snippet_set"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2947006b074d60790316a05"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Snippet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["setId", "translationKey", "value", "author", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "setId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "translationKey": { "type": "string" },
          "value": { "type": "string" },
          "author": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "set": { "$ref": "#/components/schemas/SnippetSet" }
        },
        "type": "object"
      },
      "SnippetSetJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "baseFile", "iso", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "baseFile": { "type": "string" },
              "iso": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "snippets": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/snippet-set/018a1d1ce2947006b074d60790bc8ace/snippets"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "snippet" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29573ce8de464b840475286"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/snippet-set/018a1d1ce2947006b074d60790bc8ace/salesChannelDomains"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel_domain"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29573ce8de464b8410b2f3f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SnippetSet": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "baseFile", "iso", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "baseFile": { "type": "string" },
          "iso": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "snippets": { "$ref": "#/components/schemas/Snippet" },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          }
        },
        "type": "object"
      },
      "StateMachineJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["technicalName", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "technicalName": { "type": "string" },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "initialStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine/018a1d1ce29573ce8de464b841e1da41/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29573ce8de464b8429674d9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "transitions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine/018a1d1ce29573ce8de464b841e1da41/transitions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_transition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29573ce8de464b843163253"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "historyEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine/018a1d1ce29573ce8de464b841e1da41/historyEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29573ce8de464b84403eb7b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachine": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "initialStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "states": { "$ref": "#/components/schemas/StateMachineState" },
          "transitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "historyEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          }
        },
        "type": "object"
      },
      "StateMachineHistoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "stateMachineId",
              "entityName",
              "fromStateId",
              "toStateId",
              "entityId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "stateMachineId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "entityName": { "type": "string" },
              "fromStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "toStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "transitionActionName": { "type": "string" },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "entityId": { "type": "object", "deprecated": true },
              "referencedId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "referencedVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachine": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/018a1d1ce296713bbe53b320ab7e54ef/stateMachine"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce296713bbe53b320ac404e0f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/018a1d1ce296713bbe53b320ab7e54ef/fromStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce296713bbe53b320acfa4f78"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/018a1d1ce296713bbe53b320ab7e54ef/toStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce296713bbe53b320ad69932a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-history/018a1d1ce296713bbe53b320ab7e54ef/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce296713bbe53b320ae5e1f1f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachineHistory": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "stateMachineId",
          "entityName",
          "fromStateId",
          "toStateId",
          "entityId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateMachineId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entityName": { "type": "string" },
          "fromStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "toStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "transitionActionName": { "type": "string" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entityId": { "type": "object", "deprecated": true },
          "referencedId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "referencedVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachine": { "$ref": "#/components/schemas/StateMachine" },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "StateMachineStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "technicalName",
              "stateMachineId",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "technicalName": { "type": "string" },
              "name": { "type": "string" },
              "stateMachineId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "extensions": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a50fbe6e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderReturns": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderReturns"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a5f7b119"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderReturnLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderReturnLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a66dc101"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderLineItems"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_line_item"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a6ee6caf"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "stateMachine": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/stateMachine"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29773df839d1fa09fbc55ed"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineTransitions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/fromStateMachineTransitions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_transition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a03fa65d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineTransitions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/toStateMachineTransitions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_transition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a0f2a6c0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderTransactions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a1c796d2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderDeliveries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_delivery"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a272cb8d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a2858529"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptures": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderTransactionCaptures"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a35f94be"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefunds": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderTransactionCaptureRefunds"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_transaction_capture_refund"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a45bb5b7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineHistoryEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/toStateMachineHistoryEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a46a1a99"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineHistoryEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/fromStateMachineHistoryEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29773df839d1fa0a4f5257d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachineState": {
        "description": "Added since version: 6.0.0.0",
        "required": ["technicalName", "stateMachineId", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "stateMachineId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "extensions": {
            "properties": {
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce29773df839d1fa0a50fbe6e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "orderReturns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderReturns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "order_return" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce29773df839d1fa0a5f7b119"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "orderReturnLineItems": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderReturnLineItems"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_return_line_item"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce29773df839d1fa0a66dc101"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "orderLineItems": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/state-machine-state/018a1d1ce29773df839d1fa09f4b6ab1/orderLineItems"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_line_item"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce29773df839d1fa0a6ee6caf"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateMachine": { "$ref": "#/components/schemas/StateMachine" },
          "fromStateMachineTransitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "toStateMachineTransitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "orderTransactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "orderDeliveries": { "$ref": "#/components/schemas/OrderDelivery" },
          "orders": { "$ref": "#/components/schemas/Order" },
          "orderTransactionCaptures": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "orderTransactionCaptureRefunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "toStateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "fromStateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          }
        },
        "type": "object"
      },
      "StateMachineTransitionJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "actionName",
              "stateMachineId",
              "fromStateId",
              "toStateId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "actionName": { "type": "string" },
              "stateMachineId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "fromStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "toStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "stateMachine": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-transition/018a1d1ce29870a1ae52464775eef9bb/stateMachine"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29870a1ae52464776b01ae4"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-transition/018a1d1ce29870a1ae52464775eef9bb/fromStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29870a1ae52464777155469"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/state-machine-transition/018a1d1ce29870a1ae52464775eef9bb/toStateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29870a1ae52464777669581"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "StateMachineTransition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "actionName",
          "stateMachineId",
          "fromStateId",
          "toStateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "actionName": { "type": "string" },
          "stateMachineId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "fromStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "toStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachine": { "$ref": "#/components/schemas/StateMachine" },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          }
        },
        "type": "object"
      },
      "SubscriptionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "convertedOrder",
              "subscriptionNumber",
              "nextSchedule",
              "salesChannelId",
              "subscriptionPlanName",
              "subscriptionIntervalName",
              "dateInterval",
              "cronInterval",
              "billingAddressId",
              "shippingAddressId",
              "shippingMethodId",
              "paymentMethodId",
              "currencyId",
              "languageId",
              "stateId",
              "itemRounding",
              "totalRounding",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "convertedOrder": { "type": "object" },
              "subscriptionNumber": { "type": "string" },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "nextSchedule": { "type": "string", "format": "date-time" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "subscriptionPlanId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "subscriptionPlanName": { "type": "string" },
              "subscriptionIntervalId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "subscriptionIntervalName": { "type": "string" },
              "dateInterval": { "type": "string" },
              "cronInterval": { "type": "string" },
              "billingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingAddressId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shippingMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "paymentMethodId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "itemRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": { "type": "integer", "format": "int64" },
                  "interval": { "type": "number", "format": "float" },
                  "roundForNet": { "type": "boolean" }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb232c59a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionPlan": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/subscriptionPlan"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription_plan"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb2a93853"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionInterval": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/subscriptionInterval"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription_interval"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb2cbba1d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionCustomer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/subscriptionCustomer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription_customer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb2f262b2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "billingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/billingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb3a86de6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingAddress": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/shippingAddress"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription_address"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb466778f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "addresses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/addresses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_address"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce299728a95c1f2ebb5487871"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/paymentMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "payment_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce299728a95c1f2ebb6175e95"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/shippingMethod"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "shipping_method"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29a72bc8e5dcfae4a6d3641"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/stateMachineState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "state_machine_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29a72bc8e5dcfae4a757889"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29a72bc8e5dcfae4b1a85bd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tag" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29a72bc8e5dcfae4ba19ad8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29a72bc8e5dcfae4c332a98"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription/018a1d1ce299728a95c1f2ebb13700bb/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29a72bc8e5dcfae4c79608f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Subscription": {
        "description": "Added since version: ",
        "required": [
          "convertedOrder",
          "subscriptionNumber",
          "nextSchedule",
          "salesChannelId",
          "subscriptionPlanName",
          "subscriptionIntervalName",
          "dateInterval",
          "cronInterval",
          "billingAddressId",
          "shippingAddressId",
          "shippingMethodId",
          "paymentMethodId",
          "currencyId",
          "languageId",
          "stateId",
          "itemRounding",
          "totalRounding",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "convertedOrder": { "type": "object" },
          "subscriptionNumber": { "type": "string" },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "nextSchedule": { "type": "string", "format": "date-time" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlanName": { "type": "string" },
          "subscriptionIntervalId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionIntervalName": { "type": "string" },
          "dateInterval": { "type": "string" },
          "cronInterval": { "type": "string" },
          "billingAddressId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "shippingMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "paymentMethodId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "itemRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": { "type": "integer", "format": "int64" },
              "interval": { "type": "number", "format": "float" },
              "roundForNet": { "type": "boolean" }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "subscriptionInterval": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          },
          "subscriptionCustomer": {
            "$ref": "#/components/schemas/SubscriptionCustomer"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/SubscriptionAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/SubscriptionAddress"
          },
          "addresses": { "$ref": "#/components/schemas/SubscriptionAddress" },
          "paymentMethod": { "$ref": "#/components/schemas/PaymentMethod" },
          "shippingMethod": { "$ref": "#/components/schemas/ShippingMethod" },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orders": { "$ref": "#/components/schemas/Order" },
          "tags": { "$ref": "#/components/schemas/Tag" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "SubscriptionAddressJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "countryId",
              "subscriptionId",
              "firstName",
              "lastName",
              "street",
              "city",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "subscriptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryStateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "street": { "type": "string" },
              "zipcode": { "type": "string" },
              "city": { "type": "string" },
              "company": { "type": "string" },
              "department": { "type": "string" },
              "title": { "type": "string" },
              "vatId": { "type": "string" },
              "phoneNumber": { "type": "string" },
              "additionalAddressLine1": { "type": "string" },
              "additionalAddressLine2": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "billingSubscription": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-address/018a1d1ce29a72bc8e5dcfae4d74fbf7/billingSubscription"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29b71dbba01117798238acf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingSubscription": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-address/018a1d1ce29a72bc8e5dcfae4d74fbf7/shippingSubscription"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29b71dbba01117798c70a55"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-address/018a1d1ce29a72bc8e5dcfae4d74fbf7/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29b71dbba011177996f75b3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-address/018a1d1ce29a72bc8e5dcfae4d74fbf7/countryState"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "country_state"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29b71dbba0111779a16e705"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-address/018a1d1ce29a72bc8e5dcfae4d74fbf7/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29b71dbba0111779a5725f7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscription": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-address/018a1d1ce29a72bc8e5dcfae4d74fbf7/subscription"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29b71dbba0111779addd0cf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SubscriptionAddress": {
        "description": "Added since version: ",
        "required": [
          "countryId",
          "subscriptionId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryStateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "street": { "type": "string" },
          "zipcode": { "type": "string" },
          "city": { "type": "string" },
          "company": { "type": "string" },
          "department": { "type": "string" },
          "title": { "type": "string" },
          "vatId": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "additionalAddressLine1": { "type": "string" },
          "additionalAddressLine2": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "billingSubscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "shippingSubscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "country": { "$ref": "#/components/schemas/Country" },
          "countryState": { "$ref": "#/components/schemas/CountryState" },
          "salutation": { "$ref": "#/components/schemas/Salutation" },
          "subscription": { "$ref": "#/components/schemas/Subscription" }
        },
        "type": "object"
      },
      "SubscriptionCustomerJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "subscriptionId",
              "salutationId",
              "email",
              "firstName",
              "lastName",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "subscriptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "email": { "type": "string" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "company": { "type": "string" },
              "title": { "type": "string" },
              "customerNumber": { "type": "string" },
              "vatIds": { "type": "array", "items": { "type": "string" } },
              "customFields": { "type": "object" },
              "remoteAddress": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "subscription": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-customer/018a1d1ce29b71dbba0111779bbf2024/subscription"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "subscription"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29c71f18fff27ea5ed4ad76"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-customer/018a1d1ce29b71dbba0111779bbf2024/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29c71f18fff27ea5fb612f1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-customer/018a1d1ce29b71dbba0111779bbf2024/salutation"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "salutation" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29c71f18fff27ea60654fe1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SubscriptionCustomer": {
        "description": "Added since version: ",
        "required": [
          "subscriptionId",
          "salutationId",
          "email",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salutationId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "company": { "type": "string" },
          "title": { "type": "string" },
          "customerNumber": { "type": "string" },
          "vatIds": { "type": "array", "items": { "type": "string" } },
          "customFields": { "type": "object" },
          "remoteAddress": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "subscription": { "$ref": "#/components/schemas/Subscription" },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "salutation": { "$ref": "#/components/schemas/Salutation" }
        },
        "type": "object"
      },
      "SubscriptionIntervalJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "name",
              "active",
              "dateInterval",
              "cronInterval",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "dateInterval": { "type": "string" },
              "cronInterval": { "type": "string" },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-interval/018a1d1ce29c71f18fff27ea6086c4cb/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29c71f18fff27ea60ff11b7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-interval/018a1d1ce29c71f18fff27ea6086c4cb/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29c71f18fff27ea61aabfb5"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionPlans": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-interval/018a1d1ce29c71f18fff27ea6086c4cb/subscriptionPlans"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_plan"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29c71f18fff27ea623f19a3"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SubscriptionInterval": {
        "description": "Added since version: ",
        "required": [
          "name",
          "active",
          "dateInterval",
          "cronInterval",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "dateInterval": { "type": "string" },
          "cronInterval": { "type": "string" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "subscriptions": { "$ref": "#/components/schemas/Subscription" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "subscriptionPlans": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          }
        },
        "type": "object"
      },
      "SubscriptionPlanJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "active", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "boolean" },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-plan/018a1d1ce29d724f90d0fd3fad15b1ed/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29d724f90d0fd3fadf1b6cf"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptionIntervals": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-plan/018a1d1ce29d724f90d0fd3fad15b1ed/subscriptionIntervals"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription_interval"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29d724f90d0fd3faed78427"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-plan/018a1d1ce29d724f90d0fd3fad15b1ed/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29d724f90d0fd3faf6209bd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-plan/018a1d1ce29d724f90d0fd3fad15b1ed/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29d724f90d0fd3fb0140756"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SubscriptionPlan": {
        "description": "Added since version: ",
        "required": ["name", "active", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "subscriptionIntervals": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          },
          "products": { "$ref": "#/components/schemas/Product" },
          "subscriptions": { "$ref": "#/components/schemas/Subscription" }
        },
        "type": "object"
      },
      "SubscriptionPlanIntervalMapping": {
        "description": "Added since version: ",
        "required": ["subscriptionIntervalId", "subscriptionPlanId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionIntervalId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "subscriptionInterval": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          }
        },
        "type": "object"
      },
      "SubscriptionPlanProductMapping": {
        "description": "Added since version: ",
        "required": ["productId", "subscriptionPlanId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "SubscriptionTagMapping": {
        "description": "Added since version: ",
        "required": ["subscriptionId", "tagId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscriptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "tagId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "subscription": { "$ref": "#/components/schemas/Subscription" },
          "tag": { "$ref": "#/components/schemas/Tag" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsBlockRuleJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["cmsBlockId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "inverted": { "type": "boolean" },
              "visibilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsBlockVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "visibilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-block-rule/018a1d1ce29e723581a44beacebf7354/visibilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29e723581a44beacef25f06"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlock": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-block-rule/018a1d1ce29e723581a44beacebf7354/cmsBlock"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_block" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29e723581a44beacfb5a597"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsBlockRule": {
        "description": "Added since version: ",
        "required": ["cmsBlockId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "inverted": { "type": "boolean" },
          "visibilityRuleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "visibilityRule": { "$ref": "#/components/schemas/Rule" },
          "cmsBlock": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "isTemplate",
              "technicalName",
              "mailTemplateId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsSlotId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsSlotVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "isTemplate": { "type": "boolean" },
              "technicalName": { "type": "string" },
              "title": { "type": "string" },
              "successMessage": { "type": "string" },
              "receivers": { "type": "object" },
              "mailTemplateId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "groups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-form/018a1d1ce29f726791bf4dd7ce1af53b/groups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_cms_extensions_form_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce29f726791bf4dd7ce58d268"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsSlot": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-form/018a1d1ce29f726791bf4dd7ce1af53b/cmsSlot"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_slot" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29f726791bf4dd7cf06dc45"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplate": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-form/018a1d1ce29f726791bf4dd7ce1af53b/mailTemplate"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "mail_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce29f726791bf4dd7cf9999b1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsForm": {
        "description": "Added since version: ",
        "required": [
          "isTemplate",
          "technicalName",
          "mailTemplateId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsSlotId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsSlotVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "isTemplate": { "type": "boolean" },
          "technicalName": { "type": "string" },
          "title": { "type": "string" },
          "successMessage": { "type": "string" },
          "receivers": { "type": "object" },
          "mailTemplateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "groups": {
            "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup"
          },
          "cmsSlot": { "$ref": "#/components/schemas/CmsSlot" },
          "mailTemplate": { "$ref": "#/components/schemas/MailTemplate" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormGroupJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["technicalName", "position", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "formId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "title": { "type": "string" },
              "technicalName": { "type": "string" },
              "position": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "fields": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-form-group/018a1d1ce2a07298b38bd9cbf5c370de/fields"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_cms_extensions_form_group_field"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a07298b38bd9cbf5c5ef99"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "form": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-form-group/018a1d1ce2a07298b38bd9cbf5c370de/form"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_form"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a07298b38bd9cbf6abc280"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsFormGroup": {
        "description": "Added since version: ",
        "required": ["technicalName", "position", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "formId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "title": { "type": "string" },
          "technicalName": { "type": "string" },
          "position": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "fields": {
            "$ref": "#/components/schemas/SwagCmsExtensionsFormGroupField"
          },
          "form": { "$ref": "#/components/schemas/SwagCmsExtensionsForm" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsFormGroupFieldJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "position",
              "width",
              "type",
              "technicalName",
              "required",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "position": { "type": "integer", "format": "int64" },
              "width": { "type": "integer", "format": "int64" },
              "type": { "type": "string" },
              "technicalName": { "type": "string" },
              "required": { "type": "boolean" },
              "label": { "type": "string" },
              "placeholder": { "type": "string" },
              "errorMessage": { "type": "string" },
              "config": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "group": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-form-group-field/018a1d1ce2a07298b38bd9cbf726e409/group"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_cms_extensions_form_group"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a172b5bddc11ced2e2ea09"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsFormGroupField": {
        "description": "Added since version: ",
        "required": [
          "position",
          "width",
          "type",
          "technicalName",
          "required",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "groupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "position": { "type": "integer", "format": "int64" },
          "width": { "type": "integer", "format": "int64" },
          "type": { "type": "string" },
          "technicalName": { "type": "string" },
          "required": { "type": "boolean" },
          "label": { "type": "string" },
          "placeholder": { "type": "string" },
          "errorMessage": { "type": "string" },
          "config": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "group": { "$ref": "#/components/schemas/SwagCmsExtensionsFormGroup" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsQuickviewJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "active": { "type": "boolean" },
              "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsBlockVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "cmsBlock": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-quickview/018a1d1ce2a172b5bddc11ced3dfa721/cmsBlock"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_block" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a172b5bddc11ced46485fc"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsQuickview": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "cmsBlockId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsBlock": { "$ref": "#/components/schemas/CmsBlock" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsScrollNavigationJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "active": { "type": "boolean" },
              "cmsSectionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "displayName": { "type": "string" },
              "cmsSectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "cmsSection": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-scroll-navigation/018a1d1ce2a27314867c4b9902781d07/cmsSection"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_section"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a27314867c4b9902c3c237"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsScrollNavigation": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "displayName": { "type": "string" },
          "cmsSectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "cmsSection": { "$ref": "#/components/schemas/CmsSection" }
        },
        "type": "object"
      },
      "SwagCmsExtensionsScrollNavigationPageSettingsJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "active",
              "duration",
              "easing",
              "bouncy",
              "easingDegree",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "active": { "type": "boolean" },
              "duration": { "type": "integer", "format": "int64" },
              "easing": { "type": "string" },
              "bouncy": { "type": "boolean" },
              "easingDegree": { "type": "integer", "format": "int64" },
              "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-cms-extensions-scroll-navigation-page-settings/018a1d1ce2a27314867c4b9903105465/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "cms_page" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a370ad9012ba65baf8eddd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCmsExtensionsScrollNavigationPageSettings": {
        "description": "Added since version: ",
        "required": [
          "active",
          "duration",
          "easing",
          "bouncy",
          "easingDegree",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "active": { "type": "boolean" },
          "duration": { "type": "integer", "format": "int64" },
          "easing": { "type": "string" },
          "bouncy": { "type": "boolean" },
          "easingDegree": { "type": "integer", "format": "int64" },
          "cmsPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "cmsPageVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cmsPage": { "$ref": "#/components/schemas/CmsPage" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["internalName", "createdAt", "displayName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "internalName": { "type": "string" },
              "displayName": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "boolean" },
              "stepByStep": { "type": "boolean" },
              "confirmInput": { "type": "boolean" },
              "optionsAutoCollapse": { "type": "boolean" },
              "decisionTree": { "type": "object", "readOnly": true },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/018a1d1ce2a370ad9012ba65bb454eb2/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a370ad9012ba65bbe5a4c3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/018a1d1ce2a370ad9012ba65bb454eb2/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a370ad9012ba65bc0a7ac7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/018a1d1ce2a370ad9012ba65bb454eb2/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a370ad9012ba65bc8a3a8d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "exclusions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/018a1d1ce2a370ad9012ba65bb454eb2/exclusions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a370ad9012ba65bd6ef099"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configurations": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template/018a1d1ce2a370ad9012ba65bb454eb2/configurations"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_configuration"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a370ad9012ba65be563498"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplate": {
        "description": "Added since version: ",
        "required": ["internalName", "createdAt", "displayName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "internalName": { "type": "string" },
          "displayName": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" },
          "stepByStep": { "type": "boolean" },
          "confirmInput": { "type": "boolean" },
          "optionsAutoCollapse": { "type": "boolean" },
          "decisionTree": { "type": "object", "readOnly": true },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "media": { "$ref": "#/components/schemas/Media" },
          "options": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "products": { "$ref": "#/components/schemas/Product" },
          "exclusions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
          },
          "configurations": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateConfigurationJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["hash", "configuration", "templateId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "hash": { "type": "string" },
              "configuration": { "type": "object" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration/018a1d1ce2a4736fa759ddbd6e20861a/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a4736fa759ddbd6e7c7235"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateConfigurationShares": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration/018a1d1ce2a4736fa759ddbd6e20861a/templateConfigurationShares"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_configuration_share"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a4736fa759ddbd6e7f4268"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateConfiguration": {
        "description": "Added since version: ",
        "required": ["hash", "configuration", "templateId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hash": { "type": "string" },
          "configuration": { "type": "object" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          },
          "templateConfigurationShares": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfigurationShare"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateConfigurationShareJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["oneTime", "templateConfigurationId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateConfigurationVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "oneTime": { "type": "boolean" },
              "templateConfigurationId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "templateConfiguration": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-configuration-share/018a1d1ce2a571dd8ee879e6308fc43c/templateConfiguration"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_configuration"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a571dd8ee879e6316d1a23"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateConfigurationShare": {
        "description": "Added since version: ",
        "required": ["oneTime", "templateConfigurationId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateConfigurationVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "oneTime": { "type": "boolean" },
          "templateConfigurationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateConfiguration": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateConfiguration"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "templateId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "conditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion/018a1d1ce2a571dd8ee879e631d23eb3/conditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a571dd8ee879e632a9406a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion/018a1d1ce2a571dd8ee879e631d23eb3/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a571dd8ee879e633724e5c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateExclusion": {
        "description": "Added since version: ",
        "required": ["name", "templateId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "conditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionConditionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "templateExclusionId",
              "templateOptionId",
              "templateExclusionOperatorId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateExclusionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateExclusionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateExclusionOperatorId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "templateExclusion": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion-condition/018a1d1ce2a6731b816ff3fd921ebb2c/templateExclusion"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_exclusion"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a6731b816ff3fd92229c84"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateOption": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion-condition/018a1d1ce2a6731b816ff3fd921ebb2c/templateOption"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a6731b816ff3fd92898580"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionOperator": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion-condition/018a1d1ce2a6731b816ff3fd921ebb2c/templateExclusionOperator"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_exclusion_operator"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a6731b816ff3fd92f53a27"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateOptionValues": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion-condition/018a1d1ce2a6731b816ff3fd921ebb2c/templateOptionValues"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a6731b816ff3fd9371bcfb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateExclusionCondition": {
        "description": "Added since version: ",
        "required": [
          "templateExclusionId",
          "templateOptionId",
          "templateExclusionOperatorId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateExclusionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateExclusionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateExclusionOperatorId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateExclusion": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusion"
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "templateExclusionOperator": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionOperator"
          },
          "templateOptionValues": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionConditionValues": {
        "description": "Added since version: ",
        "required": [
          "templateExclusionConditionId",
          "templateOptionValueId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateExclusionConditionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "swagCustomizedProductsTemplateExclusionConditionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionValueId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "swagCustomizedProductsTemplateOptionValueVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateExclusionCondition": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          },
          "templateOptionValue": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateExclusionOperatorJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "operator",
              "templateOptionType",
              "createdAt",
              "label"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "operator": { "type": "string" },
              "templateOptionType": { "type": "string" },
              "label": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-exclusion-operator/018a1d1ce2a77254a5e011d9a99763a0/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a77254a5e011d9aa7985d7"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateExclusionOperator": {
        "description": "Added since version: ",
        "required": ["operator", "templateOptionType", "createdAt", "label"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "operator": { "type": "string" },
          "templateOptionType": { "type": "string" },
          "label": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "templateExclusionConditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["type", "templateId", "createdAt", "displayName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "type": { "type": "string" },
              "displayName": { "type": "string" },
              "description": { "type": "string" },
              "placeholder": { "type": "string" },
              "typeProperties": { "type": "object" },
              "itemNumber": { "type": "string" },
              "required": { "type": "boolean" },
              "oneTimeSurcharge": { "type": "boolean" },
              "relativeSurcharge": { "type": "boolean" },
              "advancedSurcharge": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "price": { "type": "object" },
              "calculatedPrice": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/018a1d1ce2a870b8946d3d9d0776f234/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a870b8946d3d9d07f3697f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "values": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/018a1d1ce2a870b8946d3d9d0776f234/values"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a870b8946d3d9d08ae1340"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/018a1d1ce2a870b8946d3d9d0776f234/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2a870b8946d3d9d092264c4"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "template": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/018a1d1ce2a870b8946d3d9d0776f234/template"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a870b8946d3d9d09ee5575"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option/018a1d1ce2a870b8946d3d9d0776f234/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a870b8946d3d9d0a9df3b1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOption": {
        "description": "Added since version: ",
        "required": ["type", "templateId", "createdAt", "displayName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "type": { "type": "string" },
          "displayName": { "type": "string" },
          "description": { "type": "string" },
          "placeholder": { "type": "string" },
          "typeProperties": { "type": "object" },
          "itemNumber": { "type": "string" },
          "required": { "type": "boolean" },
          "oneTimeSurcharge": { "type": "boolean" },
          "relativeSurcharge": { "type": "boolean" },
          "advancedSurcharge": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "price": { "type": "object" },
          "calculatedPrice": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "templateId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "prices": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionPrice"
          },
          "values": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          },
          "templateExclusionConditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          },
          "template": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplate"
          },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionPriceJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["templateOptionId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateOptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "templateOption": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-price/018a1d1ce2a97079959dd547918e7cfd/templateOption"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a97079959dd54791c222dd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-price/018a1d1ce2a97079959dd547918e7cfd/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2a97079959dd54792845abd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOptionPrice": {
        "description": "Added since version: ",
        "required": ["templateOptionId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionValueJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "templateOptionId",
              "position",
              "createdAt",
              "displayName"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateOptionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "value": { "type": "object" },
              "displayName": { "type": "string" },
              "itemNumber": { "type": "string" },
              "default": { "type": "boolean" },
              "oneTimeSurcharge": { "type": "boolean" },
              "relativeSurcharge": { "type": "boolean" },
              "advancedSurcharge": { "type": "boolean" },
              "position": { "type": "integer", "format": "int64" },
              "price": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/018a1d1ce2a97079959dd547929aab64/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2aa720ab399481172f3e6a0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateOption": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/018a1d1ce2a97079959dd547929aab64/templateOption"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_option"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2aa720ab399481173b3145c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/018a1d1ce2a97079959dd547929aab64/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2aa720ab399481173e05fea"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "templateExclusionConditions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value/018a1d1ce2a97079959dd547929aab64/templateExclusionConditions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_exclusion_condition"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2aa720ab3994811742c6761"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOptionValue": {
        "description": "Added since version: ",
        "required": [
          "templateOptionId",
          "position",
          "createdAt",
          "displayName"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "value": { "type": "object" },
          "displayName": { "type": "string" },
          "itemNumber": { "type": "string" },
          "default": { "type": "boolean" },
          "oneTimeSurcharge": { "type": "boolean" },
          "relativeSurcharge": { "type": "boolean" },
          "advancedSurcharge": { "type": "boolean" },
          "position": { "type": "integer", "format": "int64" },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "prices": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValuePrice"
          },
          "templateOption": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOption"
          },
          "tax": { "$ref": "#/components/schemas/Tax" },
          "templateExclusionConditions": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateExclusionCondition"
          }
        },
        "type": "object"
      },
      "SwagCustomizedProductsTemplateOptionValuePriceJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["templateOptionValueId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "templateOptionValueId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "templateOptionValueVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "price": { "type": "object" },
              "percentageSurcharge": { "type": "number", "format": "float" },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "templateOptionValue": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value-price/018a1d1ce2aa720ab39948117512a5e6/templateOptionValue"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_customized_products_template_option_value"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2aa720ab399481175e7bb05"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-customized-products-template-option-value-price/018a1d1ce2aa720ab39948117512a5e6/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2aa720ab399481176342097"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagCustomizedProductsTemplateOptionValuePrice": {
        "description": "Added since version: ",
        "required": ["templateOptionValueId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "versionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "templateOptionValueId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "templateOptionValueVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "price": { "type": "object" },
          "percentageSurcharge": { "type": "number", "format": "float" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "templateOptionValue": {
            "$ref": "#/components/schemas/SwagCustomizedProductsTemplateOptionValue"
          },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDelayActionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["flowId", "executionTime", "stored", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "eventName": { "type": "string" },
              "flowId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "executionTime": { "type": "string", "format": "date-time" },
              "expired": { "type": "boolean" },
              "delaySequenceId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "stored": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-delay-action/018a1d1ce2ab72edba0ae4347199d25d/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ab72edba0ae43471bc1d73"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-delay-action/018a1d1ce2ab72edba0ae4347199d25d/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ab72edba0ae4347242c36e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "flow": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-delay-action/018a1d1ce2ab72edba0ae4347199d25d/flow"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "flow" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ab72edba0ae43472c10b39"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sequence": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-delay-action/018a1d1ce2ab72edba0ae4347199d25d/sequence"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "flow_sequence"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ab72edba0ae43472f6598a"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagDelayAction": {
        "description": "Added since version: ",
        "required": ["flowId", "executionTime", "stored", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "eventName": { "type": "string" },
          "flowId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "executionTime": { "type": "string", "format": "date-time" },
          "expired": { "type": "boolean" },
          "delaySequenceId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stored": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "flow": { "$ref": "#/components/schemas/Flow" },
          "sequence": { "$ref": "#/components/schemas/FlowSequence" }
        },
        "type": "object"
      },
      "SwagDynamicAccessCategoryRule": {
        "description": "Added since version: ",
        "required": ["categoryId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "category": { "$ref": "#/components/schemas/Category" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDynamicAccessLandingPageRule": {
        "description": "Added since version: ",
        "required": ["landingPageId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "landingPage": { "$ref": "#/components/schemas/LandingPage" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagDynamicAccessProductRule": {
        "description": "Added since version: ",
        "required": ["productId", "ruleId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "product": { "$ref": "#/components/schemas/Product" },
          "rule": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "SwagLanguagePackLanguageJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["languageId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "administrationActive": { "type": "boolean" },
              "salesChannelActive": { "type": "boolean" },
              "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-language-pack-language/018a1d1ce2ac70ea8e81dc3f14be2520/language"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "language" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ac70ea8e81dc3f156e6d86"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagLanguagePackLanguage": {
        "description": "Added since version: ",
        "required": ["languageId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "administrationActive": { "type": "boolean" },
          "salesChannelActive": { "type": "boolean" },
          "languageId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": { "$ref": "#/components/schemas/Language" }
        },
        "type": "object"
      },
      "SwagMigrationConnectionJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "profileName", "gatewayName", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "credentialFields": { "type": "object", "readOnly": true },
              "premapping": { "type": "object" },
              "profileName": { "type": "string" },
              "gatewayName": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "runs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-connection/018a1d1ce2ad7229a2470e16cd7f5f26/runs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_migration_run"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2ad7229a2470e16cd92f821"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mappings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-connection/018a1d1ce2ad7229a2470e16cd7f5f26/mappings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_migration_mapping"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2ad7229a2470e16ce6a8d1a"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "settings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-connection/018a1d1ce2ad7229a2470e16cd7f5f26/settings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_migration_general_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2ad7229a2470e16cecf523b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationConnection": {
        "description": "Added since version: ",
        "required": ["name", "profileName", "gatewayName", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "credentialFields": { "type": "object", "readOnly": true },
          "premapping": { "type": "object" },
          "profileName": { "type": "string" },
          "gatewayName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "runs": { "$ref": "#/components/schemas/SwagMigrationRun" },
          "mappings": { "$ref": "#/components/schemas/SwagMigrationMapping" },
          "settings": {
            "$ref": "#/components/schemas/SwagMigrationGeneralSetting"
          }
        },
        "type": "object"
      },
      "SwagMigrationDataJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["runId", "entity", "raw", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "autoIncrement": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "entity": { "type": "string" },
              "raw": { "type": "object" },
              "converted": { "type": "object" },
              "unmapped": { "type": "object" },
              "mappingUuid": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "written": { "type": "boolean" },
              "convertFailure": { "type": "boolean" },
              "writeFailure": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "run": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-data/018a1d1ce2ad7229a2470e16cf36d198/run"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_migration_run"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ad7229a2470e16cf3f760c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationData": {
        "description": "Added since version: ",
        "required": ["runId", "entity", "raw", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "autoIncrement": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "entity": { "type": "string" },
          "raw": { "type": "object" },
          "converted": { "type": "object" },
          "unmapped": { "type": "object" },
          "mappingUuid": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "written": { "type": "boolean" },
          "convertFailure": { "type": "boolean" },
          "writeFailure": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "run": { "$ref": "#/components/schemas/SwagMigrationRun" }
        },
        "type": "object"
      },
      "SwagMigrationGeneralSettingJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "selectedConnectionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "isReset": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "selectedConnection": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-general-setting/018a1d1ce2ae730fb26be0c6187abed1/selectedConnection"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_migration_connection"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ae730fb26be0c618f8d17f"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationGeneralSetting": {
        "description": "Added since version: ",
        "required": ["createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "selectedConnectionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "isReset": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "selectedConnection": {
            "$ref": "#/components/schemas/SwagMigrationConnection"
          }
        },
        "type": "object"
      },
      "SwagMigrationLoggingJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "level",
              "code",
              "title",
              "description",
              "parameters",
              "titleSnippet",
              "descriptionSnippet",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "level": { "type": "string" },
              "code": { "type": "string" },
              "title": { "type": "string" },
              "description": { "type": "string" },
              "parameters": { "type": "object" },
              "titleSnippet": { "type": "string" },
              "descriptionSnippet": { "type": "string" },
              "entity": { "type": "string" },
              "sourceId": { "type": "string" },
              "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "run": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-logging/018a1d1ce2ae730fb26be0c61909e7bb/run"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_migration_run"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2af705e969d8bf883ef0236"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationLogging": {
        "description": "Added since version: ",
        "required": [
          "level",
          "code",
          "title",
          "description",
          "parameters",
          "titleSnippet",
          "descriptionSnippet",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "level": { "type": "string" },
          "code": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "parameters": { "type": "object" },
          "titleSnippet": { "type": "string" },
          "descriptionSnippet": { "type": "string" },
          "entity": { "type": "string" },
          "sourceId": { "type": "string" },
          "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "run": { "$ref": "#/components/schemas/SwagMigrationRun" }
        },
        "type": "object"
      },
      "SwagMigrationMappingJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["connectionId", "entity", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "connectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "entity": { "type": "string" },
              "oldIdentifier": { "type": "string" },
              "entityUuid": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "entityValue": { "type": "string" },
              "checksum": { "type": "string" },
              "additionalData": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "connection": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-mapping/018a1d1ce2af705e969d8bf884e11855/connection"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_migration_connection"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2af705e969d8bf8855482da"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationMapping": {
        "description": "Added since version: ",
        "required": ["connectionId", "entity", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "connectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entity": { "type": "string" },
          "oldIdentifier": { "type": "string" },
          "entityUuid": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entityValue": { "type": "string" },
          "checksum": { "type": "string" },
          "additionalData": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "connection": {
            "$ref": "#/components/schemas/SwagMigrationConnection"
          }
        },
        "type": "object"
      },
      "SwagMigrationMediaFileJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "runId",
              "entity",
              "uri",
              "fileName",
              "fileSize",
              "mediaId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "entity": { "type": "string" },
              "uri": { "type": "string" },
              "fileName": { "type": "string" },
              "fileSize": { "type": "integer", "format": "int64" },
              "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "written": { "type": "boolean" },
              "processed": { "type": "boolean" },
              "processFailure": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "run": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-media-file/018a1d1ce2b07057857bf694452ca46b/run"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_migration_run"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2b07057857bf69445ae1b99"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationMediaFile": {
        "description": "Added since version: ",
        "required": [
          "runId",
          "entity",
          "uri",
          "fileName",
          "fileSize",
          "mediaId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "entity": { "type": "string" },
          "uri": { "type": "string" },
          "fileName": { "type": "string" },
          "fileSize": { "type": "integer", "format": "int64" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "written": { "type": "boolean" },
          "processed": { "type": "boolean" },
          "processFailure": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "run": { "$ref": "#/components/schemas/SwagMigrationRun" }
        },
        "type": "object"
      },
      "SwagMigrationRunJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["status", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "connectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "environmentInformation": { "type": "object" },
              "progress": { "type": "object" },
              "premapping": { "type": "object" },
              "userId": { "type": "string" },
              "accessToken": { "type": "string" },
              "status": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "connection": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-run/018a1d1ce2b07057857bf6944601d6ad/connection"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_migration_connection"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2b173739e1bd60751825c88"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "data": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-run/018a1d1ce2b07057857bf6944601d6ad/data"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_migration_data"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2b173739e1bd607523e18c8"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mediaFiles": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-run/018a1d1ce2b07057857bf6944601d6ad/mediaFiles"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_migration_media_file"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2b173739e1bd60752940287"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "logs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-migration-run/018a1d1ce2b07057857bf6944601d6ad/logs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_migration_logging"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2b173739e1bd6075342e3ab"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagMigrationRun": {
        "description": "Added since version: ",
        "required": ["status", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "connectionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "environmentInformation": { "type": "object" },
          "progress": { "type": "object" },
          "premapping": { "type": "object" },
          "userId": { "type": "string" },
          "accessToken": { "type": "string" },
          "status": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "connection": {
            "$ref": "#/components/schemas/SwagMigrationConnection"
          },
          "data": { "$ref": "#/components/schemas/SwagMigrationData" },
          "mediaFiles": {
            "$ref": "#/components/schemas/SwagMigrationMediaFile"
          },
          "logs": { "$ref": "#/components/schemas/SwagMigrationLogging" }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["salesChannelId", "apiKey", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "apiKey": { "type": "string" },
              "mediaDomain": { "type": "string" },
              "webhookSigningKey": { "type": "string" },
              "syncPrices": { "type": "boolean" },
              "replace": { "type": "integer", "format": "int64" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-paypal-pos-sales-channel/018a1d1ce2b173739e1bd60753b4b8f6/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c270809deed8ebcbeeb911"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-paypal-pos-sales-channel/018a1d1ce2b173739e1bd60753b4b8f6/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c270809deed8ebccbf0fe3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagPaypalPosSalesChannel": {
        "description": "Added since version: ",
        "required": ["salesChannelId", "apiKey", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "apiKey": { "type": "string" },
          "mediaDomain": { "type": "string" },
          "webhookSigningKey": { "type": "string" },
          "syncPrices": { "type": "boolean" },
          "replace": { "type": "integer", "format": "int64" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "productStream": { "$ref": "#/components/schemas/ProductStream" }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelInventory": {
        "description": "Added since version: ",
        "required": ["salesChannelId", "productId", "stock"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "stock": { "type": "integer", "format": "int64" },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelMedia": {
        "description": "Added since version: ",
        "required": ["salesChannelId", "mediaId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "lookupKey": { "type": "string" },
          "url": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelProduct": {
        "description": "Added since version: ",
        "required": ["salesChannelId", "productId", "checksum", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "checksum": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelRunJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "salesChannelId",
              "task",
              "status",
              "messageCount",
              "stepIndex",
              "steps",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "task": { "type": "string" },
              "status": { "type": "string" },
              "messageCount": { "type": "integer", "format": "int64" },
              "stepIndex": { "type": "integer", "format": "int64" },
              "steps": { "type": "object" },
              "finishedAt": { "type": "string", "format": "date-time" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "logs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-paypal-pos-sales-channel-run/018a1d1ce2c37149a1d3c5bba441169f/logs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_paypal_pos_sales_channel_run_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c37149a1d3c5bba4a3227f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagPaypalPosSalesChannelRun": {
        "description": "Added since version: ",
        "required": [
          "salesChannelId",
          "task",
          "status",
          "messageCount",
          "stepIndex",
          "steps",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "task": { "type": "string" },
          "status": { "type": "string" },
          "messageCount": { "type": "integer", "format": "int64" },
          "stepIndex": { "type": "integer", "format": "int64" },
          "steps": { "type": "object" },
          "finishedAt": { "type": "string", "format": "date-time" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "logs": {
            "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRunLog"
          }
        },
        "type": "object"
      },
      "SwagPaypalPosSalesChannelRunLogJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["runId", "level", "message", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "level": { "type": "integer", "format": "int64" },
              "message": { "type": "string" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "posSalesChannelRun": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-paypal-pos-sales-channel-run-log/018a1d1ce2c4715dbed59327cfa8845e/posSalesChannelRun"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "swag_paypal_pos_sales_channel_run"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c4715dbed59327cfe85577"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagPaypalPosSalesChannelRunLog": {
        "description": "Added since version: ",
        "required": ["runId", "level", "message", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "runId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "level": { "type": "integer", "format": "int64" },
          "message": { "type": "string" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "posSalesChannelRun": {
            "$ref": "#/components/schemas/SwagPaypalPosSalesChannelRun"
          }
        },
        "type": "object"
      },
      "SwagSequenceWebhookEventLog": {
        "description": "Added since version: ",
        "required": ["sequenceId", "webhookEventLogId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "sequenceId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "webhookEventLogId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "flowSequence": { "$ref": "#/components/schemas/FlowSequence" },
          "webhookEventLog": { "$ref": "#/components/schemas/WebhookEventLog" }
        },
        "type": "object"
      },
      "SwagSocialShoppingCustomerJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["customerId", "referralCode", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "referralCode": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-customer/018a1d1ce2c572ca949c76ee3a642fea/customer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "customer" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c572ca949c76ee3b30ae0b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-customer/018a1d1ce2c572ca949c76ee3a642fea/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c572ca949c76ee3c127b3e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagSocialShoppingCustomer": {
        "description": "Added since version: ",
        "required": ["customerId", "referralCode", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customerId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "referralCode": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "SwagSocialShoppingOrderJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["orderId", "referralCode", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "orderVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "referralCode": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-order/018a1d1ce2c572ca949c76ee3ce4634f/order"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "order" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c572ca949c76ee3d4e05e8"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-order/018a1d1ce2c572ca949c76ee3ce4634f/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c572ca949c76ee3e082677"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagSocialShoppingOrder": {
        "description": "Added since version: ",
        "required": ["orderId", "referralCode", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "orderVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "referralCode": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "order": { "$ref": "#/components/schemas/Order" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "SwagSocialShoppingProductErrorJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["productId", "salesChannelId", "errors", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "errors": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-product-error/018a1d1ce2c670afb52d193b669c4e9b/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c670afb52d193b678ecb7b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-product-error/018a1d1ce2c670afb52d193b669c4e9b/product"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "product" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c670afb52d193b687e0e7e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagSocialShoppingProductError": {
        "description": "Added since version: ",
        "required": ["productId", "salesChannelId", "errors", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "productVersionId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "errors": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "product": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "SwagSocialShoppingSalesChannelJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "salesChannelId",
              "salesChannelDomainId",
              "network",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelDomainId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productStreamId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "network": { "type": "string" },
              "configuration": { "type": "object" },
              "isValidating": { "type": "boolean" },
              "lastValidation": { "type": "string", "format": "date-time" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-sales-channel/018a1d1ce2c670afb52d193b68815b92/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c670afb52d193b68d23136"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-sales-channel/018a1d1ce2c670afb52d193b68815b92/productStream"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_stream"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c77069828fe2073d0c73ef"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomain": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-sales-channel/018a1d1ce2c670afb52d193b68815b92/salesChannelDomain"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel_domain"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c77069828fe2073df507be"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/swag-social-shopping-sales-channel/018a1d1ce2c670afb52d193b68815b92/currency"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "currency" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c77069828fe2073ea8c052"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SwagSocialShoppingSalesChannel": {
        "description": "Added since version: ",
        "required": [
          "salesChannelId",
          "salesChannelDomainId",
          "network",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "productStreamId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "network": { "type": "string" },
          "configuration": { "type": "object" },
          "isValidating": { "type": "boolean" },
          "lastValidation": { "type": "string", "format": "date-time" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "productStream": { "$ref": "#/components/schemas/ProductStream" },
          "salesChannelDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "currency": { "$ref": "#/components/schemas/Currency" }
        },
        "type": "object"
      },
      "SystemConfigJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["configurationKey", "configurationValue", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "configurationKey": { "type": "string" },
              "configurationValue": {
                "properties": { "_value": { "type": "object" } },
                "type": "object"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/system-config/018a1d1ce2c77069828fe2073f19e600/salesChannel"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "sales_channel"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2c77069828fe2073f5fb31b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SystemConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": ["configurationKey", "configurationValue", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "configurationKey": { "type": "string" },
          "configurationValue": {
            "properties": { "_value": { "type": "object" } },
            "type": "object"
          },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "TagJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb0b093c97"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb06709180"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "media" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb07306bf0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "category" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb082b4874"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/customers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb086054c6"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/orders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb08a470ec"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb09912510"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/newsletterRecipients"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "newsletter_recipient"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb0a1bd2bf"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/landingPages"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "landing_page"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb0a7c4c2e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c8709896e036bb0a872ac5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Tag": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "subscriptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/tag/018a1d1ce2c8709896e036bb05c45bc6/subscriptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "subscription" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2c8709896e036bb0b093c97"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "products": { "$ref": "#/components/schemas/Product" },
          "media": { "$ref": "#/components/schemas/Media" },
          "categories": { "$ref": "#/components/schemas/Category" },
          "customers": { "$ref": "#/components/schemas/Customer" },
          "orders": { "$ref": "#/components/schemas/Order" },
          "shippingMethods": { "$ref": "#/components/schemas/ShippingMethod" },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "landingPages": { "$ref": "#/components/schemas/LandingPage" },
          "rules": { "$ref": "#/components/schemas/Rule" }
        },
        "type": "object"
      },
      "TaxJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["taxRate", "name", "position", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxRate": { "type": "number", "format": "float" },
              "name": { "type": "string" },
              "position": {
                "description": "Added since version: 6.4.0.0.",
                "type": "integer",
                "format": "int64"
              },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "customizedProductsOptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/customizedProductsOptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c9716fbf4e4b37bc73858b"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customizedProductsOptionValues": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/customizedProductsOptionValues"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "swag_customized_products_template_option_value"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c9716fbf4e4b37bcebb9ff"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c9716fbf4e4b37bc044fbd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tax_rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c9716fbf4e4b37bc28535c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/shippingMethods"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2c9716fbf4e4b37bc299416"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Tax": {
        "description": "Added since version: 6.0.0.0",
        "required": ["taxRate", "name", "position", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxRate": { "type": "number", "format": "float" },
          "name": { "type": "string" },
          "position": {
            "description": "Added since version: 6.4.0.0.",
            "type": "integer",
            "format": "int64"
          },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "customizedProductsOptions": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/customizedProductsOptions"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_customized_products_template_option"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2c9716fbf4e4b37bc73858b"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "customizedProductsOptionValues": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/tax/018a1d1ce2c8709896e036bb0b358eb3/customizedProductsOptionValues"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "swag_customized_products_template_option_value"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2c9716fbf4e4b37bcebb9ff"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "products": { "$ref": "#/components/schemas/Product" },
          "rules": { "$ref": "#/components/schemas/TaxRule" },
          "shippingMethods": { "$ref": "#/components/schemas/ShippingMethod" }
        },
        "type": "object"
      },
      "TaxProviderJsonApi": {
        "description": "Added since version: 6.5.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["identifier", "priority", "createdAt", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "identifier": { "type": "string" },
              "active": { "type": "boolean" },
              "name": { "type": "string" },
              "priority": { "type": "integer", "format": "int64" },
              "processUrl": { "type": "string" },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-provider/018a1d1ce2c9716fbf4e4b37bd198784/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ca7244af1db74c736195bd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-provider/018a1d1ce2c9716fbf4e4b37bd198784/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2ca7244af1db74c7419c537"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "TaxProvider": {
        "description": "Added since version: 6.5.0.0",
        "required": ["identifier", "priority", "createdAt", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "identifier": { "type": "string" },
          "active": { "type": "boolean" },
          "name": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "processUrl": { "type": "string" },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "availabilityRule": { "$ref": "#/components/schemas/Rule" },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "TaxRuleJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "taxRuleTypeId",
              "countryId",
              "taxRate",
              "taxId",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxRuleTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "taxRate": { "type": "number", "format": "float" },
              "data": {
                "properties": {
                  "states": {
                    "type": "array",
                    "items": { "type": "object", "additionalProperties": false }
                  },
                  "zipCode": { "type": "string" },
                  "fromZipCode": { "type": "string" },
                  "toZipCode": { "type": "string" }
                },
                "type": "object"
              },
              "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "activeFrom": { "type": "string", "format": "date-time" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "type": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule/018a1d1ce2cb70bfad5346a8ac291a38/type"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax_rule_type"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2cc70249a2255e4a9fee56e"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule/018a1d1ce2cb70bfad5346a8ac291a38/country"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "country" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2cc70249a2255e4aafba9d6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule/018a1d1ce2cb70bfad5346a8ac291a38/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "tax" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2cc70249a2255e4abaf4af2"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "TaxRule": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "taxRuleTypeId",
          "countryId",
          "taxRate",
          "taxId",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxRuleTypeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "countryId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "taxRate": { "type": "number", "format": "float" },
          "data": {
            "properties": {
              "states": {
                "type": "array",
                "items": { "type": "object", "additionalProperties": false }
              },
              "zipCode": { "type": "string" },
              "fromZipCode": { "type": "string" },
              "toZipCode": { "type": "string" }
            },
            "type": "object"
          },
          "taxId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "activeFrom": { "type": "string", "format": "date-time" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "type": { "$ref": "#/components/schemas/TaxRuleType" },
          "country": { "$ref": "#/components/schemas/Country" },
          "tax": { "$ref": "#/components/schemas/Tax" }
        },
        "type": "object"
      },
      "TaxRuleTypeJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["technicalName", "position", "createdAt", "typeName"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "technicalName": { "type": "string", "readOnly": true },
              "position": { "type": "integer", "format": "int64" },
              "typeName": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "rules": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/tax-rule-type/018a1d1ce2cd7398b1f67c112d2d4bee/rules"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "tax_rule" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2ce73ce9d524df503632a09"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "TaxRuleType": {
        "description": "Added since version: 6.1.0.0",
        "required": ["technicalName", "position", "createdAt", "typeName"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string", "readOnly": true },
          "position": { "type": "integer", "format": "int64" },
          "typeName": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "rules": { "$ref": "#/components/schemas/TaxRule" }
        },
        "type": "object"
      },
      "ThemeJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "author", "active", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "technicalName": { "type": "string" },
              "name": { "type": "string" },
              "author": { "type": "string" },
              "description": { "type": "string" },
              "labels": { "type": "object" },
              "helpTexts": { "type": "object" },
              "customFields": { "type": "object" },
              "previewMediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentThemeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "themeJson": { "type": "object" },
              "baseConfig": { "type": "object" },
              "configValues": { "type": "object" },
              "active": { "type": "boolean" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/018a1d1ce2cf7257bc9e8001f742ca1a/salesChannels"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "sales_channel"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2cf7257bc9e8001f8297a34"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/018a1d1ce2cf7257bc9e8001f742ca1a/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "media" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2cf7257bc9e8001f8d68aa9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/018a1d1ce2cf7257bc9e8001f742ca1a/previewMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2cf7257bc9e8001f9b27845"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "dependentThemes": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/theme/018a1d1ce2cf7257bc9e8001f742ca1a/dependentThemes"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "theme" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2cf7257bc9e8001f9d66e59"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Theme": {
        "description": "Added since version: 6.0.0.0",
        "required": ["name", "author", "active", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "technicalName": { "type": "string" },
          "name": { "type": "string" },
          "author": { "type": "string" },
          "description": { "type": "string" },
          "labels": { "type": "object" },
          "helpTexts": { "type": "object" },
          "customFields": { "type": "object" },
          "previewMediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentThemeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "themeJson": { "type": "object" },
          "baseConfig": { "type": "object" },
          "configValues": { "type": "object" },
          "active": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "salesChannels": { "$ref": "#/components/schemas/SalesChannel" },
          "media": { "$ref": "#/components/schemas/Media" },
          "previewMedia": { "$ref": "#/components/schemas/Media" },
          "dependentThemes": { "$ref": "#/components/schemas/Theme" }
        },
        "type": "object"
      },
      "ThemeChild": {
        "description": "Added since version: 6.4.8.0",
        "required": ["parentId", "childId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "childId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "parentTheme": { "$ref": "#/components/schemas/Theme" },
          "childTheme": { "$ref": "#/components/schemas/Theme" }
        },
        "type": "object"
      },
      "ThemeMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": ["themeId", "mediaId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "themeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "mediaId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "theme": { "$ref": "#/components/schemas/Theme" },
          "media": { "$ref": "#/components/schemas/Media" }
        },
        "type": "object"
      },
      "ThemeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": ["salesChannelId", "themeId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "salesChannelId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "themeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "theme": { "$ref": "#/components/schemas/Theme" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" }
        },
        "type": "object"
      },
      "UnitJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["createdAt", "shortCode", "name"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "shortCode": { "type": "string" },
              "name": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": { "type": "object" },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/unit/018a1d1ce2d1722eb00cc545d08db858/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d1722eb00cc545d14dc9aa"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Unit": {
        "description": "Added since version: 6.0.0.0",
        "required": ["createdAt", "shortCode", "name"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "shortCode": { "type": "string" },
          "name": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": { "type": "object" },
          "products": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "UserJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "localeId",
              "username",
              "firstName",
              "lastName",
              "email",
              "timeZone",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "username": { "type": "string" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "title": { "type": "string" },
              "email": { "type": "string" },
              "active": { "type": "boolean" },
              "admin": { "type": "boolean" },
              "lastUpdatedPasswordAt": {
                "type": "string",
                "format": "date-time"
              },
              "timeZone": { "type": "string" },
              "customFields": { "type": "object" },
              "avatarId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "createdNotifications": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/createdNotifications"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "notification"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa2294b121"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderReturnsCreated": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/orderReturnsCreated"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa22b57962"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderReturnsUpdated": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/orderReturnsUpdated"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_return"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa2351533e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPageDrafts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/cmsPageDrafts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_page_draft"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d3732c9168994ede2fca3f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPageActivities": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/cmsPageActivities"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "cms_page_activity"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d3732c9168994edeaf9d0e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sbpUserData": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/sbpUserData"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "saas_sbp_user_data"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d3732c9168994edf198f84"
                          }
                        }
                      }
                    },
                    "type": "object",
                    "readOnly": true
                  },
                  "loginToken": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/loginToken"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "saas_user_login_token"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d3732c9168994edfa78245"
                            }
                          }
                        }
                      }
                    },
                    "type": "object",
                    "readOnly": true
                  },
                  "demoToken": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/demoToken"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "saas_storefront_demo_token"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d3732c9168994edfe1cb11"
                            }
                          }
                        }
                      }
                    },
                    "type": "object",
                    "readOnly": true
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "locale" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d27069a5f2acfa1ce6070b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "avatarMedia": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/avatarMedia"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "media" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d27069a5f2acfa1dab0bb0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "media" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa1dea5c7e"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "accessKeys": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/accessKeys"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user_access_key"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa1e1016dc"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configs": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/configs"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user_config"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa1e1a59d2"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineHistoryEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/stateMachineHistoryEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "state_machine_history"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa1ecb95de"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "importExportLogEntries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/importExportLogEntries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "import_export_log"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa1edd3663"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "aclRoles": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/aclRoles"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "acl_role" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa1f048036"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "recoveryUser": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/recoveryUser"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "user_recovery"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d27069a5f2acfa1f826cd6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdOrders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/createdOrders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa20277878"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedOrders": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/updatedOrders"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "order" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa20770f73"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "createdCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/createdCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa21400bc5"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "updatedCustomers": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/updatedCustomers"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "customer" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d27069a5f2acfa21d51075"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "User": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "localeId",
          "username",
          "firstName",
          "lastName",
          "email",
          "timeZone",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "localeId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "username": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "title": { "type": "string" },
          "email": { "type": "string" },
          "active": { "type": "boolean" },
          "admin": { "type": "boolean" },
          "lastUpdatedPasswordAt": { "type": "string", "format": "date-time" },
          "timeZone": { "type": "string" },
          "customFields": { "type": "object" },
          "avatarId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "createdNotifications": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/createdNotifications"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "notification" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d27069a5f2acfa2294b121"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "orderReturnsCreated": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/orderReturnsCreated"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "order_return" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d27069a5f2acfa22b57962"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "orderReturnsUpdated": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/orderReturnsUpdated"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "example": "order_return" },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d27069a5f2acfa2351533e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "cmsPageDrafts": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/cmsPageDrafts"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "cms_page_draft"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d3732c9168994ede2fca3f"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "cmsPageActivities": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/cmsPageActivities"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "cms_page_activity"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d3732c9168994edeaf9d0e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "sbpUserData": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/sbpUserData"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "saas_sbp_user_data"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "018a1d1ce2d3732c9168994edf198f84"
                      }
                    }
                  }
                },
                "type": "object",
                "readOnly": true
              },
              "loginToken": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/loginToken"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "saas_user_login_token"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d3732c9168994edfa78245"
                        }
                      }
                    }
                  }
                },
                "type": "object",
                "readOnly": true
              },
              "demoToken": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/user/018a1d1ce2d27069a5f2acfa1c9dcd70/demoToken"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "saas_storefront_demo_token"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d3732c9168994edfe1cb11"
                        }
                      }
                    }
                  }
                },
                "type": "object",
                "readOnly": true
              }
            },
            "type": "object"
          },
          "locale": { "$ref": "#/components/schemas/Locale" },
          "avatarMedia": { "$ref": "#/components/schemas/Media" },
          "media": { "$ref": "#/components/schemas/Media" },
          "accessKeys": { "$ref": "#/components/schemas/UserAccessKey" },
          "configs": { "$ref": "#/components/schemas/UserConfig" },
          "stateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "importExportLogEntries": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "aclRoles": { "$ref": "#/components/schemas/AclRole" },
          "recoveryUser": { "$ref": "#/components/schemas/UserRecovery" },
          "createdOrders": { "$ref": "#/components/schemas/Order" },
          "updatedOrders": { "$ref": "#/components/schemas/Order" },
          "createdCustomers": { "$ref": "#/components/schemas/Customer" },
          "updatedCustomers": { "$ref": "#/components/schemas/Customer" }
        },
        "type": "object"
      },
      "UserAccessKeyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["userId", "accessKey", "secretAccessKey", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "accessKey": { "type": "string" },
              "secretAccessKey": { "type": "string" },
              "lastUsageAt": { "type": "string", "format": "date-time" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user-access-key/018a1d1ce2d3732c9168994edfe54b78/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d3732c9168994edffa24f1"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "UserAccessKey": {
        "description": "Added since version: 6.0.0.0",
        "required": ["userId", "accessKey", "secretAccessKey", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "accessKey": { "type": "string" },
          "secretAccessKey": { "type": "string" },
          "lastUsageAt": { "type": "string", "format": "date-time" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "UserConfigJsonApi": {
        "description": "Added since version: 6.3.5.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["userId", "key", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "key": { "type": "string" },
              "value": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user-config/018a1d1ce2d4729a8e2f10fc7fd625a2/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d4729a8e2f10fc803d2ec6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "UserConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": ["userId", "key", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "key": { "type": "string" },
          "value": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "UserRecoveryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["hash", "userId", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "hash": { "type": "string" },
              "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/user-recovery/018a1d1ce2d57240ac637f4c95166e52/user"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "user" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d57240ac637f4c95e1aa8c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "UserRecovery": {
        "description": "Added since version: 6.0.0.0",
        "required": ["hash", "userId", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "hash": { "type": "string" },
          "userId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "type": "object"
      },
      "WarehouseJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "productWarehouses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/warehouse/018a1d1ce2d57240ac637f4c960050ab/productWarehouses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d57240ac637f4c96c4dffe"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "groups": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/warehouse/018a1d1ce2d57240ac637f4c960050ab/groups"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "warehouse_group"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d57240ac637f4c97ad6455"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "orderProducts": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/warehouse/018a1d1ce2d57240ac637f4c960050ab/orderProducts"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "order_product_warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d57240ac637f4c98826fc0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Warehouse": {
        "description": "Added since version: ",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "productWarehouses": {
            "$ref": "#/components/schemas/ProductWarehouse"
          },
          "groups": { "$ref": "#/components/schemas/WarehouseGroup" },
          "orderProducts": {
            "$ref": "#/components/schemas/OrderProductWarehouse"
          }
        },
        "type": "object"
      },
      "WarehouseGroupJsonApi": {
        "description": "Added since version: ",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "priority": { "type": "integer", "format": "int64" },
              "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "rule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/warehouse-group/018a1d1ce2d673af862e55c9392acb26/rule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "rule" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d673af862e55c939813fb6"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "warehouses": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/warehouse-group/018a1d1ce2d673af862e55c9392acb26/warehouses"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "warehouse"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d673af862e55c939f2d990"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/warehouse-group/018a1d1ce2d673af862e55c9392acb26/products"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "example": "product" },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d673af862e55c93a53cfb0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "WarehouseGroup": {
        "description": "Added since version: ",
        "required": ["name", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "priority": { "type": "integer", "format": "int64" },
          "ruleId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "rule": { "$ref": "#/components/schemas/Rule" },
          "warehouses": { "$ref": "#/components/schemas/Warehouse" },
          "products": { "$ref": "#/components/schemas/Product" }
        },
        "type": "object"
      },
      "WarehouseGroupWarehouse": {
        "description": "Added since version: ",
        "required": ["warehouseId", "warehouseGroupId"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "warehouseId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "warehouseGroupId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "priority": { "type": "integer", "format": "int64" },
          "warehouseGroup": { "$ref": "#/components/schemas/WarehouseGroup" },
          "warehouse": { "$ref": "#/components/schemas/Warehouse" }
        },
        "type": "object"
      },
      "WebhookJsonApi": {
        "description": "Added since version: 6.3.1.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": ["name", "eventName", "url", "errorCount", "createdAt"],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "name": { "type": "string" },
              "eventName": { "type": "string" },
              "url": { "type": "string" },
              "errorCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "active": { "type": "boolean" },
              "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/webhook/018a1d1ce2d77049a6bf2dca9f6b5124/app"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string", "example": "app" },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "018a1d1ce2d77049a6bf2dcaa03cd8ad"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Webhook": {
        "description": "Added since version: 6.3.1.0",
        "required": ["name", "eventName", "url", "errorCount", "createdAt"],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "name": { "type": "string" },
          "eventName": { "type": "string" },
          "url": { "type": "string" },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "active": { "type": "boolean" },
          "appId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "app": { "$ref": "#/components/schemas/App" }
        },
        "type": "object"
      },
      "WebhookEventLogJsonApi": {
        "description": "Added since version: 6.4.1.0",
        "allOf": [
          { "$ref": "#/components/schemas/resource" },
          {
            "required": [
              "webhookName",
              "eventName",
              "deliveryStatus",
              "url",
              "createdAt"
            ],
            "properties": {
              "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
              "appName": { "type": "string" },
              "webhookName": { "type": "string" },
              "eventName": { "type": "string" },
              "deliveryStatus": { "type": "string" },
              "timestamp": { "type": "integer", "format": "int64" },
              "processingTime": { "type": "integer", "format": "int64" },
              "appVersion": { "type": "string" },
              "requestContent": { "type": "object" },
              "responseContent": { "type": "object" },
              "responseStatusCode": { "type": "integer", "format": "int64" },
              "responseReasonPhrase": { "type": "string" },
              "url": { "type": "string" },
              "customFields": { "type": "object" },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "extensions": {
                "properties": {
                  "flowSequences": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/webhook-event-log/018a1d1ce2d77049a6bf2dcaa1081607/flowSequences"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "flow_sequence"
                            },
                            "id": {
                              "type": "string",
                              "example": "018a1d1ce2d77049a6bf2dcaa1dc339d"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "WebhookEventLog": {
        "description": "Added since version: 6.4.1.0",
        "required": [
          "webhookName",
          "eventName",
          "deliveryStatus",
          "url",
          "createdAt"
        ],
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
          "appName": { "type": "string" },
          "webhookName": { "type": "string" },
          "eventName": { "type": "string" },
          "deliveryStatus": { "type": "string" },
          "timestamp": { "type": "integer", "format": "int64" },
          "processingTime": { "type": "integer", "format": "int64" },
          "appVersion": { "type": "string" },
          "requestContent": { "type": "object" },
          "responseContent": { "type": "object" },
          "responseStatusCode": { "type": "integer", "format": "int64" },
          "responseReasonPhrase": { "type": "string" },
          "url": { "type": "string" },
          "customFields": { "type": "object" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "flowSequences": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/webhook-event-log/018a1d1ce2d77049a6bf2dcaa1081607/flowSequences"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "flow_sequence"
                        },
                        "id": {
                          "type": "string",
                          "example": "018a1d1ce2d77049a6bf2dcaa1dc339d"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "businessEventsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": { "type": "string", "description": "Name of the event" },
            "class": {
              "type": "string",
              "description": "Class name of the event"
            },
            "data": {
              "type": "object",
              "description": "Available data of event"
            },
            "aware": {
              "type": "array",
              "description": "Flow builder will base on awareness to show actions",
              "items": { "type": "string" }
            },
            "extensions": {
              "type": "array",
              "description": "Extensions data of event",
              "items": { "type": "string" }
            }
          }
        }
      },
      "OAuthScopes": {
        "description": "OAuth scopes that should be requested.",
        "type": "string",
        "enum": [
          "write",
          "user-verified",
          "admin",
          "write user-verified",
          "write admin",
          "user-verified admin",
          "write user-verified admin"
        ]
      },
      "OAuthGrant": {
        "type": "object",
        "properties": {
          "grant_type": {
            "description": "OAuth grant type that should be requested. See [OAuth 2.0 grant](https://oauth2.thephpleague.com/authorization-server/which-grant/) for more information.",
            "type": "string"
          }
        },
        "required": ["grant_type"],
        "discriminator": {
          "propertyName": "grant_type",
          "mapping": {
            "client_credentials": "#/components/schemas/OAuthClientCredentialsGrant",
            "password": "#/components/schemas/OAuthPasswordGrant",
            "refresh_token": "#/components/schemas/OAuthRefreshTokenGrant"
          }
        }
      },
      "OAuthClientCredentialsGrant": {
        "allOf": [
          { "$ref": "#/components/schemas/OAuthGrant" },
          {
            "type": "object",
            "properties": {
              "client_id": {
                "description": "OAuth client id.",
                "type": "string"
              },
              "client_secret": {
                "description": "Password of the client that should be authenticated.",
                "type": "string"
              }
            },
            "required": ["client_id", "client_secret"]
          }
        ]
      },
      "OAuthPasswordGrant": {
        "allOf": [
          { "$ref": "#/components/schemas/OAuthGrant" },
          {
            "type": "object",
            "properties": {
              "client_id": {
                "description": "OAuth client id.",
                "type": "string",
                "enum": ["administration"]
              },
              "scopes": { "$ref": "#/components/schemas/OAuthScopes" },
              "username": {
                "description": "Username of the user that should be authenticated.",
                "type": "string"
              },
              "password": {
                "description": "Password of the user that should be authenticated.",
                "type": "string"
              }
            },
            "required": ["client_id", "scopes", "username", "password"]
          }
        ]
      },
      "OAuthRefreshTokenGrant": {
        "allOf": [
          { "$ref": "#/components/schemas/OAuthGrant" },
          {
            "type": "object",
            "properties": {
              "client_id": {
                "description": "OAuth client id.",
                "type": "string",
                "enum": ["administration"]
              },
              "scopes": { "$ref": "#/components/schemas/OAuthScopes" },
              "refresh_token": {
                "description": "The refresh token that should be used to refresh the access token.",
                "type": "string"
              }
            },
            "required": ["client_id", "scopes", "refresh_token"]
          }
        ]
      },
      "flowBulderActionsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the flow action"
            },
            "requirements": {
              "type": "array",
              "description": "When requirement fit with aware from `events.json` actions will be shown",
              "items": { "type": "string" }
            },
            "extensions": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Extensions data of event"
            }
          }
        }
      },
      "infoConfigResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "The Shopware version."
          },
          "versionRevision": {
            "type": "string",
            "description": "The Shopware version revision."
          },
          "adminWorker": {
            "type": "object",
            "description": "Information about the admin worker.",
            "properties": {
              "enableAdminWorker": {
                "type": "boolean",
                "description": "State of the admin worker."
              },
              "transports": {
                "type": "array",
                "description": "Configured transports.",
                "items": { "type": "string" }
              }
            }
          },
          "bundles": {
            "type": "object",
            "description": "Asset files of active extensions",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "css": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Url to the css file."
                  }
                },
                "js": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Url to the js file."
                  }
                }
              }
            }
          },
          "settings": {
            "type": "object",
            "properties": {
              "enableUrlFeature": {
                "type": "boolean",
                "description": "State of the `urlFeature` setting."
              }
            }
          }
        }
      },
      "Criteria": {
        "type": "object",
        "description": "Search parameters. For more information, see our documentation on [Search Queries](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#structure)",
        "properties": {
          "page": { "description": "Search result page", "type": "integer" },
          "limit": {
            "description": "Number of items per result page",
            "type": "integer"
          },
          "filter": {
            "type": "array",
            "description": "List of filters to restrict the search result. For more information, see [Search Queries > Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#filter)",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "field": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["type", "field", "value"]
            }
          },
          "sort": {
            "type": "array",
            "description": "Sorting in the search result.",
            "items": {
              "type": "object",
              "properties": {
                "field": { "type": "string" },
                "order": { "type": "string" },
                "naturalSorting": { "type": "boolean" }
              },
              "required": ["field"]
            }
          },
          "post-filter": {
            "type": "array",
            "description": "Filters that applied without affecting aggregations. For more information, see [Search Queries > Post Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#post-filter)",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "field": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["type", "field", "value"]
            }
          },
          "associations": {
            "type": "object",
            "description": "Used to fetch associations which are not fetched by default."
          },
          "aggregations": {
            "type": "array",
            "description": "Used to perform aggregations on the search result. For more information, see [Search Queries > Aggregations](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#aggregations)",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Give your aggregation an identifier, so you can find it easier",
                  "type": "string"
                },
                "type": {
                  "description": "The type of aggregation",
                  "type": "string"
                },
                "field": {
                  "description": "The field you want to aggregate over.",
                  "type": "string"
                }
              },
              "required": ["name", "type", "field"]
            }
          },
          "grouping": {
            "type": "array",
            "description": "Perform groupings over certain fields",
            "items": { "type": "string", "description": "Name of a field" }
          },
          "fields": {
            "type": "array",
            "description": "Fields which should be returned in the search result.",
            "items": { "type": "string", "description": "Name of a field" }
          },
          "total-count-mode": {
            "description": "Whether the total for the total number of hits should be determined for the search query. none = disabled total count, exact = calculate exact total amount (slow), next-pages = calculate only for next page (fast)",
            "type": "string",
            "default": "none",
            "enum": ["none", "exact", "next-pages"]
          }
        }
      },
      "CustomPricingResponse": {
        "type": "object",
        "required": ["success", "data"],
        "properties": {
          "success": { "type": "boolean" },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["entities", "errors"],
                    "properties": {
                      "entities": {
                        "type": "array",
                        "maxItems": 1,
                        "items": {
                          "type": "string",
                          "pattern": "^[0-9a-f]{32}$"
                        }
                      },
                      "errors": {
                        "type": "array",
                        "description": "A detailed error list addressing specific points in which sync payload does not meet system expectations (data types, structure etc.)",
                        "items": { "type": "string" }
                      }
                    }
                  }
                },
                "extensions": { "type": "array", "items": { "type": "object" } }
              }
            }
          }
        }
      },
      "CustomPricingUpsertOperation": {
        "type": "object",
        "required": ["action", "payload"],
        "properties": {
          "action": {
            "description": "A specific verb defining what operation should be actioned for a specific data record",
            "type": "string",
            "enum": ["upsert"]
          },
          "payload": {
            "description": "Contains a list of changesets for an entity. If the action type is `delete`,\n    a list of identifiers can be provided.",
            "type": "array",
            "items": {
              "type": "object",
              "required": ["productId", "prices"],
              "description": "A definition almost symmetric with Sync API payload",
              "properties": {
                "id": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "productVersionId": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "productId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "customerId": {
                  "type": "string",
                  "description": "This parameter should be specified, or 'customerGroupId', not both",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "customerGroupId": {
                  "type": "string",
                  "description": "This parameter should be specified, or 'customerId', not both",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "price": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CustomPricingPrice" }
                }
              }
            }
          }
        }
      },
      "CustomPricingDeleteOperation": {
        "type": "object",
        "required": ["action", "payload"],
        "properties": {
          "action": {
            "description": "A specific verb defining what operation should be actioned for a specific data record",
            "type": "string",
            "enum": ["delete"]
          },
          "payload": {
            "description": "Contains a list of changesets for an entity. If the action type is `delete`,\n    a list of identifiers can be provided.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "title": "productIds",
                  "type": "array",
                  "description": "An array of product entity UUIDs",
                  "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                },
                {
                  "title": "customerIds",
                  "type": "array",
                  "description": "An array of customer entity UUIDs",
                  "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                },
                {
                  "title": "customerGroupIds",
                  "type": "array",
                  "description": "An array of customerGroup entity UUIDs",
                  "items": { "type": "string", "pattern": "^[0-9a-f]{32}$" }
                }
              ]
            }
          }
        }
      },
      "CustomPricingPrice": {
        "type": "object",
        "description": "An extended schema for the Custom Price 'price' column (as opposed to ProductPrice 'price' column)",
        "required": ["quantityStart", "price"],
        "properties": {
          "quantityStart": { "type": "integer", "format": "int64" },
          "quantityEnd": { "type": "integer", "format": "int64", "minimum": 1 },
          "price": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "This field should house all the normal facets of the `product_price`.`price` column",
              "required": ["currencyId", "gross", "net", "linked"],
              "properties": {
                "currencyId": { "type": "string", "pattern": "^[0-9a-f]{32}$" },
                "gross": { "type": "number", "minimum": 0 },
                "net": { "type": "number", "minimum": 0 },
                "linked": { "type": "boolean" },
                "listPrice": {
                  "type": "object",
                  "properties": {
                    "gross": { "type": "number", "minimum": 0 },
                    "net": { "type": "number", "minimum": 0 },
                    "linked": { "type": "boolean" }
                  }
                },
                "regulationPrice": {
                  "type": "object",
                  "properties": {
                    "gross": { "type": "number", "minimum": 0 },
                    "net": { "type": "number", "minimum": 0 },
                    "linked": { "type": "boolean" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "204": { "description": "No Content" },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/vnd.api+json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          },
          "application/json": {
            "schema": { "$ref": "#/components/schemas/failure" },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oAuth": {
        "type": "oauth2",
        "description": "Authentication API",
        "flows": {
          "password": {
            "tokenUrl": "https://demo-frontends.shopware.store/api/oauth/token",
            "scopes": { "write": "Full write access" }
          },
          "clientCredentials": {
            "tokenUrl": "https://demo-frontends.shopware.store/api/oauth/token",
            "scopes": { "write": "Full write access" }
          }
        }
      }
    }
  },
  "security": [{ "oAuth": ["write"] }],
  "tags": [
    {
      "name": "Experimental",
      "description": "Experimental API, not part of our backwards compatibility promise, thus this API can introduce breaking changes at any time.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/shopware/platform/blob/trunk/adr/2023-05-10-experimental-features.md"
      }
    },
    { "name": "App", "description": "The endpoint for operations on App" },
    {
      "name": "App Action Button",
      "description": "The endpoint for operations on App Action Button"
    },
    {
      "name": "App Administration Snippet",
      "description": "The endpoint for operations on App Administration Snippet"
    },
    {
      "name": "App Cms Block",
      "description": "The endpoint for operations on App Cms Block"
    },
    {
      "name": "App Flow Action",
      "description": "The endpoint for operations on App Flow Action"
    },
    {
      "name": "App Flow Event",
      "description": "The endpoint for operations on App Flow Event"
    },
    {
      "name": "App Payment Method",
      "description": "The endpoint for operations on App Payment Method"
    },
    {
      "name": "App Script Condition",
      "description": "The endpoint for operations on App Script Condition"
    },
    {
      "name": "App Template",
      "description": "The endpoint for operations on App Template"
    },
    {
      "name": "Category",
      "description": "The endpoint for operations on Category"
    },
    {
      "name": "Cms Block",
      "description": "The endpoint for operations on Cms Block"
    },
    {
      "name": "Cms Page",
      "description": "The endpoint for operations on Cms Page"
    },
    {
      "name": "Cms Page Activity",
      "description": "The endpoint for operations on Cms Page Activity"
    },
    {
      "name": "Cms Page Draft",
      "description": "The endpoint for operations on Cms Page Draft"
    },
    {
      "name": "Cms Section",
      "description": "The endpoint for operations on Cms Section"
    },
    {
      "name": "Cms Slot",
      "description": "The endpoint for operations on Cms Slot"
    },
    {
      "name": "Country",
      "description": "The endpoint for operations on Country"
    },
    {
      "name": "Country State",
      "description": "The endpoint for operations on Country State"
    },
    {
      "name": "Currency",
      "description": "The endpoint for operations on Currency"
    },
    {
      "name": "Currency Country Rounding",
      "description": "The endpoint for operations on Currency Country Rounding"
    },
    {
      "name": "Custom Entity",
      "description": "The endpoint for operations on Custom Entity"
    },
    {
      "name": "Custom Field",
      "description": "The endpoint for operations on Custom Field"
    },
    {
      "name": "Custom Field Set",
      "description": "The endpoint for operations on Custom Field Set"
    },
    {
      "name": "Custom Field Set Relation",
      "description": "The endpoint for operations on Custom Field Set Relation"
    },
    {
      "name": "Custom Price",
      "description": "The endpoint for operations on Custom Price"
    },
    {
      "name": "Customer",
      "description": "The endpoint for operations on Customer"
    },
    {
      "name": "Customer Address",
      "description": "The endpoint for operations on Customer Address"
    },
    {
      "name": "Customer Group",
      "description": "The endpoint for operations on Customer Group"
    },
    {
      "name": "Customer Recovery",
      "description": "The endpoint for operations on Customer Recovery"
    },
    {
      "name": "Customer Specific Features",
      "description": "The endpoint for operations on Customer Specific Features"
    },
    {
      "name": "Customer Wishlist",
      "description": "The endpoint for operations on Customer Wishlist"
    },
    {
      "name": "Customer Wishlist Product",
      "description": "The endpoint for operations on Customer Wishlist Product"
    },
    {
      "name": "Delivery Time",
      "description": "The endpoint for operations on Delivery Time"
    },
    {
      "name": "Document",
      "description": "The endpoint for operations on Document"
    },
    {
      "name": "Document Base Config",
      "description": "The endpoint for operations on Document Base Config"
    },
    {
      "name": "Document Base Config Sales Channel",
      "description": "The endpoint for operations on Document Base Config Sales Channel"
    },
    {
      "name": "Document Type",
      "description": "The endpoint for operations on Document Type"
    },
    { "name": "Flow", "description": "The endpoint for operations on Flow" },
    {
      "name": "Flow Sequence",
      "description": "The endpoint for operations on Flow Sequence"
    },
    {
      "name": "Flow Template",
      "description": "The endpoint for operations on Flow Template"
    },
    {
      "name": "Import Export File",
      "description": "The endpoint for operations on Import Export File"
    },
    {
      "name": "Import Export Log",
      "description": "The endpoint for operations on Import Export Log"
    },
    {
      "name": "Import Export Profile",
      "description": "The endpoint for operations on Import Export Profile"
    },
    {
      "name": "Integration",
      "description": "The endpoint for operations on Integration"
    },
    {
      "name": "Landing Page",
      "description": "The endpoint for operations on Landing Page"
    },
    {
      "name": "Language",
      "description": "The endpoint for operations on Language"
    },
    {
      "name": "Locale",
      "description": "The endpoint for operations on Locale"
    },
    {
      "name": "Log Entry",
      "description": "The endpoint for operations on Log Entry"
    },
    {
      "name": "Mail Header Footer",
      "description": "The endpoint for operations on Mail Header Footer"
    },
    {
      "name": "Mail Template",
      "description": "The endpoint for operations on Mail Template"
    },
    {
      "name": "Mail Template Type",
      "description": "The endpoint for operations on Mail Template Type"
    },
    {
      "name": "Main Category",
      "description": "The endpoint for operations on Main Category"
    },
    { "name": "Media", "description": "The endpoint for operations on Media" },
    {
      "name": "Media Ai Tag",
      "description": "The endpoint for operations on Media Ai Tag"
    },
    {
      "name": "Media Default Folder",
      "description": "The endpoint for operations on Media Default Folder"
    },
    {
      "name": "Media Folder",
      "description": "The endpoint for operations on Media Folder"
    },
    {
      "name": "Media Folder Configuration",
      "description": "The endpoint for operations on Media Folder Configuration"
    },
    {
      "name": "Media Thumbnail",
      "description": "The endpoint for operations on Media Thumbnail"
    },
    {
      "name": "Media Thumbnail Size",
      "description": "The endpoint for operations on Media Thumbnail Size"
    },
    {
      "name": "Newsletter Recipient",
      "description": "The endpoint for operations on Newsletter Recipient"
    },
    {
      "name": "Notification",
      "description": "The endpoint for operations on Notification"
    },
    {
      "name": "Number Range",
      "description": "The endpoint for operations on Number Range"
    },
    {
      "name": "Number Range Sales Channel",
      "description": "The endpoint for operations on Number Range Sales Channel"
    },
    {
      "name": "Number Range State",
      "description": "The endpoint for operations on Number Range State"
    },
    {
      "name": "Number Range Type",
      "description": "The endpoint for operations on Number Range Type"
    },
    { "name": "Order", "description": "The endpoint for operations on Order" },
    {
      "name": "Order Address",
      "description": "The endpoint for operations on Order Address"
    },
    {
      "name": "Order Customer",
      "description": "The endpoint for operations on Order Customer"
    },
    {
      "name": "Order Delivery",
      "description": "The endpoint for operations on Order Delivery"
    },
    {
      "name": "Order Delivery Position",
      "description": "The endpoint for operations on Order Delivery Position"
    },
    {
      "name": "Order Line Item",
      "description": "The endpoint for operations on Order Line Item"
    },
    {
      "name": "Order Line Item Download",
      "description": "The endpoint for operations on Order Line Item Download"
    },
    {
      "name": "Order Product Warehouse",
      "description": "The endpoint for operations on Order Product Warehouse"
    },
    {
      "name": "Order Return",
      "description": "The endpoint for operations on Order Return"
    },
    {
      "name": "Order Return Line Item",
      "description": "The endpoint for operations on Order Return Line Item"
    },
    {
      "name": "Order Return Line Item Reason",
      "description": "The endpoint for operations on Order Return Line Item Reason"
    },
    {
      "name": "Order Transaction",
      "description": "The endpoint for operations on Order Transaction"
    },
    {
      "name": "Order Transaction Capture",
      "description": "The endpoint for operations on Order Transaction Capture"
    },
    {
      "name": "Order Transaction Capture Refund",
      "description": "The endpoint for operations on Order Transaction Capture Refund"
    },
    {
      "name": "Order Transaction Capture Refund Position",
      "description": "The endpoint for operations on Order Transaction Capture Refund Position"
    },
    {
      "name": "Order Warehouse Group",
      "description": "The endpoint for operations on Order Warehouse Group"
    },
    {
      "name": "Payment Method",
      "description": "The endpoint for operations on Payment Method"
    },
    {
      "name": "Plugin",
      "description": "The endpoint for operations on Plugin"
    },
    {
      "name": "Product",
      "description": "The endpoint for operations on Product"
    },
    {
      "name": "Product Configurator Setting",
      "description": "The endpoint for operations on Product Configurator Setting"
    },
    {
      "name": "Product Cross Selling",
      "description": "The endpoint for operations on Product Cross Selling"
    },
    {
      "name": "Product Cross Selling Assigned Products",
      "description": "The endpoint for operations on Product Cross Selling Assigned Products"
    },
    {
      "name": "Product Download",
      "description": "The endpoint for operations on Product Download"
    },
    {
      "name": "Product Export",
      "description": "The endpoint for operations on Product Export"
    },
    {
      "name": "Product Feature Set",
      "description": "The endpoint for operations on Product Feature Set"
    },
    {
      "name": "Product Keyword Dictionary",
      "description": "The endpoint for operations on Product Keyword Dictionary"
    },
    {
      "name": "Product Manufacturer",
      "description": "The endpoint for operations on Product Manufacturer"
    },
    {
      "name": "Product Media",
      "description": "The endpoint for operations on Product Media"
    },
    {
      "name": "Product Price",
      "description": "The endpoint for operations on Product Price"
    },
    {
      "name": "Product Review",
      "description": "The endpoint for operations on Product Review"
    },
    {
      "name": "Product Review Summary",
      "description": "The endpoint for operations on Product Review Summary"
    },
    {
      "name": "Product Search Config",
      "description": "The endpoint for operations on Product Search Config"
    },
    {
      "name": "Product Search Config Field",
      "description": "The endpoint for operations on Product Search Config Field"
    },
    {
      "name": "Product Search Keyword",
      "description": "The endpoint for operations on Product Search Keyword"
    },
    {
      "name": "Product Sorting",
      "description": "The endpoint for operations on Product Sorting"
    },
    {
      "name": "Product Stream",
      "description": "The endpoint for operations on Product Stream"
    },
    {
      "name": "Product Stream Filter",
      "description": "The endpoint for operations on Product Stream Filter"
    },
    {
      "name": "Product Visibility",
      "description": "The endpoint for operations on Product Visibility"
    },
    {
      "name": "Product Warehouse",
      "description": "The endpoint for operations on Product Warehouse"
    },
    {
      "name": "Promotion",
      "description": "The endpoint for operations on Promotion"
    },
    {
      "name": "Promotion Discount",
      "description": "The endpoint for operations on Promotion Discount"
    },
    {
      "name": "Promotion Discount Prices",
      "description": "The endpoint for operations on Promotion Discount Prices"
    },
    {
      "name": "Promotion Individual Code",
      "description": "The endpoint for operations on Promotion Individual Code"
    },
    {
      "name": "Promotion Sales Channel",
      "description": "The endpoint for operations on Promotion Sales Channel"
    },
    {
      "name": "Promotion Setgroup",
      "description": "The endpoint for operations on Promotion Setgroup"
    },
    {
      "name": "Property Group",
      "description": "The endpoint for operations on Property Group"
    },
    {
      "name": "Property Group Option",
      "description": "The endpoint for operations on Property Group Option"
    },
    { "name": "Rule", "description": "The endpoint for operations on Rule" },
    {
      "name": "Rule Condition",
      "description": "The endpoint for operations on Rule Condition"
    },
    {
      "name": "Saas App Storefront Config",
      "description": "The endpoint for operations on Saas App Storefront Config"
    },
    {
      "name": "Saas Sbp User Data",
      "description": "The endpoint for operations on Saas Sbp User Data"
    },
    {
      "name": "Saas Storefront Demo Token",
      "description": "The endpoint for operations on Saas Storefront Demo Token"
    },
    {
      "name": "Saas User Login Token",
      "description": "The endpoint for operations on Saas User Login Token"
    },
    {
      "name": "Sales Channel",
      "description": "The endpoint for operations on Sales Channel"
    },
    {
      "name": "Sales Channel Analytics",
      "description": "The endpoint for operations on Sales Channel Analytics"
    },
    {
      "name": "Sales Channel Domain",
      "description": "The endpoint for operations on Sales Channel Domain"
    },
    {
      "name": "Sales Channel Type",
      "description": "The endpoint for operations on Sales Channel Type"
    },
    {
      "name": "Salutation",
      "description": "The endpoint for operations on Salutation"
    },
    {
      "name": "Scheduled Task",
      "description": "The endpoint for operations on Scheduled Task"
    },
    {
      "name": "Script",
      "description": "The endpoint for operations on Script"
    },
    {
      "name": "Seo Url",
      "description": "The endpoint for operations on Seo Url"
    },
    {
      "name": "Seo Url Template",
      "description": "The endpoint for operations on Seo Url Template"
    },
    {
      "name": "Shipping Method",
      "description": "The endpoint for operations on Shipping Method"
    },
    {
      "name": "Shipping Method Price",
      "description": "The endpoint for operations on Shipping Method Price"
    },
    {
      "name": "Snippet",
      "description": "The endpoint for operations on Snippet"
    },
    {
      "name": "Snippet Set",
      "description": "The endpoint for operations on Snippet Set"
    },
    {
      "name": "State Machine",
      "description": "The endpoint for operations on State Machine"
    },
    {
      "name": "State Machine History",
      "description": "The endpoint for operations on State Machine History"
    },
    {
      "name": "State Machine State",
      "description": "The endpoint for operations on State Machine State"
    },
    {
      "name": "State Machine Transition",
      "description": "The endpoint for operations on State Machine Transition"
    },
    {
      "name": "Subscription",
      "description": "The endpoint for operations on Subscription"
    },
    {
      "name": "Subscription Address",
      "description": "The endpoint for operations on Subscription Address"
    },
    {
      "name": "Subscription Customer",
      "description": "The endpoint for operations on Subscription Customer"
    },
    {
      "name": "Subscription Interval",
      "description": "The endpoint for operations on Subscription Interval"
    },
    {
      "name": "Subscription Plan",
      "description": "The endpoint for operations on Subscription Plan"
    },
    {
      "name": "Swag Cms Extensions Block Rule",
      "description": "The endpoint for operations on Swag Cms Extensions Block Rule"
    },
    {
      "name": "Swag Cms Extensions Form",
      "description": "The endpoint for operations on Swag Cms Extensions Form"
    },
    {
      "name": "Swag Cms Extensions Form Group",
      "description": "The endpoint for operations on Swag Cms Extensions Form Group"
    },
    {
      "name": "Swag Cms Extensions Form Group Field",
      "description": "The endpoint for operations on Swag Cms Extensions Form Group Field"
    },
    {
      "name": "Swag Cms Extensions Quickview",
      "description": "The endpoint for operations on Swag Cms Extensions Quickview"
    },
    {
      "name": "Swag Cms Extensions Scroll Navigation",
      "description": "The endpoint for operations on Swag Cms Extensions Scroll Navigation"
    },
    {
      "name": "Swag Cms Extensions Scroll Navigation Page Settings",
      "description": "The endpoint for operations on Swag Cms Extensions Scroll Navigation Page Settings"
    },
    {
      "name": "Swag Customized Products Template",
      "description": "The endpoint for operations on Swag Customized Products Template"
    },
    {
      "name": "Swag Customized Products Template Configuration",
      "description": "The endpoint for operations on Swag Customized Products Template Configuration"
    },
    {
      "name": "Swag Customized Products Template Configuration Share",
      "description": "The endpoint for operations on Swag Customized Products Template Configuration Share"
    },
    {
      "name": "Swag Customized Products Template Exclusion",
      "description": "The endpoint for operations on Swag Customized Products Template Exclusion"
    },
    {
      "name": "Swag Customized Products Template Exclusion Condition",
      "description": "The endpoint for operations on Swag Customized Products Template Exclusion Condition"
    },
    {
      "name": "Swag Customized Products Template Exclusion Operator",
      "description": "The endpoint for operations on Swag Customized Products Template Exclusion Operator"
    },
    {
      "name": "Swag Customized Products Template Option",
      "description": "The endpoint for operations on Swag Customized Products Template Option"
    },
    {
      "name": "Swag Customized Products Template Option Price",
      "description": "The endpoint for operations on Swag Customized Products Template Option Price"
    },
    {
      "name": "Swag Customized Products Template Option Value",
      "description": "The endpoint for operations on Swag Customized Products Template Option Value"
    },
    {
      "name": "Swag Customized Products Template Option Value Price",
      "description": "The endpoint for operations on Swag Customized Products Template Option Value Price"
    },
    {
      "name": "Swag Delay Action",
      "description": "The endpoint for operations on Swag Delay Action"
    },
    {
      "name": "Swag Language Pack Language",
      "description": "The endpoint for operations on Swag Language Pack Language"
    },
    {
      "name": "Swag Migration Connection",
      "description": "The endpoint for operations on Swag Migration Connection"
    },
    {
      "name": "Swag Migration Data",
      "description": "The endpoint for operations on Swag Migration Data"
    },
    {
      "name": "Swag Migration General Setting",
      "description": "The endpoint for operations on Swag Migration General Setting"
    },
    {
      "name": "Swag Migration Logging",
      "description": "The endpoint for operations on Swag Migration Logging"
    },
    {
      "name": "Swag Migration Mapping",
      "description": "The endpoint for operations on Swag Migration Mapping"
    },
    {
      "name": "Swag Migration Media File",
      "description": "The endpoint for operations on Swag Migration Media File"
    },
    {
      "name": "Swag Migration Run",
      "description": "The endpoint for operations on Swag Migration Run"
    },
    {
      "name": "Swag Paypal Pos Sales Channel",
      "description": "The endpoint for operations on Swag Paypal Pos Sales Channel"
    },
    {
      "name": "Swag Paypal Pos Sales Channel Run",
      "description": "The endpoint for operations on Swag Paypal Pos Sales Channel Run"
    },
    {
      "name": "Swag Paypal Pos Sales Channel Run Log",
      "description": "The endpoint for operations on Swag Paypal Pos Sales Channel Run Log"
    },
    {
      "name": "Swag Social Shopping Customer",
      "description": "The endpoint for operations on Swag Social Shopping Customer"
    },
    {
      "name": "Swag Social Shopping Order",
      "description": "The endpoint for operations on Swag Social Shopping Order"
    },
    {
      "name": "Swag Social Shopping Product Error",
      "description": "The endpoint for operations on Swag Social Shopping Product Error"
    },
    {
      "name": "Swag Social Shopping Sales Channel",
      "description": "The endpoint for operations on Swag Social Shopping Sales Channel"
    },
    {
      "name": "System Config",
      "description": "The endpoint for operations on System Config"
    },
    { "name": "Tag", "description": "The endpoint for operations on Tag" },
    { "name": "Tax", "description": "The endpoint for operations on Tax" },
    {
      "name": "Tax Provider",
      "description": "The endpoint for operations on Tax Provider"
    },
    {
      "name": "Tax Rule",
      "description": "The endpoint for operations on Tax Rule"
    },
    {
      "name": "Tax Rule Type",
      "description": "The endpoint for operations on Tax Rule Type"
    },
    { "name": "Theme", "description": "The endpoint for operations on Theme" },
    { "name": "Unit", "description": "The endpoint for operations on Unit" },
    { "name": "User", "description": "The endpoint for operations on User" },
    {
      "name": "User Access Key",
      "description": "The endpoint for operations on User Access Key"
    },
    {
      "name": "User Config",
      "description": "The endpoint for operations on User Config"
    },
    {
      "name": "User Recovery",
      "description": "The endpoint for operations on User Recovery"
    },
    {
      "name": "Warehouse",
      "description": "The endpoint for operations on Warehouse"
    },
    {
      "name": "Warehouse Group",
      "description": "The endpoint for operations on Warehouse Group"
    },
    {
      "name": "Webhook",
      "description": "The endpoint for operations on Webhook"
    },
    {
      "name": "Webhook Event Log",
      "description": "The endpoint for operations on Webhook Event Log"
    }
  ]
}