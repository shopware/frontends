{
  "Country": " {
      active?: boolean;
      addressFormat: GenericRecord;
      advancedPostalCodePattern?: string;
      checkAdvancedPostalCodePattern?: boolean;
      checkPostalCodePattern?: boolean;
      checkVatIdPattern?: boolean;
      companyTax?: {
        /** Format: float */
        amount: number;
        currencyId: string;
        enabled: boolean;
      };
      /** Format: date-time */
      createdAt: string;
      customerTax?: {
        /** Format: float */
        amount: number;
        currencyId: string;
        enabled: boolean;
      };
      customFields?: GenericRecord;
      defaultPostalCodePattern?: string;
      displayStateInRegistration?: boolean;
      forceStateInRegistration?: boolean;
      id?: string;
      iso?: string;
      iso3?: string;
      name: string;
      /** Format: int64 */
      position?: number;
      postalCodeRequired?: boolean;
      shippingAvailable?: boolean;
      states?: components["schemas"]["CountryState"][];
      translated?: {
        advancedPostalCodePattern?: string;
        defaultPostalCodePattern?: string;
        iso?: string;
        iso3?: string;
        name?: string;
        vatIdPattern?: string;
      };
      /** Format: date-time */
      updatedAt?: string;
      vatIdPattern?: string;
      vatIdRequired?: boolean;
    };",
  "CountryState": " {
      active?: boolean;
      countryId: string;
      /** Format: date-time */
      createdAt: string;
      customFields?: GenericRecord;
      id?: string;
      name: string;
      /** Format: int64 */
      position?: number;
      shortCode: string;
      translated?: {
        countryId?: string;
        name?: string;
        shortCode?: string;
      };
      /** Format: date-time */
      updatedAt?: string;
    };",
  "CustomerAddress": " {
      additionalAddressLine1?: string;
      additionalAddressLine2?: string;
      city: string;
      company?: string;
      country?: components["schemas"]["Country"];
      countryId: string;
      countryState?: components["schemas"]["CountryState"];
      countryStateId?: string;
      /** Format: date-time */
      createdAt: string;
      customerId: string;
      customFields?: GenericRecord;
      department?: string;
      firstName: string;
      id?: string;
      lastName: string;
      phoneNumber?: string;
      salutation?: components["schemas"]["Salutation"];
      salutationId?: string;
      street: string;
      title?: string;
      /** Format: date-time */
      updatedAt?: string;
      zipcode?: string;
    };",
  "Salutation": " {
      /** Format: date-time */
      createdAt: string;
      customFields?: GenericRecord;
      displayName: string;
      id?: string;
      letterName: string;
      salutationKey: string;
      translated?: {
        displayName?: string;
        letterName?: string;
        salutationKey?: string;
      };
      /** Format: date-time */
      updatedAt?: string;
    };",
  "error": " {
      /** An application-specific error code, expressed as a string value. */
      code?: string;
      /** A human-readable description of the problem. */
      description?: string;
      /** A human-readable explanation specific to this occurrence of the problem. */
      detail?: string;
      /** A unique identifier for this particular occurrence of the problem. */
      id?: string;
      links?: components["schemas"]["links"];
      meta?: components["schemas"]["meta"];
      source?: {
        /** A string indicating which query parameter caused the error. */
        parameter?: string;
        /** A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute]. */
        pointer?: string;
      };
      /** The HTTP status code applicable to this problem, expressed as a string value. */
      status?: string;
      /** A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization. */
      title?: string;
    };",
  "failure": " {
      errors: components["schemas"]["error"][];
      links?: components["schemas"]["links"];
      meta?: components["schemas"]["meta"];
    };",
  "links": " GenericRecord;",
  "meta": " GenericRecord;",
}