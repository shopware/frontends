name: e2e

on:
  workflow_run:
    workflows: ["e2e trigger"]
    types:
      - completed

jobs:
  run-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cache Deployment Target URL file
        uses: actions/cache@v3
        id: cache-deployment-target
        with:
          path: |
            ~/.cache/deployment_target
          key: deployment-target-${{ github.sha }}
          restore-keys: |
            deployment-target-${{ github.sha }}
            deployment-target
            deployment-target-url

      - name: Set Deployment Target URL as ENV
        if: ${{ steps.cache-deployment-target.outputs.cache-hit == 'true' }}
        run: echo "DEPLOYMENT_TARGET=$(head -1 ~/.cache/deployment_target/deployment_target.txt)" >> $GITHUB_ENV

      - name: Stop if we do not get the depoloyment target_url from cache
        if: ${{ steps.cache-deployment-target.outputs.cache-hit != 'true' }}
        run: exit 1

      - name: Current Deployment Target is
        run: echo $DEPLOYMENT_TARGET

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: corepack enable
      - run: pnpm --version
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: install
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install dependencies with Playwright
        run: |
          pnpm playwright install --with-deps
 
      - name: Run tests
        run: pnpm run test:e2e
        env:
          BASE_E2E_URL: $DEPLOYMENT_TARGET

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: reports
          path: apps/e2e-tests/reports/
          retention-days: 7
