name: e2e

on:
  deployment_status:

jobs:
  init_e2e_test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Initial e2e test run"

  condition_target_url:
    runs-on: ubuntu-latest
    needs: init_e2e_test
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
    steps:
      - name: If target_url contains frontends-docs >> fail
        if: ${{ contains(github.event.deployment_status.target_url, 'frontends-docs') }}
        run: exit 1
        
      - name: If target_url does not contains frontends-docs >> success
        if: ${{ !contains(github.event.deployment_status.target_url, 'frontends-docs') }}
        run: echo "Condition for deployment_status.target_url ðŸŽ‰"

  run-e2e:
    runs-on: ubuntu-latest
    needs: condition_target_url
    if: always()
    steps:
      - name: Fail if condition_target_url is failure
        if: ${{ needs.condition_target_url.result == 'failure' }}
        run: exit 1

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: corepack enable
      - run: pnpm --version
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: install
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install dependencies with Playwright
        run: |
          pnpm playwright install --with-deps

      - name: Run tests
        run: pnpm run test:e2e
        env:
          BASE_E2E_URL: ${{ github.event.deployment_status.target_url }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: reports
          path: apps/e2e-tests/reports/
          retention-days: 7
